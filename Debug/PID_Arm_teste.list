
PID_Arm_teste.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000040c8  080001a0  080001a0  000101a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000002d4  08004268  08004268  00014268  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800453c  0800453c  0002008c  2**0
                  CONTENTS
  4 .ARM          00000008  0800453c  0800453c  0001453c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08004544  08004544  0002008c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08004544  08004544  00014544  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08004548  08004548  00014548  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         0000008c  20000000  0800454c  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000055c  2000008c  080045d8  0002008c  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200005e8  080045d8  000205e8  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  0002008c  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  000200bc  2**0
                  CONTENTS, READONLY
 13 .debug_info   0000a76f  00000000  00000000  000200ff  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00001bc2  00000000  00000000  0002a86e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000b98  00000000  00000000  0002c430  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00000900  00000000  00000000  0002cfc8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00017577  00000000  00000000  0002d8c8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   0000cd63  00000000  00000000  00044e3f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00097939  00000000  00000000  00051ba2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  00003580  00000000  00000000  000e94dc  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000043  00000000  00000000  000eca5c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	; (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	; (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	; (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	2000008c 	.word	0x2000008c
 80001bc:	00000000 	.word	0x00000000
 80001c0:	08004250 	.word	0x08004250

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	; (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	; (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	; (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	20000090 	.word	0x20000090
 80001dc:	08004250 	.word	0x08004250

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <__aeabi_uldivmod>:
 8000280:	b953      	cbnz	r3, 8000298 <__aeabi_uldivmod+0x18>
 8000282:	b94a      	cbnz	r2, 8000298 <__aeabi_uldivmod+0x18>
 8000284:	2900      	cmp	r1, #0
 8000286:	bf08      	it	eq
 8000288:	2800      	cmpeq	r0, #0
 800028a:	bf1c      	itt	ne
 800028c:	f04f 31ff 	movne.w	r1, #4294967295
 8000290:	f04f 30ff 	movne.w	r0, #4294967295
 8000294:	f000 b970 	b.w	8000578 <__aeabi_idiv0>
 8000298:	f1ad 0c08 	sub.w	ip, sp, #8
 800029c:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002a0:	f000 f806 	bl	80002b0 <__udivmoddi4>
 80002a4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002a8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002ac:	b004      	add	sp, #16
 80002ae:	4770      	bx	lr

080002b0 <__udivmoddi4>:
 80002b0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002b4:	9e08      	ldr	r6, [sp, #32]
 80002b6:	460d      	mov	r5, r1
 80002b8:	4604      	mov	r4, r0
 80002ba:	460f      	mov	r7, r1
 80002bc:	2b00      	cmp	r3, #0
 80002be:	d14a      	bne.n	8000356 <__udivmoddi4+0xa6>
 80002c0:	428a      	cmp	r2, r1
 80002c2:	4694      	mov	ip, r2
 80002c4:	d965      	bls.n	8000392 <__udivmoddi4+0xe2>
 80002c6:	fab2 f382 	clz	r3, r2
 80002ca:	b143      	cbz	r3, 80002de <__udivmoddi4+0x2e>
 80002cc:	fa02 fc03 	lsl.w	ip, r2, r3
 80002d0:	f1c3 0220 	rsb	r2, r3, #32
 80002d4:	409f      	lsls	r7, r3
 80002d6:	fa20 f202 	lsr.w	r2, r0, r2
 80002da:	4317      	orrs	r7, r2
 80002dc:	409c      	lsls	r4, r3
 80002de:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
 80002e2:	fa1f f58c 	uxth.w	r5, ip
 80002e6:	fbb7 f1fe 	udiv	r1, r7, lr
 80002ea:	0c22      	lsrs	r2, r4, #16
 80002ec:	fb0e 7711 	mls	r7, lr, r1, r7
 80002f0:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
 80002f4:	fb01 f005 	mul.w	r0, r1, r5
 80002f8:	4290      	cmp	r0, r2
 80002fa:	d90a      	bls.n	8000312 <__udivmoddi4+0x62>
 80002fc:	eb1c 0202 	adds.w	r2, ip, r2
 8000300:	f101 37ff 	add.w	r7, r1, #4294967295
 8000304:	f080 811c 	bcs.w	8000540 <__udivmoddi4+0x290>
 8000308:	4290      	cmp	r0, r2
 800030a:	f240 8119 	bls.w	8000540 <__udivmoddi4+0x290>
 800030e:	3902      	subs	r1, #2
 8000310:	4462      	add	r2, ip
 8000312:	1a12      	subs	r2, r2, r0
 8000314:	b2a4      	uxth	r4, r4
 8000316:	fbb2 f0fe 	udiv	r0, r2, lr
 800031a:	fb0e 2210 	mls	r2, lr, r0, r2
 800031e:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8000322:	fb00 f505 	mul.w	r5, r0, r5
 8000326:	42a5      	cmp	r5, r4
 8000328:	d90a      	bls.n	8000340 <__udivmoddi4+0x90>
 800032a:	eb1c 0404 	adds.w	r4, ip, r4
 800032e:	f100 32ff 	add.w	r2, r0, #4294967295
 8000332:	f080 8107 	bcs.w	8000544 <__udivmoddi4+0x294>
 8000336:	42a5      	cmp	r5, r4
 8000338:	f240 8104 	bls.w	8000544 <__udivmoddi4+0x294>
 800033c:	4464      	add	r4, ip
 800033e:	3802      	subs	r0, #2
 8000340:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000344:	1b64      	subs	r4, r4, r5
 8000346:	2100      	movs	r1, #0
 8000348:	b11e      	cbz	r6, 8000352 <__udivmoddi4+0xa2>
 800034a:	40dc      	lsrs	r4, r3
 800034c:	2300      	movs	r3, #0
 800034e:	e9c6 4300 	strd	r4, r3, [r6]
 8000352:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000356:	428b      	cmp	r3, r1
 8000358:	d908      	bls.n	800036c <__udivmoddi4+0xbc>
 800035a:	2e00      	cmp	r6, #0
 800035c:	f000 80ed 	beq.w	800053a <__udivmoddi4+0x28a>
 8000360:	2100      	movs	r1, #0
 8000362:	e9c6 0500 	strd	r0, r5, [r6]
 8000366:	4608      	mov	r0, r1
 8000368:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800036c:	fab3 f183 	clz	r1, r3
 8000370:	2900      	cmp	r1, #0
 8000372:	d149      	bne.n	8000408 <__udivmoddi4+0x158>
 8000374:	42ab      	cmp	r3, r5
 8000376:	d302      	bcc.n	800037e <__udivmoddi4+0xce>
 8000378:	4282      	cmp	r2, r0
 800037a:	f200 80f8 	bhi.w	800056e <__udivmoddi4+0x2be>
 800037e:	1a84      	subs	r4, r0, r2
 8000380:	eb65 0203 	sbc.w	r2, r5, r3
 8000384:	2001      	movs	r0, #1
 8000386:	4617      	mov	r7, r2
 8000388:	2e00      	cmp	r6, #0
 800038a:	d0e2      	beq.n	8000352 <__udivmoddi4+0xa2>
 800038c:	e9c6 4700 	strd	r4, r7, [r6]
 8000390:	e7df      	b.n	8000352 <__udivmoddi4+0xa2>
 8000392:	b902      	cbnz	r2, 8000396 <__udivmoddi4+0xe6>
 8000394:	deff      	udf	#255	; 0xff
 8000396:	fab2 f382 	clz	r3, r2
 800039a:	2b00      	cmp	r3, #0
 800039c:	f040 8090 	bne.w	80004c0 <__udivmoddi4+0x210>
 80003a0:	1a8a      	subs	r2, r1, r2
 80003a2:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80003a6:	fa1f fe8c 	uxth.w	lr, ip
 80003aa:	2101      	movs	r1, #1
 80003ac:	fbb2 f5f7 	udiv	r5, r2, r7
 80003b0:	fb07 2015 	mls	r0, r7, r5, r2
 80003b4:	0c22      	lsrs	r2, r4, #16
 80003b6:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 80003ba:	fb0e f005 	mul.w	r0, lr, r5
 80003be:	4290      	cmp	r0, r2
 80003c0:	d908      	bls.n	80003d4 <__udivmoddi4+0x124>
 80003c2:	eb1c 0202 	adds.w	r2, ip, r2
 80003c6:	f105 38ff 	add.w	r8, r5, #4294967295
 80003ca:	d202      	bcs.n	80003d2 <__udivmoddi4+0x122>
 80003cc:	4290      	cmp	r0, r2
 80003ce:	f200 80cb 	bhi.w	8000568 <__udivmoddi4+0x2b8>
 80003d2:	4645      	mov	r5, r8
 80003d4:	1a12      	subs	r2, r2, r0
 80003d6:	b2a4      	uxth	r4, r4
 80003d8:	fbb2 f0f7 	udiv	r0, r2, r7
 80003dc:	fb07 2210 	mls	r2, r7, r0, r2
 80003e0:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 80003e4:	fb0e fe00 	mul.w	lr, lr, r0
 80003e8:	45a6      	cmp	lr, r4
 80003ea:	d908      	bls.n	80003fe <__udivmoddi4+0x14e>
 80003ec:	eb1c 0404 	adds.w	r4, ip, r4
 80003f0:	f100 32ff 	add.w	r2, r0, #4294967295
 80003f4:	d202      	bcs.n	80003fc <__udivmoddi4+0x14c>
 80003f6:	45a6      	cmp	lr, r4
 80003f8:	f200 80bb 	bhi.w	8000572 <__udivmoddi4+0x2c2>
 80003fc:	4610      	mov	r0, r2
 80003fe:	eba4 040e 	sub.w	r4, r4, lr
 8000402:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 8000406:	e79f      	b.n	8000348 <__udivmoddi4+0x98>
 8000408:	f1c1 0720 	rsb	r7, r1, #32
 800040c:	408b      	lsls	r3, r1
 800040e:	fa22 fc07 	lsr.w	ip, r2, r7
 8000412:	ea4c 0c03 	orr.w	ip, ip, r3
 8000416:	fa05 f401 	lsl.w	r4, r5, r1
 800041a:	fa20 f307 	lsr.w	r3, r0, r7
 800041e:	40fd      	lsrs	r5, r7
 8000420:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8000424:	4323      	orrs	r3, r4
 8000426:	fbb5 f8f9 	udiv	r8, r5, r9
 800042a:	fa1f fe8c 	uxth.w	lr, ip
 800042e:	fb09 5518 	mls	r5, r9, r8, r5
 8000432:	0c1c      	lsrs	r4, r3, #16
 8000434:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 8000438:	fb08 f50e 	mul.w	r5, r8, lr
 800043c:	42a5      	cmp	r5, r4
 800043e:	fa02 f201 	lsl.w	r2, r2, r1
 8000442:	fa00 f001 	lsl.w	r0, r0, r1
 8000446:	d90b      	bls.n	8000460 <__udivmoddi4+0x1b0>
 8000448:	eb1c 0404 	adds.w	r4, ip, r4
 800044c:	f108 3aff 	add.w	sl, r8, #4294967295
 8000450:	f080 8088 	bcs.w	8000564 <__udivmoddi4+0x2b4>
 8000454:	42a5      	cmp	r5, r4
 8000456:	f240 8085 	bls.w	8000564 <__udivmoddi4+0x2b4>
 800045a:	f1a8 0802 	sub.w	r8, r8, #2
 800045e:	4464      	add	r4, ip
 8000460:	1b64      	subs	r4, r4, r5
 8000462:	b29d      	uxth	r5, r3
 8000464:	fbb4 f3f9 	udiv	r3, r4, r9
 8000468:	fb09 4413 	mls	r4, r9, r3, r4
 800046c:	ea45 4404 	orr.w	r4, r5, r4, lsl #16
 8000470:	fb03 fe0e 	mul.w	lr, r3, lr
 8000474:	45a6      	cmp	lr, r4
 8000476:	d908      	bls.n	800048a <__udivmoddi4+0x1da>
 8000478:	eb1c 0404 	adds.w	r4, ip, r4
 800047c:	f103 35ff 	add.w	r5, r3, #4294967295
 8000480:	d26c      	bcs.n	800055c <__udivmoddi4+0x2ac>
 8000482:	45a6      	cmp	lr, r4
 8000484:	d96a      	bls.n	800055c <__udivmoddi4+0x2ac>
 8000486:	3b02      	subs	r3, #2
 8000488:	4464      	add	r4, ip
 800048a:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 800048e:	fba3 9502 	umull	r9, r5, r3, r2
 8000492:	eba4 040e 	sub.w	r4, r4, lr
 8000496:	42ac      	cmp	r4, r5
 8000498:	46c8      	mov	r8, r9
 800049a:	46ae      	mov	lr, r5
 800049c:	d356      	bcc.n	800054c <__udivmoddi4+0x29c>
 800049e:	d053      	beq.n	8000548 <__udivmoddi4+0x298>
 80004a0:	b156      	cbz	r6, 80004b8 <__udivmoddi4+0x208>
 80004a2:	ebb0 0208 	subs.w	r2, r0, r8
 80004a6:	eb64 040e 	sbc.w	r4, r4, lr
 80004aa:	fa04 f707 	lsl.w	r7, r4, r7
 80004ae:	40ca      	lsrs	r2, r1
 80004b0:	40cc      	lsrs	r4, r1
 80004b2:	4317      	orrs	r7, r2
 80004b4:	e9c6 7400 	strd	r7, r4, [r6]
 80004b8:	4618      	mov	r0, r3
 80004ba:	2100      	movs	r1, #0
 80004bc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80004c0:	f1c3 0120 	rsb	r1, r3, #32
 80004c4:	fa02 fc03 	lsl.w	ip, r2, r3
 80004c8:	fa20 f201 	lsr.w	r2, r0, r1
 80004cc:	fa25 f101 	lsr.w	r1, r5, r1
 80004d0:	409d      	lsls	r5, r3
 80004d2:	432a      	orrs	r2, r5
 80004d4:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80004d8:	fa1f fe8c 	uxth.w	lr, ip
 80004dc:	fbb1 f0f7 	udiv	r0, r1, r7
 80004e0:	fb07 1510 	mls	r5, r7, r0, r1
 80004e4:	0c11      	lsrs	r1, r2, #16
 80004e6:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 80004ea:	fb00 f50e 	mul.w	r5, r0, lr
 80004ee:	428d      	cmp	r5, r1
 80004f0:	fa04 f403 	lsl.w	r4, r4, r3
 80004f4:	d908      	bls.n	8000508 <__udivmoddi4+0x258>
 80004f6:	eb1c 0101 	adds.w	r1, ip, r1
 80004fa:	f100 38ff 	add.w	r8, r0, #4294967295
 80004fe:	d22f      	bcs.n	8000560 <__udivmoddi4+0x2b0>
 8000500:	428d      	cmp	r5, r1
 8000502:	d92d      	bls.n	8000560 <__udivmoddi4+0x2b0>
 8000504:	3802      	subs	r0, #2
 8000506:	4461      	add	r1, ip
 8000508:	1b49      	subs	r1, r1, r5
 800050a:	b292      	uxth	r2, r2
 800050c:	fbb1 f5f7 	udiv	r5, r1, r7
 8000510:	fb07 1115 	mls	r1, r7, r5, r1
 8000514:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000518:	fb05 f10e 	mul.w	r1, r5, lr
 800051c:	4291      	cmp	r1, r2
 800051e:	d908      	bls.n	8000532 <__udivmoddi4+0x282>
 8000520:	eb1c 0202 	adds.w	r2, ip, r2
 8000524:	f105 38ff 	add.w	r8, r5, #4294967295
 8000528:	d216      	bcs.n	8000558 <__udivmoddi4+0x2a8>
 800052a:	4291      	cmp	r1, r2
 800052c:	d914      	bls.n	8000558 <__udivmoddi4+0x2a8>
 800052e:	3d02      	subs	r5, #2
 8000530:	4462      	add	r2, ip
 8000532:	1a52      	subs	r2, r2, r1
 8000534:	ea45 4100 	orr.w	r1, r5, r0, lsl #16
 8000538:	e738      	b.n	80003ac <__udivmoddi4+0xfc>
 800053a:	4631      	mov	r1, r6
 800053c:	4630      	mov	r0, r6
 800053e:	e708      	b.n	8000352 <__udivmoddi4+0xa2>
 8000540:	4639      	mov	r1, r7
 8000542:	e6e6      	b.n	8000312 <__udivmoddi4+0x62>
 8000544:	4610      	mov	r0, r2
 8000546:	e6fb      	b.n	8000340 <__udivmoddi4+0x90>
 8000548:	4548      	cmp	r0, r9
 800054a:	d2a9      	bcs.n	80004a0 <__udivmoddi4+0x1f0>
 800054c:	ebb9 0802 	subs.w	r8, r9, r2
 8000550:	eb65 0e0c 	sbc.w	lr, r5, ip
 8000554:	3b01      	subs	r3, #1
 8000556:	e7a3      	b.n	80004a0 <__udivmoddi4+0x1f0>
 8000558:	4645      	mov	r5, r8
 800055a:	e7ea      	b.n	8000532 <__udivmoddi4+0x282>
 800055c:	462b      	mov	r3, r5
 800055e:	e794      	b.n	800048a <__udivmoddi4+0x1da>
 8000560:	4640      	mov	r0, r8
 8000562:	e7d1      	b.n	8000508 <__udivmoddi4+0x258>
 8000564:	46d0      	mov	r8, sl
 8000566:	e77b      	b.n	8000460 <__udivmoddi4+0x1b0>
 8000568:	3d02      	subs	r5, #2
 800056a:	4462      	add	r2, ip
 800056c:	e732      	b.n	80003d4 <__udivmoddi4+0x124>
 800056e:	4608      	mov	r0, r1
 8000570:	e70a      	b.n	8000388 <__udivmoddi4+0xd8>
 8000572:	4464      	add	r4, ip
 8000574:	3802      	subs	r0, #2
 8000576:	e742      	b.n	80003fe <__udivmoddi4+0x14e>

08000578 <__aeabi_idiv0>:
 8000578:	4770      	bx	lr
 800057a:	bf00      	nop

0800057c <LCD_setRST>:
 800057c:	b480      	push	{r7}
 800057e:	b083      	sub	sp, #12
 8000580:	af00      	add	r7, sp, #0
 8000582:	6078      	str	r0, [r7, #4]
 8000584:	460b      	mov	r3, r1
 8000586:	807b      	strh	r3, [r7, #2]
 8000588:	4a05      	ldr	r2, [pc, #20]	; (80005a0 <LCD_setRST+0x24>)
 800058a:	687b      	ldr	r3, [r7, #4]
 800058c:	6013      	str	r3, [r2, #0]
 800058e:	4a04      	ldr	r2, [pc, #16]	; (80005a0 <LCD_setRST+0x24>)
 8000590:	887b      	ldrh	r3, [r7, #2]
 8000592:	8093      	strh	r3, [r2, #4]
 8000594:	bf00      	nop
 8000596:	370c      	adds	r7, #12
 8000598:	46bd      	mov	sp, r7
 800059a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800059e:	4770      	bx	lr
 80005a0:	200002a4 	.word	0x200002a4

080005a4 <LCD_setCE>:
 80005a4:	b480      	push	{r7}
 80005a6:	b083      	sub	sp, #12
 80005a8:	af00      	add	r7, sp, #0
 80005aa:	6078      	str	r0, [r7, #4]
 80005ac:	460b      	mov	r3, r1
 80005ae:	807b      	strh	r3, [r7, #2]
 80005b0:	4a05      	ldr	r2, [pc, #20]	; (80005c8 <LCD_setCE+0x24>)
 80005b2:	687b      	ldr	r3, [r7, #4]
 80005b4:	6093      	str	r3, [r2, #8]
 80005b6:	4a04      	ldr	r2, [pc, #16]	; (80005c8 <LCD_setCE+0x24>)
 80005b8:	887b      	ldrh	r3, [r7, #2]
 80005ba:	8193      	strh	r3, [r2, #12]
 80005bc:	bf00      	nop
 80005be:	370c      	adds	r7, #12
 80005c0:	46bd      	mov	sp, r7
 80005c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005c6:	4770      	bx	lr
 80005c8:	200002a4 	.word	0x200002a4

080005cc <LCD_setDC>:
 80005cc:	b480      	push	{r7}
 80005ce:	b083      	sub	sp, #12
 80005d0:	af00      	add	r7, sp, #0
 80005d2:	6078      	str	r0, [r7, #4]
 80005d4:	460b      	mov	r3, r1
 80005d6:	807b      	strh	r3, [r7, #2]
 80005d8:	4a05      	ldr	r2, [pc, #20]	; (80005f0 <LCD_setDC+0x24>)
 80005da:	687b      	ldr	r3, [r7, #4]
 80005dc:	6113      	str	r3, [r2, #16]
 80005de:	4a04      	ldr	r2, [pc, #16]	; (80005f0 <LCD_setDC+0x24>)
 80005e0:	887b      	ldrh	r3, [r7, #2]
 80005e2:	8293      	strh	r3, [r2, #20]
 80005e4:	bf00      	nop
 80005e6:	370c      	adds	r7, #12
 80005e8:	46bd      	mov	sp, r7
 80005ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005ee:	4770      	bx	lr
 80005f0:	200002a4 	.word	0x200002a4

080005f4 <LCD_setDIN>:
 80005f4:	b480      	push	{r7}
 80005f6:	b083      	sub	sp, #12
 80005f8:	af00      	add	r7, sp, #0
 80005fa:	6078      	str	r0, [r7, #4]
 80005fc:	460b      	mov	r3, r1
 80005fe:	807b      	strh	r3, [r7, #2]
 8000600:	4a05      	ldr	r2, [pc, #20]	; (8000618 <LCD_setDIN+0x24>)
 8000602:	687b      	ldr	r3, [r7, #4]
 8000604:	6193      	str	r3, [r2, #24]
 8000606:	4a04      	ldr	r2, [pc, #16]	; (8000618 <LCD_setDIN+0x24>)
 8000608:	887b      	ldrh	r3, [r7, #2]
 800060a:	8393      	strh	r3, [r2, #28]
 800060c:	bf00      	nop
 800060e:	370c      	adds	r7, #12
 8000610:	46bd      	mov	sp, r7
 8000612:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000616:	4770      	bx	lr
 8000618:	200002a4 	.word	0x200002a4

0800061c <LCD_setCLK>:
 800061c:	b480      	push	{r7}
 800061e:	b083      	sub	sp, #12
 8000620:	af00      	add	r7, sp, #0
 8000622:	6078      	str	r0, [r7, #4]
 8000624:	460b      	mov	r3, r1
 8000626:	807b      	strh	r3, [r7, #2]
 8000628:	4a05      	ldr	r2, [pc, #20]	; (8000640 <LCD_setCLK+0x24>)
 800062a:	687b      	ldr	r3, [r7, #4]
 800062c:	6213      	str	r3, [r2, #32]
 800062e:	4a04      	ldr	r2, [pc, #16]	; (8000640 <LCD_setCLK+0x24>)
 8000630:	887b      	ldrh	r3, [r7, #2]
 8000632:	8493      	strh	r3, [r2, #36]	; 0x24
 8000634:	bf00      	nop
 8000636:	370c      	adds	r7, #12
 8000638:	46bd      	mov	sp, r7
 800063a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800063e:	4770      	bx	lr
 8000640:	200002a4 	.word	0x200002a4

08000644 <LCD_send>:
 8000644:	b580      	push	{r7, lr}
 8000646:	b084      	sub	sp, #16
 8000648:	af00      	add	r7, sp, #0
 800064a:	4603      	mov	r3, r0
 800064c:	71fb      	strb	r3, [r7, #7]
 800064e:	2300      	movs	r3, #0
 8000650:	73fb      	strb	r3, [r7, #15]
 8000652:	e026      	b.n	80006a2 <LCD_send+0x5e>
 8000654:	4b17      	ldr	r3, [pc, #92]	; (80006b4 <LCD_send+0x70>)
 8000656:	6998      	ldr	r0, [r3, #24]
 8000658:	4b16      	ldr	r3, [pc, #88]	; (80006b4 <LCD_send+0x70>)
 800065a:	8b99      	ldrh	r1, [r3, #28]
 800065c:	79fa      	ldrb	r2, [r7, #7]
 800065e:	7bfb      	ldrb	r3, [r7, #15]
 8000660:	f1c3 0307 	rsb	r3, r3, #7
 8000664:	fa42 f303 	asr.w	r3, r2, r3
 8000668:	f003 0301 	and.w	r3, r3, #1
 800066c:	2b00      	cmp	r3, #0
 800066e:	bf14      	ite	ne
 8000670:	2301      	movne	r3, #1
 8000672:	2300      	moveq	r3, #0
 8000674:	b2db      	uxtb	r3, r3
 8000676:	461a      	mov	r2, r3
 8000678:	f002 f83c 	bl	80026f4 <HAL_GPIO_WritePin>
 800067c:	4b0d      	ldr	r3, [pc, #52]	; (80006b4 <LCD_send+0x70>)
 800067e:	6a1b      	ldr	r3, [r3, #32]
 8000680:	4a0c      	ldr	r2, [pc, #48]	; (80006b4 <LCD_send+0x70>)
 8000682:	8c91      	ldrh	r1, [r2, #36]	; 0x24
 8000684:	2201      	movs	r2, #1
 8000686:	4618      	mov	r0, r3
 8000688:	f002 f834 	bl	80026f4 <HAL_GPIO_WritePin>
 800068c:	4b09      	ldr	r3, [pc, #36]	; (80006b4 <LCD_send+0x70>)
 800068e:	6a1b      	ldr	r3, [r3, #32]
 8000690:	4a08      	ldr	r2, [pc, #32]	; (80006b4 <LCD_send+0x70>)
 8000692:	8c91      	ldrh	r1, [r2, #36]	; 0x24
 8000694:	2200      	movs	r2, #0
 8000696:	4618      	mov	r0, r3
 8000698:	f002 f82c 	bl	80026f4 <HAL_GPIO_WritePin>
 800069c:	7bfb      	ldrb	r3, [r7, #15]
 800069e:	3301      	adds	r3, #1
 80006a0:	73fb      	strb	r3, [r7, #15]
 80006a2:	7bfb      	ldrb	r3, [r7, #15]
 80006a4:	2b07      	cmp	r3, #7
 80006a6:	d9d5      	bls.n	8000654 <LCD_send+0x10>
 80006a8:	bf00      	nop
 80006aa:	bf00      	nop
 80006ac:	3710      	adds	r7, #16
 80006ae:	46bd      	mov	sp, r7
 80006b0:	bd80      	pop	{r7, pc}
 80006b2:	bf00      	nop
 80006b4:	200002a4 	.word	0x200002a4

080006b8 <LCD_write>:
 80006b8:	b580      	push	{r7, lr}
 80006ba:	b082      	sub	sp, #8
 80006bc:	af00      	add	r7, sp, #0
 80006be:	4603      	mov	r3, r0
 80006c0:	460a      	mov	r2, r1
 80006c2:	71fb      	strb	r3, [r7, #7]
 80006c4:	4613      	mov	r3, r2
 80006c6:	71bb      	strb	r3, [r7, #6]
 80006c8:	79bb      	ldrb	r3, [r7, #6]
 80006ca:	2b00      	cmp	r3, #0
 80006cc:	d11c      	bne.n	8000708 <LCD_write+0x50>
 80006ce:	4b1e      	ldr	r3, [pc, #120]	; (8000748 <LCD_write+0x90>)
 80006d0:	691b      	ldr	r3, [r3, #16]
 80006d2:	4a1d      	ldr	r2, [pc, #116]	; (8000748 <LCD_write+0x90>)
 80006d4:	8a91      	ldrh	r1, [r2, #20]
 80006d6:	2200      	movs	r2, #0
 80006d8:	4618      	mov	r0, r3
 80006da:	f002 f80b 	bl	80026f4 <HAL_GPIO_WritePin>
 80006de:	4b1a      	ldr	r3, [pc, #104]	; (8000748 <LCD_write+0x90>)
 80006e0:	689b      	ldr	r3, [r3, #8]
 80006e2:	4a19      	ldr	r2, [pc, #100]	; (8000748 <LCD_write+0x90>)
 80006e4:	8991      	ldrh	r1, [r2, #12]
 80006e6:	2200      	movs	r2, #0
 80006e8:	4618      	mov	r0, r3
 80006ea:	f002 f803 	bl	80026f4 <HAL_GPIO_WritePin>
 80006ee:	79fb      	ldrb	r3, [r7, #7]
 80006f0:	4618      	mov	r0, r3
 80006f2:	f7ff ffa7 	bl	8000644 <LCD_send>
 80006f6:	4b14      	ldr	r3, [pc, #80]	; (8000748 <LCD_write+0x90>)
 80006f8:	689b      	ldr	r3, [r3, #8]
 80006fa:	4a13      	ldr	r2, [pc, #76]	; (8000748 <LCD_write+0x90>)
 80006fc:	8991      	ldrh	r1, [r2, #12]
 80006fe:	2201      	movs	r2, #1
 8000700:	4618      	mov	r0, r3
 8000702:	f001 fff7 	bl	80026f4 <HAL_GPIO_WritePin>
 8000706:	e01b      	b.n	8000740 <LCD_write+0x88>
 8000708:	4b0f      	ldr	r3, [pc, #60]	; (8000748 <LCD_write+0x90>)
 800070a:	691b      	ldr	r3, [r3, #16]
 800070c:	4a0e      	ldr	r2, [pc, #56]	; (8000748 <LCD_write+0x90>)
 800070e:	8a91      	ldrh	r1, [r2, #20]
 8000710:	2201      	movs	r2, #1
 8000712:	4618      	mov	r0, r3
 8000714:	f001 ffee 	bl	80026f4 <HAL_GPIO_WritePin>
 8000718:	4b0b      	ldr	r3, [pc, #44]	; (8000748 <LCD_write+0x90>)
 800071a:	689b      	ldr	r3, [r3, #8]
 800071c:	4a0a      	ldr	r2, [pc, #40]	; (8000748 <LCD_write+0x90>)
 800071e:	8991      	ldrh	r1, [r2, #12]
 8000720:	2200      	movs	r2, #0
 8000722:	4618      	mov	r0, r3
 8000724:	f001 ffe6 	bl	80026f4 <HAL_GPIO_WritePin>
 8000728:	79fb      	ldrb	r3, [r7, #7]
 800072a:	4618      	mov	r0, r3
 800072c:	f7ff ff8a 	bl	8000644 <LCD_send>
 8000730:	4b05      	ldr	r3, [pc, #20]	; (8000748 <LCD_write+0x90>)
 8000732:	689b      	ldr	r3, [r3, #8]
 8000734:	4a04      	ldr	r2, [pc, #16]	; (8000748 <LCD_write+0x90>)
 8000736:	8991      	ldrh	r1, [r2, #12]
 8000738:	2201      	movs	r2, #1
 800073a:	4618      	mov	r0, r3
 800073c:	f001 ffda 	bl	80026f4 <HAL_GPIO_WritePin>
 8000740:	bf00      	nop
 8000742:	3708      	adds	r7, #8
 8000744:	46bd      	mov	sp, r7
 8000746:	bd80      	pop	{r7, pc}
 8000748:	200002a4 	.word	0x200002a4

0800074c <LCD_init>:
 800074c:	b580      	push	{r7, lr}
 800074e:	af00      	add	r7, sp, #0
 8000750:	4b17      	ldr	r3, [pc, #92]	; (80007b0 <LCD_init+0x64>)
 8000752:	681b      	ldr	r3, [r3, #0]
 8000754:	4a16      	ldr	r2, [pc, #88]	; (80007b0 <LCD_init+0x64>)
 8000756:	8891      	ldrh	r1, [r2, #4]
 8000758:	2200      	movs	r2, #0
 800075a:	4618      	mov	r0, r3
 800075c:	f001 ffca 	bl	80026f4 <HAL_GPIO_WritePin>
 8000760:	4b13      	ldr	r3, [pc, #76]	; (80007b0 <LCD_init+0x64>)
 8000762:	681b      	ldr	r3, [r3, #0]
 8000764:	4a12      	ldr	r2, [pc, #72]	; (80007b0 <LCD_init+0x64>)
 8000766:	8891      	ldrh	r1, [r2, #4]
 8000768:	2201      	movs	r2, #1
 800076a:	4618      	mov	r0, r3
 800076c:	f001 ffc2 	bl	80026f4 <HAL_GPIO_WritePin>
 8000770:	2100      	movs	r1, #0
 8000772:	2021      	movs	r0, #33	; 0x21
 8000774:	f7ff ffa0 	bl	80006b8 <LCD_write>
 8000778:	2100      	movs	r1, #0
 800077a:	20b8      	movs	r0, #184	; 0xb8
 800077c:	f7ff ff9c 	bl	80006b8 <LCD_write>
 8000780:	2100      	movs	r1, #0
 8000782:	2004      	movs	r0, #4
 8000784:	f7ff ff98 	bl	80006b8 <LCD_write>
 8000788:	2100      	movs	r1, #0
 800078a:	2014      	movs	r0, #20
 800078c:	f7ff ff94 	bl	80006b8 <LCD_write>
 8000790:	2100      	movs	r1, #0
 8000792:	2020      	movs	r0, #32
 8000794:	f7ff ff90 	bl	80006b8 <LCD_write>
 8000798:	2100      	movs	r1, #0
 800079a:	200c      	movs	r0, #12
 800079c:	f7ff ff8c 	bl	80006b8 <LCD_write>
 80007a0:	f000 f86c 	bl	800087c <LCD_clrScr>
 80007a4:	4b03      	ldr	r3, [pc, #12]	; (80007b4 <LCD_init+0x68>)
 80007a6:	2200      	movs	r2, #0
 80007a8:	f883 21f8 	strb.w	r2, [r3, #504]	; 0x1f8
 80007ac:	bf00      	nop
 80007ae:	bd80      	pop	{r7, pc}
 80007b0:	200002a4 	.word	0x200002a4
 80007b4:	200000a8 	.word	0x200000a8

080007b8 <LCD_putChar>:
 80007b8:	b580      	push	{r7, lr}
 80007ba:	b084      	sub	sp, #16
 80007bc:	af00      	add	r7, sp, #0
 80007be:	4603      	mov	r3, r0
 80007c0:	71fb      	strb	r3, [r7, #7]
 80007c2:	2300      	movs	r3, #0
 80007c4:	60fb      	str	r3, [r7, #12]
 80007c6:	e02d      	b.n	8000824 <LCD_putChar+0x6c>
 80007c8:	4b1a      	ldr	r3, [pc, #104]	; (8000834 <LCD_putChar+0x7c>)
 80007ca:	f893 31f8 	ldrb.w	r3, [r3, #504]	; 0x1f8
 80007ce:	f083 0301 	eor.w	r3, r3, #1
 80007d2:	b2db      	uxtb	r3, r3
 80007d4:	2b00      	cmp	r3, #0
 80007d6:	d010      	beq.n	80007fa <LCD_putChar+0x42>
 80007d8:	79fb      	ldrb	r3, [r7, #7]
 80007da:	f1a3 0220 	sub.w	r2, r3, #32
 80007de:	4916      	ldr	r1, [pc, #88]	; (8000838 <LCD_putChar+0x80>)
 80007e0:	4613      	mov	r3, r2
 80007e2:	005b      	lsls	r3, r3, #1
 80007e4:	4413      	add	r3, r2
 80007e6:	005b      	lsls	r3, r3, #1
 80007e8:	18ca      	adds	r2, r1, r3
 80007ea:	68fb      	ldr	r3, [r7, #12]
 80007ec:	4413      	add	r3, r2
 80007ee:	781b      	ldrb	r3, [r3, #0]
 80007f0:	2101      	movs	r1, #1
 80007f2:	4618      	mov	r0, r3
 80007f4:	f7ff ff60 	bl	80006b8 <LCD_write>
 80007f8:	e011      	b.n	800081e <LCD_putChar+0x66>
 80007fa:	79fb      	ldrb	r3, [r7, #7]
 80007fc:	f1a3 0220 	sub.w	r2, r3, #32
 8000800:	490d      	ldr	r1, [pc, #52]	; (8000838 <LCD_putChar+0x80>)
 8000802:	4613      	mov	r3, r2
 8000804:	005b      	lsls	r3, r3, #1
 8000806:	4413      	add	r3, r2
 8000808:	005b      	lsls	r3, r3, #1
 800080a:	18ca      	adds	r2, r1, r3
 800080c:	68fb      	ldr	r3, [r7, #12]
 800080e:	4413      	add	r3, r2
 8000810:	781b      	ldrb	r3, [r3, #0]
 8000812:	43db      	mvns	r3, r3
 8000814:	b2db      	uxtb	r3, r3
 8000816:	2101      	movs	r1, #1
 8000818:	4618      	mov	r0, r3
 800081a:	f7ff ff4d 	bl	80006b8 <LCD_write>
 800081e:	68fb      	ldr	r3, [r7, #12]
 8000820:	3301      	adds	r3, #1
 8000822:	60fb      	str	r3, [r7, #12]
 8000824:	68fb      	ldr	r3, [r7, #12]
 8000826:	2b05      	cmp	r3, #5
 8000828:	ddce      	ble.n	80007c8 <LCD_putChar+0x10>
 800082a:	bf00      	nop
 800082c:	bf00      	nop
 800082e:	3710      	adds	r7, #16
 8000830:	46bd      	mov	sp, r7
 8000832:	bd80      	pop	{r7, pc}
 8000834:	200000a8 	.word	0x200000a8
 8000838:	080042a8 	.word	0x080042a8

0800083c <LCD_print>:
 800083c:	b580      	push	{r7, lr}
 800083e:	b082      	sub	sp, #8
 8000840:	af00      	add	r7, sp, #0
 8000842:	6078      	str	r0, [r7, #4]
 8000844:	460b      	mov	r3, r1
 8000846:	70fb      	strb	r3, [r7, #3]
 8000848:	4613      	mov	r3, r2
 800084a:	70bb      	strb	r3, [r7, #2]
 800084c:	78ba      	ldrb	r2, [r7, #2]
 800084e:	78fb      	ldrb	r3, [r7, #3]
 8000850:	4611      	mov	r1, r2
 8000852:	4618      	mov	r0, r3
 8000854:	f000 f830 	bl	80008b8 <LCD_goXY>
 8000858:	e006      	b.n	8000868 <LCD_print+0x2c>
 800085a:	687b      	ldr	r3, [r7, #4]
 800085c:	1c5a      	adds	r2, r3, #1
 800085e:	607a      	str	r2, [r7, #4]
 8000860:	781b      	ldrb	r3, [r3, #0]
 8000862:	4618      	mov	r0, r3
 8000864:	f7ff ffa8 	bl	80007b8 <LCD_putChar>
 8000868:	687b      	ldr	r3, [r7, #4]
 800086a:	781b      	ldrb	r3, [r3, #0]
 800086c:	2b00      	cmp	r3, #0
 800086e:	d1f4      	bne.n	800085a <LCD_print+0x1e>
 8000870:	bf00      	nop
 8000872:	bf00      	nop
 8000874:	3708      	adds	r7, #8
 8000876:	46bd      	mov	sp, r7
 8000878:	bd80      	pop	{r7, pc}
	...

0800087c <LCD_clrScr>:
 800087c:	b580      	push	{r7, lr}
 800087e:	b082      	sub	sp, #8
 8000880:	af00      	add	r7, sp, #0
 8000882:	2300      	movs	r3, #0
 8000884:	607b      	str	r3, [r7, #4]
 8000886:	e00b      	b.n	80008a0 <LCD_clrScr+0x24>
 8000888:	2101      	movs	r1, #1
 800088a:	2000      	movs	r0, #0
 800088c:	f7ff ff14 	bl	80006b8 <LCD_write>
 8000890:	4a08      	ldr	r2, [pc, #32]	; (80008b4 <LCD_clrScr+0x38>)
 8000892:	687b      	ldr	r3, [r7, #4]
 8000894:	4413      	add	r3, r2
 8000896:	2200      	movs	r2, #0
 8000898:	701a      	strb	r2, [r3, #0]
 800089a:	687b      	ldr	r3, [r7, #4]
 800089c:	3301      	adds	r3, #1
 800089e:	607b      	str	r3, [r7, #4]
 80008a0:	687b      	ldr	r3, [r7, #4]
 80008a2:	f5b3 7ffc 	cmp.w	r3, #504	; 0x1f8
 80008a6:	dbef      	blt.n	8000888 <LCD_clrScr+0xc>
 80008a8:	bf00      	nop
 80008aa:	bf00      	nop
 80008ac:	3708      	adds	r7, #8
 80008ae:	46bd      	mov	sp, r7
 80008b0:	bd80      	pop	{r7, pc}
 80008b2:	bf00      	nop
 80008b4:	200000a8 	.word	0x200000a8

080008b8 <LCD_goXY>:
 80008b8:	b580      	push	{r7, lr}
 80008ba:	b082      	sub	sp, #8
 80008bc:	af00      	add	r7, sp, #0
 80008be:	4603      	mov	r3, r0
 80008c0:	460a      	mov	r2, r1
 80008c2:	71fb      	strb	r3, [r7, #7]
 80008c4:	4613      	mov	r3, r2
 80008c6:	71bb      	strb	r3, [r7, #6]
 80008c8:	79fb      	ldrb	r3, [r7, #7]
 80008ca:	f063 037f 	orn	r3, r3, #127	; 0x7f
 80008ce:	b2db      	uxtb	r3, r3
 80008d0:	2100      	movs	r1, #0
 80008d2:	4618      	mov	r0, r3
 80008d4:	f7ff fef0 	bl	80006b8 <LCD_write>
 80008d8:	79bb      	ldrb	r3, [r7, #6]
 80008da:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80008de:	b2db      	uxtb	r3, r3
 80008e0:	2100      	movs	r1, #0
 80008e2:	4618      	mov	r0, r3
 80008e4:	f7ff fee8 	bl	80006b8 <LCD_write>
 80008e8:	bf00      	nop
 80008ea:	3708      	adds	r7, #8
 80008ec:	46bd      	mov	sp, r7
 80008ee:	bd80      	pop	{r7, pc}

080008f0 <HAL_GPIO_EXTI_Callback>:




void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
{
 80008f0:	b580      	push	{r7, lr}
 80008f2:	b082      	sub	sp, #8
 80008f4:	af00      	add	r7, sp, #0
 80008f6:	4603      	mov	r3, r0
 80008f8:	80fb      	strh	r3, [r7, #6]
	if(GPIO_Pin == BOT1_Pin) // Ações ao apertar o botão 1
 80008fa:	88fb      	ldrh	r3, [r7, #6]
 80008fc:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8000900:	d10e      	bne.n	8000920 <HAL_GPIO_EXTI_Callback+0x30>
	{
		LCD_clrScr();
 8000902:	f7ff ffbb 	bl	800087c <LCD_clrScr>
		mode += 1;
 8000906:	4b08      	ldr	r3, [pc, #32]	; (8000928 <HAL_GPIO_EXTI_Callback+0x38>)
 8000908:	781b      	ldrb	r3, [r3, #0]
 800090a:	3301      	adds	r3, #1
 800090c:	b2da      	uxtb	r2, r3
 800090e:	4b06      	ldr	r3, [pc, #24]	; (8000928 <HAL_GPIO_EXTI_Callback+0x38>)
 8000910:	701a      	strb	r2, [r3, #0]
		if(mode == 3)
 8000912:	4b05      	ldr	r3, [pc, #20]	; (8000928 <HAL_GPIO_EXTI_Callback+0x38>)
 8000914:	781b      	ldrb	r3, [r3, #0]
 8000916:	2b03      	cmp	r3, #3
 8000918:	d102      	bne.n	8000920 <HAL_GPIO_EXTI_Callback+0x30>
		{
			mode = 1;
 800091a:	4b03      	ldr	r3, [pc, #12]	; (8000928 <HAL_GPIO_EXTI_Callback+0x38>)
 800091c:	2201      	movs	r2, #1
 800091e:	701a      	strb	r2, [r3, #0]
	}
	if(GPIO_Pin == BOT2_Pin) // Ações ao apertar botão 2
	{

	}
}
 8000920:	bf00      	nop
 8000922:	3708      	adds	r7, #8
 8000924:	46bd      	mov	sp, r7
 8000926:	bd80      	pop	{r7, pc}
 8000928:	20000000 	.word	0x20000000

0800092c <selecionarPinoMux>:

void selecionarPinoMux(int pino)
{
 800092c:	b580      	push	{r7, lr}
 800092e:	b084      	sub	sp, #16
 8000930:	af00      	add	r7, sp, #0
 8000932:	6078      	str	r0, [r7, #4]
	for(int i =0;i<4;i++)
 8000934:	2300      	movs	r3, #0
 8000936:	60fb      	str	r3, [r7, #12]
 8000938:	e040      	b.n	80009bc <selecionarPinoMux+0x90>
	{
		if(i == 0)
 800093a:	68fb      	ldr	r3, [r7, #12]
 800093c:	2b00      	cmp	r3, #0
 800093e:	d11d      	bne.n	800097c <selecionarPinoMux+0x50>
		{
			if(pino & (1<<i))
 8000940:	687a      	ldr	r2, [r7, #4]
 8000942:	68fb      	ldr	r3, [r7, #12]
 8000944:	fa42 f303 	asr.w	r3, r2, r3
 8000948:	f003 0301 	and.w	r3, r3, #1
 800094c:	2b00      	cmp	r3, #0
 800094e:	d00a      	beq.n	8000966 <selecionarPinoMux+0x3a>
			{
				HAL_GPIO_WritePin(GPIOC, selecionarPino[i], GPIO_PIN_SET);
 8000950:	4a1e      	ldr	r2, [pc, #120]	; (80009cc <selecionarPinoMux+0xa0>)
 8000952:	68fb      	ldr	r3, [r7, #12]
 8000954:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8000958:	b29b      	uxth	r3, r3
 800095a:	2201      	movs	r2, #1
 800095c:	4619      	mov	r1, r3
 800095e:	481c      	ldr	r0, [pc, #112]	; (80009d0 <selecionarPinoMux+0xa4>)
 8000960:	f001 fec8 	bl	80026f4 <HAL_GPIO_WritePin>
 8000964:	e027      	b.n	80009b6 <selecionarPinoMux+0x8a>
			}
			else
			{
				HAL_GPIO_WritePin(GPIOC, selecionarPino[i], GPIO_PIN_RESET);
 8000966:	4a19      	ldr	r2, [pc, #100]	; (80009cc <selecionarPinoMux+0xa0>)
 8000968:	68fb      	ldr	r3, [r7, #12]
 800096a:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800096e:	b29b      	uxth	r3, r3
 8000970:	2200      	movs	r2, #0
 8000972:	4619      	mov	r1, r3
 8000974:	4816      	ldr	r0, [pc, #88]	; (80009d0 <selecionarPinoMux+0xa4>)
 8000976:	f001 febd 	bl	80026f4 <HAL_GPIO_WritePin>
 800097a:	e01c      	b.n	80009b6 <selecionarPinoMux+0x8a>
			}
		}
		else
		{
			if(pino & (1<<i))
 800097c:	687a      	ldr	r2, [r7, #4]
 800097e:	68fb      	ldr	r3, [r7, #12]
 8000980:	fa42 f303 	asr.w	r3, r2, r3
 8000984:	f003 0301 	and.w	r3, r3, #1
 8000988:	2b00      	cmp	r3, #0
 800098a:	d00a      	beq.n	80009a2 <selecionarPinoMux+0x76>
			{
				HAL_GPIO_WritePin(GPIOA, selecionarPino[i], GPIO_PIN_SET);
 800098c:	4a0f      	ldr	r2, [pc, #60]	; (80009cc <selecionarPinoMux+0xa0>)
 800098e:	68fb      	ldr	r3, [r7, #12]
 8000990:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8000994:	b29b      	uxth	r3, r3
 8000996:	2201      	movs	r2, #1
 8000998:	4619      	mov	r1, r3
 800099a:	480e      	ldr	r0, [pc, #56]	; (80009d4 <selecionarPinoMux+0xa8>)
 800099c:	f001 feaa 	bl	80026f4 <HAL_GPIO_WritePin>
 80009a0:	e009      	b.n	80009b6 <selecionarPinoMux+0x8a>
			}
			else
			{
				HAL_GPIO_WritePin(GPIOA, selecionarPino[i], GPIO_PIN_RESET);
 80009a2:	4a0a      	ldr	r2, [pc, #40]	; (80009cc <selecionarPinoMux+0xa0>)
 80009a4:	68fb      	ldr	r3, [r7, #12]
 80009a6:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80009aa:	b29b      	uxth	r3, r3
 80009ac:	2200      	movs	r2, #0
 80009ae:	4619      	mov	r1, r3
 80009b0:	4808      	ldr	r0, [pc, #32]	; (80009d4 <selecionarPinoMux+0xa8>)
 80009b2:	f001 fe9f 	bl	80026f4 <HAL_GPIO_WritePin>
	for(int i =0;i<4;i++)
 80009b6:	68fb      	ldr	r3, [r7, #12]
 80009b8:	3301      	adds	r3, #1
 80009ba:	60fb      	str	r3, [r7, #12]
 80009bc:	68fb      	ldr	r3, [r7, #12]
 80009be:	2b03      	cmp	r3, #3
 80009c0:	ddbb      	ble.n	800093a <selecionarPinoMux+0xe>
			}
		}

	}
}
 80009c2:	bf00      	nop
 80009c4:	bf00      	nop
 80009c6:	3710      	adds	r7, #16
 80009c8:	46bd      	mov	sp, r7
 80009ca:	bd80      	pop	{r7, pc}
 80009cc:	080044e8 	.word	0x080044e8
 80009d0:	40020800 	.word	0x40020800
 80009d4:	40020000 	.word	0x40020000

080009d8 <calibrarBranco>:

void calibrarBranco() // Função de Medir a cor Branca
{
 80009d8:	b580      	push	{r7, lr}
 80009da:	b084      	sub	sp, #16
 80009dc:	af00      	add	r7, sp, #0
	for(int i = 0; i<6; i++)
 80009de:	2300      	movs	r3, #0
 80009e0:	60fb      	str	r3, [r7, #12]
 80009e2:	e018      	b.n	8000a16 <calibrarBranco+0x3e>
	{
			selecionarPinoMux(i);
 80009e4:	68f8      	ldr	r0, [r7, #12]
 80009e6:	f7ff ffa1 	bl	800092c <selecionarPinoMux>
			HAL_ADC_Start(&hadc1);
 80009ea:	482d      	ldr	r0, [pc, #180]	; (8000aa0 <calibrarBranco+0xc8>)
 80009ec:	f001 f872 	bl	8001ad4 <HAL_ADC_Start>
			HAL_ADC_PollForConversion(&hadc1, HAL_MAX_DELAY);
 80009f0:	f04f 31ff 	mov.w	r1, #4294967295
 80009f4:	482a      	ldr	r0, [pc, #168]	; (8000aa0 <calibrarBranco+0xc8>)
 80009f6:	f001 f921 	bl	8001c3c <HAL_ADC_PollForConversion>
			corBranco[5-i] = HAL_ADC_GetValue(&hadc1);
 80009fa:	4829      	ldr	r0, [pc, #164]	; (8000aa0 <calibrarBranco+0xc8>)
 80009fc:	f001 f9a9 	bl	8001d52 <HAL_ADC_GetValue>
 8000a00:	4602      	mov	r2, r0
 8000a02:	68fb      	ldr	r3, [r7, #12]
 8000a04:	f1c3 0305 	rsb	r3, r3, #5
 8000a08:	b291      	uxth	r1, r2
 8000a0a:	4a26      	ldr	r2, [pc, #152]	; (8000aa4 <calibrarBranco+0xcc>)
 8000a0c:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
	for(int i = 0; i<6; i++)
 8000a10:	68fb      	ldr	r3, [r7, #12]
 8000a12:	3301      	adds	r3, #1
 8000a14:	60fb      	str	r3, [r7, #12]
 8000a16:	68fb      	ldr	r3, [r7, #12]
 8000a18:	2b05      	cmp	r3, #5
 8000a1a:	dde3      	ble.n	80009e4 <calibrarBranco+0xc>
	}
	for(int j = 10; j<16; j++ )
 8000a1c:	230a      	movs	r3, #10
 8000a1e:	60bb      	str	r3, [r7, #8]
 8000a20:	e018      	b.n	8000a54 <calibrarBranco+0x7c>
	{
		selecionarPinoMux(j);
 8000a22:	68b8      	ldr	r0, [r7, #8]
 8000a24:	f7ff ff82 	bl	800092c <selecionarPinoMux>
		HAL_ADC_Start(&hadc1);
 8000a28:	481d      	ldr	r0, [pc, #116]	; (8000aa0 <calibrarBranco+0xc8>)
 8000a2a:	f001 f853 	bl	8001ad4 <HAL_ADC_Start>
		HAL_ADC_PollForConversion(&hadc1, HAL_MAX_DELAY);
 8000a2e:	f04f 31ff 	mov.w	r1, #4294967295
 8000a32:	481b      	ldr	r0, [pc, #108]	; (8000aa0 <calibrarBranco+0xc8>)
 8000a34:	f001 f902 	bl	8001c3c <HAL_ADC_PollForConversion>
		corBranco[25-j] = HAL_ADC_GetValue(&hadc1);
 8000a38:	4819      	ldr	r0, [pc, #100]	; (8000aa0 <calibrarBranco+0xc8>)
 8000a3a:	f001 f98a 	bl	8001d52 <HAL_ADC_GetValue>
 8000a3e:	4602      	mov	r2, r0
 8000a40:	68bb      	ldr	r3, [r7, #8]
 8000a42:	f1c3 0319 	rsb	r3, r3, #25
 8000a46:	b291      	uxth	r1, r2
 8000a48:	4a16      	ldr	r2, [pc, #88]	; (8000aa4 <calibrarBranco+0xcc>)
 8000a4a:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
	for(int j = 10; j<16; j++ )
 8000a4e:	68bb      	ldr	r3, [r7, #8]
 8000a50:	3301      	adds	r3, #1
 8000a52:	60bb      	str	r3, [r7, #8]
 8000a54:	68bb      	ldr	r3, [r7, #8]
 8000a56:	2b0f      	cmp	r3, #15
 8000a58:	dde3      	ble.n	8000a22 <calibrarBranco+0x4a>
	}
	for(int k = 6; k<10; k++)
 8000a5a:	2306      	movs	r3, #6
 8000a5c:	607b      	str	r3, [r7, #4]
 8000a5e:	e016      	b.n	8000a8e <calibrarBranco+0xb6>
	{
		selecionarPinoMux(k);
 8000a60:	6878      	ldr	r0, [r7, #4]
 8000a62:	f7ff ff63 	bl	800092c <selecionarPinoMux>
		HAL_ADC_Start(&hadc1);
 8000a66:	480e      	ldr	r0, [pc, #56]	; (8000aa0 <calibrarBranco+0xc8>)
 8000a68:	f001 f834 	bl	8001ad4 <HAL_ADC_Start>
		HAL_ADC_PollForConversion(&hadc1, HAL_MAX_DELAY);
 8000a6c:	f04f 31ff 	mov.w	r1, #4294967295
 8000a70:	480b      	ldr	r0, [pc, #44]	; (8000aa0 <calibrarBranco+0xc8>)
 8000a72:	f001 f8e3 	bl	8001c3c <HAL_ADC_PollForConversion>
		corBranco[k] = HAL_ADC_GetValue(&hadc1);
 8000a76:	480a      	ldr	r0, [pc, #40]	; (8000aa0 <calibrarBranco+0xc8>)
 8000a78:	f001 f96b 	bl	8001d52 <HAL_ADC_GetValue>
 8000a7c:	4603      	mov	r3, r0
 8000a7e:	b299      	uxth	r1, r3
 8000a80:	4a08      	ldr	r2, [pc, #32]	; (8000aa4 <calibrarBranco+0xcc>)
 8000a82:	687b      	ldr	r3, [r7, #4]
 8000a84:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
	for(int k = 6; k<10; k++)
 8000a88:	687b      	ldr	r3, [r7, #4]
 8000a8a:	3301      	adds	r3, #1
 8000a8c:	607b      	str	r3, [r7, #4]
 8000a8e:	687b      	ldr	r3, [r7, #4]
 8000a90:	2b09      	cmp	r3, #9
 8000a92:	dde5      	ble.n	8000a60 <calibrarBranco+0x88>
	}
}
 8000a94:	bf00      	nop
 8000a96:	bf00      	nop
 8000a98:	3710      	adds	r7, #16
 8000a9a:	46bd      	mov	sp, r7
 8000a9c:	bd80      	pop	{r7, pc}
 8000a9e:	bf00      	nop
 8000aa0:	200002cc 	.word	0x200002cc
 8000aa4:	20000404 	.word	0x20000404

08000aa8 <calibrarPreto>:

void calibrarPreto() // Função de medir a cor Preta
{
 8000aa8:	b580      	push	{r7, lr}
 8000aaa:	b084      	sub	sp, #16
 8000aac:	af00      	add	r7, sp, #0
	for(int i = 0; i<6; i++)
 8000aae:	2300      	movs	r3, #0
 8000ab0:	60fb      	str	r3, [r7, #12]
 8000ab2:	e018      	b.n	8000ae6 <calibrarPreto+0x3e>
	{
		selecionarPinoMux(i);
 8000ab4:	68f8      	ldr	r0, [r7, #12]
 8000ab6:	f7ff ff39 	bl	800092c <selecionarPinoMux>
		HAL_ADC_Start(&hadc1);
 8000aba:	482d      	ldr	r0, [pc, #180]	; (8000b70 <calibrarPreto+0xc8>)
 8000abc:	f001 f80a 	bl	8001ad4 <HAL_ADC_Start>
		HAL_ADC_PollForConversion(&hadc1, HAL_MAX_DELAY);
 8000ac0:	f04f 31ff 	mov.w	r1, #4294967295
 8000ac4:	482a      	ldr	r0, [pc, #168]	; (8000b70 <calibrarPreto+0xc8>)
 8000ac6:	f001 f8b9 	bl	8001c3c <HAL_ADC_PollForConversion>
		corPreto[5-i] = HAL_ADC_GetValue(&hadc1);
 8000aca:	4829      	ldr	r0, [pc, #164]	; (8000b70 <calibrarPreto+0xc8>)
 8000acc:	f001 f941 	bl	8001d52 <HAL_ADC_GetValue>
 8000ad0:	4602      	mov	r2, r0
 8000ad2:	68fb      	ldr	r3, [r7, #12]
 8000ad4:	f1c3 0305 	rsb	r3, r3, #5
 8000ad8:	b291      	uxth	r1, r2
 8000ada:	4a26      	ldr	r2, [pc, #152]	; (8000b74 <calibrarPreto+0xcc>)
 8000adc:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
	for(int i = 0; i<6; i++)
 8000ae0:	68fb      	ldr	r3, [r7, #12]
 8000ae2:	3301      	adds	r3, #1
 8000ae4:	60fb      	str	r3, [r7, #12]
 8000ae6:	68fb      	ldr	r3, [r7, #12]
 8000ae8:	2b05      	cmp	r3, #5
 8000aea:	dde3      	ble.n	8000ab4 <calibrarPreto+0xc>
	}
	for(int j = 10; j<16; j++ )
 8000aec:	230a      	movs	r3, #10
 8000aee:	60bb      	str	r3, [r7, #8]
 8000af0:	e018      	b.n	8000b24 <calibrarPreto+0x7c>
	{
		selecionarPinoMux(j);
 8000af2:	68b8      	ldr	r0, [r7, #8]
 8000af4:	f7ff ff1a 	bl	800092c <selecionarPinoMux>
		HAL_ADC_Start(&hadc1);
 8000af8:	481d      	ldr	r0, [pc, #116]	; (8000b70 <calibrarPreto+0xc8>)
 8000afa:	f000 ffeb 	bl	8001ad4 <HAL_ADC_Start>
		HAL_ADC_PollForConversion(&hadc1, HAL_MAX_DELAY);
 8000afe:	f04f 31ff 	mov.w	r1, #4294967295
 8000b02:	481b      	ldr	r0, [pc, #108]	; (8000b70 <calibrarPreto+0xc8>)
 8000b04:	f001 f89a 	bl	8001c3c <HAL_ADC_PollForConversion>
		corPreto[25-j] = HAL_ADC_GetValue(&hadc1);
 8000b08:	4819      	ldr	r0, [pc, #100]	; (8000b70 <calibrarPreto+0xc8>)
 8000b0a:	f001 f922 	bl	8001d52 <HAL_ADC_GetValue>
 8000b0e:	4602      	mov	r2, r0
 8000b10:	68bb      	ldr	r3, [r7, #8]
 8000b12:	f1c3 0319 	rsb	r3, r3, #25
 8000b16:	b291      	uxth	r1, r2
 8000b18:	4a16      	ldr	r2, [pc, #88]	; (8000b74 <calibrarPreto+0xcc>)
 8000b1a:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
	for(int j = 10; j<16; j++ )
 8000b1e:	68bb      	ldr	r3, [r7, #8]
 8000b20:	3301      	adds	r3, #1
 8000b22:	60bb      	str	r3, [r7, #8]
 8000b24:	68bb      	ldr	r3, [r7, #8]
 8000b26:	2b0f      	cmp	r3, #15
 8000b28:	dde3      	ble.n	8000af2 <calibrarPreto+0x4a>
	}
	for(int k = 6; k<10; k++)
 8000b2a:	2306      	movs	r3, #6
 8000b2c:	607b      	str	r3, [r7, #4]
 8000b2e:	e016      	b.n	8000b5e <calibrarPreto+0xb6>
	{
		selecionarPinoMux(k);
 8000b30:	6878      	ldr	r0, [r7, #4]
 8000b32:	f7ff fefb 	bl	800092c <selecionarPinoMux>
		HAL_ADC_Start(&hadc1);
 8000b36:	480e      	ldr	r0, [pc, #56]	; (8000b70 <calibrarPreto+0xc8>)
 8000b38:	f000 ffcc 	bl	8001ad4 <HAL_ADC_Start>
		HAL_ADC_PollForConversion(&hadc1, HAL_MAX_DELAY);
 8000b3c:	f04f 31ff 	mov.w	r1, #4294967295
 8000b40:	480b      	ldr	r0, [pc, #44]	; (8000b70 <calibrarPreto+0xc8>)
 8000b42:	f001 f87b 	bl	8001c3c <HAL_ADC_PollForConversion>
		corPreto[k] = HAL_ADC_GetValue(&hadc1);
 8000b46:	480a      	ldr	r0, [pc, #40]	; (8000b70 <calibrarPreto+0xc8>)
 8000b48:	f001 f903 	bl	8001d52 <HAL_ADC_GetValue>
 8000b4c:	4603      	mov	r3, r0
 8000b4e:	b299      	uxth	r1, r3
 8000b50:	4a08      	ldr	r2, [pc, #32]	; (8000b74 <calibrarPreto+0xcc>)
 8000b52:	687b      	ldr	r3, [r7, #4]
 8000b54:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
	for(int k = 6; k<10; k++)
 8000b58:	687b      	ldr	r3, [r7, #4]
 8000b5a:	3301      	adds	r3, #1
 8000b5c:	607b      	str	r3, [r7, #4]
 8000b5e:	687b      	ldr	r3, [r7, #4]
 8000b60:	2b09      	cmp	r3, #9
 8000b62:	dde5      	ble.n	8000b30 <calibrarPreto+0x88>
	}
}
 8000b64:	bf00      	nop
 8000b66:	bf00      	nop
 8000b68:	3710      	adds	r7, #16
 8000b6a:	46bd      	mov	sp, r7
 8000b6c:	bd80      	pop	{r7, pc}
 8000b6e:	bf00      	nop
 8000b70:	200002cc 	.word	0x200002cc
 8000b74:	20000424 	.word	0x20000424

08000b78 <calcularMediaSensores>:

void calcularMediaSensores() // Calculo Média das cores para calibração dos sensores
{
 8000b78:	b480      	push	{r7}
 8000b7a:	b083      	sub	sp, #12
 8000b7c:	af00      	add	r7, sp, #0
	for(int i = 0;i<16;i++)
 8000b7e:	2300      	movs	r3, #0
 8000b80:	607b      	str	r3, [r7, #4]
 8000b82:	e014      	b.n	8000bae <calcularMediaSensores+0x36>
	{
		mediaPB[i] = (corPreto[i]+ corBranco[i])/2;
 8000b84:	4a0f      	ldr	r2, [pc, #60]	; (8000bc4 <calcularMediaSensores+0x4c>)
 8000b86:	687b      	ldr	r3, [r7, #4]
 8000b88:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8000b8c:	4619      	mov	r1, r3
 8000b8e:	4a0e      	ldr	r2, [pc, #56]	; (8000bc8 <calcularMediaSensores+0x50>)
 8000b90:	687b      	ldr	r3, [r7, #4]
 8000b92:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8000b96:	440b      	add	r3, r1
 8000b98:	0fda      	lsrs	r2, r3, #31
 8000b9a:	4413      	add	r3, r2
 8000b9c:	105b      	asrs	r3, r3, #1
 8000b9e:	b299      	uxth	r1, r3
 8000ba0:	4a0a      	ldr	r2, [pc, #40]	; (8000bcc <calcularMediaSensores+0x54>)
 8000ba2:	687b      	ldr	r3, [r7, #4]
 8000ba4:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
	for(int i = 0;i<16;i++)
 8000ba8:	687b      	ldr	r3, [r7, #4]
 8000baa:	3301      	adds	r3, #1
 8000bac:	607b      	str	r3, [r7, #4]
 8000bae:	687b      	ldr	r3, [r7, #4]
 8000bb0:	2b0f      	cmp	r3, #15
 8000bb2:	dde7      	ble.n	8000b84 <calcularMediaSensores+0xc>
	}
}
 8000bb4:	bf00      	nop
 8000bb6:	bf00      	nop
 8000bb8:	370c      	adds	r7, #12
 8000bba:	46bd      	mov	sp, r7
 8000bbc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000bc0:	4770      	bx	lr
 8000bc2:	bf00      	nop
 8000bc4:	20000424 	.word	0x20000424
 8000bc8:	20000404 	.word	0x20000404
 8000bcc:	20000444 	.word	0x20000444

08000bd0 <aplicarCalibracao>:

void aplicarCalibracao() // Determina os valores digitais dos sensores apos calibração
{
 8000bd0:	b580      	push	{r7, lr}
 8000bd2:	b084      	sub	sp, #16
 8000bd4:	af00      	add	r7, sp, #0
	for(int i = 0; i<6; i++)
 8000bd6:	2300      	movs	r3, #0
 8000bd8:	60fb      	str	r3, [r7, #12]
 8000bda:	e05a      	b.n	8000c92 <aplicarCalibracao+0xc2>
	{
		selecionarPinoMux(i);
 8000bdc:	68f8      	ldr	r0, [r7, #12]
 8000bde:	f7ff fea5 	bl	800092c <selecionarPinoMux>
		HAL_ADC_Start(&hadc1);
 8000be2:	4888      	ldr	r0, [pc, #544]	; (8000e04 <aplicarCalibracao+0x234>)
 8000be4:	f000 ff76 	bl	8001ad4 <HAL_ADC_Start>
		HAL_ADC_PollForConversion(&hadc1, HAL_MAX_DELAY);
 8000be8:	f04f 31ff 	mov.w	r1, #4294967295
 8000bec:	4885      	ldr	r0, [pc, #532]	; (8000e04 <aplicarCalibracao+0x234>)
 8000bee:	f001 f825 	bl	8001c3c <HAL_ADC_PollForConversion>
		valorSensor[5-i] = HAL_ADC_GetValue(&hadc1);
 8000bf2:	4884      	ldr	r0, [pc, #528]	; (8000e04 <aplicarCalibracao+0x234>)
 8000bf4:	f001 f8ad 	bl	8001d52 <HAL_ADC_GetValue>
 8000bf8:	4602      	mov	r2, r0
 8000bfa:	68fb      	ldr	r3, [r7, #12]
 8000bfc:	f1c3 0305 	rsb	r3, r3, #5
 8000c00:	b291      	uxth	r1, r2
 8000c02:	4a81      	ldr	r2, [pc, #516]	; (8000e08 <aplicarCalibracao+0x238>)
 8000c04:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
		if(linha == 0)
 8000c08:	4b80      	ldr	r3, [pc, #512]	; (8000e0c <aplicarCalibracao+0x23c>)
 8000c0a:	681b      	ldr	r3, [r3, #0]
 8000c0c:	2b00      	cmp	r3, #0
 8000c0e:	d11c      	bne.n	8000c4a <aplicarCalibracao+0x7a>
		{
			if(valorSensor[5-i] <= mediaPB[5-i])
 8000c10:	68fb      	ldr	r3, [r7, #12]
 8000c12:	f1c3 0305 	rsb	r3, r3, #5
 8000c16:	4a7c      	ldr	r2, [pc, #496]	; (8000e08 <aplicarCalibracao+0x238>)
 8000c18:	f832 2013 	ldrh.w	r2, [r2, r3, lsl #1]
 8000c1c:	68fb      	ldr	r3, [r7, #12]
 8000c1e:	f1c3 0305 	rsb	r3, r3, #5
 8000c22:	497b      	ldr	r1, [pc, #492]	; (8000e10 <aplicarCalibracao+0x240>)
 8000c24:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8000c28:	429a      	cmp	r2, r3
 8000c2a:	d807      	bhi.n	8000c3c <aplicarCalibracao+0x6c>
			{
				sensorDigital[5-i] = 0;
 8000c2c:	68fb      	ldr	r3, [r7, #12]
 8000c2e:	f1c3 0305 	rsb	r3, r3, #5
 8000c32:	4a78      	ldr	r2, [pc, #480]	; (8000e14 <aplicarCalibracao+0x244>)
 8000c34:	2100      	movs	r1, #0
 8000c36:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
 8000c3a:	e006      	b.n	8000c4a <aplicarCalibracao+0x7a>
			}
			else
			{
				sensorDigital[5-i] = 1;
 8000c3c:	68fb      	ldr	r3, [r7, #12]
 8000c3e:	f1c3 0305 	rsb	r3, r3, #5
 8000c42:	4a74      	ldr	r2, [pc, #464]	; (8000e14 <aplicarCalibracao+0x244>)
 8000c44:	2101      	movs	r1, #1
 8000c46:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
			}
		}
		if(linha == 1)
 8000c4a:	4b70      	ldr	r3, [pc, #448]	; (8000e0c <aplicarCalibracao+0x23c>)
 8000c4c:	681b      	ldr	r3, [r3, #0]
 8000c4e:	2b01      	cmp	r3, #1
 8000c50:	d11c      	bne.n	8000c8c <aplicarCalibracao+0xbc>
		{
			if(valorSensor[5-i] <= mediaPB[5-i])
 8000c52:	68fb      	ldr	r3, [r7, #12]
 8000c54:	f1c3 0305 	rsb	r3, r3, #5
 8000c58:	4a6b      	ldr	r2, [pc, #428]	; (8000e08 <aplicarCalibracao+0x238>)
 8000c5a:	f832 2013 	ldrh.w	r2, [r2, r3, lsl #1]
 8000c5e:	68fb      	ldr	r3, [r7, #12]
 8000c60:	f1c3 0305 	rsb	r3, r3, #5
 8000c64:	496a      	ldr	r1, [pc, #424]	; (8000e10 <aplicarCalibracao+0x240>)
 8000c66:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8000c6a:	429a      	cmp	r2, r3
 8000c6c:	d807      	bhi.n	8000c7e <aplicarCalibracao+0xae>
			{
				sensorDigital[5-i] = 1;
 8000c6e:	68fb      	ldr	r3, [r7, #12]
 8000c70:	f1c3 0305 	rsb	r3, r3, #5
 8000c74:	4a67      	ldr	r2, [pc, #412]	; (8000e14 <aplicarCalibracao+0x244>)
 8000c76:	2101      	movs	r1, #1
 8000c78:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
 8000c7c:	e006      	b.n	8000c8c <aplicarCalibracao+0xbc>
			}
			else
			{
				sensorDigital[5-i] = 0;
 8000c7e:	68fb      	ldr	r3, [r7, #12]
 8000c80:	f1c3 0305 	rsb	r3, r3, #5
 8000c84:	4a63      	ldr	r2, [pc, #396]	; (8000e14 <aplicarCalibracao+0x244>)
 8000c86:	2100      	movs	r1, #0
 8000c88:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
	for(int i = 0; i<6; i++)
 8000c8c:	68fb      	ldr	r3, [r7, #12]
 8000c8e:	3301      	adds	r3, #1
 8000c90:	60fb      	str	r3, [r7, #12]
 8000c92:	68fb      	ldr	r3, [r7, #12]
 8000c94:	2b05      	cmp	r3, #5
 8000c96:	dda1      	ble.n	8000bdc <aplicarCalibracao+0xc>
			}
		}
	}
	for(int j = 10; j<16; j++ )
 8000c98:	230a      	movs	r3, #10
 8000c9a:	60bb      	str	r3, [r7, #8]
 8000c9c:	e05a      	b.n	8000d54 <aplicarCalibracao+0x184>
	{
		selecionarPinoMux(j);
 8000c9e:	68b8      	ldr	r0, [r7, #8]
 8000ca0:	f7ff fe44 	bl	800092c <selecionarPinoMux>
		HAL_ADC_Start(&hadc1);
 8000ca4:	4857      	ldr	r0, [pc, #348]	; (8000e04 <aplicarCalibracao+0x234>)
 8000ca6:	f000 ff15 	bl	8001ad4 <HAL_ADC_Start>
		HAL_ADC_PollForConversion(&hadc1, HAL_MAX_DELAY);
 8000caa:	f04f 31ff 	mov.w	r1, #4294967295
 8000cae:	4855      	ldr	r0, [pc, #340]	; (8000e04 <aplicarCalibracao+0x234>)
 8000cb0:	f000 ffc4 	bl	8001c3c <HAL_ADC_PollForConversion>
		valorSensor[25-j] = HAL_ADC_GetValue(&hadc1);
 8000cb4:	4853      	ldr	r0, [pc, #332]	; (8000e04 <aplicarCalibracao+0x234>)
 8000cb6:	f001 f84c 	bl	8001d52 <HAL_ADC_GetValue>
 8000cba:	4602      	mov	r2, r0
 8000cbc:	68bb      	ldr	r3, [r7, #8]
 8000cbe:	f1c3 0319 	rsb	r3, r3, #25
 8000cc2:	b291      	uxth	r1, r2
 8000cc4:	4a50      	ldr	r2, [pc, #320]	; (8000e08 <aplicarCalibracao+0x238>)
 8000cc6:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
		if(linha == 0)
 8000cca:	4b50      	ldr	r3, [pc, #320]	; (8000e0c <aplicarCalibracao+0x23c>)
 8000ccc:	681b      	ldr	r3, [r3, #0]
 8000cce:	2b00      	cmp	r3, #0
 8000cd0:	d11c      	bne.n	8000d0c <aplicarCalibracao+0x13c>
		{
			if(valorSensor[25-j] <= mediaPB[25-j])
 8000cd2:	68bb      	ldr	r3, [r7, #8]
 8000cd4:	f1c3 0319 	rsb	r3, r3, #25
 8000cd8:	4a4b      	ldr	r2, [pc, #300]	; (8000e08 <aplicarCalibracao+0x238>)
 8000cda:	f832 2013 	ldrh.w	r2, [r2, r3, lsl #1]
 8000cde:	68bb      	ldr	r3, [r7, #8]
 8000ce0:	f1c3 0319 	rsb	r3, r3, #25
 8000ce4:	494a      	ldr	r1, [pc, #296]	; (8000e10 <aplicarCalibracao+0x240>)
 8000ce6:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8000cea:	429a      	cmp	r2, r3
 8000cec:	d807      	bhi.n	8000cfe <aplicarCalibracao+0x12e>
			{
				sensorDigital[25-j] = 0;
 8000cee:	68bb      	ldr	r3, [r7, #8]
 8000cf0:	f1c3 0319 	rsb	r3, r3, #25
 8000cf4:	4a47      	ldr	r2, [pc, #284]	; (8000e14 <aplicarCalibracao+0x244>)
 8000cf6:	2100      	movs	r1, #0
 8000cf8:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
 8000cfc:	e006      	b.n	8000d0c <aplicarCalibracao+0x13c>
			}
			else
			{
				sensorDigital[25-j] = 1;
 8000cfe:	68bb      	ldr	r3, [r7, #8]
 8000d00:	f1c3 0319 	rsb	r3, r3, #25
 8000d04:	4a43      	ldr	r2, [pc, #268]	; (8000e14 <aplicarCalibracao+0x244>)
 8000d06:	2101      	movs	r1, #1
 8000d08:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
			}
		}
		if(linha == 1)
 8000d0c:	4b3f      	ldr	r3, [pc, #252]	; (8000e0c <aplicarCalibracao+0x23c>)
 8000d0e:	681b      	ldr	r3, [r3, #0]
 8000d10:	2b01      	cmp	r3, #1
 8000d12:	d11c      	bne.n	8000d4e <aplicarCalibracao+0x17e>
		{
			if(valorSensor[25-j] <= mediaPB[25-j])
 8000d14:	68bb      	ldr	r3, [r7, #8]
 8000d16:	f1c3 0319 	rsb	r3, r3, #25
 8000d1a:	4a3b      	ldr	r2, [pc, #236]	; (8000e08 <aplicarCalibracao+0x238>)
 8000d1c:	f832 2013 	ldrh.w	r2, [r2, r3, lsl #1]
 8000d20:	68bb      	ldr	r3, [r7, #8]
 8000d22:	f1c3 0319 	rsb	r3, r3, #25
 8000d26:	493a      	ldr	r1, [pc, #232]	; (8000e10 <aplicarCalibracao+0x240>)
 8000d28:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8000d2c:	429a      	cmp	r2, r3
 8000d2e:	d807      	bhi.n	8000d40 <aplicarCalibracao+0x170>
			{
				sensorDigital[25-j] = 0;
 8000d30:	68bb      	ldr	r3, [r7, #8]
 8000d32:	f1c3 0319 	rsb	r3, r3, #25
 8000d36:	4a37      	ldr	r2, [pc, #220]	; (8000e14 <aplicarCalibracao+0x244>)
 8000d38:	2100      	movs	r1, #0
 8000d3a:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
 8000d3e:	e006      	b.n	8000d4e <aplicarCalibracao+0x17e>
			}
			else
			{
				sensorDigital[25-j] = 1;
 8000d40:	68bb      	ldr	r3, [r7, #8]
 8000d42:	f1c3 0319 	rsb	r3, r3, #25
 8000d46:	4a33      	ldr	r2, [pc, #204]	; (8000e14 <aplicarCalibracao+0x244>)
 8000d48:	2101      	movs	r1, #1
 8000d4a:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
	for(int j = 10; j<16; j++ )
 8000d4e:	68bb      	ldr	r3, [r7, #8]
 8000d50:	3301      	adds	r3, #1
 8000d52:	60bb      	str	r3, [r7, #8]
 8000d54:	68bb      	ldr	r3, [r7, #8]
 8000d56:	2b0f      	cmp	r3, #15
 8000d58:	dda1      	ble.n	8000c9e <aplicarCalibracao+0xce>
			}
		}
	}
	for(int k = 6; k<10; k++)
 8000d5a:	2306      	movs	r3, #6
 8000d5c:	607b      	str	r3, [r7, #4]
 8000d5e:	e048      	b.n	8000df2 <aplicarCalibracao+0x222>
	{
		selecionarPinoMux(k);
 8000d60:	6878      	ldr	r0, [r7, #4]
 8000d62:	f7ff fde3 	bl	800092c <selecionarPinoMux>
		HAL_ADC_Start(&hadc1);
 8000d66:	4827      	ldr	r0, [pc, #156]	; (8000e04 <aplicarCalibracao+0x234>)
 8000d68:	f000 feb4 	bl	8001ad4 <HAL_ADC_Start>
		HAL_ADC_PollForConversion(&hadc1, HAL_MAX_DELAY);
 8000d6c:	f04f 31ff 	mov.w	r1, #4294967295
 8000d70:	4824      	ldr	r0, [pc, #144]	; (8000e04 <aplicarCalibracao+0x234>)
 8000d72:	f000 ff63 	bl	8001c3c <HAL_ADC_PollForConversion>
		valorSensor[k] = HAL_ADC_GetValue(&hadc1);
 8000d76:	4823      	ldr	r0, [pc, #140]	; (8000e04 <aplicarCalibracao+0x234>)
 8000d78:	f000 ffeb 	bl	8001d52 <HAL_ADC_GetValue>
 8000d7c:	4603      	mov	r3, r0
 8000d7e:	b299      	uxth	r1, r3
 8000d80:	4a21      	ldr	r2, [pc, #132]	; (8000e08 <aplicarCalibracao+0x238>)
 8000d82:	687b      	ldr	r3, [r7, #4]
 8000d84:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
		if(linha == 0)
 8000d88:	4b20      	ldr	r3, [pc, #128]	; (8000e0c <aplicarCalibracao+0x23c>)
 8000d8a:	681b      	ldr	r3, [r3, #0]
 8000d8c:	2b00      	cmp	r3, #0
 8000d8e:	d114      	bne.n	8000dba <aplicarCalibracao+0x1ea>
		{
			if(valorSensor[k] <= mediaPB[k])
 8000d90:	4a1d      	ldr	r2, [pc, #116]	; (8000e08 <aplicarCalibracao+0x238>)
 8000d92:	687b      	ldr	r3, [r7, #4]
 8000d94:	f832 2013 	ldrh.w	r2, [r2, r3, lsl #1]
 8000d98:	491d      	ldr	r1, [pc, #116]	; (8000e10 <aplicarCalibracao+0x240>)
 8000d9a:	687b      	ldr	r3, [r7, #4]
 8000d9c:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8000da0:	429a      	cmp	r2, r3
 8000da2:	d805      	bhi.n	8000db0 <aplicarCalibracao+0x1e0>
			{
				sensorDigital[k] = 0;
 8000da4:	4a1b      	ldr	r2, [pc, #108]	; (8000e14 <aplicarCalibracao+0x244>)
 8000da6:	687b      	ldr	r3, [r7, #4]
 8000da8:	2100      	movs	r1, #0
 8000daa:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
 8000dae:	e004      	b.n	8000dba <aplicarCalibracao+0x1ea>
			}
			else
			{
				sensorDigital[k] = 1;
 8000db0:	4a18      	ldr	r2, [pc, #96]	; (8000e14 <aplicarCalibracao+0x244>)
 8000db2:	687b      	ldr	r3, [r7, #4]
 8000db4:	2101      	movs	r1, #1
 8000db6:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
			}
		}
		if(linha == 1)
 8000dba:	4b14      	ldr	r3, [pc, #80]	; (8000e0c <aplicarCalibracao+0x23c>)
 8000dbc:	681b      	ldr	r3, [r3, #0]
 8000dbe:	2b01      	cmp	r3, #1
 8000dc0:	d114      	bne.n	8000dec <aplicarCalibracao+0x21c>
		{
			if(valorSensor[k] <= mediaPB[k])
 8000dc2:	4a11      	ldr	r2, [pc, #68]	; (8000e08 <aplicarCalibracao+0x238>)
 8000dc4:	687b      	ldr	r3, [r7, #4]
 8000dc6:	f832 2013 	ldrh.w	r2, [r2, r3, lsl #1]
 8000dca:	4911      	ldr	r1, [pc, #68]	; (8000e10 <aplicarCalibracao+0x240>)
 8000dcc:	687b      	ldr	r3, [r7, #4]
 8000dce:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8000dd2:	429a      	cmp	r2, r3
 8000dd4:	d805      	bhi.n	8000de2 <aplicarCalibracao+0x212>
			{
				sensorDigital[k] = 1;
 8000dd6:	4a0f      	ldr	r2, [pc, #60]	; (8000e14 <aplicarCalibracao+0x244>)
 8000dd8:	687b      	ldr	r3, [r7, #4]
 8000dda:	2101      	movs	r1, #1
 8000ddc:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
 8000de0:	e004      	b.n	8000dec <aplicarCalibracao+0x21c>
			}
			else
			{
				sensorDigital[k] = 0;
 8000de2:	4a0c      	ldr	r2, [pc, #48]	; (8000e14 <aplicarCalibracao+0x244>)
 8000de4:	687b      	ldr	r3, [r7, #4]
 8000de6:	2100      	movs	r1, #0
 8000de8:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
	for(int k = 6; k<10; k++)
 8000dec:	687b      	ldr	r3, [r7, #4]
 8000dee:	3301      	adds	r3, #1
 8000df0:	607b      	str	r3, [r7, #4]
 8000df2:	687b      	ldr	r3, [r7, #4]
 8000df4:	2b09      	cmp	r3, #9
 8000df6:	ddb3      	ble.n	8000d60 <aplicarCalibracao+0x190>
			}
		}
	}
}
 8000df8:	bf00      	nop
 8000dfa:	bf00      	nop
 8000dfc:	3710      	adds	r7, #16
 8000dfe:	46bd      	mov	sp, r7
 8000e00:	bd80      	pop	{r7, pc}
 8000e02:	bf00      	nop
 8000e04:	200002cc 	.word	0x200002cc
 8000e08:	200003a4 	.word	0x200003a4
 8000e0c:	20000470 	.word	0x20000470
 8000e10:	20000444 	.word	0x20000444
 8000e14:	200003c4 	.word	0x200003c4

08000e18 <leituraLinha>:

void leituraLinha() // Retorna Valor da média ponderada para utilizar no PID
{
 8000e18:	b580      	push	{r7, lr}
 8000e1a:	b084      	sub	sp, #16
 8000e1c:	af00      	add	r7, sp, #0
	    /*Definindo e resetando variaveis*/

	    int num = 0; // numerador
 8000e1e:	2300      	movs	r3, #0
 8000e20:	60fb      	str	r3, [r7, #12]
	    int den = 0; // denominador
 8000e22:	2300      	movs	r3, #0
 8000e24:	60bb      	str	r3, [r7, #8]
	    pos = 0;
 8000e26:	4b1a      	ldr	r3, [pc, #104]	; (8000e90 <leituraLinha+0x78>)
 8000e28:	2200      	movs	r2, #0
 8000e2a:	801a      	strh	r2, [r3, #0]


	    for(int i = 0; i < 16; i++) {
 8000e2c:	2300      	movs	r3, #0
 8000e2e:	607b      	str	r3, [r7, #4]
 8000e30:	e016      	b.n	8000e60 <leituraLinha+0x48>
	        // soma ponderada
	        num += sensorDigital[i] * peso[i];
 8000e32:	4a18      	ldr	r2, [pc, #96]	; (8000e94 <leituraLinha+0x7c>)
 8000e34:	687b      	ldr	r3, [r7, #4]
 8000e36:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8000e3a:	4917      	ldr	r1, [pc, #92]	; (8000e98 <leituraLinha+0x80>)
 8000e3c:	687a      	ldr	r2, [r7, #4]
 8000e3e:	f831 2012 	ldrh.w	r2, [r1, r2, lsl #1]
 8000e42:	fb02 f303 	mul.w	r3, r2, r3
 8000e46:	68fa      	ldr	r2, [r7, #12]
 8000e48:	4413      	add	r3, r2
 8000e4a:	60fb      	str	r3, [r7, #12]
	        den += sensorDigital[i];
 8000e4c:	4a11      	ldr	r2, [pc, #68]	; (8000e94 <leituraLinha+0x7c>)
 8000e4e:	687b      	ldr	r3, [r7, #4]
 8000e50:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8000e54:	68ba      	ldr	r2, [r7, #8]
 8000e56:	4413      	add	r3, r2
 8000e58:	60bb      	str	r3, [r7, #8]
	    for(int i = 0; i < 16; i++) {
 8000e5a:	687b      	ldr	r3, [r7, #4]
 8000e5c:	3301      	adds	r3, #1
 8000e5e:	607b      	str	r3, [r7, #4]
 8000e60:	687b      	ldr	r3, [r7, #4]
 8000e62:	2b0f      	cmp	r3, #15
 8000e64:	dde5      	ble.n	8000e32 <leituraLinha+0x1a>
	    }

	    if (den != 0) {
 8000e66:	68bb      	ldr	r3, [r7, #8]
 8000e68:	2b00      	cmp	r3, #0
 8000e6a:	d007      	beq.n	8000e7c <leituraLinha+0x64>
	        pos = (num / den);
 8000e6c:	68fa      	ldr	r2, [r7, #12]
 8000e6e:	68bb      	ldr	r3, [r7, #8]
 8000e70:	fb92 f3f3 	sdiv	r3, r2, r3
 8000e74:	b29a      	uxth	r2, r3
 8000e76:	4b06      	ldr	r3, [pc, #24]	; (8000e90 <leituraLinha+0x78>)
 8000e78:	801a      	strh	r2, [r3, #0]
	       // LCD_print(pos,1, 6);
	    } else {
	    	LCD_print("erro0", 3, 0);
	    }

}
 8000e7a:	e004      	b.n	8000e86 <leituraLinha+0x6e>
	    	LCD_print("erro0", 3, 0);
 8000e7c:	2200      	movs	r2, #0
 8000e7e:	2103      	movs	r1, #3
 8000e80:	4806      	ldr	r0, [pc, #24]	; (8000e9c <leituraLinha+0x84>)
 8000e82:	f7ff fcdb 	bl	800083c <LCD_print>
}
 8000e86:	bf00      	nop
 8000e88:	3710      	adds	r7, #16
 8000e8a:	46bd      	mov	sp, r7
 8000e8c:	bd80      	pop	{r7, pc}
 8000e8e:	bf00      	nop
 8000e90:	2000046c 	.word	0x2000046c
 8000e94:	200003c4 	.word	0x200003c4
 8000e98:	20000004 	.word	0x20000004
 8000e9c:	08004268 	.word	0x08004268

08000ea0 <PID>:

void PID(){
 8000ea0:	b480      	push	{r7}
 8000ea2:	af00      	add	r7, sp, #0
	/* Essa função atualiza os valores das variáveis PWMA e PWMB, as variáveis veloA e veloB forma a velocidade base

	 */

                         error = (pos -750);
 8000ea4:	4b3b      	ldr	r3, [pc, #236]	; (8000f94 <PID+0xf4>)
 8000ea6:	881b      	ldrh	r3, [r3, #0]
 8000ea8:	f2a3 23ee 	subw	r3, r3, #750	; 0x2ee
 8000eac:	4a3a      	ldr	r2, [pc, #232]	; (8000f98 <PID+0xf8>)
 8000eae:	6013      	str	r3, [r2, #0]

                         propo= error;                         //função proporcional
 8000eb0:	4b39      	ldr	r3, [pc, #228]	; (8000f98 <PID+0xf8>)
 8000eb2:	681b      	ldr	r3, [r3, #0]
 8000eb4:	b29a      	uxth	r2, r3
 8000eb6:	4b39      	ldr	r3, [pc, #228]	; (8000f9c <PID+0xfc>)
 8000eb8:	801a      	strh	r2, [r3, #0]

                         deriv=propo-ultimopropo;             //função derivativo
 8000eba:	4b38      	ldr	r3, [pc, #224]	; (8000f9c <PID+0xfc>)
 8000ebc:	881a      	ldrh	r2, [r3, #0]
 8000ebe:	4b38      	ldr	r3, [pc, #224]	; (8000fa0 <PID+0x100>)
 8000ec0:	881b      	ldrh	r3, [r3, #0]
 8000ec2:	1ad3      	subs	r3, r2, r3
 8000ec4:	b29a      	uxth	r2, r3
 8000ec6:	4b37      	ldr	r3, [pc, #220]	; (8000fa4 <PID+0x104>)
 8000ec8:	801a      	strh	r2, [r3, #0]

                         integral=propo+deriv;                //função integral
 8000eca:	4b34      	ldr	r3, [pc, #208]	; (8000f9c <PID+0xfc>)
 8000ecc:	881a      	ldrh	r2, [r3, #0]
 8000ece:	4b35      	ldr	r3, [pc, #212]	; (8000fa4 <PID+0x104>)
 8000ed0:	881b      	ldrh	r3, [r3, #0]
 8000ed2:	4413      	add	r3, r2
 8000ed4:	b29a      	uxth	r2, r3
 8000ed6:	4b34      	ldr	r3, [pc, #208]	; (8000fa8 <PID+0x108>)
 8000ed8:	801a      	strh	r2, [r3, #0]

                         ultimopropo=propo;
 8000eda:	4b30      	ldr	r3, [pc, #192]	; (8000f9c <PID+0xfc>)
 8000edc:	881a      	ldrh	r2, [r3, #0]
 8000ede:	4b30      	ldr	r3, [pc, #192]	; (8000fa0 <PID+0x100>)
 8000ee0:	801a      	strh	r2, [r3, #0]


                         PWMA =(Velo1 +((Kp*propo)+(deriv*Kd)+(integral*Ki)));
 8000ee2:	4b32      	ldr	r3, [pc, #200]	; (8000fac <PID+0x10c>)
 8000ee4:	881b      	ldrh	r3, [r3, #0]
 8000ee6:	4619      	mov	r1, r3
 8000ee8:	4b31      	ldr	r3, [pc, #196]	; (8000fb0 <PID+0x110>)
 8000eea:	881b      	ldrh	r3, [r3, #0]
 8000eec:	461a      	mov	r2, r3
 8000eee:	4b2b      	ldr	r3, [pc, #172]	; (8000f9c <PID+0xfc>)
 8000ef0:	881b      	ldrh	r3, [r3, #0]
 8000ef2:	fb03 f202 	mul.w	r2, r3, r2
 8000ef6:	4b2b      	ldr	r3, [pc, #172]	; (8000fa4 <PID+0x104>)
 8000ef8:	881b      	ldrh	r3, [r3, #0]
 8000efa:	4618      	mov	r0, r3
 8000efc:	4b2d      	ldr	r3, [pc, #180]	; (8000fb4 <PID+0x114>)
 8000efe:	881b      	ldrh	r3, [r3, #0]
 8000f00:	fb00 f303 	mul.w	r3, r0, r3
 8000f04:	441a      	add	r2, r3
 8000f06:	4b28      	ldr	r3, [pc, #160]	; (8000fa8 <PID+0x108>)
 8000f08:	881b      	ldrh	r3, [r3, #0]
 8000f0a:	4618      	mov	r0, r3
 8000f0c:	4b2a      	ldr	r3, [pc, #168]	; (8000fb8 <PID+0x118>)
 8000f0e:	881b      	ldrh	r3, [r3, #0]
 8000f10:	fb00 f303 	mul.w	r3, r0, r3
 8000f14:	4413      	add	r3, r2
 8000f16:	440b      	add	r3, r1
 8000f18:	461a      	mov	r2, r3
 8000f1a:	4b28      	ldr	r3, [pc, #160]	; (8000fbc <PID+0x11c>)
 8000f1c:	601a      	str	r2, [r3, #0]
                         PWMB =(Velo2 -((Kp*propo)+(deriv*Kd)+(integral*Ki)));
 8000f1e:	4b28      	ldr	r3, [pc, #160]	; (8000fc0 <PID+0x120>)
 8000f20:	881b      	ldrh	r3, [r3, #0]
 8000f22:	4619      	mov	r1, r3
 8000f24:	4b22      	ldr	r3, [pc, #136]	; (8000fb0 <PID+0x110>)
 8000f26:	881b      	ldrh	r3, [r3, #0]
 8000f28:	461a      	mov	r2, r3
 8000f2a:	4b1c      	ldr	r3, [pc, #112]	; (8000f9c <PID+0xfc>)
 8000f2c:	881b      	ldrh	r3, [r3, #0]
 8000f2e:	fb03 f202 	mul.w	r2, r3, r2
 8000f32:	4b1c      	ldr	r3, [pc, #112]	; (8000fa4 <PID+0x104>)
 8000f34:	881b      	ldrh	r3, [r3, #0]
 8000f36:	4618      	mov	r0, r3
 8000f38:	4b1e      	ldr	r3, [pc, #120]	; (8000fb4 <PID+0x114>)
 8000f3a:	881b      	ldrh	r3, [r3, #0]
 8000f3c:	fb00 f303 	mul.w	r3, r0, r3
 8000f40:	441a      	add	r2, r3
 8000f42:	4b19      	ldr	r3, [pc, #100]	; (8000fa8 <PID+0x108>)
 8000f44:	881b      	ldrh	r3, [r3, #0]
 8000f46:	4618      	mov	r0, r3
 8000f48:	4b1b      	ldr	r3, [pc, #108]	; (8000fb8 <PID+0x118>)
 8000f4a:	881b      	ldrh	r3, [r3, #0]
 8000f4c:	fb00 f303 	mul.w	r3, r0, r3
 8000f50:	4413      	add	r3, r2
 8000f52:	1acb      	subs	r3, r1, r3
 8000f54:	461a      	mov	r2, r3
 8000f56:	4b1b      	ldr	r3, [pc, #108]	; (8000fc4 <PID+0x124>)
 8000f58:	601a      	str	r2, [r3, #0]

                         if(PWMA>velomax){
 8000f5a:	4b1b      	ldr	r3, [pc, #108]	; (8000fc8 <PID+0x128>)
 8000f5c:	881b      	ldrh	r3, [r3, #0]
 8000f5e:	461a      	mov	r2, r3
 8000f60:	4b16      	ldr	r3, [pc, #88]	; (8000fbc <PID+0x11c>)
 8000f62:	681b      	ldr	r3, [r3, #0]
 8000f64:	429a      	cmp	r2, r3
 8000f66:	d204      	bcs.n	8000f72 <PID+0xd2>
                        	 PWMA=velomax;
 8000f68:	4b17      	ldr	r3, [pc, #92]	; (8000fc8 <PID+0x128>)
 8000f6a:	881b      	ldrh	r3, [r3, #0]
 8000f6c:	461a      	mov	r2, r3
 8000f6e:	4b13      	ldr	r3, [pc, #76]	; (8000fbc <PID+0x11c>)
 8000f70:	601a      	str	r2, [r3, #0]
                         }
                         if(PWMB>velomax){
 8000f72:	4b15      	ldr	r3, [pc, #84]	; (8000fc8 <PID+0x128>)
 8000f74:	881b      	ldrh	r3, [r3, #0]
 8000f76:	461a      	mov	r2, r3
 8000f78:	4b12      	ldr	r3, [pc, #72]	; (8000fc4 <PID+0x124>)
 8000f7a:	681b      	ldr	r3, [r3, #0]
 8000f7c:	429a      	cmp	r2, r3
 8000f7e:	d204      	bcs.n	8000f8a <PID+0xea>
                        	 PWMB=velomax;
 8000f80:	4b11      	ldr	r3, [pc, #68]	; (8000fc8 <PID+0x128>)
 8000f82:	881b      	ldrh	r3, [r3, #0]
 8000f84:	461a      	mov	r2, r3
 8000f86:	4b0f      	ldr	r3, [pc, #60]	; (8000fc4 <PID+0x124>)
 8000f88:	601a      	str	r2, [r3, #0]
                         }

}
 8000f8a:	bf00      	nop
 8000f8c:	46bd      	mov	sp, r7
 8000f8e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000f92:	4770      	bx	lr
 8000f94:	2000046c 	.word	0x2000046c
 8000f98:	20000488 	.word	0x20000488
 8000f9c:	2000048e 	.word	0x2000048e
 8000fa0:	20000494 	.word	0x20000494
 8000fa4:	20000490 	.word	0x20000490
 8000fa8:	20000492 	.word	0x20000492
 8000fac:	20000028 	.word	0x20000028
 8000fb0:	20000024 	.word	0x20000024
 8000fb4:	20000026 	.word	0x20000026
 8000fb8:	2000048c 	.word	0x2000048c
 8000fbc:	20000464 	.word	0x20000464
 8000fc0:	2000002a 	.word	0x2000002a
 8000fc4:	20000468 	.word	0x20000468
 8000fc8:	2000002c 	.word	0x2000002c

08000fcc <setPWM>:
void setPWM()
{
 8000fcc:	b480      	push	{r7}
 8000fce:	af00      	add	r7, sp, #0

	TIM2->CCR2= PWMA;
 8000fd0:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8000fd4:	4b05      	ldr	r3, [pc, #20]	; (8000fec <setPWM+0x20>)
 8000fd6:	681b      	ldr	r3, [r3, #0]
 8000fd8:	6393      	str	r3, [r2, #56]	; 0x38
	TIM1->CCR1 = PWMB;
 8000fda:	4a05      	ldr	r2, [pc, #20]	; (8000ff0 <setPWM+0x24>)
 8000fdc:	4b05      	ldr	r3, [pc, #20]	; (8000ff4 <setPWM+0x28>)
 8000fde:	681b      	ldr	r3, [r3, #0]
 8000fe0:	6353      	str	r3, [r2, #52]	; 0x34

}
 8000fe2:	bf00      	nop
 8000fe4:	46bd      	mov	sp, r7
 8000fe6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000fea:	4770      	bx	lr
 8000fec:	20000464 	.word	0x20000464
 8000ff0:	40010000 	.word	0x40010000
 8000ff4:	20000468 	.word	0x20000468

08000ff8 <ligarMotorA>:

void ligarMotorA() // Motor A-> Esquerda
{
 8000ff8:	b580      	push	{r7, lr}
 8000ffa:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(STBY_GPIO_Port,STBY_Pin, GPIO_PIN_SET);
 8000ffc:	2201      	movs	r2, #1
 8000ffe:	f44f 6100 	mov.w	r1, #2048	; 0x800
 8001002:	4808      	ldr	r0, [pc, #32]	; (8001024 <ligarMotorA+0x2c>)
 8001004:	f001 fb76 	bl	80026f4 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(AI1_GPIO_Port,AI1_Pin, GPIO_PIN_SET);
 8001008:	2201      	movs	r2, #1
 800100a:	f44f 6180 	mov.w	r1, #1024	; 0x400
 800100e:	4805      	ldr	r0, [pc, #20]	; (8001024 <ligarMotorA+0x2c>)
 8001010:	f001 fb70 	bl	80026f4 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(AI2_GPIO_Port,AI2_Pin, GPIO_PIN_RESET);
 8001014:	2200      	movs	r2, #0
 8001016:	f44f 7100 	mov.w	r1, #512	; 0x200
 800101a:	4802      	ldr	r0, [pc, #8]	; (8001024 <ligarMotorA+0x2c>)
 800101c:	f001 fb6a 	bl	80026f4 <HAL_GPIO_WritePin>
}
 8001020:	bf00      	nop
 8001022:	bd80      	pop	{r7, pc}
 8001024:	40020000 	.word	0x40020000

08001028 <ligarMotorB>:

void ligarMotorB() // Motor B-> Direita
{
 8001028:	b580      	push	{r7, lr}
 800102a:	af00      	add	r7, sp, #0

	HAL_GPIO_WritePin(BI1_GPIO_Port,BI1_Pin, GPIO_PIN_SET);
 800102c:	2201      	movs	r2, #1
 800102e:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8001032:	4805      	ldr	r0, [pc, #20]	; (8001048 <ligarMotorB+0x20>)
 8001034:	f001 fb5e 	bl	80026f4 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(BI2_GPIO_Port,BI2_Pin, GPIO_PIN_RESET);
 8001038:	2200      	movs	r2, #0
 800103a:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 800103e:	4802      	ldr	r0, [pc, #8]	; (8001048 <ligarMotorB+0x20>)
 8001040:	f001 fb58 	bl	80026f4 <HAL_GPIO_WritePin>
}
 8001044:	bf00      	nop
 8001046:	bd80      	pop	{r7, pc}
 8001048:	40020000 	.word	0x40020000

0800104c <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 800104c:	b580      	push	{r7, lr}
 800104e:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8001050:	f000 fc66 	bl	8001920 <HAL_Init>

  /* USER CODE BEGIN Init */
  LCD_setRST(RST_GPIO_Port, RST_Pin);
 8001054:	2104      	movs	r1, #4
 8001056:	483d      	ldr	r0, [pc, #244]	; (800114c <main+0x100>)
 8001058:	f7ff fa90 	bl	800057c <LCD_setRST>
  LCD_setCE(CE_GPIO_Port, CE_Pin);
 800105c:	2102      	movs	r1, #2
 800105e:	483b      	ldr	r0, [pc, #236]	; (800114c <main+0x100>)
 8001060:	f7ff faa0 	bl	80005a4 <LCD_setCE>
  LCD_setDC(DC_GPIO_Port, DC_Pin);
 8001064:	2101      	movs	r1, #1
 8001066:	4839      	ldr	r0, [pc, #228]	; (800114c <main+0x100>)
 8001068:	f7ff fab0 	bl	80005cc <LCD_setDC>
  LCD_setDIN(DIN_GPIO_Port, DIN_Pin);
 800106c:	2180      	movs	r1, #128	; 0x80
 800106e:	4838      	ldr	r0, [pc, #224]	; (8001150 <main+0x104>)
 8001070:	f7ff fac0 	bl	80005f4 <LCD_setDIN>
  LCD_setCLK(CLK_GPIO_Port, CLK_Pin);
 8001074:	2120      	movs	r1, #32
 8001076:	4836      	ldr	r0, [pc, #216]	; (8001150 <main+0x104>)
 8001078:	f7ff fad0 	bl	800061c <LCD_setCLK>

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 800107c:	f000 f880 	bl	8001180 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8001080:	f000 fa0a 	bl	8001498 <MX_GPIO_Init>
  MX_ADC1_Init();
 8001084:	f000 f8da 	bl	800123c <MX_ADC1_Init>
  MX_TIM1_Init();
 8001088:	f000 f92a 	bl	80012e0 <MX_TIM1_Init>
  MX_TIM2_Init();
 800108c:	f000 f9ac 	bl	80013e8 <MX_TIM2_Init>
  /* USER CODE BEGIN 2 */
  LCD_init();
 8001090:	f7ff fb5c 	bl	800074c <LCD_init>

 // HAL_ADC_Start_DMA(&hadc1, &readValue, 1);
  HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_2);
 8001094:	2104      	movs	r1, #4
 8001096:	482f      	ldr	r0, [pc, #188]	; (8001154 <main+0x108>)
 8001098:	f001 ffd2 	bl	8003040 <HAL_TIM_PWM_Start>
  HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_1);
 800109c:	2100      	movs	r1, #0
 800109e:	482e      	ldr	r0, [pc, #184]	; (8001158 <main+0x10c>)
 80010a0:	f001 ffce 	bl	8003040 <HAL_TIM_PWM_Start>
  HAL_GPIO_WritePin(EN_GPIO_Port,EN_Pin, GPIO_PIN_RESET); // EN do MUX como 0
 80010a4:	2200      	movs	r2, #0
 80010a6:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 80010aa:	482c      	ldr	r0, [pc, #176]	; (800115c <main+0x110>)
 80010ac:	f001 fb22 	bl	80026f4 <HAL_GPIO_WritePin>
  while (1)
  {
    /* USER CODE END WHILE */

    /* USER CODE BEGIN 3 */
	  switch(mode)
 80010b0:	4b2b      	ldr	r3, [pc, #172]	; (8001160 <main+0x114>)
 80010b2:	781b      	ldrb	r3, [r3, #0]
 80010b4:	2b01      	cmp	r3, #1
 80010b6:	d002      	beq.n	80010be <main+0x72>
 80010b8:	2b02      	cmp	r3, #2
 80010ba:	d02c      	beq.n	8001116 <main+0xca>
 80010bc:	e7f8      	b.n	80010b0 <main+0x64>
	  {
	  	 case 1:

	  		LCD_print("Calibrar Preto", 0, 0);
 80010be:	2200      	movs	r2, #0
 80010c0:	2100      	movs	r1, #0
 80010c2:	4828      	ldr	r0, [pc, #160]	; (8001164 <main+0x118>)
 80010c4:	f7ff fbba 	bl	800083c <LCD_print>
	  		HAL_Delay(5000);
 80010c8:	f241 3088 	movw	r0, #5000	; 0x1388
 80010cc:	f000 fc9a 	bl	8001a04 <HAL_Delay>
	  		calibrarPreto();
 80010d0:	f7ff fcea 	bl	8000aa8 <calibrarPreto>
	  		LCD_print("Calibrar Branco", 0, 0);
 80010d4:	2200      	movs	r2, #0
 80010d6:	2100      	movs	r1, #0
 80010d8:	4823      	ldr	r0, [pc, #140]	; (8001168 <main+0x11c>)
 80010da:	f7ff fbaf 	bl	800083c <LCD_print>
	  		HAL_Delay(5000);
 80010de:	f241 3088 	movw	r0, #5000	; 0x1388
 80010e2:	f000 fc8f 	bl	8001a04 <HAL_Delay>
	  		calibrarBranco();
 80010e6:	f7ff fc77 	bl	80009d8 <calibrarBranco>
	  		calcularMediaSensores();
 80010ea:	f7ff fd45 	bl	8000b78 <calcularMediaSensores>
  		    ligarMotorA();
 80010ee:	f7ff ff83 	bl	8000ff8 <ligarMotorA>
  		    ligarMotorB();
 80010f2:	f7ff ff99 	bl	8001028 <ligarMotorB>
	  		mode++;
 80010f6:	4b1a      	ldr	r3, [pc, #104]	; (8001160 <main+0x114>)
 80010f8:	781b      	ldrb	r3, [r3, #0]
 80010fa:	3301      	adds	r3, #1
 80010fc:	b2da      	uxtb	r2, r3
 80010fe:	4b18      	ldr	r3, [pc, #96]	; (8001160 <main+0x114>)
 8001100:	701a      	strb	r2, [r3, #0]
	  		LCD_print("Calibrado", 0, 0);
 8001102:	2200      	movs	r2, #0
 8001104:	2100      	movs	r1, #0
 8001106:	4819      	ldr	r0, [pc, #100]	; (800116c <main+0x120>)
 8001108:	f7ff fb98 	bl	800083c <LCD_print>
  			HAL_Delay(3000);
 800110c:	f640 30b8 	movw	r0, #3000	; 0xbb8
 8001110:	f000 fc78 	bl	8001a04 <HAL_Delay>

	  	break;
 8001114:	e019      	b.n	800114a <main+0xfe>

	  	case 2:

  				LCD_print("Anda fi", 3, 0);
 8001116:	2200      	movs	r2, #0
 8001118:	2103      	movs	r1, #3
 800111a:	4815      	ldr	r0, [pc, #84]	; (8001170 <main+0x124>)
 800111c:	f7ff fb8e 	bl	800083c <LCD_print>
  				sprintf(Buffer, "%d", error);
 8001120:	4b14      	ldr	r3, [pc, #80]	; (8001174 <main+0x128>)
 8001122:	681b      	ldr	r3, [r3, #0]
 8001124:	461a      	mov	r2, r3
 8001126:	4914      	ldr	r1, [pc, #80]	; (8001178 <main+0x12c>)
 8001128:	4814      	ldr	r0, [pc, #80]	; (800117c <main+0x130>)
 800112a:	f002 fbed 	bl	8003908 <siprintf>
  				LCD_print(Buffer, 1, 8);
 800112e:	2208      	movs	r2, #8
 8001130:	2101      	movs	r1, #1
 8001132:	4812      	ldr	r0, [pc, #72]	; (800117c <main+0x130>)
 8001134:	f7ff fb82 	bl	800083c <LCD_print>
	  			aplicarCalibracao();
 8001138:	f7ff fd4a 	bl	8000bd0 <aplicarCalibracao>
	  		    leituraLinha();
 800113c:	f7ff fe6c 	bl	8000e18 <leituraLinha>
	  		    PID();
 8001140:	f7ff feae 	bl	8000ea0 <PID>
	  		    setPWM();
 8001144:	f7ff ff42 	bl	8000fcc <setPWM>





	  	break;
 8001148:	bf00      	nop
	  switch(mode)
 800114a:	e7b1      	b.n	80010b0 <main+0x64>
 800114c:	40020400 	.word	0x40020400
 8001150:	40020000 	.word	0x40020000
 8001154:	2000035c 	.word	0x2000035c
 8001158:	20000314 	.word	0x20000314
 800115c:	40020800 	.word	0x40020800
 8001160:	20000000 	.word	0x20000000
 8001164:	08004270 	.word	0x08004270
 8001168:	08004280 	.word	0x08004280
 800116c:	08004290 	.word	0x08004290
 8001170:	0800429c 	.word	0x0800429c
 8001174:	20000488 	.word	0x20000488
 8001178:	080042a4 	.word	0x080042a4
 800117c:	20000474 	.word	0x20000474

08001180 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8001180:	b580      	push	{r7, lr}
 8001182:	b094      	sub	sp, #80	; 0x50
 8001184:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8001186:	f107 0320 	add.w	r3, r7, #32
 800118a:	2230      	movs	r2, #48	; 0x30
 800118c:	2100      	movs	r1, #0
 800118e:	4618      	mov	r0, r3
 8001190:	f002 fbda 	bl	8003948 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001194:	f107 030c 	add.w	r3, r7, #12
 8001198:	2200      	movs	r2, #0
 800119a:	601a      	str	r2, [r3, #0]
 800119c:	605a      	str	r2, [r3, #4]
 800119e:	609a      	str	r2, [r3, #8]
 80011a0:	60da      	str	r2, [r3, #12]
 80011a2:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 80011a4:	2300      	movs	r3, #0
 80011a6:	60bb      	str	r3, [r7, #8]
 80011a8:	4b22      	ldr	r3, [pc, #136]	; (8001234 <SystemClock_Config+0xb4>)
 80011aa:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80011ac:	4a21      	ldr	r2, [pc, #132]	; (8001234 <SystemClock_Config+0xb4>)
 80011ae:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80011b2:	6413      	str	r3, [r2, #64]	; 0x40
 80011b4:	4b1f      	ldr	r3, [pc, #124]	; (8001234 <SystemClock_Config+0xb4>)
 80011b6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80011b8:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80011bc:	60bb      	str	r3, [r7, #8]
 80011be:	68bb      	ldr	r3, [r7, #8]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 80011c0:	2300      	movs	r3, #0
 80011c2:	607b      	str	r3, [r7, #4]
 80011c4:	4b1c      	ldr	r3, [pc, #112]	; (8001238 <SystemClock_Config+0xb8>)
 80011c6:	681b      	ldr	r3, [r3, #0]
 80011c8:	4a1b      	ldr	r2, [pc, #108]	; (8001238 <SystemClock_Config+0xb8>)
 80011ca:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 80011ce:	6013      	str	r3, [r2, #0]
 80011d0:	4b19      	ldr	r3, [pc, #100]	; (8001238 <SystemClock_Config+0xb8>)
 80011d2:	681b      	ldr	r3, [r3, #0]
 80011d4:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 80011d8:	607b      	str	r3, [r7, #4]
 80011da:	687b      	ldr	r3, [r7, #4]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 80011dc:	2302      	movs	r3, #2
 80011de:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 80011e0:	2301      	movs	r3, #1
 80011e2:	62fb      	str	r3, [r7, #44]	; 0x2c
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 80011e4:	2310      	movs	r3, #16
 80011e6:	633b      	str	r3, [r7, #48]	; 0x30
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 80011e8:	2300      	movs	r3, #0
 80011ea:	63bb      	str	r3, [r7, #56]	; 0x38
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80011ec:	f107 0320 	add.w	r3, r7, #32
 80011f0:	4618      	mov	r0, r3
 80011f2:	f001 fab1 	bl	8002758 <HAL_RCC_OscConfig>
 80011f6:	4603      	mov	r3, r0
 80011f8:	2b00      	cmp	r3, #0
 80011fa:	d001      	beq.n	8001200 <SystemClock_Config+0x80>
  {
    Error_Handler();
 80011fc:	f000 f9e0 	bl	80015c0 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001200:	230f      	movs	r3, #15
 8001202:	60fb      	str	r3, [r7, #12]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 8001204:	2300      	movs	r3, #0
 8001206:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8001208:	2300      	movs	r3, #0
 800120a:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 800120c:	2300      	movs	r3, #0
 800120e:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8001210:	2300      	movs	r3, #0
 8001212:	61fb      	str	r3, [r7, #28]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 8001214:	f107 030c 	add.w	r3, r7, #12
 8001218:	2100      	movs	r1, #0
 800121a:	4618      	mov	r0, r3
 800121c:	f001 fd14 	bl	8002c48 <HAL_RCC_ClockConfig>
 8001220:	4603      	mov	r3, r0
 8001222:	2b00      	cmp	r3, #0
 8001224:	d001      	beq.n	800122a <SystemClock_Config+0xaa>
  {
    Error_Handler();
 8001226:	f000 f9cb 	bl	80015c0 <Error_Handler>
  }
}
 800122a:	bf00      	nop
 800122c:	3750      	adds	r7, #80	; 0x50
 800122e:	46bd      	mov	sp, r7
 8001230:	bd80      	pop	{r7, pc}
 8001232:	bf00      	nop
 8001234:	40023800 	.word	0x40023800
 8001238:	40007000 	.word	0x40007000

0800123c <MX_ADC1_Init>:
  * @brief ADC1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_ADC1_Init(void)
{
 800123c:	b580      	push	{r7, lr}
 800123e:	b084      	sub	sp, #16
 8001240:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC1_Init 0 */

  /* USER CODE END ADC1_Init 0 */

  ADC_ChannelConfTypeDef sConfig = {0};
 8001242:	463b      	mov	r3, r7
 8001244:	2200      	movs	r2, #0
 8001246:	601a      	str	r2, [r3, #0]
 8001248:	605a      	str	r2, [r3, #4]
 800124a:	609a      	str	r2, [r3, #8]
 800124c:	60da      	str	r2, [r3, #12]

  /* USER CODE END ADC1_Init 1 */

  /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of conversion)
  */
  hadc1.Instance = ADC1;
 800124e:	4b21      	ldr	r3, [pc, #132]	; (80012d4 <MX_ADC1_Init+0x98>)
 8001250:	4a21      	ldr	r2, [pc, #132]	; (80012d8 <MX_ADC1_Init+0x9c>)
 8001252:	601a      	str	r2, [r3, #0]
  hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV2;
 8001254:	4b1f      	ldr	r3, [pc, #124]	; (80012d4 <MX_ADC1_Init+0x98>)
 8001256:	2200      	movs	r2, #0
 8001258:	605a      	str	r2, [r3, #4]
  hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 800125a:	4b1e      	ldr	r3, [pc, #120]	; (80012d4 <MX_ADC1_Init+0x98>)
 800125c:	2200      	movs	r2, #0
 800125e:	609a      	str	r2, [r3, #8]
  hadc1.Init.ScanConvMode = DISABLE;
 8001260:	4b1c      	ldr	r3, [pc, #112]	; (80012d4 <MX_ADC1_Init+0x98>)
 8001262:	2200      	movs	r2, #0
 8001264:	611a      	str	r2, [r3, #16]
  hadc1.Init.ContinuousConvMode = DISABLE;
 8001266:	4b1b      	ldr	r3, [pc, #108]	; (80012d4 <MX_ADC1_Init+0x98>)
 8001268:	2200      	movs	r2, #0
 800126a:	761a      	strb	r2, [r3, #24]
  hadc1.Init.DiscontinuousConvMode = DISABLE;
 800126c:	4b19      	ldr	r3, [pc, #100]	; (80012d4 <MX_ADC1_Init+0x98>)
 800126e:	2200      	movs	r2, #0
 8001270:	f883 2020 	strb.w	r2, [r3, #32]
  hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 8001274:	4b17      	ldr	r3, [pc, #92]	; (80012d4 <MX_ADC1_Init+0x98>)
 8001276:	2200      	movs	r2, #0
 8001278:	62da      	str	r2, [r3, #44]	; 0x2c
  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 800127a:	4b16      	ldr	r3, [pc, #88]	; (80012d4 <MX_ADC1_Init+0x98>)
 800127c:	4a17      	ldr	r2, [pc, #92]	; (80012dc <MX_ADC1_Init+0xa0>)
 800127e:	629a      	str	r2, [r3, #40]	; 0x28
  hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 8001280:	4b14      	ldr	r3, [pc, #80]	; (80012d4 <MX_ADC1_Init+0x98>)
 8001282:	2200      	movs	r2, #0
 8001284:	60da      	str	r2, [r3, #12]
  hadc1.Init.NbrOfConversion = 1;
 8001286:	4b13      	ldr	r3, [pc, #76]	; (80012d4 <MX_ADC1_Init+0x98>)
 8001288:	2201      	movs	r2, #1
 800128a:	61da      	str	r2, [r3, #28]
  hadc1.Init.DMAContinuousRequests = DISABLE;
 800128c:	4b11      	ldr	r3, [pc, #68]	; (80012d4 <MX_ADC1_Init+0x98>)
 800128e:	2200      	movs	r2, #0
 8001290:	f883 2030 	strb.w	r2, [r3, #48]	; 0x30
  hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 8001294:	4b0f      	ldr	r3, [pc, #60]	; (80012d4 <MX_ADC1_Init+0x98>)
 8001296:	2201      	movs	r2, #1
 8001298:	615a      	str	r2, [r3, #20]
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 800129a:	480e      	ldr	r0, [pc, #56]	; (80012d4 <MX_ADC1_Init+0x98>)
 800129c:	f000 fbd6 	bl	8001a4c <HAL_ADC_Init>
 80012a0:	4603      	mov	r3, r0
 80012a2:	2b00      	cmp	r3, #0
 80012a4:	d001      	beq.n	80012aa <MX_ADC1_Init+0x6e>
  {
    Error_Handler();
 80012a6:	f000 f98b 	bl	80015c0 <Error_Handler>
  }

  /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and its sample time.
  */
  sConfig.Channel = ADC_CHANNEL_3;
 80012aa:	2303      	movs	r3, #3
 80012ac:	603b      	str	r3, [r7, #0]
  sConfig.Rank = 1;
 80012ae:	2301      	movs	r3, #1
 80012b0:	607b      	str	r3, [r7, #4]
  sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 80012b2:	2300      	movs	r3, #0
 80012b4:	60bb      	str	r3, [r7, #8]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 80012b6:	463b      	mov	r3, r7
 80012b8:	4619      	mov	r1, r3
 80012ba:	4806      	ldr	r0, [pc, #24]	; (80012d4 <MX_ADC1_Init+0x98>)
 80012bc:	f000 fd56 	bl	8001d6c <HAL_ADC_ConfigChannel>
 80012c0:	4603      	mov	r3, r0
 80012c2:	2b00      	cmp	r3, #0
 80012c4:	d001      	beq.n	80012ca <MX_ADC1_Init+0x8e>
  {
    Error_Handler();
 80012c6:	f000 f97b 	bl	80015c0 <Error_Handler>
  }
  /* USER CODE BEGIN ADC1_Init 2 */

  /* USER CODE END ADC1_Init 2 */

}
 80012ca:	bf00      	nop
 80012cc:	3710      	adds	r7, #16
 80012ce:	46bd      	mov	sp, r7
 80012d0:	bd80      	pop	{r7, pc}
 80012d2:	bf00      	nop
 80012d4:	200002cc 	.word	0x200002cc
 80012d8:	40012000 	.word	0x40012000
 80012dc:	0f000001 	.word	0x0f000001

080012e0 <MX_TIM1_Init>:
  * @brief TIM1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM1_Init(void)
{
 80012e0:	b580      	push	{r7, lr}
 80012e2:	b092      	sub	sp, #72	; 0x48
 80012e4:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM1_Init 0 */

  /* USER CODE END TIM1_Init 0 */

  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80012e6:	f107 0340 	add.w	r3, r7, #64	; 0x40
 80012ea:	2200      	movs	r2, #0
 80012ec:	601a      	str	r2, [r3, #0]
 80012ee:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 80012f0:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80012f4:	2200      	movs	r2, #0
 80012f6:	601a      	str	r2, [r3, #0]
 80012f8:	605a      	str	r2, [r3, #4]
 80012fa:	609a      	str	r2, [r3, #8]
 80012fc:	60da      	str	r2, [r3, #12]
 80012fe:	611a      	str	r2, [r3, #16]
 8001300:	615a      	str	r2, [r3, #20]
 8001302:	619a      	str	r2, [r3, #24]
  TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 8001304:	1d3b      	adds	r3, r7, #4
 8001306:	2220      	movs	r2, #32
 8001308:	2100      	movs	r1, #0
 800130a:	4618      	mov	r0, r3
 800130c:	f002 fb1c 	bl	8003948 <memset>

  /* USER CODE BEGIN TIM1_Init 1 */

  /* USER CODE END TIM1_Init 1 */
  htim1.Instance = TIM1;
 8001310:	4b33      	ldr	r3, [pc, #204]	; (80013e0 <MX_TIM1_Init+0x100>)
 8001312:	4a34      	ldr	r2, [pc, #208]	; (80013e4 <MX_TIM1_Init+0x104>)
 8001314:	601a      	str	r2, [r3, #0]
  htim1.Init.Prescaler = 0;
 8001316:	4b32      	ldr	r3, [pc, #200]	; (80013e0 <MX_TIM1_Init+0x100>)
 8001318:	2200      	movs	r2, #0
 800131a:	605a      	str	r2, [r3, #4]
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 800131c:	4b30      	ldr	r3, [pc, #192]	; (80013e0 <MX_TIM1_Init+0x100>)
 800131e:	2200      	movs	r2, #0
 8001320:	609a      	str	r2, [r3, #8]
  htim1.Init.Period = 4570;
 8001322:	4b2f      	ldr	r3, [pc, #188]	; (80013e0 <MX_TIM1_Init+0x100>)
 8001324:	f241 12da 	movw	r2, #4570	; 0x11da
 8001328:	60da      	str	r2, [r3, #12]
  htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800132a:	4b2d      	ldr	r3, [pc, #180]	; (80013e0 <MX_TIM1_Init+0x100>)
 800132c:	2200      	movs	r2, #0
 800132e:	611a      	str	r2, [r3, #16]
  htim1.Init.RepetitionCounter = 0;
 8001330:	4b2b      	ldr	r3, [pc, #172]	; (80013e0 <MX_TIM1_Init+0x100>)
 8001332:	2200      	movs	r2, #0
 8001334:	615a      	str	r2, [r3, #20]
  htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001336:	4b2a      	ldr	r3, [pc, #168]	; (80013e0 <MX_TIM1_Init+0x100>)
 8001338:	2200      	movs	r2, #0
 800133a:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
 800133c:	4828      	ldr	r0, [pc, #160]	; (80013e0 <MX_TIM1_Init+0x100>)
 800133e:	f001 fe2f 	bl	8002fa0 <HAL_TIM_PWM_Init>
 8001342:	4603      	mov	r3, r0
 8001344:	2b00      	cmp	r3, #0
 8001346:	d001      	beq.n	800134c <MX_TIM1_Init+0x6c>
  {
    Error_Handler();
 8001348:	f000 f93a 	bl	80015c0 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 800134c:	2300      	movs	r3, #0
 800134e:	643b      	str	r3, [r7, #64]	; 0x40
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001350:	2300      	movs	r3, #0
 8001352:	647b      	str	r3, [r7, #68]	; 0x44
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 8001354:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8001358:	4619      	mov	r1, r3
 800135a:	4821      	ldr	r0, [pc, #132]	; (80013e0 <MX_TIM1_Init+0x100>)
 800135c:	f002 fa14 	bl	8003788 <HAL_TIMEx_MasterConfigSynchronization>
 8001360:	4603      	mov	r3, r0
 8001362:	2b00      	cmp	r3, #0
 8001364:	d001      	beq.n	800136a <MX_TIM1_Init+0x8a>
  {
    Error_Handler();
 8001366:	f000 f92b 	bl	80015c0 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 800136a:	2360      	movs	r3, #96	; 0x60
 800136c:	627b      	str	r3, [r7, #36]	; 0x24
  sConfigOC.Pulse = 0;
 800136e:	2300      	movs	r3, #0
 8001370:	62bb      	str	r3, [r7, #40]	; 0x28
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8001372:	2300      	movs	r3, #0
 8001374:	62fb      	str	r3, [r7, #44]	; 0x2c
  sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 8001376:	2300      	movs	r3, #0
 8001378:	633b      	str	r3, [r7, #48]	; 0x30
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 800137a:	2300      	movs	r3, #0
 800137c:	637b      	str	r3, [r7, #52]	; 0x34
  sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 800137e:	2300      	movs	r3, #0
 8001380:	63bb      	str	r3, [r7, #56]	; 0x38
  sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 8001382:	2300      	movs	r3, #0
 8001384:	63fb      	str	r3, [r7, #60]	; 0x3c
  if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8001386:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800138a:	2200      	movs	r2, #0
 800138c:	4619      	mov	r1, r3
 800138e:	4814      	ldr	r0, [pc, #80]	; (80013e0 <MX_TIM1_Init+0x100>)
 8001390:	f001 ff06 	bl	80031a0 <HAL_TIM_PWM_ConfigChannel>
 8001394:	4603      	mov	r3, r0
 8001396:	2b00      	cmp	r3, #0
 8001398:	d001      	beq.n	800139e <MX_TIM1_Init+0xbe>
  {
    Error_Handler();
 800139a:	f000 f911 	bl	80015c0 <Error_Handler>
  }
  sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 800139e:	2300      	movs	r3, #0
 80013a0:	607b      	str	r3, [r7, #4]
  sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 80013a2:	2300      	movs	r3, #0
 80013a4:	60bb      	str	r3, [r7, #8]
  sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 80013a6:	2300      	movs	r3, #0
 80013a8:	60fb      	str	r3, [r7, #12]
  sBreakDeadTimeConfig.DeadTime = 0;
 80013aa:	2300      	movs	r3, #0
 80013ac:	613b      	str	r3, [r7, #16]
  sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 80013ae:	2300      	movs	r3, #0
 80013b0:	617b      	str	r3, [r7, #20]
  sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 80013b2:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 80013b6:	61bb      	str	r3, [r7, #24]
  sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 80013b8:	2300      	movs	r3, #0
 80013ba:	623b      	str	r3, [r7, #32]
  if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 80013bc:	1d3b      	adds	r3, r7, #4
 80013be:	4619      	mov	r1, r3
 80013c0:	4807      	ldr	r0, [pc, #28]	; (80013e0 <MX_TIM1_Init+0x100>)
 80013c2:	f002 fa4f 	bl	8003864 <HAL_TIMEx_ConfigBreakDeadTime>
 80013c6:	4603      	mov	r3, r0
 80013c8:	2b00      	cmp	r3, #0
 80013ca:	d001      	beq.n	80013d0 <MX_TIM1_Init+0xf0>
  {
    Error_Handler();
 80013cc:	f000 f8f8 	bl	80015c0 <Error_Handler>
  }
  /* USER CODE BEGIN TIM1_Init 2 */

  /* USER CODE END TIM1_Init 2 */
  HAL_TIM_MspPostInit(&htim1);
 80013d0:	4803      	ldr	r0, [pc, #12]	; (80013e0 <MX_TIM1_Init+0x100>)
 80013d2:	f000 f99d 	bl	8001710 <HAL_TIM_MspPostInit>

}
 80013d6:	bf00      	nop
 80013d8:	3748      	adds	r7, #72	; 0x48
 80013da:	46bd      	mov	sp, r7
 80013dc:	bd80      	pop	{r7, pc}
 80013de:	bf00      	nop
 80013e0:	20000314 	.word	0x20000314
 80013e4:	40010000 	.word	0x40010000

080013e8 <MX_TIM2_Init>:
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM2_Init(void)
{
 80013e8:	b580      	push	{r7, lr}
 80013ea:	b08a      	sub	sp, #40	; 0x28
 80013ec:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80013ee:	f107 0320 	add.w	r3, r7, #32
 80013f2:	2200      	movs	r2, #0
 80013f4:	601a      	str	r2, [r3, #0]
 80013f6:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 80013f8:	1d3b      	adds	r3, r7, #4
 80013fa:	2200      	movs	r2, #0
 80013fc:	601a      	str	r2, [r3, #0]
 80013fe:	605a      	str	r2, [r3, #4]
 8001400:	609a      	str	r2, [r3, #8]
 8001402:	60da      	str	r2, [r3, #12]
 8001404:	611a      	str	r2, [r3, #16]
 8001406:	615a      	str	r2, [r3, #20]
 8001408:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 800140a:	4b22      	ldr	r3, [pc, #136]	; (8001494 <MX_TIM2_Init+0xac>)
 800140c:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8001410:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 0;
 8001412:	4b20      	ldr	r3, [pc, #128]	; (8001494 <MX_TIM2_Init+0xac>)
 8001414:	2200      	movs	r2, #0
 8001416:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001418:	4b1e      	ldr	r3, [pc, #120]	; (8001494 <MX_TIM2_Init+0xac>)
 800141a:	2200      	movs	r2, #0
 800141c:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 4570;
 800141e:	4b1d      	ldr	r3, [pc, #116]	; (8001494 <MX_TIM2_Init+0xac>)
 8001420:	f241 12da 	movw	r2, #4570	; 0x11da
 8001424:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001426:	4b1b      	ldr	r3, [pc, #108]	; (8001494 <MX_TIM2_Init+0xac>)
 8001428:	2200      	movs	r2, #0
 800142a:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 800142c:	4b19      	ldr	r3, [pc, #100]	; (8001494 <MX_TIM2_Init+0xac>)
 800142e:	2200      	movs	r2, #0
 8001430:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 8001432:	4818      	ldr	r0, [pc, #96]	; (8001494 <MX_TIM2_Init+0xac>)
 8001434:	f001 fdb4 	bl	8002fa0 <HAL_TIM_PWM_Init>
 8001438:	4603      	mov	r3, r0
 800143a:	2b00      	cmp	r3, #0
 800143c:	d001      	beq.n	8001442 <MX_TIM2_Init+0x5a>
  {
    Error_Handler();
 800143e:	f000 f8bf 	bl	80015c0 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8001442:	2300      	movs	r3, #0
 8001444:	623b      	str	r3, [r7, #32]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001446:	2300      	movs	r3, #0
 8001448:	627b      	str	r3, [r7, #36]	; 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 800144a:	f107 0320 	add.w	r3, r7, #32
 800144e:	4619      	mov	r1, r3
 8001450:	4810      	ldr	r0, [pc, #64]	; (8001494 <MX_TIM2_Init+0xac>)
 8001452:	f002 f999 	bl	8003788 <HAL_TIMEx_MasterConfigSynchronization>
 8001456:	4603      	mov	r3, r0
 8001458:	2b00      	cmp	r3, #0
 800145a:	d001      	beq.n	8001460 <MX_TIM2_Init+0x78>
  {
    Error_Handler();
 800145c:	f000 f8b0 	bl	80015c0 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8001460:	2360      	movs	r3, #96	; 0x60
 8001462:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 0;
 8001464:	2300      	movs	r3, #0
 8001466:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8001468:	2300      	movs	r3, #0
 800146a:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 800146c:	2300      	movs	r3, #0
 800146e:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 8001470:	1d3b      	adds	r3, r7, #4
 8001472:	2204      	movs	r2, #4
 8001474:	4619      	mov	r1, r3
 8001476:	4807      	ldr	r0, [pc, #28]	; (8001494 <MX_TIM2_Init+0xac>)
 8001478:	f001 fe92 	bl	80031a0 <HAL_TIM_PWM_ConfigChannel>
 800147c:	4603      	mov	r3, r0
 800147e:	2b00      	cmp	r3, #0
 8001480:	d001      	beq.n	8001486 <MX_TIM2_Init+0x9e>
  {
    Error_Handler();
 8001482:	f000 f89d 	bl	80015c0 <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */
  HAL_TIM_MspPostInit(&htim2);
 8001486:	4803      	ldr	r0, [pc, #12]	; (8001494 <MX_TIM2_Init+0xac>)
 8001488:	f000 f942 	bl	8001710 <HAL_TIM_MspPostInit>

}
 800148c:	bf00      	nop
 800148e:	3728      	adds	r7, #40	; 0x28
 8001490:	46bd      	mov	sp, r7
 8001492:	bd80      	pop	{r7, pc}
 8001494:	2000035c 	.word	0x2000035c

08001498 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8001498:	b580      	push	{r7, lr}
 800149a:	b088      	sub	sp, #32
 800149c:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800149e:	f107 030c 	add.w	r3, r7, #12
 80014a2:	2200      	movs	r2, #0
 80014a4:	601a      	str	r2, [r3, #0]
 80014a6:	605a      	str	r2, [r3, #4]
 80014a8:	609a      	str	r2, [r3, #8]
 80014aa:	60da      	str	r2, [r3, #12]
 80014ac:	611a      	str	r2, [r3, #16]
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 80014ae:	2300      	movs	r3, #0
 80014b0:	60bb      	str	r3, [r7, #8]
 80014b2:	4b3f      	ldr	r3, [pc, #252]	; (80015b0 <MX_GPIO_Init+0x118>)
 80014b4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80014b6:	4a3e      	ldr	r2, [pc, #248]	; (80015b0 <MX_GPIO_Init+0x118>)
 80014b8:	f043 0304 	orr.w	r3, r3, #4
 80014bc:	6313      	str	r3, [r2, #48]	; 0x30
 80014be:	4b3c      	ldr	r3, [pc, #240]	; (80015b0 <MX_GPIO_Init+0x118>)
 80014c0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80014c2:	f003 0304 	and.w	r3, r3, #4
 80014c6:	60bb      	str	r3, [r7, #8]
 80014c8:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80014ca:	2300      	movs	r3, #0
 80014cc:	607b      	str	r3, [r7, #4]
 80014ce:	4b38      	ldr	r3, [pc, #224]	; (80015b0 <MX_GPIO_Init+0x118>)
 80014d0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80014d2:	4a37      	ldr	r2, [pc, #220]	; (80015b0 <MX_GPIO_Init+0x118>)
 80014d4:	f043 0301 	orr.w	r3, r3, #1
 80014d8:	6313      	str	r3, [r2, #48]	; 0x30
 80014da:	4b35      	ldr	r3, [pc, #212]	; (80015b0 <MX_GPIO_Init+0x118>)
 80014dc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80014de:	f003 0301 	and.w	r3, r3, #1
 80014e2:	607b      	str	r3, [r7, #4]
 80014e4:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80014e6:	2300      	movs	r3, #0
 80014e8:	603b      	str	r3, [r7, #0]
 80014ea:	4b31      	ldr	r3, [pc, #196]	; (80015b0 <MX_GPIO_Init+0x118>)
 80014ec:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80014ee:	4a30      	ldr	r2, [pc, #192]	; (80015b0 <MX_GPIO_Init+0x118>)
 80014f0:	f043 0302 	orr.w	r3, r3, #2
 80014f4:	6313      	str	r3, [r2, #48]	; 0x30
 80014f6:	4b2e      	ldr	r3, [pc, #184]	; (80015b0 <MX_GPIO_Init+0x118>)
 80014f8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80014fa:	f003 0302 	and.w	r3, r3, #2
 80014fe:	603b      	str	r3, [r7, #0]
 8001500:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOC, EN_Pin|S0_Pin, GPIO_PIN_RESET);
 8001502:	2200      	movs	r2, #0
 8001504:	f44f 4140 	mov.w	r1, #49152	; 0xc000
 8001508:	482a      	ldr	r0, [pc, #168]	; (80015b4 <MX_GPIO_Init+0x11c>)
 800150a:	f001 f8f3 	bl	80026f4 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, S1_Pin|S2_Pin|S3_Pin|BL_Pin
 800150e:	2200      	movs	r2, #0
 8001510:	f649 61b7 	movw	r1, #40631	; 0x9eb7
 8001514:	4828      	ldr	r0, [pc, #160]	; (80015b8 <MX_GPIO_Init+0x120>)
 8001516:	f001 f8ed 	bl	80026f4 <HAL_GPIO_WritePin>
                          |CLK_Pin|DIN_Pin|AI2_Pin|AI1_Pin
                          |STBY_Pin|BI1_Pin|BI2_Pin, GPIO_PIN_RESET);

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, DC_Pin|CE_Pin|RST_Pin, GPIO_PIN_RESET);
 800151a:	2200      	movs	r2, #0
 800151c:	2107      	movs	r1, #7
 800151e:	4827      	ldr	r0, [pc, #156]	; (80015bc <MX_GPIO_Init+0x124>)
 8001520:	f001 f8e8 	bl	80026f4 <HAL_GPIO_WritePin>

  /*Configure GPIO pins : EN_Pin S0_Pin */
  GPIO_InitStruct.Pin = EN_Pin|S0_Pin;
 8001524:	f44f 4340 	mov.w	r3, #49152	; 0xc000
 8001528:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800152a:	2301      	movs	r3, #1
 800152c:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800152e:	2300      	movs	r3, #0
 8001530:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001532:	2300      	movs	r3, #0
 8001534:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001536:	f107 030c 	add.w	r3, r7, #12
 800153a:	4619      	mov	r1, r3
 800153c:	481d      	ldr	r0, [pc, #116]	; (80015b4 <MX_GPIO_Init+0x11c>)
 800153e:	f000 ff55 	bl	80023ec <HAL_GPIO_Init>

  /*Configure GPIO pins : S1_Pin S2_Pin S3_Pin BL_Pin
                           CLK_Pin DIN_Pin AI2_Pin AI1_Pin
                           STBY_Pin BI1_Pin BI2_Pin */
  GPIO_InitStruct.Pin = S1_Pin|S2_Pin|S3_Pin|BL_Pin
 8001542:	f649 63b7 	movw	r3, #40631	; 0x9eb7
 8001546:	60fb      	str	r3, [r7, #12]
                          |CLK_Pin|DIN_Pin|AI2_Pin|AI1_Pin
                          |STBY_Pin|BI1_Pin|BI2_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001548:	2301      	movs	r3, #1
 800154a:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800154c:	2300      	movs	r3, #0
 800154e:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001550:	2300      	movs	r3, #0
 8001552:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001554:	f107 030c 	add.w	r3, r7, #12
 8001558:	4619      	mov	r1, r3
 800155a:	4817      	ldr	r0, [pc, #92]	; (80015b8 <MX_GPIO_Init+0x120>)
 800155c:	f000 ff46 	bl	80023ec <HAL_GPIO_Init>

  /*Configure GPIO pins : DC_Pin CE_Pin RST_Pin */
  GPIO_InitStruct.Pin = DC_Pin|CE_Pin|RST_Pin;
 8001560:	2307      	movs	r3, #7
 8001562:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001564:	2301      	movs	r3, #1
 8001566:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001568:	2300      	movs	r3, #0
 800156a:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800156c:	2300      	movs	r3, #0
 800156e:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001570:	f107 030c 	add.w	r3, r7, #12
 8001574:	4619      	mov	r1, r3
 8001576:	4811      	ldr	r0, [pc, #68]	; (80015bc <MX_GPIO_Init+0x124>)
 8001578:	f000 ff38 	bl	80023ec <HAL_GPIO_Init>

  /*Configure GPIO pins : BOT2_Pin BOT1_Pin */
  GPIO_InitStruct.Pin = BOT2_Pin|BOT1_Pin;
 800157c:	f44f 7340 	mov.w	r3, #768	; 0x300
 8001580:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8001582:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
 8001586:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001588:	2300      	movs	r3, #0
 800158a:	617b      	str	r3, [r7, #20]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800158c:	f107 030c 	add.w	r3, r7, #12
 8001590:	4619      	mov	r1, r3
 8001592:	480a      	ldr	r0, [pc, #40]	; (80015bc <MX_GPIO_Init+0x124>)
 8001594:	f000 ff2a 	bl	80023ec <HAL_GPIO_Init>

  /* EXTI interrupt init*/
  HAL_NVIC_SetPriority(EXTI9_5_IRQn, 0, 0);
 8001598:	2200      	movs	r2, #0
 800159a:	2100      	movs	r1, #0
 800159c:	2017      	movs	r0, #23
 800159e:	f000 feee 	bl	800237e <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI9_5_IRQn);
 80015a2:	2017      	movs	r0, #23
 80015a4:	f000 ff07 	bl	80023b6 <HAL_NVIC_EnableIRQ>

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}
 80015a8:	bf00      	nop
 80015aa:	3720      	adds	r7, #32
 80015ac:	46bd      	mov	sp, r7
 80015ae:	bd80      	pop	{r7, pc}
 80015b0:	40023800 	.word	0x40023800
 80015b4:	40020800 	.word	0x40020800
 80015b8:	40020000 	.word	0x40020000
 80015bc:	40020400 	.word	0x40020400

080015c0 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 80015c0:	b480      	push	{r7}
 80015c2:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 80015c4:	b672      	cpsid	i
}
 80015c6:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 80015c8:	e7fe      	b.n	80015c8 <Error_Handler+0x8>
	...

080015cc <HAL_MspInit>:
void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);
                                        /**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 80015cc:	b480      	push	{r7}
 80015ce:	b083      	sub	sp, #12
 80015d0:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 80015d2:	2300      	movs	r3, #0
 80015d4:	607b      	str	r3, [r7, #4]
 80015d6:	4b10      	ldr	r3, [pc, #64]	; (8001618 <HAL_MspInit+0x4c>)
 80015d8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80015da:	4a0f      	ldr	r2, [pc, #60]	; (8001618 <HAL_MspInit+0x4c>)
 80015dc:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80015e0:	6453      	str	r3, [r2, #68]	; 0x44
 80015e2:	4b0d      	ldr	r3, [pc, #52]	; (8001618 <HAL_MspInit+0x4c>)
 80015e4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80015e6:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 80015ea:	607b      	str	r3, [r7, #4]
 80015ec:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 80015ee:	2300      	movs	r3, #0
 80015f0:	603b      	str	r3, [r7, #0]
 80015f2:	4b09      	ldr	r3, [pc, #36]	; (8001618 <HAL_MspInit+0x4c>)
 80015f4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80015f6:	4a08      	ldr	r2, [pc, #32]	; (8001618 <HAL_MspInit+0x4c>)
 80015f8:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80015fc:	6413      	str	r3, [r2, #64]	; 0x40
 80015fe:	4b06      	ldr	r3, [pc, #24]	; (8001618 <HAL_MspInit+0x4c>)
 8001600:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001602:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001606:	603b      	str	r3, [r7, #0]
 8001608:	683b      	ldr	r3, [r7, #0]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 800160a:	bf00      	nop
 800160c:	370c      	adds	r7, #12
 800160e:	46bd      	mov	sp, r7
 8001610:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001614:	4770      	bx	lr
 8001616:	bf00      	nop
 8001618:	40023800 	.word	0x40023800

0800161c <HAL_ADC_MspInit>:
* This function configures the hardware resources used in this example
* @param hadc: ADC handle pointer
* @retval None
*/
void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
{
 800161c:	b580      	push	{r7, lr}
 800161e:	b08a      	sub	sp, #40	; 0x28
 8001620:	af00      	add	r7, sp, #0
 8001622:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001624:	f107 0314 	add.w	r3, r7, #20
 8001628:	2200      	movs	r2, #0
 800162a:	601a      	str	r2, [r3, #0]
 800162c:	605a      	str	r2, [r3, #4]
 800162e:	609a      	str	r2, [r3, #8]
 8001630:	60da      	str	r2, [r3, #12]
 8001632:	611a      	str	r2, [r3, #16]
  if(hadc->Instance==ADC1)
 8001634:	687b      	ldr	r3, [r7, #4]
 8001636:	681b      	ldr	r3, [r3, #0]
 8001638:	4a17      	ldr	r2, [pc, #92]	; (8001698 <HAL_ADC_MspInit+0x7c>)
 800163a:	4293      	cmp	r3, r2
 800163c:	d127      	bne.n	800168e <HAL_ADC_MspInit+0x72>
  {
  /* USER CODE BEGIN ADC1_MspInit 0 */

  /* USER CODE END ADC1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_ADC1_CLK_ENABLE();
 800163e:	2300      	movs	r3, #0
 8001640:	613b      	str	r3, [r7, #16]
 8001642:	4b16      	ldr	r3, [pc, #88]	; (800169c <HAL_ADC_MspInit+0x80>)
 8001644:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001646:	4a15      	ldr	r2, [pc, #84]	; (800169c <HAL_ADC_MspInit+0x80>)
 8001648:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800164c:	6453      	str	r3, [r2, #68]	; 0x44
 800164e:	4b13      	ldr	r3, [pc, #76]	; (800169c <HAL_ADC_MspInit+0x80>)
 8001650:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001652:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8001656:	613b      	str	r3, [r7, #16]
 8001658:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 800165a:	2300      	movs	r3, #0
 800165c:	60fb      	str	r3, [r7, #12]
 800165e:	4b0f      	ldr	r3, [pc, #60]	; (800169c <HAL_ADC_MspInit+0x80>)
 8001660:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001662:	4a0e      	ldr	r2, [pc, #56]	; (800169c <HAL_ADC_MspInit+0x80>)
 8001664:	f043 0301 	orr.w	r3, r3, #1
 8001668:	6313      	str	r3, [r2, #48]	; 0x30
 800166a:	4b0c      	ldr	r3, [pc, #48]	; (800169c <HAL_ADC_MspInit+0x80>)
 800166c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800166e:	f003 0301 	and.w	r3, r3, #1
 8001672:	60fb      	str	r3, [r7, #12]
 8001674:	68fb      	ldr	r3, [r7, #12]
    /**ADC1 GPIO Configuration
    PA3     ------> ADC1_IN3
    */
    GPIO_InitStruct.Pin = SIG_Pin;
 8001676:	2308      	movs	r3, #8
 8001678:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 800167a:	2303      	movs	r3, #3
 800167c:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800167e:	2300      	movs	r3, #0
 8001680:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(SIG_GPIO_Port, &GPIO_InitStruct);
 8001682:	f107 0314 	add.w	r3, r7, #20
 8001686:	4619      	mov	r1, r3
 8001688:	4805      	ldr	r0, [pc, #20]	; (80016a0 <HAL_ADC_MspInit+0x84>)
 800168a:	f000 feaf 	bl	80023ec <HAL_GPIO_Init>
  /* USER CODE BEGIN ADC1_MspInit 1 */

  /* USER CODE END ADC1_MspInit 1 */
  }

}
 800168e:	bf00      	nop
 8001690:	3728      	adds	r7, #40	; 0x28
 8001692:	46bd      	mov	sp, r7
 8001694:	bd80      	pop	{r7, pc}
 8001696:	bf00      	nop
 8001698:	40012000 	.word	0x40012000
 800169c:	40023800 	.word	0x40023800
 80016a0:	40020000 	.word	0x40020000

080016a4 <HAL_TIM_PWM_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_pwm: TIM_PWM handle pointer
* @retval None
*/
void HAL_TIM_PWM_MspInit(TIM_HandleTypeDef* htim_pwm)
{
 80016a4:	b480      	push	{r7}
 80016a6:	b085      	sub	sp, #20
 80016a8:	af00      	add	r7, sp, #0
 80016aa:	6078      	str	r0, [r7, #4]
  if(htim_pwm->Instance==TIM1)
 80016ac:	687b      	ldr	r3, [r7, #4]
 80016ae:	681b      	ldr	r3, [r3, #0]
 80016b0:	4a15      	ldr	r2, [pc, #84]	; (8001708 <HAL_TIM_PWM_MspInit+0x64>)
 80016b2:	4293      	cmp	r3, r2
 80016b4:	d10e      	bne.n	80016d4 <HAL_TIM_PWM_MspInit+0x30>
  {
  /* USER CODE BEGIN TIM1_MspInit 0 */

  /* USER CODE END TIM1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM1_CLK_ENABLE();
 80016b6:	2300      	movs	r3, #0
 80016b8:	60fb      	str	r3, [r7, #12]
 80016ba:	4b14      	ldr	r3, [pc, #80]	; (800170c <HAL_TIM_PWM_MspInit+0x68>)
 80016bc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80016be:	4a13      	ldr	r2, [pc, #76]	; (800170c <HAL_TIM_PWM_MspInit+0x68>)
 80016c0:	f043 0301 	orr.w	r3, r3, #1
 80016c4:	6453      	str	r3, [r2, #68]	; 0x44
 80016c6:	4b11      	ldr	r3, [pc, #68]	; (800170c <HAL_TIM_PWM_MspInit+0x68>)
 80016c8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80016ca:	f003 0301 	and.w	r3, r3, #1
 80016ce:	60fb      	str	r3, [r7, #12]
 80016d0:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN TIM2_MspInit 1 */

  /* USER CODE END TIM2_MspInit 1 */
  }

}
 80016d2:	e012      	b.n	80016fa <HAL_TIM_PWM_MspInit+0x56>
  else if(htim_pwm->Instance==TIM2)
 80016d4:	687b      	ldr	r3, [r7, #4]
 80016d6:	681b      	ldr	r3, [r3, #0]
 80016d8:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80016dc:	d10d      	bne.n	80016fa <HAL_TIM_PWM_MspInit+0x56>
    __HAL_RCC_TIM2_CLK_ENABLE();
 80016de:	2300      	movs	r3, #0
 80016e0:	60bb      	str	r3, [r7, #8]
 80016e2:	4b0a      	ldr	r3, [pc, #40]	; (800170c <HAL_TIM_PWM_MspInit+0x68>)
 80016e4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80016e6:	4a09      	ldr	r2, [pc, #36]	; (800170c <HAL_TIM_PWM_MspInit+0x68>)
 80016e8:	f043 0301 	orr.w	r3, r3, #1
 80016ec:	6413      	str	r3, [r2, #64]	; 0x40
 80016ee:	4b07      	ldr	r3, [pc, #28]	; (800170c <HAL_TIM_PWM_MspInit+0x68>)
 80016f0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80016f2:	f003 0301 	and.w	r3, r3, #1
 80016f6:	60bb      	str	r3, [r7, #8]
 80016f8:	68bb      	ldr	r3, [r7, #8]
}
 80016fa:	bf00      	nop
 80016fc:	3714      	adds	r7, #20
 80016fe:	46bd      	mov	sp, r7
 8001700:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001704:	4770      	bx	lr
 8001706:	bf00      	nop
 8001708:	40010000 	.word	0x40010000
 800170c:	40023800 	.word	0x40023800

08001710 <HAL_TIM_MspPostInit>:

void HAL_TIM_MspPostInit(TIM_HandleTypeDef* htim)
{
 8001710:	b580      	push	{r7, lr}
 8001712:	b08a      	sub	sp, #40	; 0x28
 8001714:	af00      	add	r7, sp, #0
 8001716:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001718:	f107 0314 	add.w	r3, r7, #20
 800171c:	2200      	movs	r2, #0
 800171e:	601a      	str	r2, [r3, #0]
 8001720:	605a      	str	r2, [r3, #4]
 8001722:	609a      	str	r2, [r3, #8]
 8001724:	60da      	str	r2, [r3, #12]
 8001726:	611a      	str	r2, [r3, #16]
  if(htim->Instance==TIM1)
 8001728:	687b      	ldr	r3, [r7, #4]
 800172a:	681b      	ldr	r3, [r3, #0]
 800172c:	4a24      	ldr	r2, [pc, #144]	; (80017c0 <HAL_TIM_MspPostInit+0xb0>)
 800172e:	4293      	cmp	r3, r2
 8001730:	d11f      	bne.n	8001772 <HAL_TIM_MspPostInit+0x62>
  {
  /* USER CODE BEGIN TIM1_MspPostInit 0 */

  /* USER CODE END TIM1_MspPostInit 0 */
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001732:	2300      	movs	r3, #0
 8001734:	613b      	str	r3, [r7, #16]
 8001736:	4b23      	ldr	r3, [pc, #140]	; (80017c4 <HAL_TIM_MspPostInit+0xb4>)
 8001738:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800173a:	4a22      	ldr	r2, [pc, #136]	; (80017c4 <HAL_TIM_MspPostInit+0xb4>)
 800173c:	f043 0301 	orr.w	r3, r3, #1
 8001740:	6313      	str	r3, [r2, #48]	; 0x30
 8001742:	4b20      	ldr	r3, [pc, #128]	; (80017c4 <HAL_TIM_MspPostInit+0xb4>)
 8001744:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001746:	f003 0301 	and.w	r3, r3, #1
 800174a:	613b      	str	r3, [r7, #16]
 800174c:	693b      	ldr	r3, [r7, #16]
    /**TIM1 GPIO Configuration
    PA8     ------> TIM1_CH1
    */
    GPIO_InitStruct.Pin = PWM_A_Pin;
 800174e:	f44f 7380 	mov.w	r3, #256	; 0x100
 8001752:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001754:	2302      	movs	r3, #2
 8001756:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001758:	2300      	movs	r3, #0
 800175a:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800175c:	2300      	movs	r3, #0
 800175e:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF1_TIM1;
 8001760:	2301      	movs	r3, #1
 8001762:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(PWM_A_GPIO_Port, &GPIO_InitStruct);
 8001764:	f107 0314 	add.w	r3, r7, #20
 8001768:	4619      	mov	r1, r3
 800176a:	4817      	ldr	r0, [pc, #92]	; (80017c8 <HAL_TIM_MspPostInit+0xb8>)
 800176c:	f000 fe3e 	bl	80023ec <HAL_GPIO_Init>
  /* USER CODE BEGIN TIM2_MspPostInit 1 */

  /* USER CODE END TIM2_MspPostInit 1 */
  }

}
 8001770:	e022      	b.n	80017b8 <HAL_TIM_MspPostInit+0xa8>
  else if(htim->Instance==TIM2)
 8001772:	687b      	ldr	r3, [r7, #4]
 8001774:	681b      	ldr	r3, [r3, #0]
 8001776:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800177a:	d11d      	bne.n	80017b8 <HAL_TIM_MspPostInit+0xa8>
    __HAL_RCC_GPIOB_CLK_ENABLE();
 800177c:	2300      	movs	r3, #0
 800177e:	60fb      	str	r3, [r7, #12]
 8001780:	4b10      	ldr	r3, [pc, #64]	; (80017c4 <HAL_TIM_MspPostInit+0xb4>)
 8001782:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001784:	4a0f      	ldr	r2, [pc, #60]	; (80017c4 <HAL_TIM_MspPostInit+0xb4>)
 8001786:	f043 0302 	orr.w	r3, r3, #2
 800178a:	6313      	str	r3, [r2, #48]	; 0x30
 800178c:	4b0d      	ldr	r3, [pc, #52]	; (80017c4 <HAL_TIM_MspPostInit+0xb4>)
 800178e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001790:	f003 0302 	and.w	r3, r3, #2
 8001794:	60fb      	str	r3, [r7, #12]
 8001796:	68fb      	ldr	r3, [r7, #12]
    GPIO_InitStruct.Pin = PWM_B_Pin;
 8001798:	2308      	movs	r3, #8
 800179a:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800179c:	2302      	movs	r3, #2
 800179e:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80017a0:	2300      	movs	r3, #0
 80017a2:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80017a4:	2300      	movs	r3, #0
 80017a6:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF1_TIM2;
 80017a8:	2301      	movs	r3, #1
 80017aa:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(PWM_B_GPIO_Port, &GPIO_InitStruct);
 80017ac:	f107 0314 	add.w	r3, r7, #20
 80017b0:	4619      	mov	r1, r3
 80017b2:	4806      	ldr	r0, [pc, #24]	; (80017cc <HAL_TIM_MspPostInit+0xbc>)
 80017b4:	f000 fe1a 	bl	80023ec <HAL_GPIO_Init>
}
 80017b8:	bf00      	nop
 80017ba:	3728      	adds	r7, #40	; 0x28
 80017bc:	46bd      	mov	sp, r7
 80017be:	bd80      	pop	{r7, pc}
 80017c0:	40010000 	.word	0x40010000
 80017c4:	40023800 	.word	0x40023800
 80017c8:	40020000 	.word	0x40020000
 80017cc:	40020400 	.word	0x40020400

080017d0 <NMI_Handler>:
 80017d0:	b480      	push	{r7}
 80017d2:	af00      	add	r7, sp, #0
 80017d4:	e7fe      	b.n	80017d4 <NMI_Handler+0x4>

080017d6 <HardFault_Handler>:
 80017d6:	b480      	push	{r7}
 80017d8:	af00      	add	r7, sp, #0
 80017da:	e7fe      	b.n	80017da <HardFault_Handler+0x4>

080017dc <MemManage_Handler>:
 80017dc:	b480      	push	{r7}
 80017de:	af00      	add	r7, sp, #0
 80017e0:	e7fe      	b.n	80017e0 <MemManage_Handler+0x4>

080017e2 <BusFault_Handler>:
 80017e2:	b480      	push	{r7}
 80017e4:	af00      	add	r7, sp, #0
 80017e6:	e7fe      	b.n	80017e6 <BusFault_Handler+0x4>

080017e8 <UsageFault_Handler>:
 80017e8:	b480      	push	{r7}
 80017ea:	af00      	add	r7, sp, #0
 80017ec:	e7fe      	b.n	80017ec <UsageFault_Handler+0x4>

080017ee <SVC_Handler>:
 80017ee:	b480      	push	{r7}
 80017f0:	af00      	add	r7, sp, #0
 80017f2:	bf00      	nop
 80017f4:	46bd      	mov	sp, r7
 80017f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80017fa:	4770      	bx	lr

080017fc <DebugMon_Handler>:
 80017fc:	b480      	push	{r7}
 80017fe:	af00      	add	r7, sp, #0
 8001800:	bf00      	nop
 8001802:	46bd      	mov	sp, r7
 8001804:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001808:	4770      	bx	lr

0800180a <PendSV_Handler>:
 800180a:	b480      	push	{r7}
 800180c:	af00      	add	r7, sp, #0
 800180e:	bf00      	nop
 8001810:	46bd      	mov	sp, r7
 8001812:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001816:	4770      	bx	lr

08001818 <SysTick_Handler>:
 8001818:	b580      	push	{r7, lr}
 800181a:	af00      	add	r7, sp, #0
 800181c:	f000 f8d2 	bl	80019c4 <HAL_IncTick>
 8001820:	bf00      	nop
 8001822:	bd80      	pop	{r7, pc}

08001824 <EXTI9_5_IRQHandler>:
 8001824:	b580      	push	{r7, lr}
 8001826:	af00      	add	r7, sp, #0
 8001828:	f44f 7080 	mov.w	r0, #256	; 0x100
 800182c:	f000 ff7c 	bl	8002728 <HAL_GPIO_EXTI_IRQHandler>
 8001830:	f44f 7000 	mov.w	r0, #512	; 0x200
 8001834:	f000 ff78 	bl	8002728 <HAL_GPIO_EXTI_IRQHandler>
 8001838:	bf00      	nop
 800183a:	bd80      	pop	{r7, pc}

0800183c <_sbrk>:
 800183c:	b580      	push	{r7, lr}
 800183e:	b086      	sub	sp, #24
 8001840:	af00      	add	r7, sp, #0
 8001842:	6078      	str	r0, [r7, #4]
 8001844:	4a14      	ldr	r2, [pc, #80]	; (8001898 <_sbrk+0x5c>)
 8001846:	4b15      	ldr	r3, [pc, #84]	; (800189c <_sbrk+0x60>)
 8001848:	1ad3      	subs	r3, r2, r3
 800184a:	617b      	str	r3, [r7, #20]
 800184c:	697b      	ldr	r3, [r7, #20]
 800184e:	613b      	str	r3, [r7, #16]
 8001850:	4b13      	ldr	r3, [pc, #76]	; (80018a0 <_sbrk+0x64>)
 8001852:	681b      	ldr	r3, [r3, #0]
 8001854:	2b00      	cmp	r3, #0
 8001856:	d102      	bne.n	800185e <_sbrk+0x22>
 8001858:	4b11      	ldr	r3, [pc, #68]	; (80018a0 <_sbrk+0x64>)
 800185a:	4a12      	ldr	r2, [pc, #72]	; (80018a4 <_sbrk+0x68>)
 800185c:	601a      	str	r2, [r3, #0]
 800185e:	4b10      	ldr	r3, [pc, #64]	; (80018a0 <_sbrk+0x64>)
 8001860:	681a      	ldr	r2, [r3, #0]
 8001862:	687b      	ldr	r3, [r7, #4]
 8001864:	4413      	add	r3, r2
 8001866:	693a      	ldr	r2, [r7, #16]
 8001868:	429a      	cmp	r2, r3
 800186a:	d207      	bcs.n	800187c <_sbrk+0x40>
 800186c:	f002 f874 	bl	8003958 <__errno>
 8001870:	4603      	mov	r3, r0
 8001872:	220c      	movs	r2, #12
 8001874:	601a      	str	r2, [r3, #0]
 8001876:	f04f 33ff 	mov.w	r3, #4294967295
 800187a:	e009      	b.n	8001890 <_sbrk+0x54>
 800187c:	4b08      	ldr	r3, [pc, #32]	; (80018a0 <_sbrk+0x64>)
 800187e:	681b      	ldr	r3, [r3, #0]
 8001880:	60fb      	str	r3, [r7, #12]
 8001882:	4b07      	ldr	r3, [pc, #28]	; (80018a0 <_sbrk+0x64>)
 8001884:	681a      	ldr	r2, [r3, #0]
 8001886:	687b      	ldr	r3, [r7, #4]
 8001888:	4413      	add	r3, r2
 800188a:	4a05      	ldr	r2, [pc, #20]	; (80018a0 <_sbrk+0x64>)
 800188c:	6013      	str	r3, [r2, #0]
 800188e:	68fb      	ldr	r3, [r7, #12]
 8001890:	4618      	mov	r0, r3
 8001892:	3718      	adds	r7, #24
 8001894:	46bd      	mov	sp, r7
 8001896:	bd80      	pop	{r7, pc}
 8001898:	20020000 	.word	0x20020000
 800189c:	00000400 	.word	0x00000400
 80018a0:	20000498 	.word	0x20000498
 80018a4:	200005e8 	.word	0x200005e8

080018a8 <SystemInit>:
 80018a8:	b480      	push	{r7}
 80018aa:	af00      	add	r7, sp, #0
 80018ac:	4b06      	ldr	r3, [pc, #24]	; (80018c8 <SystemInit+0x20>)
 80018ae:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80018b2:	4a05      	ldr	r2, [pc, #20]	; (80018c8 <SystemInit+0x20>)
 80018b4:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 80018b8:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 80018bc:	bf00      	nop
 80018be:	46bd      	mov	sp, r7
 80018c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80018c4:	4770      	bx	lr
 80018c6:	bf00      	nop
 80018c8:	e000ed00 	.word	0xe000ed00

080018cc <Reset_Handler>:
 80018cc:	f8df d034 	ldr.w	sp, [pc, #52]	; 8001904 <LoopFillZerobss+0x12>
 80018d0:	480d      	ldr	r0, [pc, #52]	; (8001908 <LoopFillZerobss+0x16>)
 80018d2:	490e      	ldr	r1, [pc, #56]	; (800190c <LoopFillZerobss+0x1a>)
 80018d4:	4a0e      	ldr	r2, [pc, #56]	; (8001910 <LoopFillZerobss+0x1e>)
 80018d6:	2300      	movs	r3, #0
 80018d8:	e002      	b.n	80018e0 <LoopCopyDataInit>

080018da <CopyDataInit>:
 80018da:	58d4      	ldr	r4, [r2, r3]
 80018dc:	50c4      	str	r4, [r0, r3]
 80018de:	3304      	adds	r3, #4

080018e0 <LoopCopyDataInit>:
 80018e0:	18c4      	adds	r4, r0, r3
 80018e2:	428c      	cmp	r4, r1
 80018e4:	d3f9      	bcc.n	80018da <CopyDataInit>
 80018e6:	4a0b      	ldr	r2, [pc, #44]	; (8001914 <LoopFillZerobss+0x22>)
 80018e8:	4c0b      	ldr	r4, [pc, #44]	; (8001918 <LoopFillZerobss+0x26>)
 80018ea:	2300      	movs	r3, #0
 80018ec:	e001      	b.n	80018f2 <LoopFillZerobss>

080018ee <FillZerobss>:
 80018ee:	6013      	str	r3, [r2, #0]
 80018f0:	3204      	adds	r2, #4

080018f2 <LoopFillZerobss>:
 80018f2:	42a2      	cmp	r2, r4
 80018f4:	d3fb      	bcc.n	80018ee <FillZerobss>
 80018f6:	f7ff ffd7 	bl	80018a8 <SystemInit>
 80018fa:	f002 f833 	bl	8003964 <__libc_init_array>
 80018fe:	f7ff fba5 	bl	800104c <main>
 8001902:	4770      	bx	lr
 8001904:	20020000 	.word	0x20020000
 8001908:	20000000 	.word	0x20000000
 800190c:	2000008c 	.word	0x2000008c
 8001910:	0800454c 	.word	0x0800454c
 8001914:	2000008c 	.word	0x2000008c
 8001918:	200005e8 	.word	0x200005e8

0800191c <ADC_IRQHandler>:
 800191c:	e7fe      	b.n	800191c <ADC_IRQHandler>
	...

08001920 <HAL_Init>:
 8001920:	b580      	push	{r7, lr}
 8001922:	af00      	add	r7, sp, #0
 8001924:	4b0e      	ldr	r3, [pc, #56]	; (8001960 <HAL_Init+0x40>)
 8001926:	681b      	ldr	r3, [r3, #0]
 8001928:	4a0d      	ldr	r2, [pc, #52]	; (8001960 <HAL_Init+0x40>)
 800192a:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800192e:	6013      	str	r3, [r2, #0]
 8001930:	4b0b      	ldr	r3, [pc, #44]	; (8001960 <HAL_Init+0x40>)
 8001932:	681b      	ldr	r3, [r3, #0]
 8001934:	4a0a      	ldr	r2, [pc, #40]	; (8001960 <HAL_Init+0x40>)
 8001936:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800193a:	6013      	str	r3, [r2, #0]
 800193c:	4b08      	ldr	r3, [pc, #32]	; (8001960 <HAL_Init+0x40>)
 800193e:	681b      	ldr	r3, [r3, #0]
 8001940:	4a07      	ldr	r2, [pc, #28]	; (8001960 <HAL_Init+0x40>)
 8001942:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8001946:	6013      	str	r3, [r2, #0]
 8001948:	2003      	movs	r0, #3
 800194a:	f000 fd0d 	bl	8002368 <HAL_NVIC_SetPriorityGrouping>
 800194e:	200f      	movs	r0, #15
 8001950:	f000 f808 	bl	8001964 <HAL_InitTick>
 8001954:	f7ff fe3a 	bl	80015cc <HAL_MspInit>
 8001958:	2300      	movs	r3, #0
 800195a:	4618      	mov	r0, r3
 800195c:	bd80      	pop	{r7, pc}
 800195e:	bf00      	nop
 8001960:	40023c00 	.word	0x40023c00

08001964 <HAL_InitTick>:
 8001964:	b580      	push	{r7, lr}
 8001966:	b082      	sub	sp, #8
 8001968:	af00      	add	r7, sp, #0
 800196a:	6078      	str	r0, [r7, #4]
 800196c:	4b12      	ldr	r3, [pc, #72]	; (80019b8 <HAL_InitTick+0x54>)
 800196e:	681a      	ldr	r2, [r3, #0]
 8001970:	4b12      	ldr	r3, [pc, #72]	; (80019bc <HAL_InitTick+0x58>)
 8001972:	781b      	ldrb	r3, [r3, #0]
 8001974:	4619      	mov	r1, r3
 8001976:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800197a:	fbb3 f3f1 	udiv	r3, r3, r1
 800197e:	fbb2 f3f3 	udiv	r3, r2, r3
 8001982:	4618      	mov	r0, r3
 8001984:	f000 fd25 	bl	80023d2 <HAL_SYSTICK_Config>
 8001988:	4603      	mov	r3, r0
 800198a:	2b00      	cmp	r3, #0
 800198c:	d001      	beq.n	8001992 <HAL_InitTick+0x2e>
 800198e:	2301      	movs	r3, #1
 8001990:	e00e      	b.n	80019b0 <HAL_InitTick+0x4c>
 8001992:	687b      	ldr	r3, [r7, #4]
 8001994:	2b0f      	cmp	r3, #15
 8001996:	d80a      	bhi.n	80019ae <HAL_InitTick+0x4a>
 8001998:	2200      	movs	r2, #0
 800199a:	6879      	ldr	r1, [r7, #4]
 800199c:	f04f 30ff 	mov.w	r0, #4294967295
 80019a0:	f000 fced 	bl	800237e <HAL_NVIC_SetPriority>
 80019a4:	4a06      	ldr	r2, [pc, #24]	; (80019c0 <HAL_InitTick+0x5c>)
 80019a6:	687b      	ldr	r3, [r7, #4]
 80019a8:	6013      	str	r3, [r2, #0]
 80019aa:	2300      	movs	r3, #0
 80019ac:	e000      	b.n	80019b0 <HAL_InitTick+0x4c>
 80019ae:	2301      	movs	r3, #1
 80019b0:	4618      	mov	r0, r3
 80019b2:	3708      	adds	r7, #8
 80019b4:	46bd      	mov	sp, r7
 80019b6:	bd80      	pop	{r7, pc}
 80019b8:	20000030 	.word	0x20000030
 80019bc:	20000038 	.word	0x20000038
 80019c0:	20000034 	.word	0x20000034

080019c4 <HAL_IncTick>:
 80019c4:	b480      	push	{r7}
 80019c6:	af00      	add	r7, sp, #0
 80019c8:	4b06      	ldr	r3, [pc, #24]	; (80019e4 <HAL_IncTick+0x20>)
 80019ca:	781b      	ldrb	r3, [r3, #0]
 80019cc:	461a      	mov	r2, r3
 80019ce:	4b06      	ldr	r3, [pc, #24]	; (80019e8 <HAL_IncTick+0x24>)
 80019d0:	681b      	ldr	r3, [r3, #0]
 80019d2:	4413      	add	r3, r2
 80019d4:	4a04      	ldr	r2, [pc, #16]	; (80019e8 <HAL_IncTick+0x24>)
 80019d6:	6013      	str	r3, [r2, #0]
 80019d8:	bf00      	nop
 80019da:	46bd      	mov	sp, r7
 80019dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80019e0:	4770      	bx	lr
 80019e2:	bf00      	nop
 80019e4:	20000038 	.word	0x20000038
 80019e8:	2000049c 	.word	0x2000049c

080019ec <HAL_GetTick>:
 80019ec:	b480      	push	{r7}
 80019ee:	af00      	add	r7, sp, #0
 80019f0:	4b03      	ldr	r3, [pc, #12]	; (8001a00 <HAL_GetTick+0x14>)
 80019f2:	681b      	ldr	r3, [r3, #0]
 80019f4:	4618      	mov	r0, r3
 80019f6:	46bd      	mov	sp, r7
 80019f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80019fc:	4770      	bx	lr
 80019fe:	bf00      	nop
 8001a00:	2000049c 	.word	0x2000049c

08001a04 <HAL_Delay>:
 8001a04:	b580      	push	{r7, lr}
 8001a06:	b084      	sub	sp, #16
 8001a08:	af00      	add	r7, sp, #0
 8001a0a:	6078      	str	r0, [r7, #4]
 8001a0c:	f7ff ffee 	bl	80019ec <HAL_GetTick>
 8001a10:	60b8      	str	r0, [r7, #8]
 8001a12:	687b      	ldr	r3, [r7, #4]
 8001a14:	60fb      	str	r3, [r7, #12]
 8001a16:	68fb      	ldr	r3, [r7, #12]
 8001a18:	f1b3 3fff 	cmp.w	r3, #4294967295
 8001a1c:	d005      	beq.n	8001a2a <HAL_Delay+0x26>
 8001a1e:	4b0a      	ldr	r3, [pc, #40]	; (8001a48 <HAL_Delay+0x44>)
 8001a20:	781b      	ldrb	r3, [r3, #0]
 8001a22:	461a      	mov	r2, r3
 8001a24:	68fb      	ldr	r3, [r7, #12]
 8001a26:	4413      	add	r3, r2
 8001a28:	60fb      	str	r3, [r7, #12]
 8001a2a:	bf00      	nop
 8001a2c:	f7ff ffde 	bl	80019ec <HAL_GetTick>
 8001a30:	4602      	mov	r2, r0
 8001a32:	68bb      	ldr	r3, [r7, #8]
 8001a34:	1ad3      	subs	r3, r2, r3
 8001a36:	68fa      	ldr	r2, [r7, #12]
 8001a38:	429a      	cmp	r2, r3
 8001a3a:	d8f7      	bhi.n	8001a2c <HAL_Delay+0x28>
 8001a3c:	bf00      	nop
 8001a3e:	bf00      	nop
 8001a40:	3710      	adds	r7, #16
 8001a42:	46bd      	mov	sp, r7
 8001a44:	bd80      	pop	{r7, pc}
 8001a46:	bf00      	nop
 8001a48:	20000038 	.word	0x20000038

08001a4c <HAL_ADC_Init>:
 8001a4c:	b580      	push	{r7, lr}
 8001a4e:	b084      	sub	sp, #16
 8001a50:	af00      	add	r7, sp, #0
 8001a52:	6078      	str	r0, [r7, #4]
 8001a54:	2300      	movs	r3, #0
 8001a56:	73fb      	strb	r3, [r7, #15]
 8001a58:	687b      	ldr	r3, [r7, #4]
 8001a5a:	2b00      	cmp	r3, #0
 8001a5c:	d101      	bne.n	8001a62 <HAL_ADC_Init+0x16>
 8001a5e:	2301      	movs	r3, #1
 8001a60:	e033      	b.n	8001aca <HAL_ADC_Init+0x7e>
 8001a62:	687b      	ldr	r3, [r7, #4]
 8001a64:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001a66:	2b00      	cmp	r3, #0
 8001a68:	d109      	bne.n	8001a7e <HAL_ADC_Init+0x32>
 8001a6a:	6878      	ldr	r0, [r7, #4]
 8001a6c:	f7ff fdd6 	bl	800161c <HAL_ADC_MspInit>
 8001a70:	687b      	ldr	r3, [r7, #4]
 8001a72:	2200      	movs	r2, #0
 8001a74:	645a      	str	r2, [r3, #68]	; 0x44
 8001a76:	687b      	ldr	r3, [r7, #4]
 8001a78:	2200      	movs	r2, #0
 8001a7a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8001a7e:	687b      	ldr	r3, [r7, #4]
 8001a80:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001a82:	f003 0310 	and.w	r3, r3, #16
 8001a86:	2b00      	cmp	r3, #0
 8001a88:	d118      	bne.n	8001abc <HAL_ADC_Init+0x70>
 8001a8a:	687b      	ldr	r3, [r7, #4]
 8001a8c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001a8e:	f423 5388 	bic.w	r3, r3, #4352	; 0x1100
 8001a92:	f023 0302 	bic.w	r3, r3, #2
 8001a96:	f043 0202 	orr.w	r2, r3, #2
 8001a9a:	687b      	ldr	r3, [r7, #4]
 8001a9c:	641a      	str	r2, [r3, #64]	; 0x40
 8001a9e:	6878      	ldr	r0, [r7, #4]
 8001aa0:	f000 fa96 	bl	8001fd0 <ADC_Init>
 8001aa4:	687b      	ldr	r3, [r7, #4]
 8001aa6:	2200      	movs	r2, #0
 8001aa8:	645a      	str	r2, [r3, #68]	; 0x44
 8001aaa:	687b      	ldr	r3, [r7, #4]
 8001aac:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001aae:	f023 0303 	bic.w	r3, r3, #3
 8001ab2:	f043 0201 	orr.w	r2, r3, #1
 8001ab6:	687b      	ldr	r3, [r7, #4]
 8001ab8:	641a      	str	r2, [r3, #64]	; 0x40
 8001aba:	e001      	b.n	8001ac0 <HAL_ADC_Init+0x74>
 8001abc:	2301      	movs	r3, #1
 8001abe:	73fb      	strb	r3, [r7, #15]
 8001ac0:	687b      	ldr	r3, [r7, #4]
 8001ac2:	2200      	movs	r2, #0
 8001ac4:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8001ac8:	7bfb      	ldrb	r3, [r7, #15]
 8001aca:	4618      	mov	r0, r3
 8001acc:	3710      	adds	r7, #16
 8001ace:	46bd      	mov	sp, r7
 8001ad0:	bd80      	pop	{r7, pc}
	...

08001ad4 <HAL_ADC_Start>:
 8001ad4:	b480      	push	{r7}
 8001ad6:	b085      	sub	sp, #20
 8001ad8:	af00      	add	r7, sp, #0
 8001ada:	6078      	str	r0, [r7, #4]
 8001adc:	2300      	movs	r3, #0
 8001ade:	60bb      	str	r3, [r7, #8]
 8001ae0:	687b      	ldr	r3, [r7, #4]
 8001ae2:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8001ae6:	2b01      	cmp	r3, #1
 8001ae8:	d101      	bne.n	8001aee <HAL_ADC_Start+0x1a>
 8001aea:	2302      	movs	r3, #2
 8001aec:	e097      	b.n	8001c1e <HAL_ADC_Start+0x14a>
 8001aee:	687b      	ldr	r3, [r7, #4]
 8001af0:	2201      	movs	r2, #1
 8001af2:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8001af6:	687b      	ldr	r3, [r7, #4]
 8001af8:	681b      	ldr	r3, [r3, #0]
 8001afa:	689b      	ldr	r3, [r3, #8]
 8001afc:	f003 0301 	and.w	r3, r3, #1
 8001b00:	2b01      	cmp	r3, #1
 8001b02:	d018      	beq.n	8001b36 <HAL_ADC_Start+0x62>
 8001b04:	687b      	ldr	r3, [r7, #4]
 8001b06:	681b      	ldr	r3, [r3, #0]
 8001b08:	689a      	ldr	r2, [r3, #8]
 8001b0a:	687b      	ldr	r3, [r7, #4]
 8001b0c:	681b      	ldr	r3, [r3, #0]
 8001b0e:	f042 0201 	orr.w	r2, r2, #1
 8001b12:	609a      	str	r2, [r3, #8]
 8001b14:	4b45      	ldr	r3, [pc, #276]	; (8001c2c <HAL_ADC_Start+0x158>)
 8001b16:	681b      	ldr	r3, [r3, #0]
 8001b18:	4a45      	ldr	r2, [pc, #276]	; (8001c30 <HAL_ADC_Start+0x15c>)
 8001b1a:	fba2 2303 	umull	r2, r3, r2, r3
 8001b1e:	0c9a      	lsrs	r2, r3, #18
 8001b20:	4613      	mov	r3, r2
 8001b22:	005b      	lsls	r3, r3, #1
 8001b24:	4413      	add	r3, r2
 8001b26:	60bb      	str	r3, [r7, #8]
 8001b28:	e002      	b.n	8001b30 <HAL_ADC_Start+0x5c>
 8001b2a:	68bb      	ldr	r3, [r7, #8]
 8001b2c:	3b01      	subs	r3, #1
 8001b2e:	60bb      	str	r3, [r7, #8]
 8001b30:	68bb      	ldr	r3, [r7, #8]
 8001b32:	2b00      	cmp	r3, #0
 8001b34:	d1f9      	bne.n	8001b2a <HAL_ADC_Start+0x56>
 8001b36:	687b      	ldr	r3, [r7, #4]
 8001b38:	681b      	ldr	r3, [r3, #0]
 8001b3a:	689b      	ldr	r3, [r3, #8]
 8001b3c:	f003 0301 	and.w	r3, r3, #1
 8001b40:	2b01      	cmp	r3, #1
 8001b42:	d15f      	bne.n	8001c04 <HAL_ADC_Start+0x130>
 8001b44:	687b      	ldr	r3, [r7, #4]
 8001b46:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001b48:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 8001b4c:	f023 0301 	bic.w	r3, r3, #1
 8001b50:	f443 7280 	orr.w	r2, r3, #256	; 0x100
 8001b54:	687b      	ldr	r3, [r7, #4]
 8001b56:	641a      	str	r2, [r3, #64]	; 0x40
 8001b58:	687b      	ldr	r3, [r7, #4]
 8001b5a:	681b      	ldr	r3, [r3, #0]
 8001b5c:	685b      	ldr	r3, [r3, #4]
 8001b5e:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8001b62:	2b00      	cmp	r3, #0
 8001b64:	d007      	beq.n	8001b76 <HAL_ADC_Start+0xa2>
 8001b66:	687b      	ldr	r3, [r7, #4]
 8001b68:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001b6a:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 8001b6e:	f443 5280 	orr.w	r2, r3, #4096	; 0x1000
 8001b72:	687b      	ldr	r3, [r7, #4]
 8001b74:	641a      	str	r2, [r3, #64]	; 0x40
 8001b76:	687b      	ldr	r3, [r7, #4]
 8001b78:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001b7a:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8001b7e:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8001b82:	d106      	bne.n	8001b92 <HAL_ADC_Start+0xbe>
 8001b84:	687b      	ldr	r3, [r7, #4]
 8001b86:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001b88:	f023 0206 	bic.w	r2, r3, #6
 8001b8c:	687b      	ldr	r3, [r7, #4]
 8001b8e:	645a      	str	r2, [r3, #68]	; 0x44
 8001b90:	e002      	b.n	8001b98 <HAL_ADC_Start+0xc4>
 8001b92:	687b      	ldr	r3, [r7, #4]
 8001b94:	2200      	movs	r2, #0
 8001b96:	645a      	str	r2, [r3, #68]	; 0x44
 8001b98:	687b      	ldr	r3, [r7, #4]
 8001b9a:	2200      	movs	r2, #0
 8001b9c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8001ba0:	4b24      	ldr	r3, [pc, #144]	; (8001c34 <HAL_ADC_Start+0x160>)
 8001ba2:	60fb      	str	r3, [r7, #12]
 8001ba4:	687b      	ldr	r3, [r7, #4]
 8001ba6:	681b      	ldr	r3, [r3, #0]
 8001ba8:	f06f 0222 	mvn.w	r2, #34	; 0x22
 8001bac:	601a      	str	r2, [r3, #0]
 8001bae:	68fb      	ldr	r3, [r7, #12]
 8001bb0:	685b      	ldr	r3, [r3, #4]
 8001bb2:	f003 031f 	and.w	r3, r3, #31
 8001bb6:	2b00      	cmp	r3, #0
 8001bb8:	d10f      	bne.n	8001bda <HAL_ADC_Start+0x106>
 8001bba:	687b      	ldr	r3, [r7, #4]
 8001bbc:	681b      	ldr	r3, [r3, #0]
 8001bbe:	689b      	ldr	r3, [r3, #8]
 8001bc0:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 8001bc4:	2b00      	cmp	r3, #0
 8001bc6:	d129      	bne.n	8001c1c <HAL_ADC_Start+0x148>
 8001bc8:	687b      	ldr	r3, [r7, #4]
 8001bca:	681b      	ldr	r3, [r3, #0]
 8001bcc:	689a      	ldr	r2, [r3, #8]
 8001bce:	687b      	ldr	r3, [r7, #4]
 8001bd0:	681b      	ldr	r3, [r3, #0]
 8001bd2:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 8001bd6:	609a      	str	r2, [r3, #8]
 8001bd8:	e020      	b.n	8001c1c <HAL_ADC_Start+0x148>
 8001bda:	687b      	ldr	r3, [r7, #4]
 8001bdc:	681b      	ldr	r3, [r3, #0]
 8001bde:	4a16      	ldr	r2, [pc, #88]	; (8001c38 <HAL_ADC_Start+0x164>)
 8001be0:	4293      	cmp	r3, r2
 8001be2:	d11b      	bne.n	8001c1c <HAL_ADC_Start+0x148>
 8001be4:	687b      	ldr	r3, [r7, #4]
 8001be6:	681b      	ldr	r3, [r3, #0]
 8001be8:	689b      	ldr	r3, [r3, #8]
 8001bea:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 8001bee:	2b00      	cmp	r3, #0
 8001bf0:	d114      	bne.n	8001c1c <HAL_ADC_Start+0x148>
 8001bf2:	687b      	ldr	r3, [r7, #4]
 8001bf4:	681b      	ldr	r3, [r3, #0]
 8001bf6:	689a      	ldr	r2, [r3, #8]
 8001bf8:	687b      	ldr	r3, [r7, #4]
 8001bfa:	681b      	ldr	r3, [r3, #0]
 8001bfc:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 8001c00:	609a      	str	r2, [r3, #8]
 8001c02:	e00b      	b.n	8001c1c <HAL_ADC_Start+0x148>
 8001c04:	687b      	ldr	r3, [r7, #4]
 8001c06:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001c08:	f043 0210 	orr.w	r2, r3, #16
 8001c0c:	687b      	ldr	r3, [r7, #4]
 8001c0e:	641a      	str	r2, [r3, #64]	; 0x40
 8001c10:	687b      	ldr	r3, [r7, #4]
 8001c12:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001c14:	f043 0201 	orr.w	r2, r3, #1
 8001c18:	687b      	ldr	r3, [r7, #4]
 8001c1a:	645a      	str	r2, [r3, #68]	; 0x44
 8001c1c:	2300      	movs	r3, #0
 8001c1e:	4618      	mov	r0, r3
 8001c20:	3714      	adds	r7, #20
 8001c22:	46bd      	mov	sp, r7
 8001c24:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001c28:	4770      	bx	lr
 8001c2a:	bf00      	nop
 8001c2c:	20000030 	.word	0x20000030
 8001c30:	431bde83 	.word	0x431bde83
 8001c34:	40012300 	.word	0x40012300
 8001c38:	40012000 	.word	0x40012000

08001c3c <HAL_ADC_PollForConversion>:
 8001c3c:	b580      	push	{r7, lr}
 8001c3e:	b084      	sub	sp, #16
 8001c40:	af00      	add	r7, sp, #0
 8001c42:	6078      	str	r0, [r7, #4]
 8001c44:	6039      	str	r1, [r7, #0]
 8001c46:	2300      	movs	r3, #0
 8001c48:	60fb      	str	r3, [r7, #12]
 8001c4a:	687b      	ldr	r3, [r7, #4]
 8001c4c:	681b      	ldr	r3, [r3, #0]
 8001c4e:	689b      	ldr	r3, [r3, #8]
 8001c50:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8001c54:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8001c58:	d113      	bne.n	8001c82 <HAL_ADC_PollForConversion+0x46>
 8001c5a:	687b      	ldr	r3, [r7, #4]
 8001c5c:	681b      	ldr	r3, [r3, #0]
 8001c5e:	689b      	ldr	r3, [r3, #8]
 8001c60:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8001c64:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8001c68:	d10b      	bne.n	8001c82 <HAL_ADC_PollForConversion+0x46>
 8001c6a:	687b      	ldr	r3, [r7, #4]
 8001c6c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001c6e:	f043 0220 	orr.w	r2, r3, #32
 8001c72:	687b      	ldr	r3, [r7, #4]
 8001c74:	641a      	str	r2, [r3, #64]	; 0x40
 8001c76:	687b      	ldr	r3, [r7, #4]
 8001c78:	2200      	movs	r2, #0
 8001c7a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8001c7e:	2301      	movs	r3, #1
 8001c80:	e063      	b.n	8001d4a <HAL_ADC_PollForConversion+0x10e>
 8001c82:	f7ff feb3 	bl	80019ec <HAL_GetTick>
 8001c86:	60f8      	str	r0, [r7, #12]
 8001c88:	e021      	b.n	8001cce <HAL_ADC_PollForConversion+0x92>
 8001c8a:	683b      	ldr	r3, [r7, #0]
 8001c8c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8001c90:	d01d      	beq.n	8001cce <HAL_ADC_PollForConversion+0x92>
 8001c92:	683b      	ldr	r3, [r7, #0]
 8001c94:	2b00      	cmp	r3, #0
 8001c96:	d007      	beq.n	8001ca8 <HAL_ADC_PollForConversion+0x6c>
 8001c98:	f7ff fea8 	bl	80019ec <HAL_GetTick>
 8001c9c:	4602      	mov	r2, r0
 8001c9e:	68fb      	ldr	r3, [r7, #12]
 8001ca0:	1ad3      	subs	r3, r2, r3
 8001ca2:	683a      	ldr	r2, [r7, #0]
 8001ca4:	429a      	cmp	r2, r3
 8001ca6:	d212      	bcs.n	8001cce <HAL_ADC_PollForConversion+0x92>
 8001ca8:	687b      	ldr	r3, [r7, #4]
 8001caa:	681b      	ldr	r3, [r3, #0]
 8001cac:	681b      	ldr	r3, [r3, #0]
 8001cae:	f003 0302 	and.w	r3, r3, #2
 8001cb2:	2b02      	cmp	r3, #2
 8001cb4:	d00b      	beq.n	8001cce <HAL_ADC_PollForConversion+0x92>
 8001cb6:	687b      	ldr	r3, [r7, #4]
 8001cb8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001cba:	f043 0204 	orr.w	r2, r3, #4
 8001cbe:	687b      	ldr	r3, [r7, #4]
 8001cc0:	641a      	str	r2, [r3, #64]	; 0x40
 8001cc2:	687b      	ldr	r3, [r7, #4]
 8001cc4:	2200      	movs	r2, #0
 8001cc6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8001cca:	2303      	movs	r3, #3
 8001ccc:	e03d      	b.n	8001d4a <HAL_ADC_PollForConversion+0x10e>
 8001cce:	687b      	ldr	r3, [r7, #4]
 8001cd0:	681b      	ldr	r3, [r3, #0]
 8001cd2:	681b      	ldr	r3, [r3, #0]
 8001cd4:	f003 0302 	and.w	r3, r3, #2
 8001cd8:	2b02      	cmp	r3, #2
 8001cda:	d1d6      	bne.n	8001c8a <HAL_ADC_PollForConversion+0x4e>
 8001cdc:	687b      	ldr	r3, [r7, #4]
 8001cde:	681b      	ldr	r3, [r3, #0]
 8001ce0:	f06f 0212 	mvn.w	r2, #18
 8001ce4:	601a      	str	r2, [r3, #0]
 8001ce6:	687b      	ldr	r3, [r7, #4]
 8001ce8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001cea:	f443 7200 	orr.w	r2, r3, #512	; 0x200
 8001cee:	687b      	ldr	r3, [r7, #4]
 8001cf0:	641a      	str	r2, [r3, #64]	; 0x40
 8001cf2:	687b      	ldr	r3, [r7, #4]
 8001cf4:	681b      	ldr	r3, [r3, #0]
 8001cf6:	689b      	ldr	r3, [r3, #8]
 8001cf8:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 8001cfc:	2b00      	cmp	r3, #0
 8001cfe:	d123      	bne.n	8001d48 <HAL_ADC_PollForConversion+0x10c>
 8001d00:	687b      	ldr	r3, [r7, #4]
 8001d02:	7e1b      	ldrb	r3, [r3, #24]
 8001d04:	2b00      	cmp	r3, #0
 8001d06:	d11f      	bne.n	8001d48 <HAL_ADC_PollForConversion+0x10c>
 8001d08:	687b      	ldr	r3, [r7, #4]
 8001d0a:	681b      	ldr	r3, [r3, #0]
 8001d0c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8001d0e:	f403 0370 	and.w	r3, r3, #15728640	; 0xf00000
 8001d12:	2b00      	cmp	r3, #0
 8001d14:	d006      	beq.n	8001d24 <HAL_ADC_PollForConversion+0xe8>
 8001d16:	687b      	ldr	r3, [r7, #4]
 8001d18:	681b      	ldr	r3, [r3, #0]
 8001d1a:	689b      	ldr	r3, [r3, #8]
 8001d1c:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8001d20:	2b00      	cmp	r3, #0
 8001d22:	d111      	bne.n	8001d48 <HAL_ADC_PollForConversion+0x10c>
 8001d24:	687b      	ldr	r3, [r7, #4]
 8001d26:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001d28:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 8001d2c:	687b      	ldr	r3, [r7, #4]
 8001d2e:	641a      	str	r2, [r3, #64]	; 0x40
 8001d30:	687b      	ldr	r3, [r7, #4]
 8001d32:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001d34:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8001d38:	2b00      	cmp	r3, #0
 8001d3a:	d105      	bne.n	8001d48 <HAL_ADC_PollForConversion+0x10c>
 8001d3c:	687b      	ldr	r3, [r7, #4]
 8001d3e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001d40:	f043 0201 	orr.w	r2, r3, #1
 8001d44:	687b      	ldr	r3, [r7, #4]
 8001d46:	641a      	str	r2, [r3, #64]	; 0x40
 8001d48:	2300      	movs	r3, #0
 8001d4a:	4618      	mov	r0, r3
 8001d4c:	3710      	adds	r7, #16
 8001d4e:	46bd      	mov	sp, r7
 8001d50:	bd80      	pop	{r7, pc}

08001d52 <HAL_ADC_GetValue>:
 8001d52:	b480      	push	{r7}
 8001d54:	b083      	sub	sp, #12
 8001d56:	af00      	add	r7, sp, #0
 8001d58:	6078      	str	r0, [r7, #4]
 8001d5a:	687b      	ldr	r3, [r7, #4]
 8001d5c:	681b      	ldr	r3, [r3, #0]
 8001d5e:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8001d60:	4618      	mov	r0, r3
 8001d62:	370c      	adds	r7, #12
 8001d64:	46bd      	mov	sp, r7
 8001d66:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001d6a:	4770      	bx	lr

08001d6c <HAL_ADC_ConfigChannel>:
 8001d6c:	b480      	push	{r7}
 8001d6e:	b085      	sub	sp, #20
 8001d70:	af00      	add	r7, sp, #0
 8001d72:	6078      	str	r0, [r7, #4]
 8001d74:	6039      	str	r1, [r7, #0]
 8001d76:	2300      	movs	r3, #0
 8001d78:	60bb      	str	r3, [r7, #8]
 8001d7a:	687b      	ldr	r3, [r7, #4]
 8001d7c:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8001d80:	2b01      	cmp	r3, #1
 8001d82:	d101      	bne.n	8001d88 <HAL_ADC_ConfigChannel+0x1c>
 8001d84:	2302      	movs	r3, #2
 8001d86:	e113      	b.n	8001fb0 <HAL_ADC_ConfigChannel+0x244>
 8001d88:	687b      	ldr	r3, [r7, #4]
 8001d8a:	2201      	movs	r2, #1
 8001d8c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8001d90:	683b      	ldr	r3, [r7, #0]
 8001d92:	681b      	ldr	r3, [r3, #0]
 8001d94:	2b09      	cmp	r3, #9
 8001d96:	d925      	bls.n	8001de4 <HAL_ADC_ConfigChannel+0x78>
 8001d98:	687b      	ldr	r3, [r7, #4]
 8001d9a:	681b      	ldr	r3, [r3, #0]
 8001d9c:	68d9      	ldr	r1, [r3, #12]
 8001d9e:	683b      	ldr	r3, [r7, #0]
 8001da0:	681b      	ldr	r3, [r3, #0]
 8001da2:	b29b      	uxth	r3, r3
 8001da4:	461a      	mov	r2, r3
 8001da6:	4613      	mov	r3, r2
 8001da8:	005b      	lsls	r3, r3, #1
 8001daa:	4413      	add	r3, r2
 8001dac:	3b1e      	subs	r3, #30
 8001dae:	2207      	movs	r2, #7
 8001db0:	fa02 f303 	lsl.w	r3, r2, r3
 8001db4:	43da      	mvns	r2, r3
 8001db6:	687b      	ldr	r3, [r7, #4]
 8001db8:	681b      	ldr	r3, [r3, #0]
 8001dba:	400a      	ands	r2, r1
 8001dbc:	60da      	str	r2, [r3, #12]
 8001dbe:	687b      	ldr	r3, [r7, #4]
 8001dc0:	681b      	ldr	r3, [r3, #0]
 8001dc2:	68d9      	ldr	r1, [r3, #12]
 8001dc4:	683b      	ldr	r3, [r7, #0]
 8001dc6:	689a      	ldr	r2, [r3, #8]
 8001dc8:	683b      	ldr	r3, [r7, #0]
 8001dca:	681b      	ldr	r3, [r3, #0]
 8001dcc:	b29b      	uxth	r3, r3
 8001dce:	4618      	mov	r0, r3
 8001dd0:	4603      	mov	r3, r0
 8001dd2:	005b      	lsls	r3, r3, #1
 8001dd4:	4403      	add	r3, r0
 8001dd6:	3b1e      	subs	r3, #30
 8001dd8:	409a      	lsls	r2, r3
 8001dda:	687b      	ldr	r3, [r7, #4]
 8001ddc:	681b      	ldr	r3, [r3, #0]
 8001dde:	430a      	orrs	r2, r1
 8001de0:	60da      	str	r2, [r3, #12]
 8001de2:	e022      	b.n	8001e2a <HAL_ADC_ConfigChannel+0xbe>
 8001de4:	687b      	ldr	r3, [r7, #4]
 8001de6:	681b      	ldr	r3, [r3, #0]
 8001de8:	6919      	ldr	r1, [r3, #16]
 8001dea:	683b      	ldr	r3, [r7, #0]
 8001dec:	681b      	ldr	r3, [r3, #0]
 8001dee:	b29b      	uxth	r3, r3
 8001df0:	461a      	mov	r2, r3
 8001df2:	4613      	mov	r3, r2
 8001df4:	005b      	lsls	r3, r3, #1
 8001df6:	4413      	add	r3, r2
 8001df8:	2207      	movs	r2, #7
 8001dfa:	fa02 f303 	lsl.w	r3, r2, r3
 8001dfe:	43da      	mvns	r2, r3
 8001e00:	687b      	ldr	r3, [r7, #4]
 8001e02:	681b      	ldr	r3, [r3, #0]
 8001e04:	400a      	ands	r2, r1
 8001e06:	611a      	str	r2, [r3, #16]
 8001e08:	687b      	ldr	r3, [r7, #4]
 8001e0a:	681b      	ldr	r3, [r3, #0]
 8001e0c:	6919      	ldr	r1, [r3, #16]
 8001e0e:	683b      	ldr	r3, [r7, #0]
 8001e10:	689a      	ldr	r2, [r3, #8]
 8001e12:	683b      	ldr	r3, [r7, #0]
 8001e14:	681b      	ldr	r3, [r3, #0]
 8001e16:	b29b      	uxth	r3, r3
 8001e18:	4618      	mov	r0, r3
 8001e1a:	4603      	mov	r3, r0
 8001e1c:	005b      	lsls	r3, r3, #1
 8001e1e:	4403      	add	r3, r0
 8001e20:	409a      	lsls	r2, r3
 8001e22:	687b      	ldr	r3, [r7, #4]
 8001e24:	681b      	ldr	r3, [r3, #0]
 8001e26:	430a      	orrs	r2, r1
 8001e28:	611a      	str	r2, [r3, #16]
 8001e2a:	683b      	ldr	r3, [r7, #0]
 8001e2c:	685b      	ldr	r3, [r3, #4]
 8001e2e:	2b06      	cmp	r3, #6
 8001e30:	d824      	bhi.n	8001e7c <HAL_ADC_ConfigChannel+0x110>
 8001e32:	687b      	ldr	r3, [r7, #4]
 8001e34:	681b      	ldr	r3, [r3, #0]
 8001e36:	6b59      	ldr	r1, [r3, #52]	; 0x34
 8001e38:	683b      	ldr	r3, [r7, #0]
 8001e3a:	685a      	ldr	r2, [r3, #4]
 8001e3c:	4613      	mov	r3, r2
 8001e3e:	009b      	lsls	r3, r3, #2
 8001e40:	4413      	add	r3, r2
 8001e42:	3b05      	subs	r3, #5
 8001e44:	221f      	movs	r2, #31
 8001e46:	fa02 f303 	lsl.w	r3, r2, r3
 8001e4a:	43da      	mvns	r2, r3
 8001e4c:	687b      	ldr	r3, [r7, #4]
 8001e4e:	681b      	ldr	r3, [r3, #0]
 8001e50:	400a      	ands	r2, r1
 8001e52:	635a      	str	r2, [r3, #52]	; 0x34
 8001e54:	687b      	ldr	r3, [r7, #4]
 8001e56:	681b      	ldr	r3, [r3, #0]
 8001e58:	6b59      	ldr	r1, [r3, #52]	; 0x34
 8001e5a:	683b      	ldr	r3, [r7, #0]
 8001e5c:	681b      	ldr	r3, [r3, #0]
 8001e5e:	b29b      	uxth	r3, r3
 8001e60:	4618      	mov	r0, r3
 8001e62:	683b      	ldr	r3, [r7, #0]
 8001e64:	685a      	ldr	r2, [r3, #4]
 8001e66:	4613      	mov	r3, r2
 8001e68:	009b      	lsls	r3, r3, #2
 8001e6a:	4413      	add	r3, r2
 8001e6c:	3b05      	subs	r3, #5
 8001e6e:	fa00 f203 	lsl.w	r2, r0, r3
 8001e72:	687b      	ldr	r3, [r7, #4]
 8001e74:	681b      	ldr	r3, [r3, #0]
 8001e76:	430a      	orrs	r2, r1
 8001e78:	635a      	str	r2, [r3, #52]	; 0x34
 8001e7a:	e04c      	b.n	8001f16 <HAL_ADC_ConfigChannel+0x1aa>
 8001e7c:	683b      	ldr	r3, [r7, #0]
 8001e7e:	685b      	ldr	r3, [r3, #4]
 8001e80:	2b0c      	cmp	r3, #12
 8001e82:	d824      	bhi.n	8001ece <HAL_ADC_ConfigChannel+0x162>
 8001e84:	687b      	ldr	r3, [r7, #4]
 8001e86:	681b      	ldr	r3, [r3, #0]
 8001e88:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001e8a:	683b      	ldr	r3, [r7, #0]
 8001e8c:	685a      	ldr	r2, [r3, #4]
 8001e8e:	4613      	mov	r3, r2
 8001e90:	009b      	lsls	r3, r3, #2
 8001e92:	4413      	add	r3, r2
 8001e94:	3b23      	subs	r3, #35	; 0x23
 8001e96:	221f      	movs	r2, #31
 8001e98:	fa02 f303 	lsl.w	r3, r2, r3
 8001e9c:	43da      	mvns	r2, r3
 8001e9e:	687b      	ldr	r3, [r7, #4]
 8001ea0:	681b      	ldr	r3, [r3, #0]
 8001ea2:	400a      	ands	r2, r1
 8001ea4:	631a      	str	r2, [r3, #48]	; 0x30
 8001ea6:	687b      	ldr	r3, [r7, #4]
 8001ea8:	681b      	ldr	r3, [r3, #0]
 8001eaa:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001eac:	683b      	ldr	r3, [r7, #0]
 8001eae:	681b      	ldr	r3, [r3, #0]
 8001eb0:	b29b      	uxth	r3, r3
 8001eb2:	4618      	mov	r0, r3
 8001eb4:	683b      	ldr	r3, [r7, #0]
 8001eb6:	685a      	ldr	r2, [r3, #4]
 8001eb8:	4613      	mov	r3, r2
 8001eba:	009b      	lsls	r3, r3, #2
 8001ebc:	4413      	add	r3, r2
 8001ebe:	3b23      	subs	r3, #35	; 0x23
 8001ec0:	fa00 f203 	lsl.w	r2, r0, r3
 8001ec4:	687b      	ldr	r3, [r7, #4]
 8001ec6:	681b      	ldr	r3, [r3, #0]
 8001ec8:	430a      	orrs	r2, r1
 8001eca:	631a      	str	r2, [r3, #48]	; 0x30
 8001ecc:	e023      	b.n	8001f16 <HAL_ADC_ConfigChannel+0x1aa>
 8001ece:	687b      	ldr	r3, [r7, #4]
 8001ed0:	681b      	ldr	r3, [r3, #0]
 8001ed2:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8001ed4:	683b      	ldr	r3, [r7, #0]
 8001ed6:	685a      	ldr	r2, [r3, #4]
 8001ed8:	4613      	mov	r3, r2
 8001eda:	009b      	lsls	r3, r3, #2
 8001edc:	4413      	add	r3, r2
 8001ede:	3b41      	subs	r3, #65	; 0x41
 8001ee0:	221f      	movs	r2, #31
 8001ee2:	fa02 f303 	lsl.w	r3, r2, r3
 8001ee6:	43da      	mvns	r2, r3
 8001ee8:	687b      	ldr	r3, [r7, #4]
 8001eea:	681b      	ldr	r3, [r3, #0]
 8001eec:	400a      	ands	r2, r1
 8001eee:	62da      	str	r2, [r3, #44]	; 0x2c
 8001ef0:	687b      	ldr	r3, [r7, #4]
 8001ef2:	681b      	ldr	r3, [r3, #0]
 8001ef4:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8001ef6:	683b      	ldr	r3, [r7, #0]
 8001ef8:	681b      	ldr	r3, [r3, #0]
 8001efa:	b29b      	uxth	r3, r3
 8001efc:	4618      	mov	r0, r3
 8001efe:	683b      	ldr	r3, [r7, #0]
 8001f00:	685a      	ldr	r2, [r3, #4]
 8001f02:	4613      	mov	r3, r2
 8001f04:	009b      	lsls	r3, r3, #2
 8001f06:	4413      	add	r3, r2
 8001f08:	3b41      	subs	r3, #65	; 0x41
 8001f0a:	fa00 f203 	lsl.w	r2, r0, r3
 8001f0e:	687b      	ldr	r3, [r7, #4]
 8001f10:	681b      	ldr	r3, [r3, #0]
 8001f12:	430a      	orrs	r2, r1
 8001f14:	62da      	str	r2, [r3, #44]	; 0x2c
 8001f16:	4b29      	ldr	r3, [pc, #164]	; (8001fbc <HAL_ADC_ConfigChannel+0x250>)
 8001f18:	60fb      	str	r3, [r7, #12]
 8001f1a:	687b      	ldr	r3, [r7, #4]
 8001f1c:	681b      	ldr	r3, [r3, #0]
 8001f1e:	4a28      	ldr	r2, [pc, #160]	; (8001fc0 <HAL_ADC_ConfigChannel+0x254>)
 8001f20:	4293      	cmp	r3, r2
 8001f22:	d10f      	bne.n	8001f44 <HAL_ADC_ConfigChannel+0x1d8>
 8001f24:	683b      	ldr	r3, [r7, #0]
 8001f26:	681b      	ldr	r3, [r3, #0]
 8001f28:	2b12      	cmp	r3, #18
 8001f2a:	d10b      	bne.n	8001f44 <HAL_ADC_ConfigChannel+0x1d8>
 8001f2c:	68fb      	ldr	r3, [r7, #12]
 8001f2e:	685b      	ldr	r3, [r3, #4]
 8001f30:	f423 0200 	bic.w	r2, r3, #8388608	; 0x800000
 8001f34:	68fb      	ldr	r3, [r7, #12]
 8001f36:	605a      	str	r2, [r3, #4]
 8001f38:	68fb      	ldr	r3, [r7, #12]
 8001f3a:	685b      	ldr	r3, [r3, #4]
 8001f3c:	f443 0280 	orr.w	r2, r3, #4194304	; 0x400000
 8001f40:	68fb      	ldr	r3, [r7, #12]
 8001f42:	605a      	str	r2, [r3, #4]
 8001f44:	687b      	ldr	r3, [r7, #4]
 8001f46:	681b      	ldr	r3, [r3, #0]
 8001f48:	4a1d      	ldr	r2, [pc, #116]	; (8001fc0 <HAL_ADC_ConfigChannel+0x254>)
 8001f4a:	4293      	cmp	r3, r2
 8001f4c:	d12b      	bne.n	8001fa6 <HAL_ADC_ConfigChannel+0x23a>
 8001f4e:	683b      	ldr	r3, [r7, #0]
 8001f50:	681b      	ldr	r3, [r3, #0]
 8001f52:	4a1c      	ldr	r2, [pc, #112]	; (8001fc4 <HAL_ADC_ConfigChannel+0x258>)
 8001f54:	4293      	cmp	r3, r2
 8001f56:	d003      	beq.n	8001f60 <HAL_ADC_ConfigChannel+0x1f4>
 8001f58:	683b      	ldr	r3, [r7, #0]
 8001f5a:	681b      	ldr	r3, [r3, #0]
 8001f5c:	2b11      	cmp	r3, #17
 8001f5e:	d122      	bne.n	8001fa6 <HAL_ADC_ConfigChannel+0x23a>
 8001f60:	68fb      	ldr	r3, [r7, #12]
 8001f62:	685b      	ldr	r3, [r3, #4]
 8001f64:	f423 0280 	bic.w	r2, r3, #4194304	; 0x400000
 8001f68:	68fb      	ldr	r3, [r7, #12]
 8001f6a:	605a      	str	r2, [r3, #4]
 8001f6c:	68fb      	ldr	r3, [r7, #12]
 8001f6e:	685b      	ldr	r3, [r3, #4]
 8001f70:	f443 0200 	orr.w	r2, r3, #8388608	; 0x800000
 8001f74:	68fb      	ldr	r3, [r7, #12]
 8001f76:	605a      	str	r2, [r3, #4]
 8001f78:	683b      	ldr	r3, [r7, #0]
 8001f7a:	681b      	ldr	r3, [r3, #0]
 8001f7c:	4a11      	ldr	r2, [pc, #68]	; (8001fc4 <HAL_ADC_ConfigChannel+0x258>)
 8001f7e:	4293      	cmp	r3, r2
 8001f80:	d111      	bne.n	8001fa6 <HAL_ADC_ConfigChannel+0x23a>
 8001f82:	4b11      	ldr	r3, [pc, #68]	; (8001fc8 <HAL_ADC_ConfigChannel+0x25c>)
 8001f84:	681b      	ldr	r3, [r3, #0]
 8001f86:	4a11      	ldr	r2, [pc, #68]	; (8001fcc <HAL_ADC_ConfigChannel+0x260>)
 8001f88:	fba2 2303 	umull	r2, r3, r2, r3
 8001f8c:	0c9a      	lsrs	r2, r3, #18
 8001f8e:	4613      	mov	r3, r2
 8001f90:	009b      	lsls	r3, r3, #2
 8001f92:	4413      	add	r3, r2
 8001f94:	005b      	lsls	r3, r3, #1
 8001f96:	60bb      	str	r3, [r7, #8]
 8001f98:	e002      	b.n	8001fa0 <HAL_ADC_ConfigChannel+0x234>
 8001f9a:	68bb      	ldr	r3, [r7, #8]
 8001f9c:	3b01      	subs	r3, #1
 8001f9e:	60bb      	str	r3, [r7, #8]
 8001fa0:	68bb      	ldr	r3, [r7, #8]
 8001fa2:	2b00      	cmp	r3, #0
 8001fa4:	d1f9      	bne.n	8001f9a <HAL_ADC_ConfigChannel+0x22e>
 8001fa6:	687b      	ldr	r3, [r7, #4]
 8001fa8:	2200      	movs	r2, #0
 8001faa:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8001fae:	2300      	movs	r3, #0
 8001fb0:	4618      	mov	r0, r3
 8001fb2:	3714      	adds	r7, #20
 8001fb4:	46bd      	mov	sp, r7
 8001fb6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001fba:	4770      	bx	lr
 8001fbc:	40012300 	.word	0x40012300
 8001fc0:	40012000 	.word	0x40012000
 8001fc4:	10000012 	.word	0x10000012
 8001fc8:	20000030 	.word	0x20000030
 8001fcc:	431bde83 	.word	0x431bde83

08001fd0 <ADC_Init>:
 8001fd0:	b480      	push	{r7}
 8001fd2:	b085      	sub	sp, #20
 8001fd4:	af00      	add	r7, sp, #0
 8001fd6:	6078      	str	r0, [r7, #4]
 8001fd8:	4b79      	ldr	r3, [pc, #484]	; (80021c0 <ADC_Init+0x1f0>)
 8001fda:	60fb      	str	r3, [r7, #12]
 8001fdc:	68fb      	ldr	r3, [r7, #12]
 8001fde:	685b      	ldr	r3, [r3, #4]
 8001fe0:	f423 3240 	bic.w	r2, r3, #196608	; 0x30000
 8001fe4:	68fb      	ldr	r3, [r7, #12]
 8001fe6:	605a      	str	r2, [r3, #4]
 8001fe8:	68fb      	ldr	r3, [r7, #12]
 8001fea:	685a      	ldr	r2, [r3, #4]
 8001fec:	687b      	ldr	r3, [r7, #4]
 8001fee:	685b      	ldr	r3, [r3, #4]
 8001ff0:	431a      	orrs	r2, r3
 8001ff2:	68fb      	ldr	r3, [r7, #12]
 8001ff4:	605a      	str	r2, [r3, #4]
 8001ff6:	687b      	ldr	r3, [r7, #4]
 8001ff8:	681b      	ldr	r3, [r3, #0]
 8001ffa:	685a      	ldr	r2, [r3, #4]
 8001ffc:	687b      	ldr	r3, [r7, #4]
 8001ffe:	681b      	ldr	r3, [r3, #0]
 8002000:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8002004:	605a      	str	r2, [r3, #4]
 8002006:	687b      	ldr	r3, [r7, #4]
 8002008:	681b      	ldr	r3, [r3, #0]
 800200a:	6859      	ldr	r1, [r3, #4]
 800200c:	687b      	ldr	r3, [r7, #4]
 800200e:	691b      	ldr	r3, [r3, #16]
 8002010:	021a      	lsls	r2, r3, #8
 8002012:	687b      	ldr	r3, [r7, #4]
 8002014:	681b      	ldr	r3, [r3, #0]
 8002016:	430a      	orrs	r2, r1
 8002018:	605a      	str	r2, [r3, #4]
 800201a:	687b      	ldr	r3, [r7, #4]
 800201c:	681b      	ldr	r3, [r3, #0]
 800201e:	685a      	ldr	r2, [r3, #4]
 8002020:	687b      	ldr	r3, [r7, #4]
 8002022:	681b      	ldr	r3, [r3, #0]
 8002024:	f022 7240 	bic.w	r2, r2, #50331648	; 0x3000000
 8002028:	605a      	str	r2, [r3, #4]
 800202a:	687b      	ldr	r3, [r7, #4]
 800202c:	681b      	ldr	r3, [r3, #0]
 800202e:	6859      	ldr	r1, [r3, #4]
 8002030:	687b      	ldr	r3, [r7, #4]
 8002032:	689a      	ldr	r2, [r3, #8]
 8002034:	687b      	ldr	r3, [r7, #4]
 8002036:	681b      	ldr	r3, [r3, #0]
 8002038:	430a      	orrs	r2, r1
 800203a:	605a      	str	r2, [r3, #4]
 800203c:	687b      	ldr	r3, [r7, #4]
 800203e:	681b      	ldr	r3, [r3, #0]
 8002040:	689a      	ldr	r2, [r3, #8]
 8002042:	687b      	ldr	r3, [r7, #4]
 8002044:	681b      	ldr	r3, [r3, #0]
 8002046:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800204a:	609a      	str	r2, [r3, #8]
 800204c:	687b      	ldr	r3, [r7, #4]
 800204e:	681b      	ldr	r3, [r3, #0]
 8002050:	6899      	ldr	r1, [r3, #8]
 8002052:	687b      	ldr	r3, [r7, #4]
 8002054:	68da      	ldr	r2, [r3, #12]
 8002056:	687b      	ldr	r3, [r7, #4]
 8002058:	681b      	ldr	r3, [r3, #0]
 800205a:	430a      	orrs	r2, r1
 800205c:	609a      	str	r2, [r3, #8]
 800205e:	687b      	ldr	r3, [r7, #4]
 8002060:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002062:	4a58      	ldr	r2, [pc, #352]	; (80021c4 <ADC_Init+0x1f4>)
 8002064:	4293      	cmp	r3, r2
 8002066:	d022      	beq.n	80020ae <ADC_Init+0xde>
 8002068:	687b      	ldr	r3, [r7, #4]
 800206a:	681b      	ldr	r3, [r3, #0]
 800206c:	689a      	ldr	r2, [r3, #8]
 800206e:	687b      	ldr	r3, [r7, #4]
 8002070:	681b      	ldr	r3, [r3, #0]
 8002072:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 8002076:	609a      	str	r2, [r3, #8]
 8002078:	687b      	ldr	r3, [r7, #4]
 800207a:	681b      	ldr	r3, [r3, #0]
 800207c:	6899      	ldr	r1, [r3, #8]
 800207e:	687b      	ldr	r3, [r7, #4]
 8002080:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8002082:	687b      	ldr	r3, [r7, #4]
 8002084:	681b      	ldr	r3, [r3, #0]
 8002086:	430a      	orrs	r2, r1
 8002088:	609a      	str	r2, [r3, #8]
 800208a:	687b      	ldr	r3, [r7, #4]
 800208c:	681b      	ldr	r3, [r3, #0]
 800208e:	689a      	ldr	r2, [r3, #8]
 8002090:	687b      	ldr	r3, [r7, #4]
 8002092:	681b      	ldr	r3, [r3, #0]
 8002094:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 8002098:	609a      	str	r2, [r3, #8]
 800209a:	687b      	ldr	r3, [r7, #4]
 800209c:	681b      	ldr	r3, [r3, #0]
 800209e:	6899      	ldr	r1, [r3, #8]
 80020a0:	687b      	ldr	r3, [r7, #4]
 80020a2:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80020a4:	687b      	ldr	r3, [r7, #4]
 80020a6:	681b      	ldr	r3, [r3, #0]
 80020a8:	430a      	orrs	r2, r1
 80020aa:	609a      	str	r2, [r3, #8]
 80020ac:	e00f      	b.n	80020ce <ADC_Init+0xfe>
 80020ae:	687b      	ldr	r3, [r7, #4]
 80020b0:	681b      	ldr	r3, [r3, #0]
 80020b2:	689a      	ldr	r2, [r3, #8]
 80020b4:	687b      	ldr	r3, [r7, #4]
 80020b6:	681b      	ldr	r3, [r3, #0]
 80020b8:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 80020bc:	609a      	str	r2, [r3, #8]
 80020be:	687b      	ldr	r3, [r7, #4]
 80020c0:	681b      	ldr	r3, [r3, #0]
 80020c2:	689a      	ldr	r2, [r3, #8]
 80020c4:	687b      	ldr	r3, [r7, #4]
 80020c6:	681b      	ldr	r3, [r3, #0]
 80020c8:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 80020cc:	609a      	str	r2, [r3, #8]
 80020ce:	687b      	ldr	r3, [r7, #4]
 80020d0:	681b      	ldr	r3, [r3, #0]
 80020d2:	689a      	ldr	r2, [r3, #8]
 80020d4:	687b      	ldr	r3, [r7, #4]
 80020d6:	681b      	ldr	r3, [r3, #0]
 80020d8:	f022 0202 	bic.w	r2, r2, #2
 80020dc:	609a      	str	r2, [r3, #8]
 80020de:	687b      	ldr	r3, [r7, #4]
 80020e0:	681b      	ldr	r3, [r3, #0]
 80020e2:	6899      	ldr	r1, [r3, #8]
 80020e4:	687b      	ldr	r3, [r7, #4]
 80020e6:	7e1b      	ldrb	r3, [r3, #24]
 80020e8:	005a      	lsls	r2, r3, #1
 80020ea:	687b      	ldr	r3, [r7, #4]
 80020ec:	681b      	ldr	r3, [r3, #0]
 80020ee:	430a      	orrs	r2, r1
 80020f0:	609a      	str	r2, [r3, #8]
 80020f2:	687b      	ldr	r3, [r7, #4]
 80020f4:	f893 3020 	ldrb.w	r3, [r3, #32]
 80020f8:	2b00      	cmp	r3, #0
 80020fa:	d01b      	beq.n	8002134 <ADC_Init+0x164>
 80020fc:	687b      	ldr	r3, [r7, #4]
 80020fe:	681b      	ldr	r3, [r3, #0]
 8002100:	685a      	ldr	r2, [r3, #4]
 8002102:	687b      	ldr	r3, [r7, #4]
 8002104:	681b      	ldr	r3, [r3, #0]
 8002106:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800210a:	605a      	str	r2, [r3, #4]
 800210c:	687b      	ldr	r3, [r7, #4]
 800210e:	681b      	ldr	r3, [r3, #0]
 8002110:	685a      	ldr	r2, [r3, #4]
 8002112:	687b      	ldr	r3, [r7, #4]
 8002114:	681b      	ldr	r3, [r3, #0]
 8002116:	f422 4260 	bic.w	r2, r2, #57344	; 0xe000
 800211a:	605a      	str	r2, [r3, #4]
 800211c:	687b      	ldr	r3, [r7, #4]
 800211e:	681b      	ldr	r3, [r3, #0]
 8002120:	6859      	ldr	r1, [r3, #4]
 8002122:	687b      	ldr	r3, [r7, #4]
 8002124:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002126:	3b01      	subs	r3, #1
 8002128:	035a      	lsls	r2, r3, #13
 800212a:	687b      	ldr	r3, [r7, #4]
 800212c:	681b      	ldr	r3, [r3, #0]
 800212e:	430a      	orrs	r2, r1
 8002130:	605a      	str	r2, [r3, #4]
 8002132:	e007      	b.n	8002144 <ADC_Init+0x174>
 8002134:	687b      	ldr	r3, [r7, #4]
 8002136:	681b      	ldr	r3, [r3, #0]
 8002138:	685a      	ldr	r2, [r3, #4]
 800213a:	687b      	ldr	r3, [r7, #4]
 800213c:	681b      	ldr	r3, [r3, #0]
 800213e:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8002142:	605a      	str	r2, [r3, #4]
 8002144:	687b      	ldr	r3, [r7, #4]
 8002146:	681b      	ldr	r3, [r3, #0]
 8002148:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800214a:	687b      	ldr	r3, [r7, #4]
 800214c:	681b      	ldr	r3, [r3, #0]
 800214e:	f422 0270 	bic.w	r2, r2, #15728640	; 0xf00000
 8002152:	62da      	str	r2, [r3, #44]	; 0x2c
 8002154:	687b      	ldr	r3, [r7, #4]
 8002156:	681b      	ldr	r3, [r3, #0]
 8002158:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 800215a:	687b      	ldr	r3, [r7, #4]
 800215c:	69db      	ldr	r3, [r3, #28]
 800215e:	3b01      	subs	r3, #1
 8002160:	051a      	lsls	r2, r3, #20
 8002162:	687b      	ldr	r3, [r7, #4]
 8002164:	681b      	ldr	r3, [r3, #0]
 8002166:	430a      	orrs	r2, r1
 8002168:	62da      	str	r2, [r3, #44]	; 0x2c
 800216a:	687b      	ldr	r3, [r7, #4]
 800216c:	681b      	ldr	r3, [r3, #0]
 800216e:	689a      	ldr	r2, [r3, #8]
 8002170:	687b      	ldr	r3, [r7, #4]
 8002172:	681b      	ldr	r3, [r3, #0]
 8002174:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 8002178:	609a      	str	r2, [r3, #8]
 800217a:	687b      	ldr	r3, [r7, #4]
 800217c:	681b      	ldr	r3, [r3, #0]
 800217e:	6899      	ldr	r1, [r3, #8]
 8002180:	687b      	ldr	r3, [r7, #4]
 8002182:	f893 3030 	ldrb.w	r3, [r3, #48]	; 0x30
 8002186:	025a      	lsls	r2, r3, #9
 8002188:	687b      	ldr	r3, [r7, #4]
 800218a:	681b      	ldr	r3, [r3, #0]
 800218c:	430a      	orrs	r2, r1
 800218e:	609a      	str	r2, [r3, #8]
 8002190:	687b      	ldr	r3, [r7, #4]
 8002192:	681b      	ldr	r3, [r3, #0]
 8002194:	689a      	ldr	r2, [r3, #8]
 8002196:	687b      	ldr	r3, [r7, #4]
 8002198:	681b      	ldr	r3, [r3, #0]
 800219a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800219e:	609a      	str	r2, [r3, #8]
 80021a0:	687b      	ldr	r3, [r7, #4]
 80021a2:	681b      	ldr	r3, [r3, #0]
 80021a4:	6899      	ldr	r1, [r3, #8]
 80021a6:	687b      	ldr	r3, [r7, #4]
 80021a8:	695b      	ldr	r3, [r3, #20]
 80021aa:	029a      	lsls	r2, r3, #10
 80021ac:	687b      	ldr	r3, [r7, #4]
 80021ae:	681b      	ldr	r3, [r3, #0]
 80021b0:	430a      	orrs	r2, r1
 80021b2:	609a      	str	r2, [r3, #8]
 80021b4:	bf00      	nop
 80021b6:	3714      	adds	r7, #20
 80021b8:	46bd      	mov	sp, r7
 80021ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80021be:	4770      	bx	lr
 80021c0:	40012300 	.word	0x40012300
 80021c4:	0f000001 	.word	0x0f000001

080021c8 <__NVIC_SetPriorityGrouping>:
 80021c8:	b480      	push	{r7}
 80021ca:	b085      	sub	sp, #20
 80021cc:	af00      	add	r7, sp, #0
 80021ce:	6078      	str	r0, [r7, #4]
 80021d0:	687b      	ldr	r3, [r7, #4]
 80021d2:	f003 0307 	and.w	r3, r3, #7
 80021d6:	60fb      	str	r3, [r7, #12]
 80021d8:	4b0c      	ldr	r3, [pc, #48]	; (800220c <__NVIC_SetPriorityGrouping+0x44>)
 80021da:	68db      	ldr	r3, [r3, #12]
 80021dc:	60bb      	str	r3, [r7, #8]
 80021de:	68ba      	ldr	r2, [r7, #8]
 80021e0:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 80021e4:	4013      	ands	r3, r2
 80021e6:	60bb      	str	r3, [r7, #8]
 80021e8:	68fb      	ldr	r3, [r7, #12]
 80021ea:	021a      	lsls	r2, r3, #8
 80021ec:	68bb      	ldr	r3, [r7, #8]
 80021ee:	4313      	orrs	r3, r2
 80021f0:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 80021f4:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80021f8:	60bb      	str	r3, [r7, #8]
 80021fa:	4a04      	ldr	r2, [pc, #16]	; (800220c <__NVIC_SetPriorityGrouping+0x44>)
 80021fc:	68bb      	ldr	r3, [r7, #8]
 80021fe:	60d3      	str	r3, [r2, #12]
 8002200:	bf00      	nop
 8002202:	3714      	adds	r7, #20
 8002204:	46bd      	mov	sp, r7
 8002206:	f85d 7b04 	ldr.w	r7, [sp], #4
 800220a:	4770      	bx	lr
 800220c:	e000ed00 	.word	0xe000ed00

08002210 <__NVIC_GetPriorityGrouping>:
 8002210:	b480      	push	{r7}
 8002212:	af00      	add	r7, sp, #0
 8002214:	4b04      	ldr	r3, [pc, #16]	; (8002228 <__NVIC_GetPriorityGrouping+0x18>)
 8002216:	68db      	ldr	r3, [r3, #12]
 8002218:	0a1b      	lsrs	r3, r3, #8
 800221a:	f003 0307 	and.w	r3, r3, #7
 800221e:	4618      	mov	r0, r3
 8002220:	46bd      	mov	sp, r7
 8002222:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002226:	4770      	bx	lr
 8002228:	e000ed00 	.word	0xe000ed00

0800222c <__NVIC_EnableIRQ>:
 800222c:	b480      	push	{r7}
 800222e:	b083      	sub	sp, #12
 8002230:	af00      	add	r7, sp, #0
 8002232:	4603      	mov	r3, r0
 8002234:	71fb      	strb	r3, [r7, #7]
 8002236:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800223a:	2b00      	cmp	r3, #0
 800223c:	db0b      	blt.n	8002256 <__NVIC_EnableIRQ+0x2a>
 800223e:	79fb      	ldrb	r3, [r7, #7]
 8002240:	f003 021f 	and.w	r2, r3, #31
 8002244:	4907      	ldr	r1, [pc, #28]	; (8002264 <__NVIC_EnableIRQ+0x38>)
 8002246:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800224a:	095b      	lsrs	r3, r3, #5
 800224c:	2001      	movs	r0, #1
 800224e:	fa00 f202 	lsl.w	r2, r0, r2
 8002252:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8002256:	bf00      	nop
 8002258:	370c      	adds	r7, #12
 800225a:	46bd      	mov	sp, r7
 800225c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002260:	4770      	bx	lr
 8002262:	bf00      	nop
 8002264:	e000e100 	.word	0xe000e100

08002268 <__NVIC_SetPriority>:
 8002268:	b480      	push	{r7}
 800226a:	b083      	sub	sp, #12
 800226c:	af00      	add	r7, sp, #0
 800226e:	4603      	mov	r3, r0
 8002270:	6039      	str	r1, [r7, #0]
 8002272:	71fb      	strb	r3, [r7, #7]
 8002274:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002278:	2b00      	cmp	r3, #0
 800227a:	db0a      	blt.n	8002292 <__NVIC_SetPriority+0x2a>
 800227c:	683b      	ldr	r3, [r7, #0]
 800227e:	b2da      	uxtb	r2, r3
 8002280:	490c      	ldr	r1, [pc, #48]	; (80022b4 <__NVIC_SetPriority+0x4c>)
 8002282:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002286:	0112      	lsls	r2, r2, #4
 8002288:	b2d2      	uxtb	r2, r2
 800228a:	440b      	add	r3, r1
 800228c:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8002290:	e00a      	b.n	80022a8 <__NVIC_SetPriority+0x40>
 8002292:	683b      	ldr	r3, [r7, #0]
 8002294:	b2da      	uxtb	r2, r3
 8002296:	4908      	ldr	r1, [pc, #32]	; (80022b8 <__NVIC_SetPriority+0x50>)
 8002298:	79fb      	ldrb	r3, [r7, #7]
 800229a:	f003 030f 	and.w	r3, r3, #15
 800229e:	3b04      	subs	r3, #4
 80022a0:	0112      	lsls	r2, r2, #4
 80022a2:	b2d2      	uxtb	r2, r2
 80022a4:	440b      	add	r3, r1
 80022a6:	761a      	strb	r2, [r3, #24]
 80022a8:	bf00      	nop
 80022aa:	370c      	adds	r7, #12
 80022ac:	46bd      	mov	sp, r7
 80022ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 80022b2:	4770      	bx	lr
 80022b4:	e000e100 	.word	0xe000e100
 80022b8:	e000ed00 	.word	0xe000ed00

080022bc <NVIC_EncodePriority>:
 80022bc:	b480      	push	{r7}
 80022be:	b089      	sub	sp, #36	; 0x24
 80022c0:	af00      	add	r7, sp, #0
 80022c2:	60f8      	str	r0, [r7, #12]
 80022c4:	60b9      	str	r1, [r7, #8]
 80022c6:	607a      	str	r2, [r7, #4]
 80022c8:	68fb      	ldr	r3, [r7, #12]
 80022ca:	f003 0307 	and.w	r3, r3, #7
 80022ce:	61fb      	str	r3, [r7, #28]
 80022d0:	69fb      	ldr	r3, [r7, #28]
 80022d2:	f1c3 0307 	rsb	r3, r3, #7
 80022d6:	2b04      	cmp	r3, #4
 80022d8:	bf28      	it	cs
 80022da:	2304      	movcs	r3, #4
 80022dc:	61bb      	str	r3, [r7, #24]
 80022de:	69fb      	ldr	r3, [r7, #28]
 80022e0:	3304      	adds	r3, #4
 80022e2:	2b06      	cmp	r3, #6
 80022e4:	d902      	bls.n	80022ec <NVIC_EncodePriority+0x30>
 80022e6:	69fb      	ldr	r3, [r7, #28]
 80022e8:	3b03      	subs	r3, #3
 80022ea:	e000      	b.n	80022ee <NVIC_EncodePriority+0x32>
 80022ec:	2300      	movs	r3, #0
 80022ee:	617b      	str	r3, [r7, #20]
 80022f0:	f04f 32ff 	mov.w	r2, #4294967295
 80022f4:	69bb      	ldr	r3, [r7, #24]
 80022f6:	fa02 f303 	lsl.w	r3, r2, r3
 80022fa:	43da      	mvns	r2, r3
 80022fc:	68bb      	ldr	r3, [r7, #8]
 80022fe:	401a      	ands	r2, r3
 8002300:	697b      	ldr	r3, [r7, #20]
 8002302:	409a      	lsls	r2, r3
 8002304:	f04f 31ff 	mov.w	r1, #4294967295
 8002308:	697b      	ldr	r3, [r7, #20]
 800230a:	fa01 f303 	lsl.w	r3, r1, r3
 800230e:	43d9      	mvns	r1, r3
 8002310:	687b      	ldr	r3, [r7, #4]
 8002312:	400b      	ands	r3, r1
 8002314:	4313      	orrs	r3, r2
 8002316:	4618      	mov	r0, r3
 8002318:	3724      	adds	r7, #36	; 0x24
 800231a:	46bd      	mov	sp, r7
 800231c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002320:	4770      	bx	lr
	...

08002324 <SysTick_Config>:
 8002324:	b580      	push	{r7, lr}
 8002326:	b082      	sub	sp, #8
 8002328:	af00      	add	r7, sp, #0
 800232a:	6078      	str	r0, [r7, #4]
 800232c:	687b      	ldr	r3, [r7, #4]
 800232e:	3b01      	subs	r3, #1
 8002330:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8002334:	d301      	bcc.n	800233a <SysTick_Config+0x16>
 8002336:	2301      	movs	r3, #1
 8002338:	e00f      	b.n	800235a <SysTick_Config+0x36>
 800233a:	4a0a      	ldr	r2, [pc, #40]	; (8002364 <SysTick_Config+0x40>)
 800233c:	687b      	ldr	r3, [r7, #4]
 800233e:	3b01      	subs	r3, #1
 8002340:	6053      	str	r3, [r2, #4]
 8002342:	210f      	movs	r1, #15
 8002344:	f04f 30ff 	mov.w	r0, #4294967295
 8002348:	f7ff ff8e 	bl	8002268 <__NVIC_SetPriority>
 800234c:	4b05      	ldr	r3, [pc, #20]	; (8002364 <SysTick_Config+0x40>)
 800234e:	2200      	movs	r2, #0
 8002350:	609a      	str	r2, [r3, #8]
 8002352:	4b04      	ldr	r3, [pc, #16]	; (8002364 <SysTick_Config+0x40>)
 8002354:	2207      	movs	r2, #7
 8002356:	601a      	str	r2, [r3, #0]
 8002358:	2300      	movs	r3, #0
 800235a:	4618      	mov	r0, r3
 800235c:	3708      	adds	r7, #8
 800235e:	46bd      	mov	sp, r7
 8002360:	bd80      	pop	{r7, pc}
 8002362:	bf00      	nop
 8002364:	e000e010 	.word	0xe000e010

08002368 <HAL_NVIC_SetPriorityGrouping>:
 8002368:	b580      	push	{r7, lr}
 800236a:	b082      	sub	sp, #8
 800236c:	af00      	add	r7, sp, #0
 800236e:	6078      	str	r0, [r7, #4]
 8002370:	6878      	ldr	r0, [r7, #4]
 8002372:	f7ff ff29 	bl	80021c8 <__NVIC_SetPriorityGrouping>
 8002376:	bf00      	nop
 8002378:	3708      	adds	r7, #8
 800237a:	46bd      	mov	sp, r7
 800237c:	bd80      	pop	{r7, pc}

0800237e <HAL_NVIC_SetPriority>:
 800237e:	b580      	push	{r7, lr}
 8002380:	b086      	sub	sp, #24
 8002382:	af00      	add	r7, sp, #0
 8002384:	4603      	mov	r3, r0
 8002386:	60b9      	str	r1, [r7, #8]
 8002388:	607a      	str	r2, [r7, #4]
 800238a:	73fb      	strb	r3, [r7, #15]
 800238c:	2300      	movs	r3, #0
 800238e:	617b      	str	r3, [r7, #20]
 8002390:	f7ff ff3e 	bl	8002210 <__NVIC_GetPriorityGrouping>
 8002394:	6178      	str	r0, [r7, #20]
 8002396:	687a      	ldr	r2, [r7, #4]
 8002398:	68b9      	ldr	r1, [r7, #8]
 800239a:	6978      	ldr	r0, [r7, #20]
 800239c:	f7ff ff8e 	bl	80022bc <NVIC_EncodePriority>
 80023a0:	4602      	mov	r2, r0
 80023a2:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80023a6:	4611      	mov	r1, r2
 80023a8:	4618      	mov	r0, r3
 80023aa:	f7ff ff5d 	bl	8002268 <__NVIC_SetPriority>
 80023ae:	bf00      	nop
 80023b0:	3718      	adds	r7, #24
 80023b2:	46bd      	mov	sp, r7
 80023b4:	bd80      	pop	{r7, pc}

080023b6 <HAL_NVIC_EnableIRQ>:
 80023b6:	b580      	push	{r7, lr}
 80023b8:	b082      	sub	sp, #8
 80023ba:	af00      	add	r7, sp, #0
 80023bc:	4603      	mov	r3, r0
 80023be:	71fb      	strb	r3, [r7, #7]
 80023c0:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80023c4:	4618      	mov	r0, r3
 80023c6:	f7ff ff31 	bl	800222c <__NVIC_EnableIRQ>
 80023ca:	bf00      	nop
 80023cc:	3708      	adds	r7, #8
 80023ce:	46bd      	mov	sp, r7
 80023d0:	bd80      	pop	{r7, pc}

080023d2 <HAL_SYSTICK_Config>:
 80023d2:	b580      	push	{r7, lr}
 80023d4:	b082      	sub	sp, #8
 80023d6:	af00      	add	r7, sp, #0
 80023d8:	6078      	str	r0, [r7, #4]
 80023da:	6878      	ldr	r0, [r7, #4]
 80023dc:	f7ff ffa2 	bl	8002324 <SysTick_Config>
 80023e0:	4603      	mov	r3, r0
 80023e2:	4618      	mov	r0, r3
 80023e4:	3708      	adds	r7, #8
 80023e6:	46bd      	mov	sp, r7
 80023e8:	bd80      	pop	{r7, pc}
	...

080023ec <HAL_GPIO_Init>:
 80023ec:	b480      	push	{r7}
 80023ee:	b089      	sub	sp, #36	; 0x24
 80023f0:	af00      	add	r7, sp, #0
 80023f2:	6078      	str	r0, [r7, #4]
 80023f4:	6039      	str	r1, [r7, #0]
 80023f6:	2300      	movs	r3, #0
 80023f8:	617b      	str	r3, [r7, #20]
 80023fa:	2300      	movs	r3, #0
 80023fc:	613b      	str	r3, [r7, #16]
 80023fe:	2300      	movs	r3, #0
 8002400:	61bb      	str	r3, [r7, #24]
 8002402:	2300      	movs	r3, #0
 8002404:	61fb      	str	r3, [r7, #28]
 8002406:	e159      	b.n	80026bc <HAL_GPIO_Init+0x2d0>
 8002408:	2201      	movs	r2, #1
 800240a:	69fb      	ldr	r3, [r7, #28]
 800240c:	fa02 f303 	lsl.w	r3, r2, r3
 8002410:	617b      	str	r3, [r7, #20]
 8002412:	683b      	ldr	r3, [r7, #0]
 8002414:	681b      	ldr	r3, [r3, #0]
 8002416:	697a      	ldr	r2, [r7, #20]
 8002418:	4013      	ands	r3, r2
 800241a:	613b      	str	r3, [r7, #16]
 800241c:	693a      	ldr	r2, [r7, #16]
 800241e:	697b      	ldr	r3, [r7, #20]
 8002420:	429a      	cmp	r2, r3
 8002422:	f040 8148 	bne.w	80026b6 <HAL_GPIO_Init+0x2ca>
 8002426:	683b      	ldr	r3, [r7, #0]
 8002428:	685b      	ldr	r3, [r3, #4]
 800242a:	f003 0303 	and.w	r3, r3, #3
 800242e:	2b01      	cmp	r3, #1
 8002430:	d005      	beq.n	800243e <HAL_GPIO_Init+0x52>
 8002432:	683b      	ldr	r3, [r7, #0]
 8002434:	685b      	ldr	r3, [r3, #4]
 8002436:	f003 0303 	and.w	r3, r3, #3
 800243a:	2b02      	cmp	r3, #2
 800243c:	d130      	bne.n	80024a0 <HAL_GPIO_Init+0xb4>
 800243e:	687b      	ldr	r3, [r7, #4]
 8002440:	689b      	ldr	r3, [r3, #8]
 8002442:	61bb      	str	r3, [r7, #24]
 8002444:	69fb      	ldr	r3, [r7, #28]
 8002446:	005b      	lsls	r3, r3, #1
 8002448:	2203      	movs	r2, #3
 800244a:	fa02 f303 	lsl.w	r3, r2, r3
 800244e:	43db      	mvns	r3, r3
 8002450:	69ba      	ldr	r2, [r7, #24]
 8002452:	4013      	ands	r3, r2
 8002454:	61bb      	str	r3, [r7, #24]
 8002456:	683b      	ldr	r3, [r7, #0]
 8002458:	68da      	ldr	r2, [r3, #12]
 800245a:	69fb      	ldr	r3, [r7, #28]
 800245c:	005b      	lsls	r3, r3, #1
 800245e:	fa02 f303 	lsl.w	r3, r2, r3
 8002462:	69ba      	ldr	r2, [r7, #24]
 8002464:	4313      	orrs	r3, r2
 8002466:	61bb      	str	r3, [r7, #24]
 8002468:	687b      	ldr	r3, [r7, #4]
 800246a:	69ba      	ldr	r2, [r7, #24]
 800246c:	609a      	str	r2, [r3, #8]
 800246e:	687b      	ldr	r3, [r7, #4]
 8002470:	685b      	ldr	r3, [r3, #4]
 8002472:	61bb      	str	r3, [r7, #24]
 8002474:	2201      	movs	r2, #1
 8002476:	69fb      	ldr	r3, [r7, #28]
 8002478:	fa02 f303 	lsl.w	r3, r2, r3
 800247c:	43db      	mvns	r3, r3
 800247e:	69ba      	ldr	r2, [r7, #24]
 8002480:	4013      	ands	r3, r2
 8002482:	61bb      	str	r3, [r7, #24]
 8002484:	683b      	ldr	r3, [r7, #0]
 8002486:	685b      	ldr	r3, [r3, #4]
 8002488:	091b      	lsrs	r3, r3, #4
 800248a:	f003 0201 	and.w	r2, r3, #1
 800248e:	69fb      	ldr	r3, [r7, #28]
 8002490:	fa02 f303 	lsl.w	r3, r2, r3
 8002494:	69ba      	ldr	r2, [r7, #24]
 8002496:	4313      	orrs	r3, r2
 8002498:	61bb      	str	r3, [r7, #24]
 800249a:	687b      	ldr	r3, [r7, #4]
 800249c:	69ba      	ldr	r2, [r7, #24]
 800249e:	605a      	str	r2, [r3, #4]
 80024a0:	683b      	ldr	r3, [r7, #0]
 80024a2:	685b      	ldr	r3, [r3, #4]
 80024a4:	f003 0303 	and.w	r3, r3, #3
 80024a8:	2b03      	cmp	r3, #3
 80024aa:	d017      	beq.n	80024dc <HAL_GPIO_Init+0xf0>
 80024ac:	687b      	ldr	r3, [r7, #4]
 80024ae:	68db      	ldr	r3, [r3, #12]
 80024b0:	61bb      	str	r3, [r7, #24]
 80024b2:	69fb      	ldr	r3, [r7, #28]
 80024b4:	005b      	lsls	r3, r3, #1
 80024b6:	2203      	movs	r2, #3
 80024b8:	fa02 f303 	lsl.w	r3, r2, r3
 80024bc:	43db      	mvns	r3, r3
 80024be:	69ba      	ldr	r2, [r7, #24]
 80024c0:	4013      	ands	r3, r2
 80024c2:	61bb      	str	r3, [r7, #24]
 80024c4:	683b      	ldr	r3, [r7, #0]
 80024c6:	689a      	ldr	r2, [r3, #8]
 80024c8:	69fb      	ldr	r3, [r7, #28]
 80024ca:	005b      	lsls	r3, r3, #1
 80024cc:	fa02 f303 	lsl.w	r3, r2, r3
 80024d0:	69ba      	ldr	r2, [r7, #24]
 80024d2:	4313      	orrs	r3, r2
 80024d4:	61bb      	str	r3, [r7, #24]
 80024d6:	687b      	ldr	r3, [r7, #4]
 80024d8:	69ba      	ldr	r2, [r7, #24]
 80024da:	60da      	str	r2, [r3, #12]
 80024dc:	683b      	ldr	r3, [r7, #0]
 80024de:	685b      	ldr	r3, [r3, #4]
 80024e0:	f003 0303 	and.w	r3, r3, #3
 80024e4:	2b02      	cmp	r3, #2
 80024e6:	d123      	bne.n	8002530 <HAL_GPIO_Init+0x144>
 80024e8:	69fb      	ldr	r3, [r7, #28]
 80024ea:	08da      	lsrs	r2, r3, #3
 80024ec:	687b      	ldr	r3, [r7, #4]
 80024ee:	3208      	adds	r2, #8
 80024f0:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80024f4:	61bb      	str	r3, [r7, #24]
 80024f6:	69fb      	ldr	r3, [r7, #28]
 80024f8:	f003 0307 	and.w	r3, r3, #7
 80024fc:	009b      	lsls	r3, r3, #2
 80024fe:	220f      	movs	r2, #15
 8002500:	fa02 f303 	lsl.w	r3, r2, r3
 8002504:	43db      	mvns	r3, r3
 8002506:	69ba      	ldr	r2, [r7, #24]
 8002508:	4013      	ands	r3, r2
 800250a:	61bb      	str	r3, [r7, #24]
 800250c:	683b      	ldr	r3, [r7, #0]
 800250e:	691a      	ldr	r2, [r3, #16]
 8002510:	69fb      	ldr	r3, [r7, #28]
 8002512:	f003 0307 	and.w	r3, r3, #7
 8002516:	009b      	lsls	r3, r3, #2
 8002518:	fa02 f303 	lsl.w	r3, r2, r3
 800251c:	69ba      	ldr	r2, [r7, #24]
 800251e:	4313      	orrs	r3, r2
 8002520:	61bb      	str	r3, [r7, #24]
 8002522:	69fb      	ldr	r3, [r7, #28]
 8002524:	08da      	lsrs	r2, r3, #3
 8002526:	687b      	ldr	r3, [r7, #4]
 8002528:	3208      	adds	r2, #8
 800252a:	69b9      	ldr	r1, [r7, #24]
 800252c:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8002530:	687b      	ldr	r3, [r7, #4]
 8002532:	681b      	ldr	r3, [r3, #0]
 8002534:	61bb      	str	r3, [r7, #24]
 8002536:	69fb      	ldr	r3, [r7, #28]
 8002538:	005b      	lsls	r3, r3, #1
 800253a:	2203      	movs	r2, #3
 800253c:	fa02 f303 	lsl.w	r3, r2, r3
 8002540:	43db      	mvns	r3, r3
 8002542:	69ba      	ldr	r2, [r7, #24]
 8002544:	4013      	ands	r3, r2
 8002546:	61bb      	str	r3, [r7, #24]
 8002548:	683b      	ldr	r3, [r7, #0]
 800254a:	685b      	ldr	r3, [r3, #4]
 800254c:	f003 0203 	and.w	r2, r3, #3
 8002550:	69fb      	ldr	r3, [r7, #28]
 8002552:	005b      	lsls	r3, r3, #1
 8002554:	fa02 f303 	lsl.w	r3, r2, r3
 8002558:	69ba      	ldr	r2, [r7, #24]
 800255a:	4313      	orrs	r3, r2
 800255c:	61bb      	str	r3, [r7, #24]
 800255e:	687b      	ldr	r3, [r7, #4]
 8002560:	69ba      	ldr	r2, [r7, #24]
 8002562:	601a      	str	r2, [r3, #0]
 8002564:	683b      	ldr	r3, [r7, #0]
 8002566:	685b      	ldr	r3, [r3, #4]
 8002568:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 800256c:	2b00      	cmp	r3, #0
 800256e:	f000 80a2 	beq.w	80026b6 <HAL_GPIO_Init+0x2ca>
 8002572:	2300      	movs	r3, #0
 8002574:	60fb      	str	r3, [r7, #12]
 8002576:	4b57      	ldr	r3, [pc, #348]	; (80026d4 <HAL_GPIO_Init+0x2e8>)
 8002578:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800257a:	4a56      	ldr	r2, [pc, #344]	; (80026d4 <HAL_GPIO_Init+0x2e8>)
 800257c:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8002580:	6453      	str	r3, [r2, #68]	; 0x44
 8002582:	4b54      	ldr	r3, [pc, #336]	; (80026d4 <HAL_GPIO_Init+0x2e8>)
 8002584:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002586:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 800258a:	60fb      	str	r3, [r7, #12]
 800258c:	68fb      	ldr	r3, [r7, #12]
 800258e:	4a52      	ldr	r2, [pc, #328]	; (80026d8 <HAL_GPIO_Init+0x2ec>)
 8002590:	69fb      	ldr	r3, [r7, #28]
 8002592:	089b      	lsrs	r3, r3, #2
 8002594:	3302      	adds	r3, #2
 8002596:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800259a:	61bb      	str	r3, [r7, #24]
 800259c:	69fb      	ldr	r3, [r7, #28]
 800259e:	f003 0303 	and.w	r3, r3, #3
 80025a2:	009b      	lsls	r3, r3, #2
 80025a4:	220f      	movs	r2, #15
 80025a6:	fa02 f303 	lsl.w	r3, r2, r3
 80025aa:	43db      	mvns	r3, r3
 80025ac:	69ba      	ldr	r2, [r7, #24]
 80025ae:	4013      	ands	r3, r2
 80025b0:	61bb      	str	r3, [r7, #24]
 80025b2:	687b      	ldr	r3, [r7, #4]
 80025b4:	4a49      	ldr	r2, [pc, #292]	; (80026dc <HAL_GPIO_Init+0x2f0>)
 80025b6:	4293      	cmp	r3, r2
 80025b8:	d019      	beq.n	80025ee <HAL_GPIO_Init+0x202>
 80025ba:	687b      	ldr	r3, [r7, #4]
 80025bc:	4a48      	ldr	r2, [pc, #288]	; (80026e0 <HAL_GPIO_Init+0x2f4>)
 80025be:	4293      	cmp	r3, r2
 80025c0:	d013      	beq.n	80025ea <HAL_GPIO_Init+0x1fe>
 80025c2:	687b      	ldr	r3, [r7, #4]
 80025c4:	4a47      	ldr	r2, [pc, #284]	; (80026e4 <HAL_GPIO_Init+0x2f8>)
 80025c6:	4293      	cmp	r3, r2
 80025c8:	d00d      	beq.n	80025e6 <HAL_GPIO_Init+0x1fa>
 80025ca:	687b      	ldr	r3, [r7, #4]
 80025cc:	4a46      	ldr	r2, [pc, #280]	; (80026e8 <HAL_GPIO_Init+0x2fc>)
 80025ce:	4293      	cmp	r3, r2
 80025d0:	d007      	beq.n	80025e2 <HAL_GPIO_Init+0x1f6>
 80025d2:	687b      	ldr	r3, [r7, #4]
 80025d4:	4a45      	ldr	r2, [pc, #276]	; (80026ec <HAL_GPIO_Init+0x300>)
 80025d6:	4293      	cmp	r3, r2
 80025d8:	d101      	bne.n	80025de <HAL_GPIO_Init+0x1f2>
 80025da:	2304      	movs	r3, #4
 80025dc:	e008      	b.n	80025f0 <HAL_GPIO_Init+0x204>
 80025de:	2307      	movs	r3, #7
 80025e0:	e006      	b.n	80025f0 <HAL_GPIO_Init+0x204>
 80025e2:	2303      	movs	r3, #3
 80025e4:	e004      	b.n	80025f0 <HAL_GPIO_Init+0x204>
 80025e6:	2302      	movs	r3, #2
 80025e8:	e002      	b.n	80025f0 <HAL_GPIO_Init+0x204>
 80025ea:	2301      	movs	r3, #1
 80025ec:	e000      	b.n	80025f0 <HAL_GPIO_Init+0x204>
 80025ee:	2300      	movs	r3, #0
 80025f0:	69fa      	ldr	r2, [r7, #28]
 80025f2:	f002 0203 	and.w	r2, r2, #3
 80025f6:	0092      	lsls	r2, r2, #2
 80025f8:	4093      	lsls	r3, r2
 80025fa:	69ba      	ldr	r2, [r7, #24]
 80025fc:	4313      	orrs	r3, r2
 80025fe:	61bb      	str	r3, [r7, #24]
 8002600:	4935      	ldr	r1, [pc, #212]	; (80026d8 <HAL_GPIO_Init+0x2ec>)
 8002602:	69fb      	ldr	r3, [r7, #28]
 8002604:	089b      	lsrs	r3, r3, #2
 8002606:	3302      	adds	r3, #2
 8002608:	69ba      	ldr	r2, [r7, #24]
 800260a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 800260e:	4b38      	ldr	r3, [pc, #224]	; (80026f0 <HAL_GPIO_Init+0x304>)
 8002610:	689b      	ldr	r3, [r3, #8]
 8002612:	61bb      	str	r3, [r7, #24]
 8002614:	693b      	ldr	r3, [r7, #16]
 8002616:	43db      	mvns	r3, r3
 8002618:	69ba      	ldr	r2, [r7, #24]
 800261a:	4013      	ands	r3, r2
 800261c:	61bb      	str	r3, [r7, #24]
 800261e:	683b      	ldr	r3, [r7, #0]
 8002620:	685b      	ldr	r3, [r3, #4]
 8002622:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8002626:	2b00      	cmp	r3, #0
 8002628:	d003      	beq.n	8002632 <HAL_GPIO_Init+0x246>
 800262a:	69ba      	ldr	r2, [r7, #24]
 800262c:	693b      	ldr	r3, [r7, #16]
 800262e:	4313      	orrs	r3, r2
 8002630:	61bb      	str	r3, [r7, #24]
 8002632:	4a2f      	ldr	r2, [pc, #188]	; (80026f0 <HAL_GPIO_Init+0x304>)
 8002634:	69bb      	ldr	r3, [r7, #24]
 8002636:	6093      	str	r3, [r2, #8]
 8002638:	4b2d      	ldr	r3, [pc, #180]	; (80026f0 <HAL_GPIO_Init+0x304>)
 800263a:	68db      	ldr	r3, [r3, #12]
 800263c:	61bb      	str	r3, [r7, #24]
 800263e:	693b      	ldr	r3, [r7, #16]
 8002640:	43db      	mvns	r3, r3
 8002642:	69ba      	ldr	r2, [r7, #24]
 8002644:	4013      	ands	r3, r2
 8002646:	61bb      	str	r3, [r7, #24]
 8002648:	683b      	ldr	r3, [r7, #0]
 800264a:	685b      	ldr	r3, [r3, #4]
 800264c:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8002650:	2b00      	cmp	r3, #0
 8002652:	d003      	beq.n	800265c <HAL_GPIO_Init+0x270>
 8002654:	69ba      	ldr	r2, [r7, #24]
 8002656:	693b      	ldr	r3, [r7, #16]
 8002658:	4313      	orrs	r3, r2
 800265a:	61bb      	str	r3, [r7, #24]
 800265c:	4a24      	ldr	r2, [pc, #144]	; (80026f0 <HAL_GPIO_Init+0x304>)
 800265e:	69bb      	ldr	r3, [r7, #24]
 8002660:	60d3      	str	r3, [r2, #12]
 8002662:	4b23      	ldr	r3, [pc, #140]	; (80026f0 <HAL_GPIO_Init+0x304>)
 8002664:	685b      	ldr	r3, [r3, #4]
 8002666:	61bb      	str	r3, [r7, #24]
 8002668:	693b      	ldr	r3, [r7, #16]
 800266a:	43db      	mvns	r3, r3
 800266c:	69ba      	ldr	r2, [r7, #24]
 800266e:	4013      	ands	r3, r2
 8002670:	61bb      	str	r3, [r7, #24]
 8002672:	683b      	ldr	r3, [r7, #0]
 8002674:	685b      	ldr	r3, [r3, #4]
 8002676:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800267a:	2b00      	cmp	r3, #0
 800267c:	d003      	beq.n	8002686 <HAL_GPIO_Init+0x29a>
 800267e:	69ba      	ldr	r2, [r7, #24]
 8002680:	693b      	ldr	r3, [r7, #16]
 8002682:	4313      	orrs	r3, r2
 8002684:	61bb      	str	r3, [r7, #24]
 8002686:	4a1a      	ldr	r2, [pc, #104]	; (80026f0 <HAL_GPIO_Init+0x304>)
 8002688:	69bb      	ldr	r3, [r7, #24]
 800268a:	6053      	str	r3, [r2, #4]
 800268c:	4b18      	ldr	r3, [pc, #96]	; (80026f0 <HAL_GPIO_Init+0x304>)
 800268e:	681b      	ldr	r3, [r3, #0]
 8002690:	61bb      	str	r3, [r7, #24]
 8002692:	693b      	ldr	r3, [r7, #16]
 8002694:	43db      	mvns	r3, r3
 8002696:	69ba      	ldr	r2, [r7, #24]
 8002698:	4013      	ands	r3, r2
 800269a:	61bb      	str	r3, [r7, #24]
 800269c:	683b      	ldr	r3, [r7, #0]
 800269e:	685b      	ldr	r3, [r3, #4]
 80026a0:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80026a4:	2b00      	cmp	r3, #0
 80026a6:	d003      	beq.n	80026b0 <HAL_GPIO_Init+0x2c4>
 80026a8:	69ba      	ldr	r2, [r7, #24]
 80026aa:	693b      	ldr	r3, [r7, #16]
 80026ac:	4313      	orrs	r3, r2
 80026ae:	61bb      	str	r3, [r7, #24]
 80026b0:	4a0f      	ldr	r2, [pc, #60]	; (80026f0 <HAL_GPIO_Init+0x304>)
 80026b2:	69bb      	ldr	r3, [r7, #24]
 80026b4:	6013      	str	r3, [r2, #0]
 80026b6:	69fb      	ldr	r3, [r7, #28]
 80026b8:	3301      	adds	r3, #1
 80026ba:	61fb      	str	r3, [r7, #28]
 80026bc:	69fb      	ldr	r3, [r7, #28]
 80026be:	2b0f      	cmp	r3, #15
 80026c0:	f67f aea2 	bls.w	8002408 <HAL_GPIO_Init+0x1c>
 80026c4:	bf00      	nop
 80026c6:	bf00      	nop
 80026c8:	3724      	adds	r7, #36	; 0x24
 80026ca:	46bd      	mov	sp, r7
 80026cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80026d0:	4770      	bx	lr
 80026d2:	bf00      	nop
 80026d4:	40023800 	.word	0x40023800
 80026d8:	40013800 	.word	0x40013800
 80026dc:	40020000 	.word	0x40020000
 80026e0:	40020400 	.word	0x40020400
 80026e4:	40020800 	.word	0x40020800
 80026e8:	40020c00 	.word	0x40020c00
 80026ec:	40021000 	.word	0x40021000
 80026f0:	40013c00 	.word	0x40013c00

080026f4 <HAL_GPIO_WritePin>:
 80026f4:	b480      	push	{r7}
 80026f6:	b083      	sub	sp, #12
 80026f8:	af00      	add	r7, sp, #0
 80026fa:	6078      	str	r0, [r7, #4]
 80026fc:	460b      	mov	r3, r1
 80026fe:	807b      	strh	r3, [r7, #2]
 8002700:	4613      	mov	r3, r2
 8002702:	707b      	strb	r3, [r7, #1]
 8002704:	787b      	ldrb	r3, [r7, #1]
 8002706:	2b00      	cmp	r3, #0
 8002708:	d003      	beq.n	8002712 <HAL_GPIO_WritePin+0x1e>
 800270a:	887a      	ldrh	r2, [r7, #2]
 800270c:	687b      	ldr	r3, [r7, #4]
 800270e:	619a      	str	r2, [r3, #24]
 8002710:	e003      	b.n	800271a <HAL_GPIO_WritePin+0x26>
 8002712:	887b      	ldrh	r3, [r7, #2]
 8002714:	041a      	lsls	r2, r3, #16
 8002716:	687b      	ldr	r3, [r7, #4]
 8002718:	619a      	str	r2, [r3, #24]
 800271a:	bf00      	nop
 800271c:	370c      	adds	r7, #12
 800271e:	46bd      	mov	sp, r7
 8002720:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002724:	4770      	bx	lr
	...

08002728 <HAL_GPIO_EXTI_IRQHandler>:
 8002728:	b580      	push	{r7, lr}
 800272a:	b082      	sub	sp, #8
 800272c:	af00      	add	r7, sp, #0
 800272e:	4603      	mov	r3, r0
 8002730:	80fb      	strh	r3, [r7, #6]
 8002732:	4b08      	ldr	r3, [pc, #32]	; (8002754 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8002734:	695a      	ldr	r2, [r3, #20]
 8002736:	88fb      	ldrh	r3, [r7, #6]
 8002738:	4013      	ands	r3, r2
 800273a:	2b00      	cmp	r3, #0
 800273c:	d006      	beq.n	800274c <HAL_GPIO_EXTI_IRQHandler+0x24>
 800273e:	4a05      	ldr	r2, [pc, #20]	; (8002754 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8002740:	88fb      	ldrh	r3, [r7, #6]
 8002742:	6153      	str	r3, [r2, #20]
 8002744:	88fb      	ldrh	r3, [r7, #6]
 8002746:	4618      	mov	r0, r3
 8002748:	f7fe f8d2 	bl	80008f0 <HAL_GPIO_EXTI_Callback>
 800274c:	bf00      	nop
 800274e:	3708      	adds	r7, #8
 8002750:	46bd      	mov	sp, r7
 8002752:	bd80      	pop	{r7, pc}
 8002754:	40013c00 	.word	0x40013c00

08002758 <HAL_RCC_OscConfig>:
 8002758:	b580      	push	{r7, lr}
 800275a:	b086      	sub	sp, #24
 800275c:	af00      	add	r7, sp, #0
 800275e:	6078      	str	r0, [r7, #4]
 8002760:	687b      	ldr	r3, [r7, #4]
 8002762:	2b00      	cmp	r3, #0
 8002764:	d101      	bne.n	800276a <HAL_RCC_OscConfig+0x12>
 8002766:	2301      	movs	r3, #1
 8002768:	e267      	b.n	8002c3a <HAL_RCC_OscConfig+0x4e2>
 800276a:	687b      	ldr	r3, [r7, #4]
 800276c:	681b      	ldr	r3, [r3, #0]
 800276e:	f003 0301 	and.w	r3, r3, #1
 8002772:	2b00      	cmp	r3, #0
 8002774:	d075      	beq.n	8002862 <HAL_RCC_OscConfig+0x10a>
 8002776:	4b88      	ldr	r3, [pc, #544]	; (8002998 <HAL_RCC_OscConfig+0x240>)
 8002778:	689b      	ldr	r3, [r3, #8]
 800277a:	f003 030c 	and.w	r3, r3, #12
 800277e:	2b04      	cmp	r3, #4
 8002780:	d00c      	beq.n	800279c <HAL_RCC_OscConfig+0x44>
 8002782:	4b85      	ldr	r3, [pc, #532]	; (8002998 <HAL_RCC_OscConfig+0x240>)
 8002784:	689b      	ldr	r3, [r3, #8]
 8002786:	f003 030c 	and.w	r3, r3, #12
 800278a:	2b08      	cmp	r3, #8
 800278c:	d112      	bne.n	80027b4 <HAL_RCC_OscConfig+0x5c>
 800278e:	4b82      	ldr	r3, [pc, #520]	; (8002998 <HAL_RCC_OscConfig+0x240>)
 8002790:	685b      	ldr	r3, [r3, #4]
 8002792:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8002796:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 800279a:	d10b      	bne.n	80027b4 <HAL_RCC_OscConfig+0x5c>
 800279c:	4b7e      	ldr	r3, [pc, #504]	; (8002998 <HAL_RCC_OscConfig+0x240>)
 800279e:	681b      	ldr	r3, [r3, #0]
 80027a0:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80027a4:	2b00      	cmp	r3, #0
 80027a6:	d05b      	beq.n	8002860 <HAL_RCC_OscConfig+0x108>
 80027a8:	687b      	ldr	r3, [r7, #4]
 80027aa:	685b      	ldr	r3, [r3, #4]
 80027ac:	2b00      	cmp	r3, #0
 80027ae:	d157      	bne.n	8002860 <HAL_RCC_OscConfig+0x108>
 80027b0:	2301      	movs	r3, #1
 80027b2:	e242      	b.n	8002c3a <HAL_RCC_OscConfig+0x4e2>
 80027b4:	687b      	ldr	r3, [r7, #4]
 80027b6:	685b      	ldr	r3, [r3, #4]
 80027b8:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80027bc:	d106      	bne.n	80027cc <HAL_RCC_OscConfig+0x74>
 80027be:	4b76      	ldr	r3, [pc, #472]	; (8002998 <HAL_RCC_OscConfig+0x240>)
 80027c0:	681b      	ldr	r3, [r3, #0]
 80027c2:	4a75      	ldr	r2, [pc, #468]	; (8002998 <HAL_RCC_OscConfig+0x240>)
 80027c4:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80027c8:	6013      	str	r3, [r2, #0]
 80027ca:	e01d      	b.n	8002808 <HAL_RCC_OscConfig+0xb0>
 80027cc:	687b      	ldr	r3, [r7, #4]
 80027ce:	685b      	ldr	r3, [r3, #4]
 80027d0:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 80027d4:	d10c      	bne.n	80027f0 <HAL_RCC_OscConfig+0x98>
 80027d6:	4b70      	ldr	r3, [pc, #448]	; (8002998 <HAL_RCC_OscConfig+0x240>)
 80027d8:	681b      	ldr	r3, [r3, #0]
 80027da:	4a6f      	ldr	r2, [pc, #444]	; (8002998 <HAL_RCC_OscConfig+0x240>)
 80027dc:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 80027e0:	6013      	str	r3, [r2, #0]
 80027e2:	4b6d      	ldr	r3, [pc, #436]	; (8002998 <HAL_RCC_OscConfig+0x240>)
 80027e4:	681b      	ldr	r3, [r3, #0]
 80027e6:	4a6c      	ldr	r2, [pc, #432]	; (8002998 <HAL_RCC_OscConfig+0x240>)
 80027e8:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80027ec:	6013      	str	r3, [r2, #0]
 80027ee:	e00b      	b.n	8002808 <HAL_RCC_OscConfig+0xb0>
 80027f0:	4b69      	ldr	r3, [pc, #420]	; (8002998 <HAL_RCC_OscConfig+0x240>)
 80027f2:	681b      	ldr	r3, [r3, #0]
 80027f4:	4a68      	ldr	r2, [pc, #416]	; (8002998 <HAL_RCC_OscConfig+0x240>)
 80027f6:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80027fa:	6013      	str	r3, [r2, #0]
 80027fc:	4b66      	ldr	r3, [pc, #408]	; (8002998 <HAL_RCC_OscConfig+0x240>)
 80027fe:	681b      	ldr	r3, [r3, #0]
 8002800:	4a65      	ldr	r2, [pc, #404]	; (8002998 <HAL_RCC_OscConfig+0x240>)
 8002802:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8002806:	6013      	str	r3, [r2, #0]
 8002808:	687b      	ldr	r3, [r7, #4]
 800280a:	685b      	ldr	r3, [r3, #4]
 800280c:	2b00      	cmp	r3, #0
 800280e:	d013      	beq.n	8002838 <HAL_RCC_OscConfig+0xe0>
 8002810:	f7ff f8ec 	bl	80019ec <HAL_GetTick>
 8002814:	6138      	str	r0, [r7, #16]
 8002816:	e008      	b.n	800282a <HAL_RCC_OscConfig+0xd2>
 8002818:	f7ff f8e8 	bl	80019ec <HAL_GetTick>
 800281c:	4602      	mov	r2, r0
 800281e:	693b      	ldr	r3, [r7, #16]
 8002820:	1ad3      	subs	r3, r2, r3
 8002822:	2b64      	cmp	r3, #100	; 0x64
 8002824:	d901      	bls.n	800282a <HAL_RCC_OscConfig+0xd2>
 8002826:	2303      	movs	r3, #3
 8002828:	e207      	b.n	8002c3a <HAL_RCC_OscConfig+0x4e2>
 800282a:	4b5b      	ldr	r3, [pc, #364]	; (8002998 <HAL_RCC_OscConfig+0x240>)
 800282c:	681b      	ldr	r3, [r3, #0]
 800282e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002832:	2b00      	cmp	r3, #0
 8002834:	d0f0      	beq.n	8002818 <HAL_RCC_OscConfig+0xc0>
 8002836:	e014      	b.n	8002862 <HAL_RCC_OscConfig+0x10a>
 8002838:	f7ff f8d8 	bl	80019ec <HAL_GetTick>
 800283c:	6138      	str	r0, [r7, #16]
 800283e:	e008      	b.n	8002852 <HAL_RCC_OscConfig+0xfa>
 8002840:	f7ff f8d4 	bl	80019ec <HAL_GetTick>
 8002844:	4602      	mov	r2, r0
 8002846:	693b      	ldr	r3, [r7, #16]
 8002848:	1ad3      	subs	r3, r2, r3
 800284a:	2b64      	cmp	r3, #100	; 0x64
 800284c:	d901      	bls.n	8002852 <HAL_RCC_OscConfig+0xfa>
 800284e:	2303      	movs	r3, #3
 8002850:	e1f3      	b.n	8002c3a <HAL_RCC_OscConfig+0x4e2>
 8002852:	4b51      	ldr	r3, [pc, #324]	; (8002998 <HAL_RCC_OscConfig+0x240>)
 8002854:	681b      	ldr	r3, [r3, #0]
 8002856:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800285a:	2b00      	cmp	r3, #0
 800285c:	d1f0      	bne.n	8002840 <HAL_RCC_OscConfig+0xe8>
 800285e:	e000      	b.n	8002862 <HAL_RCC_OscConfig+0x10a>
 8002860:	bf00      	nop
 8002862:	687b      	ldr	r3, [r7, #4]
 8002864:	681b      	ldr	r3, [r3, #0]
 8002866:	f003 0302 	and.w	r3, r3, #2
 800286a:	2b00      	cmp	r3, #0
 800286c:	d063      	beq.n	8002936 <HAL_RCC_OscConfig+0x1de>
 800286e:	4b4a      	ldr	r3, [pc, #296]	; (8002998 <HAL_RCC_OscConfig+0x240>)
 8002870:	689b      	ldr	r3, [r3, #8]
 8002872:	f003 030c 	and.w	r3, r3, #12
 8002876:	2b00      	cmp	r3, #0
 8002878:	d00b      	beq.n	8002892 <HAL_RCC_OscConfig+0x13a>
 800287a:	4b47      	ldr	r3, [pc, #284]	; (8002998 <HAL_RCC_OscConfig+0x240>)
 800287c:	689b      	ldr	r3, [r3, #8]
 800287e:	f003 030c 	and.w	r3, r3, #12
 8002882:	2b08      	cmp	r3, #8
 8002884:	d11c      	bne.n	80028c0 <HAL_RCC_OscConfig+0x168>
 8002886:	4b44      	ldr	r3, [pc, #272]	; (8002998 <HAL_RCC_OscConfig+0x240>)
 8002888:	685b      	ldr	r3, [r3, #4]
 800288a:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 800288e:	2b00      	cmp	r3, #0
 8002890:	d116      	bne.n	80028c0 <HAL_RCC_OscConfig+0x168>
 8002892:	4b41      	ldr	r3, [pc, #260]	; (8002998 <HAL_RCC_OscConfig+0x240>)
 8002894:	681b      	ldr	r3, [r3, #0]
 8002896:	f003 0302 	and.w	r3, r3, #2
 800289a:	2b00      	cmp	r3, #0
 800289c:	d005      	beq.n	80028aa <HAL_RCC_OscConfig+0x152>
 800289e:	687b      	ldr	r3, [r7, #4]
 80028a0:	68db      	ldr	r3, [r3, #12]
 80028a2:	2b01      	cmp	r3, #1
 80028a4:	d001      	beq.n	80028aa <HAL_RCC_OscConfig+0x152>
 80028a6:	2301      	movs	r3, #1
 80028a8:	e1c7      	b.n	8002c3a <HAL_RCC_OscConfig+0x4e2>
 80028aa:	4b3b      	ldr	r3, [pc, #236]	; (8002998 <HAL_RCC_OscConfig+0x240>)
 80028ac:	681b      	ldr	r3, [r3, #0]
 80028ae:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 80028b2:	687b      	ldr	r3, [r7, #4]
 80028b4:	691b      	ldr	r3, [r3, #16]
 80028b6:	00db      	lsls	r3, r3, #3
 80028b8:	4937      	ldr	r1, [pc, #220]	; (8002998 <HAL_RCC_OscConfig+0x240>)
 80028ba:	4313      	orrs	r3, r2
 80028bc:	600b      	str	r3, [r1, #0]
 80028be:	e03a      	b.n	8002936 <HAL_RCC_OscConfig+0x1de>
 80028c0:	687b      	ldr	r3, [r7, #4]
 80028c2:	68db      	ldr	r3, [r3, #12]
 80028c4:	2b00      	cmp	r3, #0
 80028c6:	d020      	beq.n	800290a <HAL_RCC_OscConfig+0x1b2>
 80028c8:	4b34      	ldr	r3, [pc, #208]	; (800299c <HAL_RCC_OscConfig+0x244>)
 80028ca:	2201      	movs	r2, #1
 80028cc:	601a      	str	r2, [r3, #0]
 80028ce:	f7ff f88d 	bl	80019ec <HAL_GetTick>
 80028d2:	6138      	str	r0, [r7, #16]
 80028d4:	e008      	b.n	80028e8 <HAL_RCC_OscConfig+0x190>
 80028d6:	f7ff f889 	bl	80019ec <HAL_GetTick>
 80028da:	4602      	mov	r2, r0
 80028dc:	693b      	ldr	r3, [r7, #16]
 80028de:	1ad3      	subs	r3, r2, r3
 80028e0:	2b02      	cmp	r3, #2
 80028e2:	d901      	bls.n	80028e8 <HAL_RCC_OscConfig+0x190>
 80028e4:	2303      	movs	r3, #3
 80028e6:	e1a8      	b.n	8002c3a <HAL_RCC_OscConfig+0x4e2>
 80028e8:	4b2b      	ldr	r3, [pc, #172]	; (8002998 <HAL_RCC_OscConfig+0x240>)
 80028ea:	681b      	ldr	r3, [r3, #0]
 80028ec:	f003 0302 	and.w	r3, r3, #2
 80028f0:	2b00      	cmp	r3, #0
 80028f2:	d0f0      	beq.n	80028d6 <HAL_RCC_OscConfig+0x17e>
 80028f4:	4b28      	ldr	r3, [pc, #160]	; (8002998 <HAL_RCC_OscConfig+0x240>)
 80028f6:	681b      	ldr	r3, [r3, #0]
 80028f8:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 80028fc:	687b      	ldr	r3, [r7, #4]
 80028fe:	691b      	ldr	r3, [r3, #16]
 8002900:	00db      	lsls	r3, r3, #3
 8002902:	4925      	ldr	r1, [pc, #148]	; (8002998 <HAL_RCC_OscConfig+0x240>)
 8002904:	4313      	orrs	r3, r2
 8002906:	600b      	str	r3, [r1, #0]
 8002908:	e015      	b.n	8002936 <HAL_RCC_OscConfig+0x1de>
 800290a:	4b24      	ldr	r3, [pc, #144]	; (800299c <HAL_RCC_OscConfig+0x244>)
 800290c:	2200      	movs	r2, #0
 800290e:	601a      	str	r2, [r3, #0]
 8002910:	f7ff f86c 	bl	80019ec <HAL_GetTick>
 8002914:	6138      	str	r0, [r7, #16]
 8002916:	e008      	b.n	800292a <HAL_RCC_OscConfig+0x1d2>
 8002918:	f7ff f868 	bl	80019ec <HAL_GetTick>
 800291c:	4602      	mov	r2, r0
 800291e:	693b      	ldr	r3, [r7, #16]
 8002920:	1ad3      	subs	r3, r2, r3
 8002922:	2b02      	cmp	r3, #2
 8002924:	d901      	bls.n	800292a <HAL_RCC_OscConfig+0x1d2>
 8002926:	2303      	movs	r3, #3
 8002928:	e187      	b.n	8002c3a <HAL_RCC_OscConfig+0x4e2>
 800292a:	4b1b      	ldr	r3, [pc, #108]	; (8002998 <HAL_RCC_OscConfig+0x240>)
 800292c:	681b      	ldr	r3, [r3, #0]
 800292e:	f003 0302 	and.w	r3, r3, #2
 8002932:	2b00      	cmp	r3, #0
 8002934:	d1f0      	bne.n	8002918 <HAL_RCC_OscConfig+0x1c0>
 8002936:	687b      	ldr	r3, [r7, #4]
 8002938:	681b      	ldr	r3, [r3, #0]
 800293a:	f003 0308 	and.w	r3, r3, #8
 800293e:	2b00      	cmp	r3, #0
 8002940:	d036      	beq.n	80029b0 <HAL_RCC_OscConfig+0x258>
 8002942:	687b      	ldr	r3, [r7, #4]
 8002944:	695b      	ldr	r3, [r3, #20]
 8002946:	2b00      	cmp	r3, #0
 8002948:	d016      	beq.n	8002978 <HAL_RCC_OscConfig+0x220>
 800294a:	4b15      	ldr	r3, [pc, #84]	; (80029a0 <HAL_RCC_OscConfig+0x248>)
 800294c:	2201      	movs	r2, #1
 800294e:	601a      	str	r2, [r3, #0]
 8002950:	f7ff f84c 	bl	80019ec <HAL_GetTick>
 8002954:	6138      	str	r0, [r7, #16]
 8002956:	e008      	b.n	800296a <HAL_RCC_OscConfig+0x212>
 8002958:	f7ff f848 	bl	80019ec <HAL_GetTick>
 800295c:	4602      	mov	r2, r0
 800295e:	693b      	ldr	r3, [r7, #16]
 8002960:	1ad3      	subs	r3, r2, r3
 8002962:	2b02      	cmp	r3, #2
 8002964:	d901      	bls.n	800296a <HAL_RCC_OscConfig+0x212>
 8002966:	2303      	movs	r3, #3
 8002968:	e167      	b.n	8002c3a <HAL_RCC_OscConfig+0x4e2>
 800296a:	4b0b      	ldr	r3, [pc, #44]	; (8002998 <HAL_RCC_OscConfig+0x240>)
 800296c:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800296e:	f003 0302 	and.w	r3, r3, #2
 8002972:	2b00      	cmp	r3, #0
 8002974:	d0f0      	beq.n	8002958 <HAL_RCC_OscConfig+0x200>
 8002976:	e01b      	b.n	80029b0 <HAL_RCC_OscConfig+0x258>
 8002978:	4b09      	ldr	r3, [pc, #36]	; (80029a0 <HAL_RCC_OscConfig+0x248>)
 800297a:	2200      	movs	r2, #0
 800297c:	601a      	str	r2, [r3, #0]
 800297e:	f7ff f835 	bl	80019ec <HAL_GetTick>
 8002982:	6138      	str	r0, [r7, #16]
 8002984:	e00e      	b.n	80029a4 <HAL_RCC_OscConfig+0x24c>
 8002986:	f7ff f831 	bl	80019ec <HAL_GetTick>
 800298a:	4602      	mov	r2, r0
 800298c:	693b      	ldr	r3, [r7, #16]
 800298e:	1ad3      	subs	r3, r2, r3
 8002990:	2b02      	cmp	r3, #2
 8002992:	d907      	bls.n	80029a4 <HAL_RCC_OscConfig+0x24c>
 8002994:	2303      	movs	r3, #3
 8002996:	e150      	b.n	8002c3a <HAL_RCC_OscConfig+0x4e2>
 8002998:	40023800 	.word	0x40023800
 800299c:	42470000 	.word	0x42470000
 80029a0:	42470e80 	.word	0x42470e80
 80029a4:	4b88      	ldr	r3, [pc, #544]	; (8002bc8 <HAL_RCC_OscConfig+0x470>)
 80029a6:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 80029a8:	f003 0302 	and.w	r3, r3, #2
 80029ac:	2b00      	cmp	r3, #0
 80029ae:	d1ea      	bne.n	8002986 <HAL_RCC_OscConfig+0x22e>
 80029b0:	687b      	ldr	r3, [r7, #4]
 80029b2:	681b      	ldr	r3, [r3, #0]
 80029b4:	f003 0304 	and.w	r3, r3, #4
 80029b8:	2b00      	cmp	r3, #0
 80029ba:	f000 8097 	beq.w	8002aec <HAL_RCC_OscConfig+0x394>
 80029be:	2300      	movs	r3, #0
 80029c0:	75fb      	strb	r3, [r7, #23]
 80029c2:	4b81      	ldr	r3, [pc, #516]	; (8002bc8 <HAL_RCC_OscConfig+0x470>)
 80029c4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80029c6:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80029ca:	2b00      	cmp	r3, #0
 80029cc:	d10f      	bne.n	80029ee <HAL_RCC_OscConfig+0x296>
 80029ce:	2300      	movs	r3, #0
 80029d0:	60bb      	str	r3, [r7, #8]
 80029d2:	4b7d      	ldr	r3, [pc, #500]	; (8002bc8 <HAL_RCC_OscConfig+0x470>)
 80029d4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80029d6:	4a7c      	ldr	r2, [pc, #496]	; (8002bc8 <HAL_RCC_OscConfig+0x470>)
 80029d8:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80029dc:	6413      	str	r3, [r2, #64]	; 0x40
 80029de:	4b7a      	ldr	r3, [pc, #488]	; (8002bc8 <HAL_RCC_OscConfig+0x470>)
 80029e0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80029e2:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80029e6:	60bb      	str	r3, [r7, #8]
 80029e8:	68bb      	ldr	r3, [r7, #8]
 80029ea:	2301      	movs	r3, #1
 80029ec:	75fb      	strb	r3, [r7, #23]
 80029ee:	4b77      	ldr	r3, [pc, #476]	; (8002bcc <HAL_RCC_OscConfig+0x474>)
 80029f0:	681b      	ldr	r3, [r3, #0]
 80029f2:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80029f6:	2b00      	cmp	r3, #0
 80029f8:	d118      	bne.n	8002a2c <HAL_RCC_OscConfig+0x2d4>
 80029fa:	4b74      	ldr	r3, [pc, #464]	; (8002bcc <HAL_RCC_OscConfig+0x474>)
 80029fc:	681b      	ldr	r3, [r3, #0]
 80029fe:	4a73      	ldr	r2, [pc, #460]	; (8002bcc <HAL_RCC_OscConfig+0x474>)
 8002a00:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8002a04:	6013      	str	r3, [r2, #0]
 8002a06:	f7fe fff1 	bl	80019ec <HAL_GetTick>
 8002a0a:	6138      	str	r0, [r7, #16]
 8002a0c:	e008      	b.n	8002a20 <HAL_RCC_OscConfig+0x2c8>
 8002a0e:	f7fe ffed 	bl	80019ec <HAL_GetTick>
 8002a12:	4602      	mov	r2, r0
 8002a14:	693b      	ldr	r3, [r7, #16]
 8002a16:	1ad3      	subs	r3, r2, r3
 8002a18:	2b02      	cmp	r3, #2
 8002a1a:	d901      	bls.n	8002a20 <HAL_RCC_OscConfig+0x2c8>
 8002a1c:	2303      	movs	r3, #3
 8002a1e:	e10c      	b.n	8002c3a <HAL_RCC_OscConfig+0x4e2>
 8002a20:	4b6a      	ldr	r3, [pc, #424]	; (8002bcc <HAL_RCC_OscConfig+0x474>)
 8002a22:	681b      	ldr	r3, [r3, #0]
 8002a24:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8002a28:	2b00      	cmp	r3, #0
 8002a2a:	d0f0      	beq.n	8002a0e <HAL_RCC_OscConfig+0x2b6>
 8002a2c:	687b      	ldr	r3, [r7, #4]
 8002a2e:	689b      	ldr	r3, [r3, #8]
 8002a30:	2b01      	cmp	r3, #1
 8002a32:	d106      	bne.n	8002a42 <HAL_RCC_OscConfig+0x2ea>
 8002a34:	4b64      	ldr	r3, [pc, #400]	; (8002bc8 <HAL_RCC_OscConfig+0x470>)
 8002a36:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8002a38:	4a63      	ldr	r2, [pc, #396]	; (8002bc8 <HAL_RCC_OscConfig+0x470>)
 8002a3a:	f043 0301 	orr.w	r3, r3, #1
 8002a3e:	6713      	str	r3, [r2, #112]	; 0x70
 8002a40:	e01c      	b.n	8002a7c <HAL_RCC_OscConfig+0x324>
 8002a42:	687b      	ldr	r3, [r7, #4]
 8002a44:	689b      	ldr	r3, [r3, #8]
 8002a46:	2b05      	cmp	r3, #5
 8002a48:	d10c      	bne.n	8002a64 <HAL_RCC_OscConfig+0x30c>
 8002a4a:	4b5f      	ldr	r3, [pc, #380]	; (8002bc8 <HAL_RCC_OscConfig+0x470>)
 8002a4c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8002a4e:	4a5e      	ldr	r2, [pc, #376]	; (8002bc8 <HAL_RCC_OscConfig+0x470>)
 8002a50:	f043 0304 	orr.w	r3, r3, #4
 8002a54:	6713      	str	r3, [r2, #112]	; 0x70
 8002a56:	4b5c      	ldr	r3, [pc, #368]	; (8002bc8 <HAL_RCC_OscConfig+0x470>)
 8002a58:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8002a5a:	4a5b      	ldr	r2, [pc, #364]	; (8002bc8 <HAL_RCC_OscConfig+0x470>)
 8002a5c:	f043 0301 	orr.w	r3, r3, #1
 8002a60:	6713      	str	r3, [r2, #112]	; 0x70
 8002a62:	e00b      	b.n	8002a7c <HAL_RCC_OscConfig+0x324>
 8002a64:	4b58      	ldr	r3, [pc, #352]	; (8002bc8 <HAL_RCC_OscConfig+0x470>)
 8002a66:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8002a68:	4a57      	ldr	r2, [pc, #348]	; (8002bc8 <HAL_RCC_OscConfig+0x470>)
 8002a6a:	f023 0301 	bic.w	r3, r3, #1
 8002a6e:	6713      	str	r3, [r2, #112]	; 0x70
 8002a70:	4b55      	ldr	r3, [pc, #340]	; (8002bc8 <HAL_RCC_OscConfig+0x470>)
 8002a72:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8002a74:	4a54      	ldr	r2, [pc, #336]	; (8002bc8 <HAL_RCC_OscConfig+0x470>)
 8002a76:	f023 0304 	bic.w	r3, r3, #4
 8002a7a:	6713      	str	r3, [r2, #112]	; 0x70
 8002a7c:	687b      	ldr	r3, [r7, #4]
 8002a7e:	689b      	ldr	r3, [r3, #8]
 8002a80:	2b00      	cmp	r3, #0
 8002a82:	d015      	beq.n	8002ab0 <HAL_RCC_OscConfig+0x358>
 8002a84:	f7fe ffb2 	bl	80019ec <HAL_GetTick>
 8002a88:	6138      	str	r0, [r7, #16]
 8002a8a:	e00a      	b.n	8002aa2 <HAL_RCC_OscConfig+0x34a>
 8002a8c:	f7fe ffae 	bl	80019ec <HAL_GetTick>
 8002a90:	4602      	mov	r2, r0
 8002a92:	693b      	ldr	r3, [r7, #16]
 8002a94:	1ad3      	subs	r3, r2, r3
 8002a96:	f241 3288 	movw	r2, #5000	; 0x1388
 8002a9a:	4293      	cmp	r3, r2
 8002a9c:	d901      	bls.n	8002aa2 <HAL_RCC_OscConfig+0x34a>
 8002a9e:	2303      	movs	r3, #3
 8002aa0:	e0cb      	b.n	8002c3a <HAL_RCC_OscConfig+0x4e2>
 8002aa2:	4b49      	ldr	r3, [pc, #292]	; (8002bc8 <HAL_RCC_OscConfig+0x470>)
 8002aa4:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8002aa6:	f003 0302 	and.w	r3, r3, #2
 8002aaa:	2b00      	cmp	r3, #0
 8002aac:	d0ee      	beq.n	8002a8c <HAL_RCC_OscConfig+0x334>
 8002aae:	e014      	b.n	8002ada <HAL_RCC_OscConfig+0x382>
 8002ab0:	f7fe ff9c 	bl	80019ec <HAL_GetTick>
 8002ab4:	6138      	str	r0, [r7, #16]
 8002ab6:	e00a      	b.n	8002ace <HAL_RCC_OscConfig+0x376>
 8002ab8:	f7fe ff98 	bl	80019ec <HAL_GetTick>
 8002abc:	4602      	mov	r2, r0
 8002abe:	693b      	ldr	r3, [r7, #16]
 8002ac0:	1ad3      	subs	r3, r2, r3
 8002ac2:	f241 3288 	movw	r2, #5000	; 0x1388
 8002ac6:	4293      	cmp	r3, r2
 8002ac8:	d901      	bls.n	8002ace <HAL_RCC_OscConfig+0x376>
 8002aca:	2303      	movs	r3, #3
 8002acc:	e0b5      	b.n	8002c3a <HAL_RCC_OscConfig+0x4e2>
 8002ace:	4b3e      	ldr	r3, [pc, #248]	; (8002bc8 <HAL_RCC_OscConfig+0x470>)
 8002ad0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8002ad2:	f003 0302 	and.w	r3, r3, #2
 8002ad6:	2b00      	cmp	r3, #0
 8002ad8:	d1ee      	bne.n	8002ab8 <HAL_RCC_OscConfig+0x360>
 8002ada:	7dfb      	ldrb	r3, [r7, #23]
 8002adc:	2b01      	cmp	r3, #1
 8002ade:	d105      	bne.n	8002aec <HAL_RCC_OscConfig+0x394>
 8002ae0:	4b39      	ldr	r3, [pc, #228]	; (8002bc8 <HAL_RCC_OscConfig+0x470>)
 8002ae2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002ae4:	4a38      	ldr	r2, [pc, #224]	; (8002bc8 <HAL_RCC_OscConfig+0x470>)
 8002ae6:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8002aea:	6413      	str	r3, [r2, #64]	; 0x40
 8002aec:	687b      	ldr	r3, [r7, #4]
 8002aee:	699b      	ldr	r3, [r3, #24]
 8002af0:	2b00      	cmp	r3, #0
 8002af2:	f000 80a1 	beq.w	8002c38 <HAL_RCC_OscConfig+0x4e0>
 8002af6:	4b34      	ldr	r3, [pc, #208]	; (8002bc8 <HAL_RCC_OscConfig+0x470>)
 8002af8:	689b      	ldr	r3, [r3, #8]
 8002afa:	f003 030c 	and.w	r3, r3, #12
 8002afe:	2b08      	cmp	r3, #8
 8002b00:	d05c      	beq.n	8002bbc <HAL_RCC_OscConfig+0x464>
 8002b02:	687b      	ldr	r3, [r7, #4]
 8002b04:	699b      	ldr	r3, [r3, #24]
 8002b06:	2b02      	cmp	r3, #2
 8002b08:	d141      	bne.n	8002b8e <HAL_RCC_OscConfig+0x436>
 8002b0a:	4b31      	ldr	r3, [pc, #196]	; (8002bd0 <HAL_RCC_OscConfig+0x478>)
 8002b0c:	2200      	movs	r2, #0
 8002b0e:	601a      	str	r2, [r3, #0]
 8002b10:	f7fe ff6c 	bl	80019ec <HAL_GetTick>
 8002b14:	6138      	str	r0, [r7, #16]
 8002b16:	e008      	b.n	8002b2a <HAL_RCC_OscConfig+0x3d2>
 8002b18:	f7fe ff68 	bl	80019ec <HAL_GetTick>
 8002b1c:	4602      	mov	r2, r0
 8002b1e:	693b      	ldr	r3, [r7, #16]
 8002b20:	1ad3      	subs	r3, r2, r3
 8002b22:	2b02      	cmp	r3, #2
 8002b24:	d901      	bls.n	8002b2a <HAL_RCC_OscConfig+0x3d2>
 8002b26:	2303      	movs	r3, #3
 8002b28:	e087      	b.n	8002c3a <HAL_RCC_OscConfig+0x4e2>
 8002b2a:	4b27      	ldr	r3, [pc, #156]	; (8002bc8 <HAL_RCC_OscConfig+0x470>)
 8002b2c:	681b      	ldr	r3, [r3, #0]
 8002b2e:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8002b32:	2b00      	cmp	r3, #0
 8002b34:	d1f0      	bne.n	8002b18 <HAL_RCC_OscConfig+0x3c0>
 8002b36:	687b      	ldr	r3, [r7, #4]
 8002b38:	69da      	ldr	r2, [r3, #28]
 8002b3a:	687b      	ldr	r3, [r7, #4]
 8002b3c:	6a1b      	ldr	r3, [r3, #32]
 8002b3e:	431a      	orrs	r2, r3
 8002b40:	687b      	ldr	r3, [r7, #4]
 8002b42:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002b44:	019b      	lsls	r3, r3, #6
 8002b46:	431a      	orrs	r2, r3
 8002b48:	687b      	ldr	r3, [r7, #4]
 8002b4a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002b4c:	085b      	lsrs	r3, r3, #1
 8002b4e:	3b01      	subs	r3, #1
 8002b50:	041b      	lsls	r3, r3, #16
 8002b52:	431a      	orrs	r2, r3
 8002b54:	687b      	ldr	r3, [r7, #4]
 8002b56:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002b58:	061b      	lsls	r3, r3, #24
 8002b5a:	491b      	ldr	r1, [pc, #108]	; (8002bc8 <HAL_RCC_OscConfig+0x470>)
 8002b5c:	4313      	orrs	r3, r2
 8002b5e:	604b      	str	r3, [r1, #4]
 8002b60:	4b1b      	ldr	r3, [pc, #108]	; (8002bd0 <HAL_RCC_OscConfig+0x478>)
 8002b62:	2201      	movs	r2, #1
 8002b64:	601a      	str	r2, [r3, #0]
 8002b66:	f7fe ff41 	bl	80019ec <HAL_GetTick>
 8002b6a:	6138      	str	r0, [r7, #16]
 8002b6c:	e008      	b.n	8002b80 <HAL_RCC_OscConfig+0x428>
 8002b6e:	f7fe ff3d 	bl	80019ec <HAL_GetTick>
 8002b72:	4602      	mov	r2, r0
 8002b74:	693b      	ldr	r3, [r7, #16]
 8002b76:	1ad3      	subs	r3, r2, r3
 8002b78:	2b02      	cmp	r3, #2
 8002b7a:	d901      	bls.n	8002b80 <HAL_RCC_OscConfig+0x428>
 8002b7c:	2303      	movs	r3, #3
 8002b7e:	e05c      	b.n	8002c3a <HAL_RCC_OscConfig+0x4e2>
 8002b80:	4b11      	ldr	r3, [pc, #68]	; (8002bc8 <HAL_RCC_OscConfig+0x470>)
 8002b82:	681b      	ldr	r3, [r3, #0]
 8002b84:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8002b88:	2b00      	cmp	r3, #0
 8002b8a:	d0f0      	beq.n	8002b6e <HAL_RCC_OscConfig+0x416>
 8002b8c:	e054      	b.n	8002c38 <HAL_RCC_OscConfig+0x4e0>
 8002b8e:	4b10      	ldr	r3, [pc, #64]	; (8002bd0 <HAL_RCC_OscConfig+0x478>)
 8002b90:	2200      	movs	r2, #0
 8002b92:	601a      	str	r2, [r3, #0]
 8002b94:	f7fe ff2a 	bl	80019ec <HAL_GetTick>
 8002b98:	6138      	str	r0, [r7, #16]
 8002b9a:	e008      	b.n	8002bae <HAL_RCC_OscConfig+0x456>
 8002b9c:	f7fe ff26 	bl	80019ec <HAL_GetTick>
 8002ba0:	4602      	mov	r2, r0
 8002ba2:	693b      	ldr	r3, [r7, #16]
 8002ba4:	1ad3      	subs	r3, r2, r3
 8002ba6:	2b02      	cmp	r3, #2
 8002ba8:	d901      	bls.n	8002bae <HAL_RCC_OscConfig+0x456>
 8002baa:	2303      	movs	r3, #3
 8002bac:	e045      	b.n	8002c3a <HAL_RCC_OscConfig+0x4e2>
 8002bae:	4b06      	ldr	r3, [pc, #24]	; (8002bc8 <HAL_RCC_OscConfig+0x470>)
 8002bb0:	681b      	ldr	r3, [r3, #0]
 8002bb2:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8002bb6:	2b00      	cmp	r3, #0
 8002bb8:	d1f0      	bne.n	8002b9c <HAL_RCC_OscConfig+0x444>
 8002bba:	e03d      	b.n	8002c38 <HAL_RCC_OscConfig+0x4e0>
 8002bbc:	687b      	ldr	r3, [r7, #4]
 8002bbe:	699b      	ldr	r3, [r3, #24]
 8002bc0:	2b01      	cmp	r3, #1
 8002bc2:	d107      	bne.n	8002bd4 <HAL_RCC_OscConfig+0x47c>
 8002bc4:	2301      	movs	r3, #1
 8002bc6:	e038      	b.n	8002c3a <HAL_RCC_OscConfig+0x4e2>
 8002bc8:	40023800 	.word	0x40023800
 8002bcc:	40007000 	.word	0x40007000
 8002bd0:	42470060 	.word	0x42470060
 8002bd4:	4b1b      	ldr	r3, [pc, #108]	; (8002c44 <HAL_RCC_OscConfig+0x4ec>)
 8002bd6:	685b      	ldr	r3, [r3, #4]
 8002bd8:	60fb      	str	r3, [r7, #12]
 8002bda:	687b      	ldr	r3, [r7, #4]
 8002bdc:	699b      	ldr	r3, [r3, #24]
 8002bde:	2b01      	cmp	r3, #1
 8002be0:	d028      	beq.n	8002c34 <HAL_RCC_OscConfig+0x4dc>
 8002be2:	68fb      	ldr	r3, [r7, #12]
 8002be4:	f403 0280 	and.w	r2, r3, #4194304	; 0x400000
 8002be8:	687b      	ldr	r3, [r7, #4]
 8002bea:	69db      	ldr	r3, [r3, #28]
 8002bec:	429a      	cmp	r2, r3
 8002bee:	d121      	bne.n	8002c34 <HAL_RCC_OscConfig+0x4dc>
 8002bf0:	68fb      	ldr	r3, [r7, #12]
 8002bf2:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 8002bf6:	687b      	ldr	r3, [r7, #4]
 8002bf8:	6a1b      	ldr	r3, [r3, #32]
 8002bfa:	429a      	cmp	r2, r3
 8002bfc:	d11a      	bne.n	8002c34 <HAL_RCC_OscConfig+0x4dc>
 8002bfe:	68fa      	ldr	r2, [r7, #12]
 8002c00:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 8002c04:	4013      	ands	r3, r2
 8002c06:	687a      	ldr	r2, [r7, #4]
 8002c08:	6a52      	ldr	r2, [r2, #36]	; 0x24
 8002c0a:	0192      	lsls	r2, r2, #6
 8002c0c:	4293      	cmp	r3, r2
 8002c0e:	d111      	bne.n	8002c34 <HAL_RCC_OscConfig+0x4dc>
 8002c10:	68fb      	ldr	r3, [r7, #12]
 8002c12:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
 8002c16:	687b      	ldr	r3, [r7, #4]
 8002c18:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002c1a:	085b      	lsrs	r3, r3, #1
 8002c1c:	3b01      	subs	r3, #1
 8002c1e:	041b      	lsls	r3, r3, #16
 8002c20:	429a      	cmp	r2, r3
 8002c22:	d107      	bne.n	8002c34 <HAL_RCC_OscConfig+0x4dc>
 8002c24:	68fb      	ldr	r3, [r7, #12]
 8002c26:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
 8002c2a:	687b      	ldr	r3, [r7, #4]
 8002c2c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002c2e:	061b      	lsls	r3, r3, #24
 8002c30:	429a      	cmp	r2, r3
 8002c32:	d001      	beq.n	8002c38 <HAL_RCC_OscConfig+0x4e0>
 8002c34:	2301      	movs	r3, #1
 8002c36:	e000      	b.n	8002c3a <HAL_RCC_OscConfig+0x4e2>
 8002c38:	2300      	movs	r3, #0
 8002c3a:	4618      	mov	r0, r3
 8002c3c:	3718      	adds	r7, #24
 8002c3e:	46bd      	mov	sp, r7
 8002c40:	bd80      	pop	{r7, pc}
 8002c42:	bf00      	nop
 8002c44:	40023800 	.word	0x40023800

08002c48 <HAL_RCC_ClockConfig>:
 8002c48:	b580      	push	{r7, lr}
 8002c4a:	b084      	sub	sp, #16
 8002c4c:	af00      	add	r7, sp, #0
 8002c4e:	6078      	str	r0, [r7, #4]
 8002c50:	6039      	str	r1, [r7, #0]
 8002c52:	687b      	ldr	r3, [r7, #4]
 8002c54:	2b00      	cmp	r3, #0
 8002c56:	d101      	bne.n	8002c5c <HAL_RCC_ClockConfig+0x14>
 8002c58:	2301      	movs	r3, #1
 8002c5a:	e0cc      	b.n	8002df6 <HAL_RCC_ClockConfig+0x1ae>
 8002c5c:	4b68      	ldr	r3, [pc, #416]	; (8002e00 <HAL_RCC_ClockConfig+0x1b8>)
 8002c5e:	681b      	ldr	r3, [r3, #0]
 8002c60:	f003 0307 	and.w	r3, r3, #7
 8002c64:	683a      	ldr	r2, [r7, #0]
 8002c66:	429a      	cmp	r2, r3
 8002c68:	d90c      	bls.n	8002c84 <HAL_RCC_ClockConfig+0x3c>
 8002c6a:	4b65      	ldr	r3, [pc, #404]	; (8002e00 <HAL_RCC_ClockConfig+0x1b8>)
 8002c6c:	683a      	ldr	r2, [r7, #0]
 8002c6e:	b2d2      	uxtb	r2, r2
 8002c70:	701a      	strb	r2, [r3, #0]
 8002c72:	4b63      	ldr	r3, [pc, #396]	; (8002e00 <HAL_RCC_ClockConfig+0x1b8>)
 8002c74:	681b      	ldr	r3, [r3, #0]
 8002c76:	f003 0307 	and.w	r3, r3, #7
 8002c7a:	683a      	ldr	r2, [r7, #0]
 8002c7c:	429a      	cmp	r2, r3
 8002c7e:	d001      	beq.n	8002c84 <HAL_RCC_ClockConfig+0x3c>
 8002c80:	2301      	movs	r3, #1
 8002c82:	e0b8      	b.n	8002df6 <HAL_RCC_ClockConfig+0x1ae>
 8002c84:	687b      	ldr	r3, [r7, #4]
 8002c86:	681b      	ldr	r3, [r3, #0]
 8002c88:	f003 0302 	and.w	r3, r3, #2
 8002c8c:	2b00      	cmp	r3, #0
 8002c8e:	d020      	beq.n	8002cd2 <HAL_RCC_ClockConfig+0x8a>
 8002c90:	687b      	ldr	r3, [r7, #4]
 8002c92:	681b      	ldr	r3, [r3, #0]
 8002c94:	f003 0304 	and.w	r3, r3, #4
 8002c98:	2b00      	cmp	r3, #0
 8002c9a:	d005      	beq.n	8002ca8 <HAL_RCC_ClockConfig+0x60>
 8002c9c:	4b59      	ldr	r3, [pc, #356]	; (8002e04 <HAL_RCC_ClockConfig+0x1bc>)
 8002c9e:	689b      	ldr	r3, [r3, #8]
 8002ca0:	4a58      	ldr	r2, [pc, #352]	; (8002e04 <HAL_RCC_ClockConfig+0x1bc>)
 8002ca2:	f443 53e0 	orr.w	r3, r3, #7168	; 0x1c00
 8002ca6:	6093      	str	r3, [r2, #8]
 8002ca8:	687b      	ldr	r3, [r7, #4]
 8002caa:	681b      	ldr	r3, [r3, #0]
 8002cac:	f003 0308 	and.w	r3, r3, #8
 8002cb0:	2b00      	cmp	r3, #0
 8002cb2:	d005      	beq.n	8002cc0 <HAL_RCC_ClockConfig+0x78>
 8002cb4:	4b53      	ldr	r3, [pc, #332]	; (8002e04 <HAL_RCC_ClockConfig+0x1bc>)
 8002cb6:	689b      	ldr	r3, [r3, #8]
 8002cb8:	4a52      	ldr	r2, [pc, #328]	; (8002e04 <HAL_RCC_ClockConfig+0x1bc>)
 8002cba:	f443 4360 	orr.w	r3, r3, #57344	; 0xe000
 8002cbe:	6093      	str	r3, [r2, #8]
 8002cc0:	4b50      	ldr	r3, [pc, #320]	; (8002e04 <HAL_RCC_ClockConfig+0x1bc>)
 8002cc2:	689b      	ldr	r3, [r3, #8]
 8002cc4:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8002cc8:	687b      	ldr	r3, [r7, #4]
 8002cca:	689b      	ldr	r3, [r3, #8]
 8002ccc:	494d      	ldr	r1, [pc, #308]	; (8002e04 <HAL_RCC_ClockConfig+0x1bc>)
 8002cce:	4313      	orrs	r3, r2
 8002cd0:	608b      	str	r3, [r1, #8]
 8002cd2:	687b      	ldr	r3, [r7, #4]
 8002cd4:	681b      	ldr	r3, [r3, #0]
 8002cd6:	f003 0301 	and.w	r3, r3, #1
 8002cda:	2b00      	cmp	r3, #0
 8002cdc:	d044      	beq.n	8002d68 <HAL_RCC_ClockConfig+0x120>
 8002cde:	687b      	ldr	r3, [r7, #4]
 8002ce0:	685b      	ldr	r3, [r3, #4]
 8002ce2:	2b01      	cmp	r3, #1
 8002ce4:	d107      	bne.n	8002cf6 <HAL_RCC_ClockConfig+0xae>
 8002ce6:	4b47      	ldr	r3, [pc, #284]	; (8002e04 <HAL_RCC_ClockConfig+0x1bc>)
 8002ce8:	681b      	ldr	r3, [r3, #0]
 8002cea:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002cee:	2b00      	cmp	r3, #0
 8002cf0:	d119      	bne.n	8002d26 <HAL_RCC_ClockConfig+0xde>
 8002cf2:	2301      	movs	r3, #1
 8002cf4:	e07f      	b.n	8002df6 <HAL_RCC_ClockConfig+0x1ae>
 8002cf6:	687b      	ldr	r3, [r7, #4]
 8002cf8:	685b      	ldr	r3, [r3, #4]
 8002cfa:	2b02      	cmp	r3, #2
 8002cfc:	d003      	beq.n	8002d06 <HAL_RCC_ClockConfig+0xbe>
 8002cfe:	687b      	ldr	r3, [r7, #4]
 8002d00:	685b      	ldr	r3, [r3, #4]
 8002d02:	2b03      	cmp	r3, #3
 8002d04:	d107      	bne.n	8002d16 <HAL_RCC_ClockConfig+0xce>
 8002d06:	4b3f      	ldr	r3, [pc, #252]	; (8002e04 <HAL_RCC_ClockConfig+0x1bc>)
 8002d08:	681b      	ldr	r3, [r3, #0]
 8002d0a:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8002d0e:	2b00      	cmp	r3, #0
 8002d10:	d109      	bne.n	8002d26 <HAL_RCC_ClockConfig+0xde>
 8002d12:	2301      	movs	r3, #1
 8002d14:	e06f      	b.n	8002df6 <HAL_RCC_ClockConfig+0x1ae>
 8002d16:	4b3b      	ldr	r3, [pc, #236]	; (8002e04 <HAL_RCC_ClockConfig+0x1bc>)
 8002d18:	681b      	ldr	r3, [r3, #0]
 8002d1a:	f003 0302 	and.w	r3, r3, #2
 8002d1e:	2b00      	cmp	r3, #0
 8002d20:	d101      	bne.n	8002d26 <HAL_RCC_ClockConfig+0xde>
 8002d22:	2301      	movs	r3, #1
 8002d24:	e067      	b.n	8002df6 <HAL_RCC_ClockConfig+0x1ae>
 8002d26:	4b37      	ldr	r3, [pc, #220]	; (8002e04 <HAL_RCC_ClockConfig+0x1bc>)
 8002d28:	689b      	ldr	r3, [r3, #8]
 8002d2a:	f023 0203 	bic.w	r2, r3, #3
 8002d2e:	687b      	ldr	r3, [r7, #4]
 8002d30:	685b      	ldr	r3, [r3, #4]
 8002d32:	4934      	ldr	r1, [pc, #208]	; (8002e04 <HAL_RCC_ClockConfig+0x1bc>)
 8002d34:	4313      	orrs	r3, r2
 8002d36:	608b      	str	r3, [r1, #8]
 8002d38:	f7fe fe58 	bl	80019ec <HAL_GetTick>
 8002d3c:	60f8      	str	r0, [r7, #12]
 8002d3e:	e00a      	b.n	8002d56 <HAL_RCC_ClockConfig+0x10e>
 8002d40:	f7fe fe54 	bl	80019ec <HAL_GetTick>
 8002d44:	4602      	mov	r2, r0
 8002d46:	68fb      	ldr	r3, [r7, #12]
 8002d48:	1ad3      	subs	r3, r2, r3
 8002d4a:	f241 3288 	movw	r2, #5000	; 0x1388
 8002d4e:	4293      	cmp	r3, r2
 8002d50:	d901      	bls.n	8002d56 <HAL_RCC_ClockConfig+0x10e>
 8002d52:	2303      	movs	r3, #3
 8002d54:	e04f      	b.n	8002df6 <HAL_RCC_ClockConfig+0x1ae>
 8002d56:	4b2b      	ldr	r3, [pc, #172]	; (8002e04 <HAL_RCC_ClockConfig+0x1bc>)
 8002d58:	689b      	ldr	r3, [r3, #8]
 8002d5a:	f003 020c 	and.w	r2, r3, #12
 8002d5e:	687b      	ldr	r3, [r7, #4]
 8002d60:	685b      	ldr	r3, [r3, #4]
 8002d62:	009b      	lsls	r3, r3, #2
 8002d64:	429a      	cmp	r2, r3
 8002d66:	d1eb      	bne.n	8002d40 <HAL_RCC_ClockConfig+0xf8>
 8002d68:	4b25      	ldr	r3, [pc, #148]	; (8002e00 <HAL_RCC_ClockConfig+0x1b8>)
 8002d6a:	681b      	ldr	r3, [r3, #0]
 8002d6c:	f003 0307 	and.w	r3, r3, #7
 8002d70:	683a      	ldr	r2, [r7, #0]
 8002d72:	429a      	cmp	r2, r3
 8002d74:	d20c      	bcs.n	8002d90 <HAL_RCC_ClockConfig+0x148>
 8002d76:	4b22      	ldr	r3, [pc, #136]	; (8002e00 <HAL_RCC_ClockConfig+0x1b8>)
 8002d78:	683a      	ldr	r2, [r7, #0]
 8002d7a:	b2d2      	uxtb	r2, r2
 8002d7c:	701a      	strb	r2, [r3, #0]
 8002d7e:	4b20      	ldr	r3, [pc, #128]	; (8002e00 <HAL_RCC_ClockConfig+0x1b8>)
 8002d80:	681b      	ldr	r3, [r3, #0]
 8002d82:	f003 0307 	and.w	r3, r3, #7
 8002d86:	683a      	ldr	r2, [r7, #0]
 8002d88:	429a      	cmp	r2, r3
 8002d8a:	d001      	beq.n	8002d90 <HAL_RCC_ClockConfig+0x148>
 8002d8c:	2301      	movs	r3, #1
 8002d8e:	e032      	b.n	8002df6 <HAL_RCC_ClockConfig+0x1ae>
 8002d90:	687b      	ldr	r3, [r7, #4]
 8002d92:	681b      	ldr	r3, [r3, #0]
 8002d94:	f003 0304 	and.w	r3, r3, #4
 8002d98:	2b00      	cmp	r3, #0
 8002d9a:	d008      	beq.n	8002dae <HAL_RCC_ClockConfig+0x166>
 8002d9c:	4b19      	ldr	r3, [pc, #100]	; (8002e04 <HAL_RCC_ClockConfig+0x1bc>)
 8002d9e:	689b      	ldr	r3, [r3, #8]
 8002da0:	f423 52e0 	bic.w	r2, r3, #7168	; 0x1c00
 8002da4:	687b      	ldr	r3, [r7, #4]
 8002da6:	68db      	ldr	r3, [r3, #12]
 8002da8:	4916      	ldr	r1, [pc, #88]	; (8002e04 <HAL_RCC_ClockConfig+0x1bc>)
 8002daa:	4313      	orrs	r3, r2
 8002dac:	608b      	str	r3, [r1, #8]
 8002dae:	687b      	ldr	r3, [r7, #4]
 8002db0:	681b      	ldr	r3, [r3, #0]
 8002db2:	f003 0308 	and.w	r3, r3, #8
 8002db6:	2b00      	cmp	r3, #0
 8002db8:	d009      	beq.n	8002dce <HAL_RCC_ClockConfig+0x186>
 8002dba:	4b12      	ldr	r3, [pc, #72]	; (8002e04 <HAL_RCC_ClockConfig+0x1bc>)
 8002dbc:	689b      	ldr	r3, [r3, #8]
 8002dbe:	f423 4260 	bic.w	r2, r3, #57344	; 0xe000
 8002dc2:	687b      	ldr	r3, [r7, #4]
 8002dc4:	691b      	ldr	r3, [r3, #16]
 8002dc6:	00db      	lsls	r3, r3, #3
 8002dc8:	490e      	ldr	r1, [pc, #56]	; (8002e04 <HAL_RCC_ClockConfig+0x1bc>)
 8002dca:	4313      	orrs	r3, r2
 8002dcc:	608b      	str	r3, [r1, #8]
 8002dce:	f000 f821 	bl	8002e14 <HAL_RCC_GetSysClockFreq>
 8002dd2:	4602      	mov	r2, r0
 8002dd4:	4b0b      	ldr	r3, [pc, #44]	; (8002e04 <HAL_RCC_ClockConfig+0x1bc>)
 8002dd6:	689b      	ldr	r3, [r3, #8]
 8002dd8:	091b      	lsrs	r3, r3, #4
 8002dda:	f003 030f 	and.w	r3, r3, #15
 8002dde:	490a      	ldr	r1, [pc, #40]	; (8002e08 <HAL_RCC_ClockConfig+0x1c0>)
 8002de0:	5ccb      	ldrb	r3, [r1, r3]
 8002de2:	fa22 f303 	lsr.w	r3, r2, r3
 8002de6:	4a09      	ldr	r2, [pc, #36]	; (8002e0c <HAL_RCC_ClockConfig+0x1c4>)
 8002de8:	6013      	str	r3, [r2, #0]
 8002dea:	4b09      	ldr	r3, [pc, #36]	; (8002e10 <HAL_RCC_ClockConfig+0x1c8>)
 8002dec:	681b      	ldr	r3, [r3, #0]
 8002dee:	4618      	mov	r0, r3
 8002df0:	f7fe fdb8 	bl	8001964 <HAL_InitTick>
 8002df4:	2300      	movs	r3, #0
 8002df6:	4618      	mov	r0, r3
 8002df8:	3710      	adds	r7, #16
 8002dfa:	46bd      	mov	sp, r7
 8002dfc:	bd80      	pop	{r7, pc}
 8002dfe:	bf00      	nop
 8002e00:	40023c00 	.word	0x40023c00
 8002e04:	40023800 	.word	0x40023800
 8002e08:	080044f8 	.word	0x080044f8
 8002e0c:	20000030 	.word	0x20000030
 8002e10:	20000034 	.word	0x20000034

08002e14 <HAL_RCC_GetSysClockFreq>:
 8002e14:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8002e18:	b090      	sub	sp, #64	; 0x40
 8002e1a:	af00      	add	r7, sp, #0
 8002e1c:	2300      	movs	r3, #0
 8002e1e:	637b      	str	r3, [r7, #52]	; 0x34
 8002e20:	2300      	movs	r3, #0
 8002e22:	63fb      	str	r3, [r7, #60]	; 0x3c
 8002e24:	2300      	movs	r3, #0
 8002e26:	633b      	str	r3, [r7, #48]	; 0x30
 8002e28:	2300      	movs	r3, #0
 8002e2a:	63bb      	str	r3, [r7, #56]	; 0x38
 8002e2c:	4b59      	ldr	r3, [pc, #356]	; (8002f94 <HAL_RCC_GetSysClockFreq+0x180>)
 8002e2e:	689b      	ldr	r3, [r3, #8]
 8002e30:	f003 030c 	and.w	r3, r3, #12
 8002e34:	2b08      	cmp	r3, #8
 8002e36:	d00d      	beq.n	8002e54 <HAL_RCC_GetSysClockFreq+0x40>
 8002e38:	2b08      	cmp	r3, #8
 8002e3a:	f200 80a1 	bhi.w	8002f80 <HAL_RCC_GetSysClockFreq+0x16c>
 8002e3e:	2b00      	cmp	r3, #0
 8002e40:	d002      	beq.n	8002e48 <HAL_RCC_GetSysClockFreq+0x34>
 8002e42:	2b04      	cmp	r3, #4
 8002e44:	d003      	beq.n	8002e4e <HAL_RCC_GetSysClockFreq+0x3a>
 8002e46:	e09b      	b.n	8002f80 <HAL_RCC_GetSysClockFreq+0x16c>
 8002e48:	4b53      	ldr	r3, [pc, #332]	; (8002f98 <HAL_RCC_GetSysClockFreq+0x184>)
 8002e4a:	63bb      	str	r3, [r7, #56]	; 0x38
 8002e4c:	e09b      	b.n	8002f86 <HAL_RCC_GetSysClockFreq+0x172>
 8002e4e:	4b53      	ldr	r3, [pc, #332]	; (8002f9c <HAL_RCC_GetSysClockFreq+0x188>)
 8002e50:	63bb      	str	r3, [r7, #56]	; 0x38
 8002e52:	e098      	b.n	8002f86 <HAL_RCC_GetSysClockFreq+0x172>
 8002e54:	4b4f      	ldr	r3, [pc, #316]	; (8002f94 <HAL_RCC_GetSysClockFreq+0x180>)
 8002e56:	685b      	ldr	r3, [r3, #4]
 8002e58:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8002e5c:	637b      	str	r3, [r7, #52]	; 0x34
 8002e5e:	4b4d      	ldr	r3, [pc, #308]	; (8002f94 <HAL_RCC_GetSysClockFreq+0x180>)
 8002e60:	685b      	ldr	r3, [r3, #4]
 8002e62:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8002e66:	2b00      	cmp	r3, #0
 8002e68:	d028      	beq.n	8002ebc <HAL_RCC_GetSysClockFreq+0xa8>
 8002e6a:	4b4a      	ldr	r3, [pc, #296]	; (8002f94 <HAL_RCC_GetSysClockFreq+0x180>)
 8002e6c:	685b      	ldr	r3, [r3, #4]
 8002e6e:	099b      	lsrs	r3, r3, #6
 8002e70:	2200      	movs	r2, #0
 8002e72:	623b      	str	r3, [r7, #32]
 8002e74:	627a      	str	r2, [r7, #36]	; 0x24
 8002e76:	6a3b      	ldr	r3, [r7, #32]
 8002e78:	f3c3 0008 	ubfx	r0, r3, #0, #9
 8002e7c:	2100      	movs	r1, #0
 8002e7e:	4b47      	ldr	r3, [pc, #284]	; (8002f9c <HAL_RCC_GetSysClockFreq+0x188>)
 8002e80:	fb03 f201 	mul.w	r2, r3, r1
 8002e84:	2300      	movs	r3, #0
 8002e86:	fb00 f303 	mul.w	r3, r0, r3
 8002e8a:	4413      	add	r3, r2
 8002e8c:	4a43      	ldr	r2, [pc, #268]	; (8002f9c <HAL_RCC_GetSysClockFreq+0x188>)
 8002e8e:	fba0 1202 	umull	r1, r2, r0, r2
 8002e92:	62fa      	str	r2, [r7, #44]	; 0x2c
 8002e94:	460a      	mov	r2, r1
 8002e96:	62ba      	str	r2, [r7, #40]	; 0x28
 8002e98:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8002e9a:	4413      	add	r3, r2
 8002e9c:	62fb      	str	r3, [r7, #44]	; 0x2c
 8002e9e:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8002ea0:	2200      	movs	r2, #0
 8002ea2:	61bb      	str	r3, [r7, #24]
 8002ea4:	61fa      	str	r2, [r7, #28]
 8002ea6:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8002eaa:	e9d7 010a 	ldrd	r0, r1, [r7, #40]	; 0x28
 8002eae:	f7fd f9e7 	bl	8000280 <__aeabi_uldivmod>
 8002eb2:	4602      	mov	r2, r0
 8002eb4:	460b      	mov	r3, r1
 8002eb6:	4613      	mov	r3, r2
 8002eb8:	63fb      	str	r3, [r7, #60]	; 0x3c
 8002eba:	e053      	b.n	8002f64 <HAL_RCC_GetSysClockFreq+0x150>
 8002ebc:	4b35      	ldr	r3, [pc, #212]	; (8002f94 <HAL_RCC_GetSysClockFreq+0x180>)
 8002ebe:	685b      	ldr	r3, [r3, #4]
 8002ec0:	099b      	lsrs	r3, r3, #6
 8002ec2:	2200      	movs	r2, #0
 8002ec4:	613b      	str	r3, [r7, #16]
 8002ec6:	617a      	str	r2, [r7, #20]
 8002ec8:	693b      	ldr	r3, [r7, #16]
 8002eca:	f3c3 0a08 	ubfx	sl, r3, #0, #9
 8002ece:	f04f 0b00 	mov.w	fp, #0
 8002ed2:	4652      	mov	r2, sl
 8002ed4:	465b      	mov	r3, fp
 8002ed6:	f04f 0000 	mov.w	r0, #0
 8002eda:	f04f 0100 	mov.w	r1, #0
 8002ede:	0159      	lsls	r1, r3, #5
 8002ee0:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8002ee4:	0150      	lsls	r0, r2, #5
 8002ee6:	4602      	mov	r2, r0
 8002ee8:	460b      	mov	r3, r1
 8002eea:	ebb2 080a 	subs.w	r8, r2, sl
 8002eee:	eb63 090b 	sbc.w	r9, r3, fp
 8002ef2:	f04f 0200 	mov.w	r2, #0
 8002ef6:	f04f 0300 	mov.w	r3, #0
 8002efa:	ea4f 1389 	mov.w	r3, r9, lsl #6
 8002efe:	ea43 6398 	orr.w	r3, r3, r8, lsr #26
 8002f02:	ea4f 1288 	mov.w	r2, r8, lsl #6
 8002f06:	ebb2 0408 	subs.w	r4, r2, r8
 8002f0a:	eb63 0509 	sbc.w	r5, r3, r9
 8002f0e:	f04f 0200 	mov.w	r2, #0
 8002f12:	f04f 0300 	mov.w	r3, #0
 8002f16:	00eb      	lsls	r3, r5, #3
 8002f18:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8002f1c:	00e2      	lsls	r2, r4, #3
 8002f1e:	4614      	mov	r4, r2
 8002f20:	461d      	mov	r5, r3
 8002f22:	eb14 030a 	adds.w	r3, r4, sl
 8002f26:	603b      	str	r3, [r7, #0]
 8002f28:	eb45 030b 	adc.w	r3, r5, fp
 8002f2c:	607b      	str	r3, [r7, #4]
 8002f2e:	f04f 0200 	mov.w	r2, #0
 8002f32:	f04f 0300 	mov.w	r3, #0
 8002f36:	e9d7 4500 	ldrd	r4, r5, [r7]
 8002f3a:	4629      	mov	r1, r5
 8002f3c:	028b      	lsls	r3, r1, #10
 8002f3e:	4621      	mov	r1, r4
 8002f40:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8002f44:	4621      	mov	r1, r4
 8002f46:	028a      	lsls	r2, r1, #10
 8002f48:	4610      	mov	r0, r2
 8002f4a:	4619      	mov	r1, r3
 8002f4c:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8002f4e:	2200      	movs	r2, #0
 8002f50:	60bb      	str	r3, [r7, #8]
 8002f52:	60fa      	str	r2, [r7, #12]
 8002f54:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8002f58:	f7fd f992 	bl	8000280 <__aeabi_uldivmod>
 8002f5c:	4602      	mov	r2, r0
 8002f5e:	460b      	mov	r3, r1
 8002f60:	4613      	mov	r3, r2
 8002f62:	63fb      	str	r3, [r7, #60]	; 0x3c
 8002f64:	4b0b      	ldr	r3, [pc, #44]	; (8002f94 <HAL_RCC_GetSysClockFreq+0x180>)
 8002f66:	685b      	ldr	r3, [r3, #4]
 8002f68:	0c1b      	lsrs	r3, r3, #16
 8002f6a:	f003 0303 	and.w	r3, r3, #3
 8002f6e:	3301      	adds	r3, #1
 8002f70:	005b      	lsls	r3, r3, #1
 8002f72:	633b      	str	r3, [r7, #48]	; 0x30
 8002f74:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 8002f76:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002f78:	fbb2 f3f3 	udiv	r3, r2, r3
 8002f7c:	63bb      	str	r3, [r7, #56]	; 0x38
 8002f7e:	e002      	b.n	8002f86 <HAL_RCC_GetSysClockFreq+0x172>
 8002f80:	4b05      	ldr	r3, [pc, #20]	; (8002f98 <HAL_RCC_GetSysClockFreq+0x184>)
 8002f82:	63bb      	str	r3, [r7, #56]	; 0x38
 8002f84:	bf00      	nop
 8002f86:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8002f88:	4618      	mov	r0, r3
 8002f8a:	3740      	adds	r7, #64	; 0x40
 8002f8c:	46bd      	mov	sp, r7
 8002f8e:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8002f92:	bf00      	nop
 8002f94:	40023800 	.word	0x40023800
 8002f98:	00f42400 	.word	0x00f42400
 8002f9c:	017d7840 	.word	0x017d7840

08002fa0 <HAL_TIM_PWM_Init>:
 8002fa0:	b580      	push	{r7, lr}
 8002fa2:	b082      	sub	sp, #8
 8002fa4:	af00      	add	r7, sp, #0
 8002fa6:	6078      	str	r0, [r7, #4]
 8002fa8:	687b      	ldr	r3, [r7, #4]
 8002faa:	2b00      	cmp	r3, #0
 8002fac:	d101      	bne.n	8002fb2 <HAL_TIM_PWM_Init+0x12>
 8002fae:	2301      	movs	r3, #1
 8002fb0:	e041      	b.n	8003036 <HAL_TIM_PWM_Init+0x96>
 8002fb2:	687b      	ldr	r3, [r7, #4]
 8002fb4:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8002fb8:	b2db      	uxtb	r3, r3
 8002fba:	2b00      	cmp	r3, #0
 8002fbc:	d106      	bne.n	8002fcc <HAL_TIM_PWM_Init+0x2c>
 8002fbe:	687b      	ldr	r3, [r7, #4]
 8002fc0:	2200      	movs	r2, #0
 8002fc2:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002fc6:	6878      	ldr	r0, [r7, #4]
 8002fc8:	f7fe fb6c 	bl	80016a4 <HAL_TIM_PWM_MspInit>
 8002fcc:	687b      	ldr	r3, [r7, #4]
 8002fce:	2202      	movs	r2, #2
 8002fd0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002fd4:	687b      	ldr	r3, [r7, #4]
 8002fd6:	681a      	ldr	r2, [r3, #0]
 8002fd8:	687b      	ldr	r3, [r7, #4]
 8002fda:	3304      	adds	r3, #4
 8002fdc:	4619      	mov	r1, r3
 8002fde:	4610      	mov	r0, r2
 8002fe0:	f000 f9a0 	bl	8003324 <TIM_Base_SetConfig>
 8002fe4:	687b      	ldr	r3, [r7, #4]
 8002fe6:	2201      	movs	r2, #1
 8002fe8:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8002fec:	687b      	ldr	r3, [r7, #4]
 8002fee:	2201      	movs	r2, #1
 8002ff0:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8002ff4:	687b      	ldr	r3, [r7, #4]
 8002ff6:	2201      	movs	r2, #1
 8002ff8:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8002ffc:	687b      	ldr	r3, [r7, #4]
 8002ffe:	2201      	movs	r2, #1
 8003000:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8003004:	687b      	ldr	r3, [r7, #4]
 8003006:	2201      	movs	r2, #1
 8003008:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800300c:	687b      	ldr	r3, [r7, #4]
 800300e:	2201      	movs	r2, #1
 8003010:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8003014:	687b      	ldr	r3, [r7, #4]
 8003016:	2201      	movs	r2, #1
 8003018:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 800301c:	687b      	ldr	r3, [r7, #4]
 800301e:	2201      	movs	r2, #1
 8003020:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8003024:	687b      	ldr	r3, [r7, #4]
 8003026:	2201      	movs	r2, #1
 8003028:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 800302c:	687b      	ldr	r3, [r7, #4]
 800302e:	2201      	movs	r2, #1
 8003030:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003034:	2300      	movs	r3, #0
 8003036:	4618      	mov	r0, r3
 8003038:	3708      	adds	r7, #8
 800303a:	46bd      	mov	sp, r7
 800303c:	bd80      	pop	{r7, pc}
	...

08003040 <HAL_TIM_PWM_Start>:
 8003040:	b580      	push	{r7, lr}
 8003042:	b084      	sub	sp, #16
 8003044:	af00      	add	r7, sp, #0
 8003046:	6078      	str	r0, [r7, #4]
 8003048:	6039      	str	r1, [r7, #0]
 800304a:	683b      	ldr	r3, [r7, #0]
 800304c:	2b00      	cmp	r3, #0
 800304e:	d109      	bne.n	8003064 <HAL_TIM_PWM_Start+0x24>
 8003050:	687b      	ldr	r3, [r7, #4]
 8003052:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8003056:	b2db      	uxtb	r3, r3
 8003058:	2b01      	cmp	r3, #1
 800305a:	bf14      	ite	ne
 800305c:	2301      	movne	r3, #1
 800305e:	2300      	moveq	r3, #0
 8003060:	b2db      	uxtb	r3, r3
 8003062:	e022      	b.n	80030aa <HAL_TIM_PWM_Start+0x6a>
 8003064:	683b      	ldr	r3, [r7, #0]
 8003066:	2b04      	cmp	r3, #4
 8003068:	d109      	bne.n	800307e <HAL_TIM_PWM_Start+0x3e>
 800306a:	687b      	ldr	r3, [r7, #4]
 800306c:	f893 303f 	ldrb.w	r3, [r3, #63]	; 0x3f
 8003070:	b2db      	uxtb	r3, r3
 8003072:	2b01      	cmp	r3, #1
 8003074:	bf14      	ite	ne
 8003076:	2301      	movne	r3, #1
 8003078:	2300      	moveq	r3, #0
 800307a:	b2db      	uxtb	r3, r3
 800307c:	e015      	b.n	80030aa <HAL_TIM_PWM_Start+0x6a>
 800307e:	683b      	ldr	r3, [r7, #0]
 8003080:	2b08      	cmp	r3, #8
 8003082:	d109      	bne.n	8003098 <HAL_TIM_PWM_Start+0x58>
 8003084:	687b      	ldr	r3, [r7, #4]
 8003086:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 800308a:	b2db      	uxtb	r3, r3
 800308c:	2b01      	cmp	r3, #1
 800308e:	bf14      	ite	ne
 8003090:	2301      	movne	r3, #1
 8003092:	2300      	moveq	r3, #0
 8003094:	b2db      	uxtb	r3, r3
 8003096:	e008      	b.n	80030aa <HAL_TIM_PWM_Start+0x6a>
 8003098:	687b      	ldr	r3, [r7, #4]
 800309a:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 800309e:	b2db      	uxtb	r3, r3
 80030a0:	2b01      	cmp	r3, #1
 80030a2:	bf14      	ite	ne
 80030a4:	2301      	movne	r3, #1
 80030a6:	2300      	moveq	r3, #0
 80030a8:	b2db      	uxtb	r3, r3
 80030aa:	2b00      	cmp	r3, #0
 80030ac:	d001      	beq.n	80030b2 <HAL_TIM_PWM_Start+0x72>
 80030ae:	2301      	movs	r3, #1
 80030b0:	e068      	b.n	8003184 <HAL_TIM_PWM_Start+0x144>
 80030b2:	683b      	ldr	r3, [r7, #0]
 80030b4:	2b00      	cmp	r3, #0
 80030b6:	d104      	bne.n	80030c2 <HAL_TIM_PWM_Start+0x82>
 80030b8:	687b      	ldr	r3, [r7, #4]
 80030ba:	2202      	movs	r2, #2
 80030bc:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80030c0:	e013      	b.n	80030ea <HAL_TIM_PWM_Start+0xaa>
 80030c2:	683b      	ldr	r3, [r7, #0]
 80030c4:	2b04      	cmp	r3, #4
 80030c6:	d104      	bne.n	80030d2 <HAL_TIM_PWM_Start+0x92>
 80030c8:	687b      	ldr	r3, [r7, #4]
 80030ca:	2202      	movs	r2, #2
 80030cc:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 80030d0:	e00b      	b.n	80030ea <HAL_TIM_PWM_Start+0xaa>
 80030d2:	683b      	ldr	r3, [r7, #0]
 80030d4:	2b08      	cmp	r3, #8
 80030d6:	d104      	bne.n	80030e2 <HAL_TIM_PWM_Start+0xa2>
 80030d8:	687b      	ldr	r3, [r7, #4]
 80030da:	2202      	movs	r2, #2
 80030dc:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 80030e0:	e003      	b.n	80030ea <HAL_TIM_PWM_Start+0xaa>
 80030e2:	687b      	ldr	r3, [r7, #4]
 80030e4:	2202      	movs	r2, #2
 80030e6:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 80030ea:	687b      	ldr	r3, [r7, #4]
 80030ec:	681b      	ldr	r3, [r3, #0]
 80030ee:	2201      	movs	r2, #1
 80030f0:	6839      	ldr	r1, [r7, #0]
 80030f2:	4618      	mov	r0, r3
 80030f4:	f000 fb22 	bl	800373c <TIM_CCxChannelCmd>
 80030f8:	687b      	ldr	r3, [r7, #4]
 80030fa:	681b      	ldr	r3, [r3, #0]
 80030fc:	4a23      	ldr	r2, [pc, #140]	; (800318c <HAL_TIM_PWM_Start+0x14c>)
 80030fe:	4293      	cmp	r3, r2
 8003100:	d107      	bne.n	8003112 <HAL_TIM_PWM_Start+0xd2>
 8003102:	687b      	ldr	r3, [r7, #4]
 8003104:	681b      	ldr	r3, [r3, #0]
 8003106:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8003108:	687b      	ldr	r3, [r7, #4]
 800310a:	681b      	ldr	r3, [r3, #0]
 800310c:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8003110:	645a      	str	r2, [r3, #68]	; 0x44
 8003112:	687b      	ldr	r3, [r7, #4]
 8003114:	681b      	ldr	r3, [r3, #0]
 8003116:	4a1d      	ldr	r2, [pc, #116]	; (800318c <HAL_TIM_PWM_Start+0x14c>)
 8003118:	4293      	cmp	r3, r2
 800311a:	d018      	beq.n	800314e <HAL_TIM_PWM_Start+0x10e>
 800311c:	687b      	ldr	r3, [r7, #4]
 800311e:	681b      	ldr	r3, [r3, #0]
 8003120:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8003124:	d013      	beq.n	800314e <HAL_TIM_PWM_Start+0x10e>
 8003126:	687b      	ldr	r3, [r7, #4]
 8003128:	681b      	ldr	r3, [r3, #0]
 800312a:	4a19      	ldr	r2, [pc, #100]	; (8003190 <HAL_TIM_PWM_Start+0x150>)
 800312c:	4293      	cmp	r3, r2
 800312e:	d00e      	beq.n	800314e <HAL_TIM_PWM_Start+0x10e>
 8003130:	687b      	ldr	r3, [r7, #4]
 8003132:	681b      	ldr	r3, [r3, #0]
 8003134:	4a17      	ldr	r2, [pc, #92]	; (8003194 <HAL_TIM_PWM_Start+0x154>)
 8003136:	4293      	cmp	r3, r2
 8003138:	d009      	beq.n	800314e <HAL_TIM_PWM_Start+0x10e>
 800313a:	687b      	ldr	r3, [r7, #4]
 800313c:	681b      	ldr	r3, [r3, #0]
 800313e:	4a16      	ldr	r2, [pc, #88]	; (8003198 <HAL_TIM_PWM_Start+0x158>)
 8003140:	4293      	cmp	r3, r2
 8003142:	d004      	beq.n	800314e <HAL_TIM_PWM_Start+0x10e>
 8003144:	687b      	ldr	r3, [r7, #4]
 8003146:	681b      	ldr	r3, [r3, #0]
 8003148:	4a14      	ldr	r2, [pc, #80]	; (800319c <HAL_TIM_PWM_Start+0x15c>)
 800314a:	4293      	cmp	r3, r2
 800314c:	d111      	bne.n	8003172 <HAL_TIM_PWM_Start+0x132>
 800314e:	687b      	ldr	r3, [r7, #4]
 8003150:	681b      	ldr	r3, [r3, #0]
 8003152:	689b      	ldr	r3, [r3, #8]
 8003154:	f003 0307 	and.w	r3, r3, #7
 8003158:	60fb      	str	r3, [r7, #12]
 800315a:	68fb      	ldr	r3, [r7, #12]
 800315c:	2b06      	cmp	r3, #6
 800315e:	d010      	beq.n	8003182 <HAL_TIM_PWM_Start+0x142>
 8003160:	687b      	ldr	r3, [r7, #4]
 8003162:	681b      	ldr	r3, [r3, #0]
 8003164:	681a      	ldr	r2, [r3, #0]
 8003166:	687b      	ldr	r3, [r7, #4]
 8003168:	681b      	ldr	r3, [r3, #0]
 800316a:	f042 0201 	orr.w	r2, r2, #1
 800316e:	601a      	str	r2, [r3, #0]
 8003170:	e007      	b.n	8003182 <HAL_TIM_PWM_Start+0x142>
 8003172:	687b      	ldr	r3, [r7, #4]
 8003174:	681b      	ldr	r3, [r3, #0]
 8003176:	681a      	ldr	r2, [r3, #0]
 8003178:	687b      	ldr	r3, [r7, #4]
 800317a:	681b      	ldr	r3, [r3, #0]
 800317c:	f042 0201 	orr.w	r2, r2, #1
 8003180:	601a      	str	r2, [r3, #0]
 8003182:	2300      	movs	r3, #0
 8003184:	4618      	mov	r0, r3
 8003186:	3710      	adds	r7, #16
 8003188:	46bd      	mov	sp, r7
 800318a:	bd80      	pop	{r7, pc}
 800318c:	40010000 	.word	0x40010000
 8003190:	40000400 	.word	0x40000400
 8003194:	40000800 	.word	0x40000800
 8003198:	40000c00 	.word	0x40000c00
 800319c:	40014000 	.word	0x40014000

080031a0 <HAL_TIM_PWM_ConfigChannel>:
 80031a0:	b580      	push	{r7, lr}
 80031a2:	b086      	sub	sp, #24
 80031a4:	af00      	add	r7, sp, #0
 80031a6:	60f8      	str	r0, [r7, #12]
 80031a8:	60b9      	str	r1, [r7, #8]
 80031aa:	607a      	str	r2, [r7, #4]
 80031ac:	2300      	movs	r3, #0
 80031ae:	75fb      	strb	r3, [r7, #23]
 80031b0:	68fb      	ldr	r3, [r7, #12]
 80031b2:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80031b6:	2b01      	cmp	r3, #1
 80031b8:	d101      	bne.n	80031be <HAL_TIM_PWM_ConfigChannel+0x1e>
 80031ba:	2302      	movs	r3, #2
 80031bc:	e0ae      	b.n	800331c <HAL_TIM_PWM_ConfigChannel+0x17c>
 80031be:	68fb      	ldr	r3, [r7, #12]
 80031c0:	2201      	movs	r2, #1
 80031c2:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80031c6:	687b      	ldr	r3, [r7, #4]
 80031c8:	2b0c      	cmp	r3, #12
 80031ca:	f200 809f 	bhi.w	800330c <HAL_TIM_PWM_ConfigChannel+0x16c>
 80031ce:	a201      	add	r2, pc, #4	; (adr r2, 80031d4 <HAL_TIM_PWM_ConfigChannel+0x34>)
 80031d0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80031d4:	08003209 	.word	0x08003209
 80031d8:	0800330d 	.word	0x0800330d
 80031dc:	0800330d 	.word	0x0800330d
 80031e0:	0800330d 	.word	0x0800330d
 80031e4:	08003249 	.word	0x08003249
 80031e8:	0800330d 	.word	0x0800330d
 80031ec:	0800330d 	.word	0x0800330d
 80031f0:	0800330d 	.word	0x0800330d
 80031f4:	0800328b 	.word	0x0800328b
 80031f8:	0800330d 	.word	0x0800330d
 80031fc:	0800330d 	.word	0x0800330d
 8003200:	0800330d 	.word	0x0800330d
 8003204:	080032cb 	.word	0x080032cb
 8003208:	68fb      	ldr	r3, [r7, #12]
 800320a:	681b      	ldr	r3, [r3, #0]
 800320c:	68b9      	ldr	r1, [r7, #8]
 800320e:	4618      	mov	r0, r3
 8003210:	f000 f908 	bl	8003424 <TIM_OC1_SetConfig>
 8003214:	68fb      	ldr	r3, [r7, #12]
 8003216:	681b      	ldr	r3, [r3, #0]
 8003218:	699a      	ldr	r2, [r3, #24]
 800321a:	68fb      	ldr	r3, [r7, #12]
 800321c:	681b      	ldr	r3, [r3, #0]
 800321e:	f042 0208 	orr.w	r2, r2, #8
 8003222:	619a      	str	r2, [r3, #24]
 8003224:	68fb      	ldr	r3, [r7, #12]
 8003226:	681b      	ldr	r3, [r3, #0]
 8003228:	699a      	ldr	r2, [r3, #24]
 800322a:	68fb      	ldr	r3, [r7, #12]
 800322c:	681b      	ldr	r3, [r3, #0]
 800322e:	f022 0204 	bic.w	r2, r2, #4
 8003232:	619a      	str	r2, [r3, #24]
 8003234:	68fb      	ldr	r3, [r7, #12]
 8003236:	681b      	ldr	r3, [r3, #0]
 8003238:	6999      	ldr	r1, [r3, #24]
 800323a:	68bb      	ldr	r3, [r7, #8]
 800323c:	691a      	ldr	r2, [r3, #16]
 800323e:	68fb      	ldr	r3, [r7, #12]
 8003240:	681b      	ldr	r3, [r3, #0]
 8003242:	430a      	orrs	r2, r1
 8003244:	619a      	str	r2, [r3, #24]
 8003246:	e064      	b.n	8003312 <HAL_TIM_PWM_ConfigChannel+0x172>
 8003248:	68fb      	ldr	r3, [r7, #12]
 800324a:	681b      	ldr	r3, [r3, #0]
 800324c:	68b9      	ldr	r1, [r7, #8]
 800324e:	4618      	mov	r0, r3
 8003250:	f000 f94e 	bl	80034f0 <TIM_OC2_SetConfig>
 8003254:	68fb      	ldr	r3, [r7, #12]
 8003256:	681b      	ldr	r3, [r3, #0]
 8003258:	699a      	ldr	r2, [r3, #24]
 800325a:	68fb      	ldr	r3, [r7, #12]
 800325c:	681b      	ldr	r3, [r3, #0]
 800325e:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8003262:	619a      	str	r2, [r3, #24]
 8003264:	68fb      	ldr	r3, [r7, #12]
 8003266:	681b      	ldr	r3, [r3, #0]
 8003268:	699a      	ldr	r2, [r3, #24]
 800326a:	68fb      	ldr	r3, [r7, #12]
 800326c:	681b      	ldr	r3, [r3, #0]
 800326e:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8003272:	619a      	str	r2, [r3, #24]
 8003274:	68fb      	ldr	r3, [r7, #12]
 8003276:	681b      	ldr	r3, [r3, #0]
 8003278:	6999      	ldr	r1, [r3, #24]
 800327a:	68bb      	ldr	r3, [r7, #8]
 800327c:	691b      	ldr	r3, [r3, #16]
 800327e:	021a      	lsls	r2, r3, #8
 8003280:	68fb      	ldr	r3, [r7, #12]
 8003282:	681b      	ldr	r3, [r3, #0]
 8003284:	430a      	orrs	r2, r1
 8003286:	619a      	str	r2, [r3, #24]
 8003288:	e043      	b.n	8003312 <HAL_TIM_PWM_ConfigChannel+0x172>
 800328a:	68fb      	ldr	r3, [r7, #12]
 800328c:	681b      	ldr	r3, [r3, #0]
 800328e:	68b9      	ldr	r1, [r7, #8]
 8003290:	4618      	mov	r0, r3
 8003292:	f000 f999 	bl	80035c8 <TIM_OC3_SetConfig>
 8003296:	68fb      	ldr	r3, [r7, #12]
 8003298:	681b      	ldr	r3, [r3, #0]
 800329a:	69da      	ldr	r2, [r3, #28]
 800329c:	68fb      	ldr	r3, [r7, #12]
 800329e:	681b      	ldr	r3, [r3, #0]
 80032a0:	f042 0208 	orr.w	r2, r2, #8
 80032a4:	61da      	str	r2, [r3, #28]
 80032a6:	68fb      	ldr	r3, [r7, #12]
 80032a8:	681b      	ldr	r3, [r3, #0]
 80032aa:	69da      	ldr	r2, [r3, #28]
 80032ac:	68fb      	ldr	r3, [r7, #12]
 80032ae:	681b      	ldr	r3, [r3, #0]
 80032b0:	f022 0204 	bic.w	r2, r2, #4
 80032b4:	61da      	str	r2, [r3, #28]
 80032b6:	68fb      	ldr	r3, [r7, #12]
 80032b8:	681b      	ldr	r3, [r3, #0]
 80032ba:	69d9      	ldr	r1, [r3, #28]
 80032bc:	68bb      	ldr	r3, [r7, #8]
 80032be:	691a      	ldr	r2, [r3, #16]
 80032c0:	68fb      	ldr	r3, [r7, #12]
 80032c2:	681b      	ldr	r3, [r3, #0]
 80032c4:	430a      	orrs	r2, r1
 80032c6:	61da      	str	r2, [r3, #28]
 80032c8:	e023      	b.n	8003312 <HAL_TIM_PWM_ConfigChannel+0x172>
 80032ca:	68fb      	ldr	r3, [r7, #12]
 80032cc:	681b      	ldr	r3, [r3, #0]
 80032ce:	68b9      	ldr	r1, [r7, #8]
 80032d0:	4618      	mov	r0, r3
 80032d2:	f000 f9e3 	bl	800369c <TIM_OC4_SetConfig>
 80032d6:	68fb      	ldr	r3, [r7, #12]
 80032d8:	681b      	ldr	r3, [r3, #0]
 80032da:	69da      	ldr	r2, [r3, #28]
 80032dc:	68fb      	ldr	r3, [r7, #12]
 80032de:	681b      	ldr	r3, [r3, #0]
 80032e0:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 80032e4:	61da      	str	r2, [r3, #28]
 80032e6:	68fb      	ldr	r3, [r7, #12]
 80032e8:	681b      	ldr	r3, [r3, #0]
 80032ea:	69da      	ldr	r2, [r3, #28]
 80032ec:	68fb      	ldr	r3, [r7, #12]
 80032ee:	681b      	ldr	r3, [r3, #0]
 80032f0:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80032f4:	61da      	str	r2, [r3, #28]
 80032f6:	68fb      	ldr	r3, [r7, #12]
 80032f8:	681b      	ldr	r3, [r3, #0]
 80032fa:	69d9      	ldr	r1, [r3, #28]
 80032fc:	68bb      	ldr	r3, [r7, #8]
 80032fe:	691b      	ldr	r3, [r3, #16]
 8003300:	021a      	lsls	r2, r3, #8
 8003302:	68fb      	ldr	r3, [r7, #12]
 8003304:	681b      	ldr	r3, [r3, #0]
 8003306:	430a      	orrs	r2, r1
 8003308:	61da      	str	r2, [r3, #28]
 800330a:	e002      	b.n	8003312 <HAL_TIM_PWM_ConfigChannel+0x172>
 800330c:	2301      	movs	r3, #1
 800330e:	75fb      	strb	r3, [r7, #23]
 8003310:	bf00      	nop
 8003312:	68fb      	ldr	r3, [r7, #12]
 8003314:	2200      	movs	r2, #0
 8003316:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800331a:	7dfb      	ldrb	r3, [r7, #23]
 800331c:	4618      	mov	r0, r3
 800331e:	3718      	adds	r7, #24
 8003320:	46bd      	mov	sp, r7
 8003322:	bd80      	pop	{r7, pc}

08003324 <TIM_Base_SetConfig>:
 8003324:	b480      	push	{r7}
 8003326:	b085      	sub	sp, #20
 8003328:	af00      	add	r7, sp, #0
 800332a:	6078      	str	r0, [r7, #4]
 800332c:	6039      	str	r1, [r7, #0]
 800332e:	687b      	ldr	r3, [r7, #4]
 8003330:	681b      	ldr	r3, [r3, #0]
 8003332:	60fb      	str	r3, [r7, #12]
 8003334:	687b      	ldr	r3, [r7, #4]
 8003336:	4a34      	ldr	r2, [pc, #208]	; (8003408 <TIM_Base_SetConfig+0xe4>)
 8003338:	4293      	cmp	r3, r2
 800333a:	d00f      	beq.n	800335c <TIM_Base_SetConfig+0x38>
 800333c:	687b      	ldr	r3, [r7, #4]
 800333e:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8003342:	d00b      	beq.n	800335c <TIM_Base_SetConfig+0x38>
 8003344:	687b      	ldr	r3, [r7, #4]
 8003346:	4a31      	ldr	r2, [pc, #196]	; (800340c <TIM_Base_SetConfig+0xe8>)
 8003348:	4293      	cmp	r3, r2
 800334a:	d007      	beq.n	800335c <TIM_Base_SetConfig+0x38>
 800334c:	687b      	ldr	r3, [r7, #4]
 800334e:	4a30      	ldr	r2, [pc, #192]	; (8003410 <TIM_Base_SetConfig+0xec>)
 8003350:	4293      	cmp	r3, r2
 8003352:	d003      	beq.n	800335c <TIM_Base_SetConfig+0x38>
 8003354:	687b      	ldr	r3, [r7, #4]
 8003356:	4a2f      	ldr	r2, [pc, #188]	; (8003414 <TIM_Base_SetConfig+0xf0>)
 8003358:	4293      	cmp	r3, r2
 800335a:	d108      	bne.n	800336e <TIM_Base_SetConfig+0x4a>
 800335c:	68fb      	ldr	r3, [r7, #12]
 800335e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8003362:	60fb      	str	r3, [r7, #12]
 8003364:	683b      	ldr	r3, [r7, #0]
 8003366:	685b      	ldr	r3, [r3, #4]
 8003368:	68fa      	ldr	r2, [r7, #12]
 800336a:	4313      	orrs	r3, r2
 800336c:	60fb      	str	r3, [r7, #12]
 800336e:	687b      	ldr	r3, [r7, #4]
 8003370:	4a25      	ldr	r2, [pc, #148]	; (8003408 <TIM_Base_SetConfig+0xe4>)
 8003372:	4293      	cmp	r3, r2
 8003374:	d01b      	beq.n	80033ae <TIM_Base_SetConfig+0x8a>
 8003376:	687b      	ldr	r3, [r7, #4]
 8003378:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800337c:	d017      	beq.n	80033ae <TIM_Base_SetConfig+0x8a>
 800337e:	687b      	ldr	r3, [r7, #4]
 8003380:	4a22      	ldr	r2, [pc, #136]	; (800340c <TIM_Base_SetConfig+0xe8>)
 8003382:	4293      	cmp	r3, r2
 8003384:	d013      	beq.n	80033ae <TIM_Base_SetConfig+0x8a>
 8003386:	687b      	ldr	r3, [r7, #4]
 8003388:	4a21      	ldr	r2, [pc, #132]	; (8003410 <TIM_Base_SetConfig+0xec>)
 800338a:	4293      	cmp	r3, r2
 800338c:	d00f      	beq.n	80033ae <TIM_Base_SetConfig+0x8a>
 800338e:	687b      	ldr	r3, [r7, #4]
 8003390:	4a20      	ldr	r2, [pc, #128]	; (8003414 <TIM_Base_SetConfig+0xf0>)
 8003392:	4293      	cmp	r3, r2
 8003394:	d00b      	beq.n	80033ae <TIM_Base_SetConfig+0x8a>
 8003396:	687b      	ldr	r3, [r7, #4]
 8003398:	4a1f      	ldr	r2, [pc, #124]	; (8003418 <TIM_Base_SetConfig+0xf4>)
 800339a:	4293      	cmp	r3, r2
 800339c:	d007      	beq.n	80033ae <TIM_Base_SetConfig+0x8a>
 800339e:	687b      	ldr	r3, [r7, #4]
 80033a0:	4a1e      	ldr	r2, [pc, #120]	; (800341c <TIM_Base_SetConfig+0xf8>)
 80033a2:	4293      	cmp	r3, r2
 80033a4:	d003      	beq.n	80033ae <TIM_Base_SetConfig+0x8a>
 80033a6:	687b      	ldr	r3, [r7, #4]
 80033a8:	4a1d      	ldr	r2, [pc, #116]	; (8003420 <TIM_Base_SetConfig+0xfc>)
 80033aa:	4293      	cmp	r3, r2
 80033ac:	d108      	bne.n	80033c0 <TIM_Base_SetConfig+0x9c>
 80033ae:	68fb      	ldr	r3, [r7, #12]
 80033b0:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80033b4:	60fb      	str	r3, [r7, #12]
 80033b6:	683b      	ldr	r3, [r7, #0]
 80033b8:	68db      	ldr	r3, [r3, #12]
 80033ba:	68fa      	ldr	r2, [r7, #12]
 80033bc:	4313      	orrs	r3, r2
 80033be:	60fb      	str	r3, [r7, #12]
 80033c0:	68fb      	ldr	r3, [r7, #12]
 80033c2:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 80033c6:	683b      	ldr	r3, [r7, #0]
 80033c8:	695b      	ldr	r3, [r3, #20]
 80033ca:	4313      	orrs	r3, r2
 80033cc:	60fb      	str	r3, [r7, #12]
 80033ce:	687b      	ldr	r3, [r7, #4]
 80033d0:	68fa      	ldr	r2, [r7, #12]
 80033d2:	601a      	str	r2, [r3, #0]
 80033d4:	683b      	ldr	r3, [r7, #0]
 80033d6:	689a      	ldr	r2, [r3, #8]
 80033d8:	687b      	ldr	r3, [r7, #4]
 80033da:	62da      	str	r2, [r3, #44]	; 0x2c
 80033dc:	683b      	ldr	r3, [r7, #0]
 80033de:	681a      	ldr	r2, [r3, #0]
 80033e0:	687b      	ldr	r3, [r7, #4]
 80033e2:	629a      	str	r2, [r3, #40]	; 0x28
 80033e4:	687b      	ldr	r3, [r7, #4]
 80033e6:	4a08      	ldr	r2, [pc, #32]	; (8003408 <TIM_Base_SetConfig+0xe4>)
 80033e8:	4293      	cmp	r3, r2
 80033ea:	d103      	bne.n	80033f4 <TIM_Base_SetConfig+0xd0>
 80033ec:	683b      	ldr	r3, [r7, #0]
 80033ee:	691a      	ldr	r2, [r3, #16]
 80033f0:	687b      	ldr	r3, [r7, #4]
 80033f2:	631a      	str	r2, [r3, #48]	; 0x30
 80033f4:	687b      	ldr	r3, [r7, #4]
 80033f6:	2201      	movs	r2, #1
 80033f8:	615a      	str	r2, [r3, #20]
 80033fa:	bf00      	nop
 80033fc:	3714      	adds	r7, #20
 80033fe:	46bd      	mov	sp, r7
 8003400:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003404:	4770      	bx	lr
 8003406:	bf00      	nop
 8003408:	40010000 	.word	0x40010000
 800340c:	40000400 	.word	0x40000400
 8003410:	40000800 	.word	0x40000800
 8003414:	40000c00 	.word	0x40000c00
 8003418:	40014000 	.word	0x40014000
 800341c:	40014400 	.word	0x40014400
 8003420:	40014800 	.word	0x40014800

08003424 <TIM_OC1_SetConfig>:
 8003424:	b480      	push	{r7}
 8003426:	b087      	sub	sp, #28
 8003428:	af00      	add	r7, sp, #0
 800342a:	6078      	str	r0, [r7, #4]
 800342c:	6039      	str	r1, [r7, #0]
 800342e:	687b      	ldr	r3, [r7, #4]
 8003430:	6a1b      	ldr	r3, [r3, #32]
 8003432:	f023 0201 	bic.w	r2, r3, #1
 8003436:	687b      	ldr	r3, [r7, #4]
 8003438:	621a      	str	r2, [r3, #32]
 800343a:	687b      	ldr	r3, [r7, #4]
 800343c:	6a1b      	ldr	r3, [r3, #32]
 800343e:	617b      	str	r3, [r7, #20]
 8003440:	687b      	ldr	r3, [r7, #4]
 8003442:	685b      	ldr	r3, [r3, #4]
 8003444:	613b      	str	r3, [r7, #16]
 8003446:	687b      	ldr	r3, [r7, #4]
 8003448:	699b      	ldr	r3, [r3, #24]
 800344a:	60fb      	str	r3, [r7, #12]
 800344c:	68fb      	ldr	r3, [r7, #12]
 800344e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8003452:	60fb      	str	r3, [r7, #12]
 8003454:	68fb      	ldr	r3, [r7, #12]
 8003456:	f023 0303 	bic.w	r3, r3, #3
 800345a:	60fb      	str	r3, [r7, #12]
 800345c:	683b      	ldr	r3, [r7, #0]
 800345e:	681b      	ldr	r3, [r3, #0]
 8003460:	68fa      	ldr	r2, [r7, #12]
 8003462:	4313      	orrs	r3, r2
 8003464:	60fb      	str	r3, [r7, #12]
 8003466:	697b      	ldr	r3, [r7, #20]
 8003468:	f023 0302 	bic.w	r3, r3, #2
 800346c:	617b      	str	r3, [r7, #20]
 800346e:	683b      	ldr	r3, [r7, #0]
 8003470:	689b      	ldr	r3, [r3, #8]
 8003472:	697a      	ldr	r2, [r7, #20]
 8003474:	4313      	orrs	r3, r2
 8003476:	617b      	str	r3, [r7, #20]
 8003478:	687b      	ldr	r3, [r7, #4]
 800347a:	4a1c      	ldr	r2, [pc, #112]	; (80034ec <TIM_OC1_SetConfig+0xc8>)
 800347c:	4293      	cmp	r3, r2
 800347e:	d10c      	bne.n	800349a <TIM_OC1_SetConfig+0x76>
 8003480:	697b      	ldr	r3, [r7, #20]
 8003482:	f023 0308 	bic.w	r3, r3, #8
 8003486:	617b      	str	r3, [r7, #20]
 8003488:	683b      	ldr	r3, [r7, #0]
 800348a:	68db      	ldr	r3, [r3, #12]
 800348c:	697a      	ldr	r2, [r7, #20]
 800348e:	4313      	orrs	r3, r2
 8003490:	617b      	str	r3, [r7, #20]
 8003492:	697b      	ldr	r3, [r7, #20]
 8003494:	f023 0304 	bic.w	r3, r3, #4
 8003498:	617b      	str	r3, [r7, #20]
 800349a:	687b      	ldr	r3, [r7, #4]
 800349c:	4a13      	ldr	r2, [pc, #76]	; (80034ec <TIM_OC1_SetConfig+0xc8>)
 800349e:	4293      	cmp	r3, r2
 80034a0:	d111      	bne.n	80034c6 <TIM_OC1_SetConfig+0xa2>
 80034a2:	693b      	ldr	r3, [r7, #16]
 80034a4:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 80034a8:	613b      	str	r3, [r7, #16]
 80034aa:	693b      	ldr	r3, [r7, #16]
 80034ac:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 80034b0:	613b      	str	r3, [r7, #16]
 80034b2:	683b      	ldr	r3, [r7, #0]
 80034b4:	695b      	ldr	r3, [r3, #20]
 80034b6:	693a      	ldr	r2, [r7, #16]
 80034b8:	4313      	orrs	r3, r2
 80034ba:	613b      	str	r3, [r7, #16]
 80034bc:	683b      	ldr	r3, [r7, #0]
 80034be:	699b      	ldr	r3, [r3, #24]
 80034c0:	693a      	ldr	r2, [r7, #16]
 80034c2:	4313      	orrs	r3, r2
 80034c4:	613b      	str	r3, [r7, #16]
 80034c6:	687b      	ldr	r3, [r7, #4]
 80034c8:	693a      	ldr	r2, [r7, #16]
 80034ca:	605a      	str	r2, [r3, #4]
 80034cc:	687b      	ldr	r3, [r7, #4]
 80034ce:	68fa      	ldr	r2, [r7, #12]
 80034d0:	619a      	str	r2, [r3, #24]
 80034d2:	683b      	ldr	r3, [r7, #0]
 80034d4:	685a      	ldr	r2, [r3, #4]
 80034d6:	687b      	ldr	r3, [r7, #4]
 80034d8:	635a      	str	r2, [r3, #52]	; 0x34
 80034da:	687b      	ldr	r3, [r7, #4]
 80034dc:	697a      	ldr	r2, [r7, #20]
 80034de:	621a      	str	r2, [r3, #32]
 80034e0:	bf00      	nop
 80034e2:	371c      	adds	r7, #28
 80034e4:	46bd      	mov	sp, r7
 80034e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80034ea:	4770      	bx	lr
 80034ec:	40010000 	.word	0x40010000

080034f0 <TIM_OC2_SetConfig>:
 80034f0:	b480      	push	{r7}
 80034f2:	b087      	sub	sp, #28
 80034f4:	af00      	add	r7, sp, #0
 80034f6:	6078      	str	r0, [r7, #4]
 80034f8:	6039      	str	r1, [r7, #0]
 80034fa:	687b      	ldr	r3, [r7, #4]
 80034fc:	6a1b      	ldr	r3, [r3, #32]
 80034fe:	f023 0210 	bic.w	r2, r3, #16
 8003502:	687b      	ldr	r3, [r7, #4]
 8003504:	621a      	str	r2, [r3, #32]
 8003506:	687b      	ldr	r3, [r7, #4]
 8003508:	6a1b      	ldr	r3, [r3, #32]
 800350a:	617b      	str	r3, [r7, #20]
 800350c:	687b      	ldr	r3, [r7, #4]
 800350e:	685b      	ldr	r3, [r3, #4]
 8003510:	613b      	str	r3, [r7, #16]
 8003512:	687b      	ldr	r3, [r7, #4]
 8003514:	699b      	ldr	r3, [r3, #24]
 8003516:	60fb      	str	r3, [r7, #12]
 8003518:	68fb      	ldr	r3, [r7, #12]
 800351a:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 800351e:	60fb      	str	r3, [r7, #12]
 8003520:	68fb      	ldr	r3, [r7, #12]
 8003522:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8003526:	60fb      	str	r3, [r7, #12]
 8003528:	683b      	ldr	r3, [r7, #0]
 800352a:	681b      	ldr	r3, [r3, #0]
 800352c:	021b      	lsls	r3, r3, #8
 800352e:	68fa      	ldr	r2, [r7, #12]
 8003530:	4313      	orrs	r3, r2
 8003532:	60fb      	str	r3, [r7, #12]
 8003534:	697b      	ldr	r3, [r7, #20]
 8003536:	f023 0320 	bic.w	r3, r3, #32
 800353a:	617b      	str	r3, [r7, #20]
 800353c:	683b      	ldr	r3, [r7, #0]
 800353e:	689b      	ldr	r3, [r3, #8]
 8003540:	011b      	lsls	r3, r3, #4
 8003542:	697a      	ldr	r2, [r7, #20]
 8003544:	4313      	orrs	r3, r2
 8003546:	617b      	str	r3, [r7, #20]
 8003548:	687b      	ldr	r3, [r7, #4]
 800354a:	4a1e      	ldr	r2, [pc, #120]	; (80035c4 <TIM_OC2_SetConfig+0xd4>)
 800354c:	4293      	cmp	r3, r2
 800354e:	d10d      	bne.n	800356c <TIM_OC2_SetConfig+0x7c>
 8003550:	697b      	ldr	r3, [r7, #20]
 8003552:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8003556:	617b      	str	r3, [r7, #20]
 8003558:	683b      	ldr	r3, [r7, #0]
 800355a:	68db      	ldr	r3, [r3, #12]
 800355c:	011b      	lsls	r3, r3, #4
 800355e:	697a      	ldr	r2, [r7, #20]
 8003560:	4313      	orrs	r3, r2
 8003562:	617b      	str	r3, [r7, #20]
 8003564:	697b      	ldr	r3, [r7, #20]
 8003566:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800356a:	617b      	str	r3, [r7, #20]
 800356c:	687b      	ldr	r3, [r7, #4]
 800356e:	4a15      	ldr	r2, [pc, #84]	; (80035c4 <TIM_OC2_SetConfig+0xd4>)
 8003570:	4293      	cmp	r3, r2
 8003572:	d113      	bne.n	800359c <TIM_OC2_SetConfig+0xac>
 8003574:	693b      	ldr	r3, [r7, #16]
 8003576:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800357a:	613b      	str	r3, [r7, #16]
 800357c:	693b      	ldr	r3, [r7, #16]
 800357e:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8003582:	613b      	str	r3, [r7, #16]
 8003584:	683b      	ldr	r3, [r7, #0]
 8003586:	695b      	ldr	r3, [r3, #20]
 8003588:	009b      	lsls	r3, r3, #2
 800358a:	693a      	ldr	r2, [r7, #16]
 800358c:	4313      	orrs	r3, r2
 800358e:	613b      	str	r3, [r7, #16]
 8003590:	683b      	ldr	r3, [r7, #0]
 8003592:	699b      	ldr	r3, [r3, #24]
 8003594:	009b      	lsls	r3, r3, #2
 8003596:	693a      	ldr	r2, [r7, #16]
 8003598:	4313      	orrs	r3, r2
 800359a:	613b      	str	r3, [r7, #16]
 800359c:	687b      	ldr	r3, [r7, #4]
 800359e:	693a      	ldr	r2, [r7, #16]
 80035a0:	605a      	str	r2, [r3, #4]
 80035a2:	687b      	ldr	r3, [r7, #4]
 80035a4:	68fa      	ldr	r2, [r7, #12]
 80035a6:	619a      	str	r2, [r3, #24]
 80035a8:	683b      	ldr	r3, [r7, #0]
 80035aa:	685a      	ldr	r2, [r3, #4]
 80035ac:	687b      	ldr	r3, [r7, #4]
 80035ae:	639a      	str	r2, [r3, #56]	; 0x38
 80035b0:	687b      	ldr	r3, [r7, #4]
 80035b2:	697a      	ldr	r2, [r7, #20]
 80035b4:	621a      	str	r2, [r3, #32]
 80035b6:	bf00      	nop
 80035b8:	371c      	adds	r7, #28
 80035ba:	46bd      	mov	sp, r7
 80035bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80035c0:	4770      	bx	lr
 80035c2:	bf00      	nop
 80035c4:	40010000 	.word	0x40010000

080035c8 <TIM_OC3_SetConfig>:
 80035c8:	b480      	push	{r7}
 80035ca:	b087      	sub	sp, #28
 80035cc:	af00      	add	r7, sp, #0
 80035ce:	6078      	str	r0, [r7, #4]
 80035d0:	6039      	str	r1, [r7, #0]
 80035d2:	687b      	ldr	r3, [r7, #4]
 80035d4:	6a1b      	ldr	r3, [r3, #32]
 80035d6:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 80035da:	687b      	ldr	r3, [r7, #4]
 80035dc:	621a      	str	r2, [r3, #32]
 80035de:	687b      	ldr	r3, [r7, #4]
 80035e0:	6a1b      	ldr	r3, [r3, #32]
 80035e2:	617b      	str	r3, [r7, #20]
 80035e4:	687b      	ldr	r3, [r7, #4]
 80035e6:	685b      	ldr	r3, [r3, #4]
 80035e8:	613b      	str	r3, [r7, #16]
 80035ea:	687b      	ldr	r3, [r7, #4]
 80035ec:	69db      	ldr	r3, [r3, #28]
 80035ee:	60fb      	str	r3, [r7, #12]
 80035f0:	68fb      	ldr	r3, [r7, #12]
 80035f2:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80035f6:	60fb      	str	r3, [r7, #12]
 80035f8:	68fb      	ldr	r3, [r7, #12]
 80035fa:	f023 0303 	bic.w	r3, r3, #3
 80035fe:	60fb      	str	r3, [r7, #12]
 8003600:	683b      	ldr	r3, [r7, #0]
 8003602:	681b      	ldr	r3, [r3, #0]
 8003604:	68fa      	ldr	r2, [r7, #12]
 8003606:	4313      	orrs	r3, r2
 8003608:	60fb      	str	r3, [r7, #12]
 800360a:	697b      	ldr	r3, [r7, #20]
 800360c:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8003610:	617b      	str	r3, [r7, #20]
 8003612:	683b      	ldr	r3, [r7, #0]
 8003614:	689b      	ldr	r3, [r3, #8]
 8003616:	021b      	lsls	r3, r3, #8
 8003618:	697a      	ldr	r2, [r7, #20]
 800361a:	4313      	orrs	r3, r2
 800361c:	617b      	str	r3, [r7, #20]
 800361e:	687b      	ldr	r3, [r7, #4]
 8003620:	4a1d      	ldr	r2, [pc, #116]	; (8003698 <TIM_OC3_SetConfig+0xd0>)
 8003622:	4293      	cmp	r3, r2
 8003624:	d10d      	bne.n	8003642 <TIM_OC3_SetConfig+0x7a>
 8003626:	697b      	ldr	r3, [r7, #20]
 8003628:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800362c:	617b      	str	r3, [r7, #20]
 800362e:	683b      	ldr	r3, [r7, #0]
 8003630:	68db      	ldr	r3, [r3, #12]
 8003632:	021b      	lsls	r3, r3, #8
 8003634:	697a      	ldr	r2, [r7, #20]
 8003636:	4313      	orrs	r3, r2
 8003638:	617b      	str	r3, [r7, #20]
 800363a:	697b      	ldr	r3, [r7, #20]
 800363c:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8003640:	617b      	str	r3, [r7, #20]
 8003642:	687b      	ldr	r3, [r7, #4]
 8003644:	4a14      	ldr	r2, [pc, #80]	; (8003698 <TIM_OC3_SetConfig+0xd0>)
 8003646:	4293      	cmp	r3, r2
 8003648:	d113      	bne.n	8003672 <TIM_OC3_SetConfig+0xaa>
 800364a:	693b      	ldr	r3, [r7, #16]
 800364c:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8003650:	613b      	str	r3, [r7, #16]
 8003652:	693b      	ldr	r3, [r7, #16]
 8003654:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8003658:	613b      	str	r3, [r7, #16]
 800365a:	683b      	ldr	r3, [r7, #0]
 800365c:	695b      	ldr	r3, [r3, #20]
 800365e:	011b      	lsls	r3, r3, #4
 8003660:	693a      	ldr	r2, [r7, #16]
 8003662:	4313      	orrs	r3, r2
 8003664:	613b      	str	r3, [r7, #16]
 8003666:	683b      	ldr	r3, [r7, #0]
 8003668:	699b      	ldr	r3, [r3, #24]
 800366a:	011b      	lsls	r3, r3, #4
 800366c:	693a      	ldr	r2, [r7, #16]
 800366e:	4313      	orrs	r3, r2
 8003670:	613b      	str	r3, [r7, #16]
 8003672:	687b      	ldr	r3, [r7, #4]
 8003674:	693a      	ldr	r2, [r7, #16]
 8003676:	605a      	str	r2, [r3, #4]
 8003678:	687b      	ldr	r3, [r7, #4]
 800367a:	68fa      	ldr	r2, [r7, #12]
 800367c:	61da      	str	r2, [r3, #28]
 800367e:	683b      	ldr	r3, [r7, #0]
 8003680:	685a      	ldr	r2, [r3, #4]
 8003682:	687b      	ldr	r3, [r7, #4]
 8003684:	63da      	str	r2, [r3, #60]	; 0x3c
 8003686:	687b      	ldr	r3, [r7, #4]
 8003688:	697a      	ldr	r2, [r7, #20]
 800368a:	621a      	str	r2, [r3, #32]
 800368c:	bf00      	nop
 800368e:	371c      	adds	r7, #28
 8003690:	46bd      	mov	sp, r7
 8003692:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003696:	4770      	bx	lr
 8003698:	40010000 	.word	0x40010000

0800369c <TIM_OC4_SetConfig>:
 800369c:	b480      	push	{r7}
 800369e:	b087      	sub	sp, #28
 80036a0:	af00      	add	r7, sp, #0
 80036a2:	6078      	str	r0, [r7, #4]
 80036a4:	6039      	str	r1, [r7, #0]
 80036a6:	687b      	ldr	r3, [r7, #4]
 80036a8:	6a1b      	ldr	r3, [r3, #32]
 80036aa:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 80036ae:	687b      	ldr	r3, [r7, #4]
 80036b0:	621a      	str	r2, [r3, #32]
 80036b2:	687b      	ldr	r3, [r7, #4]
 80036b4:	6a1b      	ldr	r3, [r3, #32]
 80036b6:	613b      	str	r3, [r7, #16]
 80036b8:	687b      	ldr	r3, [r7, #4]
 80036ba:	685b      	ldr	r3, [r3, #4]
 80036bc:	617b      	str	r3, [r7, #20]
 80036be:	687b      	ldr	r3, [r7, #4]
 80036c0:	69db      	ldr	r3, [r3, #28]
 80036c2:	60fb      	str	r3, [r7, #12]
 80036c4:	68fb      	ldr	r3, [r7, #12]
 80036c6:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 80036ca:	60fb      	str	r3, [r7, #12]
 80036cc:	68fb      	ldr	r3, [r7, #12]
 80036ce:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80036d2:	60fb      	str	r3, [r7, #12]
 80036d4:	683b      	ldr	r3, [r7, #0]
 80036d6:	681b      	ldr	r3, [r3, #0]
 80036d8:	021b      	lsls	r3, r3, #8
 80036da:	68fa      	ldr	r2, [r7, #12]
 80036dc:	4313      	orrs	r3, r2
 80036de:	60fb      	str	r3, [r7, #12]
 80036e0:	693b      	ldr	r3, [r7, #16]
 80036e2:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 80036e6:	613b      	str	r3, [r7, #16]
 80036e8:	683b      	ldr	r3, [r7, #0]
 80036ea:	689b      	ldr	r3, [r3, #8]
 80036ec:	031b      	lsls	r3, r3, #12
 80036ee:	693a      	ldr	r2, [r7, #16]
 80036f0:	4313      	orrs	r3, r2
 80036f2:	613b      	str	r3, [r7, #16]
 80036f4:	687b      	ldr	r3, [r7, #4]
 80036f6:	4a10      	ldr	r2, [pc, #64]	; (8003738 <TIM_OC4_SetConfig+0x9c>)
 80036f8:	4293      	cmp	r3, r2
 80036fa:	d109      	bne.n	8003710 <TIM_OC4_SetConfig+0x74>
 80036fc:	697b      	ldr	r3, [r7, #20]
 80036fe:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8003702:	617b      	str	r3, [r7, #20]
 8003704:	683b      	ldr	r3, [r7, #0]
 8003706:	695b      	ldr	r3, [r3, #20]
 8003708:	019b      	lsls	r3, r3, #6
 800370a:	697a      	ldr	r2, [r7, #20]
 800370c:	4313      	orrs	r3, r2
 800370e:	617b      	str	r3, [r7, #20]
 8003710:	687b      	ldr	r3, [r7, #4]
 8003712:	697a      	ldr	r2, [r7, #20]
 8003714:	605a      	str	r2, [r3, #4]
 8003716:	687b      	ldr	r3, [r7, #4]
 8003718:	68fa      	ldr	r2, [r7, #12]
 800371a:	61da      	str	r2, [r3, #28]
 800371c:	683b      	ldr	r3, [r7, #0]
 800371e:	685a      	ldr	r2, [r3, #4]
 8003720:	687b      	ldr	r3, [r7, #4]
 8003722:	641a      	str	r2, [r3, #64]	; 0x40
 8003724:	687b      	ldr	r3, [r7, #4]
 8003726:	693a      	ldr	r2, [r7, #16]
 8003728:	621a      	str	r2, [r3, #32]
 800372a:	bf00      	nop
 800372c:	371c      	adds	r7, #28
 800372e:	46bd      	mov	sp, r7
 8003730:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003734:	4770      	bx	lr
 8003736:	bf00      	nop
 8003738:	40010000 	.word	0x40010000

0800373c <TIM_CCxChannelCmd>:
 800373c:	b480      	push	{r7}
 800373e:	b087      	sub	sp, #28
 8003740:	af00      	add	r7, sp, #0
 8003742:	60f8      	str	r0, [r7, #12]
 8003744:	60b9      	str	r1, [r7, #8]
 8003746:	607a      	str	r2, [r7, #4]
 8003748:	68bb      	ldr	r3, [r7, #8]
 800374a:	f003 031f 	and.w	r3, r3, #31
 800374e:	2201      	movs	r2, #1
 8003750:	fa02 f303 	lsl.w	r3, r2, r3
 8003754:	617b      	str	r3, [r7, #20]
 8003756:	68fb      	ldr	r3, [r7, #12]
 8003758:	6a1a      	ldr	r2, [r3, #32]
 800375a:	697b      	ldr	r3, [r7, #20]
 800375c:	43db      	mvns	r3, r3
 800375e:	401a      	ands	r2, r3
 8003760:	68fb      	ldr	r3, [r7, #12]
 8003762:	621a      	str	r2, [r3, #32]
 8003764:	68fb      	ldr	r3, [r7, #12]
 8003766:	6a1a      	ldr	r2, [r3, #32]
 8003768:	68bb      	ldr	r3, [r7, #8]
 800376a:	f003 031f 	and.w	r3, r3, #31
 800376e:	6879      	ldr	r1, [r7, #4]
 8003770:	fa01 f303 	lsl.w	r3, r1, r3
 8003774:	431a      	orrs	r2, r3
 8003776:	68fb      	ldr	r3, [r7, #12]
 8003778:	621a      	str	r2, [r3, #32]
 800377a:	bf00      	nop
 800377c:	371c      	adds	r7, #28
 800377e:	46bd      	mov	sp, r7
 8003780:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003784:	4770      	bx	lr
	...

08003788 <HAL_TIMEx_MasterConfigSynchronization>:
 8003788:	b480      	push	{r7}
 800378a:	b085      	sub	sp, #20
 800378c:	af00      	add	r7, sp, #0
 800378e:	6078      	str	r0, [r7, #4]
 8003790:	6039      	str	r1, [r7, #0]
 8003792:	687b      	ldr	r3, [r7, #4]
 8003794:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8003798:	2b01      	cmp	r3, #1
 800379a:	d101      	bne.n	80037a0 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 800379c:	2302      	movs	r3, #2
 800379e:	e050      	b.n	8003842 <HAL_TIMEx_MasterConfigSynchronization+0xba>
 80037a0:	687b      	ldr	r3, [r7, #4]
 80037a2:	2201      	movs	r2, #1
 80037a4:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80037a8:	687b      	ldr	r3, [r7, #4]
 80037aa:	2202      	movs	r2, #2
 80037ac:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80037b0:	687b      	ldr	r3, [r7, #4]
 80037b2:	681b      	ldr	r3, [r3, #0]
 80037b4:	685b      	ldr	r3, [r3, #4]
 80037b6:	60fb      	str	r3, [r7, #12]
 80037b8:	687b      	ldr	r3, [r7, #4]
 80037ba:	681b      	ldr	r3, [r3, #0]
 80037bc:	689b      	ldr	r3, [r3, #8]
 80037be:	60bb      	str	r3, [r7, #8]
 80037c0:	68fb      	ldr	r3, [r7, #12]
 80037c2:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80037c6:	60fb      	str	r3, [r7, #12]
 80037c8:	683b      	ldr	r3, [r7, #0]
 80037ca:	681b      	ldr	r3, [r3, #0]
 80037cc:	68fa      	ldr	r2, [r7, #12]
 80037ce:	4313      	orrs	r3, r2
 80037d0:	60fb      	str	r3, [r7, #12]
 80037d2:	687b      	ldr	r3, [r7, #4]
 80037d4:	681b      	ldr	r3, [r3, #0]
 80037d6:	68fa      	ldr	r2, [r7, #12]
 80037d8:	605a      	str	r2, [r3, #4]
 80037da:	687b      	ldr	r3, [r7, #4]
 80037dc:	681b      	ldr	r3, [r3, #0]
 80037de:	4a1c      	ldr	r2, [pc, #112]	; (8003850 <HAL_TIMEx_MasterConfigSynchronization+0xc8>)
 80037e0:	4293      	cmp	r3, r2
 80037e2:	d018      	beq.n	8003816 <HAL_TIMEx_MasterConfigSynchronization+0x8e>
 80037e4:	687b      	ldr	r3, [r7, #4]
 80037e6:	681b      	ldr	r3, [r3, #0]
 80037e8:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80037ec:	d013      	beq.n	8003816 <HAL_TIMEx_MasterConfigSynchronization+0x8e>
 80037ee:	687b      	ldr	r3, [r7, #4]
 80037f0:	681b      	ldr	r3, [r3, #0]
 80037f2:	4a18      	ldr	r2, [pc, #96]	; (8003854 <HAL_TIMEx_MasterConfigSynchronization+0xcc>)
 80037f4:	4293      	cmp	r3, r2
 80037f6:	d00e      	beq.n	8003816 <HAL_TIMEx_MasterConfigSynchronization+0x8e>
 80037f8:	687b      	ldr	r3, [r7, #4]
 80037fa:	681b      	ldr	r3, [r3, #0]
 80037fc:	4a16      	ldr	r2, [pc, #88]	; (8003858 <HAL_TIMEx_MasterConfigSynchronization+0xd0>)
 80037fe:	4293      	cmp	r3, r2
 8003800:	d009      	beq.n	8003816 <HAL_TIMEx_MasterConfigSynchronization+0x8e>
 8003802:	687b      	ldr	r3, [r7, #4]
 8003804:	681b      	ldr	r3, [r3, #0]
 8003806:	4a15      	ldr	r2, [pc, #84]	; (800385c <HAL_TIMEx_MasterConfigSynchronization+0xd4>)
 8003808:	4293      	cmp	r3, r2
 800380a:	d004      	beq.n	8003816 <HAL_TIMEx_MasterConfigSynchronization+0x8e>
 800380c:	687b      	ldr	r3, [r7, #4]
 800380e:	681b      	ldr	r3, [r3, #0]
 8003810:	4a13      	ldr	r2, [pc, #76]	; (8003860 <HAL_TIMEx_MasterConfigSynchronization+0xd8>)
 8003812:	4293      	cmp	r3, r2
 8003814:	d10c      	bne.n	8003830 <HAL_TIMEx_MasterConfigSynchronization+0xa8>
 8003816:	68bb      	ldr	r3, [r7, #8]
 8003818:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800381c:	60bb      	str	r3, [r7, #8]
 800381e:	683b      	ldr	r3, [r7, #0]
 8003820:	685b      	ldr	r3, [r3, #4]
 8003822:	68ba      	ldr	r2, [r7, #8]
 8003824:	4313      	orrs	r3, r2
 8003826:	60bb      	str	r3, [r7, #8]
 8003828:	687b      	ldr	r3, [r7, #4]
 800382a:	681b      	ldr	r3, [r3, #0]
 800382c:	68ba      	ldr	r2, [r7, #8]
 800382e:	609a      	str	r2, [r3, #8]
 8003830:	687b      	ldr	r3, [r7, #4]
 8003832:	2201      	movs	r2, #1
 8003834:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003838:	687b      	ldr	r3, [r7, #4]
 800383a:	2200      	movs	r2, #0
 800383c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003840:	2300      	movs	r3, #0
 8003842:	4618      	mov	r0, r3
 8003844:	3714      	adds	r7, #20
 8003846:	46bd      	mov	sp, r7
 8003848:	f85d 7b04 	ldr.w	r7, [sp], #4
 800384c:	4770      	bx	lr
 800384e:	bf00      	nop
 8003850:	40010000 	.word	0x40010000
 8003854:	40000400 	.word	0x40000400
 8003858:	40000800 	.word	0x40000800
 800385c:	40000c00 	.word	0x40000c00
 8003860:	40014000 	.word	0x40014000

08003864 <HAL_TIMEx_ConfigBreakDeadTime>:
 8003864:	b480      	push	{r7}
 8003866:	b085      	sub	sp, #20
 8003868:	af00      	add	r7, sp, #0
 800386a:	6078      	str	r0, [r7, #4]
 800386c:	6039      	str	r1, [r7, #0]
 800386e:	2300      	movs	r3, #0
 8003870:	60fb      	str	r3, [r7, #12]
 8003872:	687b      	ldr	r3, [r7, #4]
 8003874:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8003878:	2b01      	cmp	r3, #1
 800387a:	d101      	bne.n	8003880 <HAL_TIMEx_ConfigBreakDeadTime+0x1c>
 800387c:	2302      	movs	r3, #2
 800387e:	e03d      	b.n	80038fc <HAL_TIMEx_ConfigBreakDeadTime+0x98>
 8003880:	687b      	ldr	r3, [r7, #4]
 8003882:	2201      	movs	r2, #1
 8003884:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003888:	68fb      	ldr	r3, [r7, #12]
 800388a:	f023 02ff 	bic.w	r2, r3, #255	; 0xff
 800388e:	683b      	ldr	r3, [r7, #0]
 8003890:	68db      	ldr	r3, [r3, #12]
 8003892:	4313      	orrs	r3, r2
 8003894:	60fb      	str	r3, [r7, #12]
 8003896:	68fb      	ldr	r3, [r7, #12]
 8003898:	f423 7240 	bic.w	r2, r3, #768	; 0x300
 800389c:	683b      	ldr	r3, [r7, #0]
 800389e:	689b      	ldr	r3, [r3, #8]
 80038a0:	4313      	orrs	r3, r2
 80038a2:	60fb      	str	r3, [r7, #12]
 80038a4:	68fb      	ldr	r3, [r7, #12]
 80038a6:	f423 6280 	bic.w	r2, r3, #1024	; 0x400
 80038aa:	683b      	ldr	r3, [r7, #0]
 80038ac:	685b      	ldr	r3, [r3, #4]
 80038ae:	4313      	orrs	r3, r2
 80038b0:	60fb      	str	r3, [r7, #12]
 80038b2:	68fb      	ldr	r3, [r7, #12]
 80038b4:	f423 6200 	bic.w	r2, r3, #2048	; 0x800
 80038b8:	683b      	ldr	r3, [r7, #0]
 80038ba:	681b      	ldr	r3, [r3, #0]
 80038bc:	4313      	orrs	r3, r2
 80038be:	60fb      	str	r3, [r7, #12]
 80038c0:	68fb      	ldr	r3, [r7, #12]
 80038c2:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 80038c6:	683b      	ldr	r3, [r7, #0]
 80038c8:	691b      	ldr	r3, [r3, #16]
 80038ca:	4313      	orrs	r3, r2
 80038cc:	60fb      	str	r3, [r7, #12]
 80038ce:	68fb      	ldr	r3, [r7, #12]
 80038d0:	f423 5200 	bic.w	r2, r3, #8192	; 0x2000
 80038d4:	683b      	ldr	r3, [r7, #0]
 80038d6:	695b      	ldr	r3, [r3, #20]
 80038d8:	4313      	orrs	r3, r2
 80038da:	60fb      	str	r3, [r7, #12]
 80038dc:	68fb      	ldr	r3, [r7, #12]
 80038de:	f423 4280 	bic.w	r2, r3, #16384	; 0x4000
 80038e2:	683b      	ldr	r3, [r7, #0]
 80038e4:	69db      	ldr	r3, [r3, #28]
 80038e6:	4313      	orrs	r3, r2
 80038e8:	60fb      	str	r3, [r7, #12]
 80038ea:	687b      	ldr	r3, [r7, #4]
 80038ec:	681b      	ldr	r3, [r3, #0]
 80038ee:	68fa      	ldr	r2, [r7, #12]
 80038f0:	645a      	str	r2, [r3, #68]	; 0x44
 80038f2:	687b      	ldr	r3, [r7, #4]
 80038f4:	2200      	movs	r2, #0
 80038f6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80038fa:	2300      	movs	r3, #0
 80038fc:	4618      	mov	r0, r3
 80038fe:	3714      	adds	r7, #20
 8003900:	46bd      	mov	sp, r7
 8003902:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003906:	4770      	bx	lr

08003908 <siprintf>:
 8003908:	b40e      	push	{r1, r2, r3}
 800390a:	b500      	push	{lr}
 800390c:	b09c      	sub	sp, #112	; 0x70
 800390e:	ab1d      	add	r3, sp, #116	; 0x74
 8003910:	9002      	str	r0, [sp, #8]
 8003912:	9006      	str	r0, [sp, #24]
 8003914:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 8003918:	4809      	ldr	r0, [pc, #36]	; (8003940 <siprintf+0x38>)
 800391a:	9107      	str	r1, [sp, #28]
 800391c:	9104      	str	r1, [sp, #16]
 800391e:	4909      	ldr	r1, [pc, #36]	; (8003944 <siprintf+0x3c>)
 8003920:	f853 2b04 	ldr.w	r2, [r3], #4
 8003924:	9105      	str	r1, [sp, #20]
 8003926:	6800      	ldr	r0, [r0, #0]
 8003928:	9301      	str	r3, [sp, #4]
 800392a:	a902      	add	r1, sp, #8
 800392c:	f000 f992 	bl	8003c54 <_svfiprintf_r>
 8003930:	9b02      	ldr	r3, [sp, #8]
 8003932:	2200      	movs	r2, #0
 8003934:	701a      	strb	r2, [r3, #0]
 8003936:	b01c      	add	sp, #112	; 0x70
 8003938:	f85d eb04 	ldr.w	lr, [sp], #4
 800393c:	b003      	add	sp, #12
 800393e:	4770      	bx	lr
 8003940:	20000088 	.word	0x20000088
 8003944:	ffff0208 	.word	0xffff0208

08003948 <memset>:
 8003948:	4402      	add	r2, r0
 800394a:	4603      	mov	r3, r0
 800394c:	4293      	cmp	r3, r2
 800394e:	d100      	bne.n	8003952 <memset+0xa>
 8003950:	4770      	bx	lr
 8003952:	f803 1b01 	strb.w	r1, [r3], #1
 8003956:	e7f9      	b.n	800394c <memset+0x4>

08003958 <__errno>:
 8003958:	4b01      	ldr	r3, [pc, #4]	; (8003960 <__errno+0x8>)
 800395a:	6818      	ldr	r0, [r3, #0]
 800395c:	4770      	bx	lr
 800395e:	bf00      	nop
 8003960:	20000088 	.word	0x20000088

08003964 <__libc_init_array>:
 8003964:	b570      	push	{r4, r5, r6, lr}
 8003966:	4d0d      	ldr	r5, [pc, #52]	; (800399c <__libc_init_array+0x38>)
 8003968:	4c0d      	ldr	r4, [pc, #52]	; (80039a0 <__libc_init_array+0x3c>)
 800396a:	1b64      	subs	r4, r4, r5
 800396c:	10a4      	asrs	r4, r4, #2
 800396e:	2600      	movs	r6, #0
 8003970:	42a6      	cmp	r6, r4
 8003972:	d109      	bne.n	8003988 <__libc_init_array+0x24>
 8003974:	4d0b      	ldr	r5, [pc, #44]	; (80039a4 <__libc_init_array+0x40>)
 8003976:	4c0c      	ldr	r4, [pc, #48]	; (80039a8 <__libc_init_array+0x44>)
 8003978:	f000 fc6a 	bl	8004250 <_init>
 800397c:	1b64      	subs	r4, r4, r5
 800397e:	10a4      	asrs	r4, r4, #2
 8003980:	2600      	movs	r6, #0
 8003982:	42a6      	cmp	r6, r4
 8003984:	d105      	bne.n	8003992 <__libc_init_array+0x2e>
 8003986:	bd70      	pop	{r4, r5, r6, pc}
 8003988:	f855 3b04 	ldr.w	r3, [r5], #4
 800398c:	4798      	blx	r3
 800398e:	3601      	adds	r6, #1
 8003990:	e7ee      	b.n	8003970 <__libc_init_array+0xc>
 8003992:	f855 3b04 	ldr.w	r3, [r5], #4
 8003996:	4798      	blx	r3
 8003998:	3601      	adds	r6, #1
 800399a:	e7f2      	b.n	8003982 <__libc_init_array+0x1e>
 800399c:	08004544 	.word	0x08004544
 80039a0:	08004544 	.word	0x08004544
 80039a4:	08004544 	.word	0x08004544
 80039a8:	08004548 	.word	0x08004548

080039ac <__retarget_lock_acquire_recursive>:
 80039ac:	4770      	bx	lr

080039ae <__retarget_lock_release_recursive>:
 80039ae:	4770      	bx	lr

080039b0 <_free_r>:
 80039b0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80039b2:	2900      	cmp	r1, #0
 80039b4:	d044      	beq.n	8003a40 <_free_r+0x90>
 80039b6:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80039ba:	9001      	str	r0, [sp, #4]
 80039bc:	2b00      	cmp	r3, #0
 80039be:	f1a1 0404 	sub.w	r4, r1, #4
 80039c2:	bfb8      	it	lt
 80039c4:	18e4      	addlt	r4, r4, r3
 80039c6:	f000 f8df 	bl	8003b88 <__malloc_lock>
 80039ca:	4a1e      	ldr	r2, [pc, #120]	; (8003a44 <_free_r+0x94>)
 80039cc:	9801      	ldr	r0, [sp, #4]
 80039ce:	6813      	ldr	r3, [r2, #0]
 80039d0:	b933      	cbnz	r3, 80039e0 <_free_r+0x30>
 80039d2:	6063      	str	r3, [r4, #4]
 80039d4:	6014      	str	r4, [r2, #0]
 80039d6:	b003      	add	sp, #12
 80039d8:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80039dc:	f000 b8da 	b.w	8003b94 <__malloc_unlock>
 80039e0:	42a3      	cmp	r3, r4
 80039e2:	d908      	bls.n	80039f6 <_free_r+0x46>
 80039e4:	6825      	ldr	r5, [r4, #0]
 80039e6:	1961      	adds	r1, r4, r5
 80039e8:	428b      	cmp	r3, r1
 80039ea:	bf01      	itttt	eq
 80039ec:	6819      	ldreq	r1, [r3, #0]
 80039ee:	685b      	ldreq	r3, [r3, #4]
 80039f0:	1949      	addeq	r1, r1, r5
 80039f2:	6021      	streq	r1, [r4, #0]
 80039f4:	e7ed      	b.n	80039d2 <_free_r+0x22>
 80039f6:	461a      	mov	r2, r3
 80039f8:	685b      	ldr	r3, [r3, #4]
 80039fa:	b10b      	cbz	r3, 8003a00 <_free_r+0x50>
 80039fc:	42a3      	cmp	r3, r4
 80039fe:	d9fa      	bls.n	80039f6 <_free_r+0x46>
 8003a00:	6811      	ldr	r1, [r2, #0]
 8003a02:	1855      	adds	r5, r2, r1
 8003a04:	42a5      	cmp	r5, r4
 8003a06:	d10b      	bne.n	8003a20 <_free_r+0x70>
 8003a08:	6824      	ldr	r4, [r4, #0]
 8003a0a:	4421      	add	r1, r4
 8003a0c:	1854      	adds	r4, r2, r1
 8003a0e:	42a3      	cmp	r3, r4
 8003a10:	6011      	str	r1, [r2, #0]
 8003a12:	d1e0      	bne.n	80039d6 <_free_r+0x26>
 8003a14:	681c      	ldr	r4, [r3, #0]
 8003a16:	685b      	ldr	r3, [r3, #4]
 8003a18:	6053      	str	r3, [r2, #4]
 8003a1a:	440c      	add	r4, r1
 8003a1c:	6014      	str	r4, [r2, #0]
 8003a1e:	e7da      	b.n	80039d6 <_free_r+0x26>
 8003a20:	d902      	bls.n	8003a28 <_free_r+0x78>
 8003a22:	230c      	movs	r3, #12
 8003a24:	6003      	str	r3, [r0, #0]
 8003a26:	e7d6      	b.n	80039d6 <_free_r+0x26>
 8003a28:	6825      	ldr	r5, [r4, #0]
 8003a2a:	1961      	adds	r1, r4, r5
 8003a2c:	428b      	cmp	r3, r1
 8003a2e:	bf04      	itt	eq
 8003a30:	6819      	ldreq	r1, [r3, #0]
 8003a32:	685b      	ldreq	r3, [r3, #4]
 8003a34:	6063      	str	r3, [r4, #4]
 8003a36:	bf04      	itt	eq
 8003a38:	1949      	addeq	r1, r1, r5
 8003a3a:	6021      	streq	r1, [r4, #0]
 8003a3c:	6054      	str	r4, [r2, #4]
 8003a3e:	e7ca      	b.n	80039d6 <_free_r+0x26>
 8003a40:	b003      	add	sp, #12
 8003a42:	bd30      	pop	{r4, r5, pc}
 8003a44:	200005e0 	.word	0x200005e0

08003a48 <sbrk_aligned>:
 8003a48:	b570      	push	{r4, r5, r6, lr}
 8003a4a:	4e0e      	ldr	r6, [pc, #56]	; (8003a84 <sbrk_aligned+0x3c>)
 8003a4c:	460c      	mov	r4, r1
 8003a4e:	6831      	ldr	r1, [r6, #0]
 8003a50:	4605      	mov	r5, r0
 8003a52:	b911      	cbnz	r1, 8003a5a <sbrk_aligned+0x12>
 8003a54:	f000 fba6 	bl	80041a4 <_sbrk_r>
 8003a58:	6030      	str	r0, [r6, #0]
 8003a5a:	4621      	mov	r1, r4
 8003a5c:	4628      	mov	r0, r5
 8003a5e:	f000 fba1 	bl	80041a4 <_sbrk_r>
 8003a62:	1c43      	adds	r3, r0, #1
 8003a64:	d00a      	beq.n	8003a7c <sbrk_aligned+0x34>
 8003a66:	1cc4      	adds	r4, r0, #3
 8003a68:	f024 0403 	bic.w	r4, r4, #3
 8003a6c:	42a0      	cmp	r0, r4
 8003a6e:	d007      	beq.n	8003a80 <sbrk_aligned+0x38>
 8003a70:	1a21      	subs	r1, r4, r0
 8003a72:	4628      	mov	r0, r5
 8003a74:	f000 fb96 	bl	80041a4 <_sbrk_r>
 8003a78:	3001      	adds	r0, #1
 8003a7a:	d101      	bne.n	8003a80 <sbrk_aligned+0x38>
 8003a7c:	f04f 34ff 	mov.w	r4, #4294967295
 8003a80:	4620      	mov	r0, r4
 8003a82:	bd70      	pop	{r4, r5, r6, pc}
 8003a84:	200005e4 	.word	0x200005e4

08003a88 <_malloc_r>:
 8003a88:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8003a8c:	1ccd      	adds	r5, r1, #3
 8003a8e:	f025 0503 	bic.w	r5, r5, #3
 8003a92:	3508      	adds	r5, #8
 8003a94:	2d0c      	cmp	r5, #12
 8003a96:	bf38      	it	cc
 8003a98:	250c      	movcc	r5, #12
 8003a9a:	2d00      	cmp	r5, #0
 8003a9c:	4607      	mov	r7, r0
 8003a9e:	db01      	blt.n	8003aa4 <_malloc_r+0x1c>
 8003aa0:	42a9      	cmp	r1, r5
 8003aa2:	d905      	bls.n	8003ab0 <_malloc_r+0x28>
 8003aa4:	230c      	movs	r3, #12
 8003aa6:	603b      	str	r3, [r7, #0]
 8003aa8:	2600      	movs	r6, #0
 8003aaa:	4630      	mov	r0, r6
 8003aac:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8003ab0:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 8003b84 <_malloc_r+0xfc>
 8003ab4:	f000 f868 	bl	8003b88 <__malloc_lock>
 8003ab8:	f8d8 3000 	ldr.w	r3, [r8]
 8003abc:	461c      	mov	r4, r3
 8003abe:	bb5c      	cbnz	r4, 8003b18 <_malloc_r+0x90>
 8003ac0:	4629      	mov	r1, r5
 8003ac2:	4638      	mov	r0, r7
 8003ac4:	f7ff ffc0 	bl	8003a48 <sbrk_aligned>
 8003ac8:	1c43      	adds	r3, r0, #1
 8003aca:	4604      	mov	r4, r0
 8003acc:	d155      	bne.n	8003b7a <_malloc_r+0xf2>
 8003ace:	f8d8 4000 	ldr.w	r4, [r8]
 8003ad2:	4626      	mov	r6, r4
 8003ad4:	2e00      	cmp	r6, #0
 8003ad6:	d145      	bne.n	8003b64 <_malloc_r+0xdc>
 8003ad8:	2c00      	cmp	r4, #0
 8003ada:	d048      	beq.n	8003b6e <_malloc_r+0xe6>
 8003adc:	6823      	ldr	r3, [r4, #0]
 8003ade:	4631      	mov	r1, r6
 8003ae0:	4638      	mov	r0, r7
 8003ae2:	eb04 0903 	add.w	r9, r4, r3
 8003ae6:	f000 fb5d 	bl	80041a4 <_sbrk_r>
 8003aea:	4581      	cmp	r9, r0
 8003aec:	d13f      	bne.n	8003b6e <_malloc_r+0xe6>
 8003aee:	6821      	ldr	r1, [r4, #0]
 8003af0:	1a6d      	subs	r5, r5, r1
 8003af2:	4629      	mov	r1, r5
 8003af4:	4638      	mov	r0, r7
 8003af6:	f7ff ffa7 	bl	8003a48 <sbrk_aligned>
 8003afa:	3001      	adds	r0, #1
 8003afc:	d037      	beq.n	8003b6e <_malloc_r+0xe6>
 8003afe:	6823      	ldr	r3, [r4, #0]
 8003b00:	442b      	add	r3, r5
 8003b02:	6023      	str	r3, [r4, #0]
 8003b04:	f8d8 3000 	ldr.w	r3, [r8]
 8003b08:	2b00      	cmp	r3, #0
 8003b0a:	d038      	beq.n	8003b7e <_malloc_r+0xf6>
 8003b0c:	685a      	ldr	r2, [r3, #4]
 8003b0e:	42a2      	cmp	r2, r4
 8003b10:	d12b      	bne.n	8003b6a <_malloc_r+0xe2>
 8003b12:	2200      	movs	r2, #0
 8003b14:	605a      	str	r2, [r3, #4]
 8003b16:	e00f      	b.n	8003b38 <_malloc_r+0xb0>
 8003b18:	6822      	ldr	r2, [r4, #0]
 8003b1a:	1b52      	subs	r2, r2, r5
 8003b1c:	d41f      	bmi.n	8003b5e <_malloc_r+0xd6>
 8003b1e:	2a0b      	cmp	r2, #11
 8003b20:	d917      	bls.n	8003b52 <_malloc_r+0xca>
 8003b22:	1961      	adds	r1, r4, r5
 8003b24:	42a3      	cmp	r3, r4
 8003b26:	6025      	str	r5, [r4, #0]
 8003b28:	bf18      	it	ne
 8003b2a:	6059      	strne	r1, [r3, #4]
 8003b2c:	6863      	ldr	r3, [r4, #4]
 8003b2e:	bf08      	it	eq
 8003b30:	f8c8 1000 	streq.w	r1, [r8]
 8003b34:	5162      	str	r2, [r4, r5]
 8003b36:	604b      	str	r3, [r1, #4]
 8003b38:	4638      	mov	r0, r7
 8003b3a:	f104 060b 	add.w	r6, r4, #11
 8003b3e:	f000 f829 	bl	8003b94 <__malloc_unlock>
 8003b42:	f026 0607 	bic.w	r6, r6, #7
 8003b46:	1d23      	adds	r3, r4, #4
 8003b48:	1af2      	subs	r2, r6, r3
 8003b4a:	d0ae      	beq.n	8003aaa <_malloc_r+0x22>
 8003b4c:	1b9b      	subs	r3, r3, r6
 8003b4e:	50a3      	str	r3, [r4, r2]
 8003b50:	e7ab      	b.n	8003aaa <_malloc_r+0x22>
 8003b52:	42a3      	cmp	r3, r4
 8003b54:	6862      	ldr	r2, [r4, #4]
 8003b56:	d1dd      	bne.n	8003b14 <_malloc_r+0x8c>
 8003b58:	f8c8 2000 	str.w	r2, [r8]
 8003b5c:	e7ec      	b.n	8003b38 <_malloc_r+0xb0>
 8003b5e:	4623      	mov	r3, r4
 8003b60:	6864      	ldr	r4, [r4, #4]
 8003b62:	e7ac      	b.n	8003abe <_malloc_r+0x36>
 8003b64:	4634      	mov	r4, r6
 8003b66:	6876      	ldr	r6, [r6, #4]
 8003b68:	e7b4      	b.n	8003ad4 <_malloc_r+0x4c>
 8003b6a:	4613      	mov	r3, r2
 8003b6c:	e7cc      	b.n	8003b08 <_malloc_r+0x80>
 8003b6e:	230c      	movs	r3, #12
 8003b70:	603b      	str	r3, [r7, #0]
 8003b72:	4638      	mov	r0, r7
 8003b74:	f000 f80e 	bl	8003b94 <__malloc_unlock>
 8003b78:	e797      	b.n	8003aaa <_malloc_r+0x22>
 8003b7a:	6025      	str	r5, [r4, #0]
 8003b7c:	e7dc      	b.n	8003b38 <_malloc_r+0xb0>
 8003b7e:	605b      	str	r3, [r3, #4]
 8003b80:	deff      	udf	#255	; 0xff
 8003b82:	bf00      	nop
 8003b84:	200005e0 	.word	0x200005e0

08003b88 <__malloc_lock>:
 8003b88:	4801      	ldr	r0, [pc, #4]	; (8003b90 <__malloc_lock+0x8>)
 8003b8a:	f7ff bf0f 	b.w	80039ac <__retarget_lock_acquire_recursive>
 8003b8e:	bf00      	nop
 8003b90:	200005dc 	.word	0x200005dc

08003b94 <__malloc_unlock>:
 8003b94:	4801      	ldr	r0, [pc, #4]	; (8003b9c <__malloc_unlock+0x8>)
 8003b96:	f7ff bf0a 	b.w	80039ae <__retarget_lock_release_recursive>
 8003b9a:	bf00      	nop
 8003b9c:	200005dc 	.word	0x200005dc

08003ba0 <__ssputs_r>:
 8003ba0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003ba4:	688e      	ldr	r6, [r1, #8]
 8003ba6:	461f      	mov	r7, r3
 8003ba8:	42be      	cmp	r6, r7
 8003baa:	680b      	ldr	r3, [r1, #0]
 8003bac:	4682      	mov	sl, r0
 8003bae:	460c      	mov	r4, r1
 8003bb0:	4690      	mov	r8, r2
 8003bb2:	d82c      	bhi.n	8003c0e <__ssputs_r+0x6e>
 8003bb4:	898a      	ldrh	r2, [r1, #12]
 8003bb6:	f412 6f90 	tst.w	r2, #1152	; 0x480
 8003bba:	d026      	beq.n	8003c0a <__ssputs_r+0x6a>
 8003bbc:	6965      	ldr	r5, [r4, #20]
 8003bbe:	6909      	ldr	r1, [r1, #16]
 8003bc0:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8003bc4:	eba3 0901 	sub.w	r9, r3, r1
 8003bc8:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8003bcc:	1c7b      	adds	r3, r7, #1
 8003bce:	444b      	add	r3, r9
 8003bd0:	106d      	asrs	r5, r5, #1
 8003bd2:	429d      	cmp	r5, r3
 8003bd4:	bf38      	it	cc
 8003bd6:	461d      	movcc	r5, r3
 8003bd8:	0553      	lsls	r3, r2, #21
 8003bda:	d527      	bpl.n	8003c2c <__ssputs_r+0x8c>
 8003bdc:	4629      	mov	r1, r5
 8003bde:	f7ff ff53 	bl	8003a88 <_malloc_r>
 8003be2:	4606      	mov	r6, r0
 8003be4:	b360      	cbz	r0, 8003c40 <__ssputs_r+0xa0>
 8003be6:	6921      	ldr	r1, [r4, #16]
 8003be8:	464a      	mov	r2, r9
 8003bea:	f000 faeb 	bl	80041c4 <memcpy>
 8003bee:	89a3      	ldrh	r3, [r4, #12]
 8003bf0:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 8003bf4:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8003bf8:	81a3      	strh	r3, [r4, #12]
 8003bfa:	6126      	str	r6, [r4, #16]
 8003bfc:	6165      	str	r5, [r4, #20]
 8003bfe:	444e      	add	r6, r9
 8003c00:	eba5 0509 	sub.w	r5, r5, r9
 8003c04:	6026      	str	r6, [r4, #0]
 8003c06:	60a5      	str	r5, [r4, #8]
 8003c08:	463e      	mov	r6, r7
 8003c0a:	42be      	cmp	r6, r7
 8003c0c:	d900      	bls.n	8003c10 <__ssputs_r+0x70>
 8003c0e:	463e      	mov	r6, r7
 8003c10:	6820      	ldr	r0, [r4, #0]
 8003c12:	4632      	mov	r2, r6
 8003c14:	4641      	mov	r1, r8
 8003c16:	f000 faab 	bl	8004170 <memmove>
 8003c1a:	68a3      	ldr	r3, [r4, #8]
 8003c1c:	1b9b      	subs	r3, r3, r6
 8003c1e:	60a3      	str	r3, [r4, #8]
 8003c20:	6823      	ldr	r3, [r4, #0]
 8003c22:	4433      	add	r3, r6
 8003c24:	6023      	str	r3, [r4, #0]
 8003c26:	2000      	movs	r0, #0
 8003c28:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003c2c:	462a      	mov	r2, r5
 8003c2e:	f000 fad7 	bl	80041e0 <_realloc_r>
 8003c32:	4606      	mov	r6, r0
 8003c34:	2800      	cmp	r0, #0
 8003c36:	d1e0      	bne.n	8003bfa <__ssputs_r+0x5a>
 8003c38:	6921      	ldr	r1, [r4, #16]
 8003c3a:	4650      	mov	r0, sl
 8003c3c:	f7ff feb8 	bl	80039b0 <_free_r>
 8003c40:	230c      	movs	r3, #12
 8003c42:	f8ca 3000 	str.w	r3, [sl]
 8003c46:	89a3      	ldrh	r3, [r4, #12]
 8003c48:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8003c4c:	81a3      	strh	r3, [r4, #12]
 8003c4e:	f04f 30ff 	mov.w	r0, #4294967295
 8003c52:	e7e9      	b.n	8003c28 <__ssputs_r+0x88>

08003c54 <_svfiprintf_r>:
 8003c54:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003c58:	4698      	mov	r8, r3
 8003c5a:	898b      	ldrh	r3, [r1, #12]
 8003c5c:	061b      	lsls	r3, r3, #24
 8003c5e:	b09d      	sub	sp, #116	; 0x74
 8003c60:	4607      	mov	r7, r0
 8003c62:	460d      	mov	r5, r1
 8003c64:	4614      	mov	r4, r2
 8003c66:	d50e      	bpl.n	8003c86 <_svfiprintf_r+0x32>
 8003c68:	690b      	ldr	r3, [r1, #16]
 8003c6a:	b963      	cbnz	r3, 8003c86 <_svfiprintf_r+0x32>
 8003c6c:	2140      	movs	r1, #64	; 0x40
 8003c6e:	f7ff ff0b 	bl	8003a88 <_malloc_r>
 8003c72:	6028      	str	r0, [r5, #0]
 8003c74:	6128      	str	r0, [r5, #16]
 8003c76:	b920      	cbnz	r0, 8003c82 <_svfiprintf_r+0x2e>
 8003c78:	230c      	movs	r3, #12
 8003c7a:	603b      	str	r3, [r7, #0]
 8003c7c:	f04f 30ff 	mov.w	r0, #4294967295
 8003c80:	e0d0      	b.n	8003e24 <_svfiprintf_r+0x1d0>
 8003c82:	2340      	movs	r3, #64	; 0x40
 8003c84:	616b      	str	r3, [r5, #20]
 8003c86:	2300      	movs	r3, #0
 8003c88:	9309      	str	r3, [sp, #36]	; 0x24
 8003c8a:	2320      	movs	r3, #32
 8003c8c:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8003c90:	f8cd 800c 	str.w	r8, [sp, #12]
 8003c94:	2330      	movs	r3, #48	; 0x30
 8003c96:	f8df 81a4 	ldr.w	r8, [pc, #420]	; 8003e3c <_svfiprintf_r+0x1e8>
 8003c9a:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8003c9e:	f04f 0901 	mov.w	r9, #1
 8003ca2:	4623      	mov	r3, r4
 8003ca4:	469a      	mov	sl, r3
 8003ca6:	f813 2b01 	ldrb.w	r2, [r3], #1
 8003caa:	b10a      	cbz	r2, 8003cb0 <_svfiprintf_r+0x5c>
 8003cac:	2a25      	cmp	r2, #37	; 0x25
 8003cae:	d1f9      	bne.n	8003ca4 <_svfiprintf_r+0x50>
 8003cb0:	ebba 0b04 	subs.w	fp, sl, r4
 8003cb4:	d00b      	beq.n	8003cce <_svfiprintf_r+0x7a>
 8003cb6:	465b      	mov	r3, fp
 8003cb8:	4622      	mov	r2, r4
 8003cba:	4629      	mov	r1, r5
 8003cbc:	4638      	mov	r0, r7
 8003cbe:	f7ff ff6f 	bl	8003ba0 <__ssputs_r>
 8003cc2:	3001      	adds	r0, #1
 8003cc4:	f000 80a9 	beq.w	8003e1a <_svfiprintf_r+0x1c6>
 8003cc8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8003cca:	445a      	add	r2, fp
 8003ccc:	9209      	str	r2, [sp, #36]	; 0x24
 8003cce:	f89a 3000 	ldrb.w	r3, [sl]
 8003cd2:	2b00      	cmp	r3, #0
 8003cd4:	f000 80a1 	beq.w	8003e1a <_svfiprintf_r+0x1c6>
 8003cd8:	2300      	movs	r3, #0
 8003cda:	f04f 32ff 	mov.w	r2, #4294967295
 8003cde:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8003ce2:	f10a 0a01 	add.w	sl, sl, #1
 8003ce6:	9304      	str	r3, [sp, #16]
 8003ce8:	9307      	str	r3, [sp, #28]
 8003cea:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8003cee:	931a      	str	r3, [sp, #104]	; 0x68
 8003cf0:	4654      	mov	r4, sl
 8003cf2:	2205      	movs	r2, #5
 8003cf4:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003cf8:	4850      	ldr	r0, [pc, #320]	; (8003e3c <_svfiprintf_r+0x1e8>)
 8003cfa:	f7fc fa71 	bl	80001e0 <memchr>
 8003cfe:	9a04      	ldr	r2, [sp, #16]
 8003d00:	b9d8      	cbnz	r0, 8003d3a <_svfiprintf_r+0xe6>
 8003d02:	06d0      	lsls	r0, r2, #27
 8003d04:	bf44      	itt	mi
 8003d06:	2320      	movmi	r3, #32
 8003d08:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8003d0c:	0711      	lsls	r1, r2, #28
 8003d0e:	bf44      	itt	mi
 8003d10:	232b      	movmi	r3, #43	; 0x2b
 8003d12:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8003d16:	f89a 3000 	ldrb.w	r3, [sl]
 8003d1a:	2b2a      	cmp	r3, #42	; 0x2a
 8003d1c:	d015      	beq.n	8003d4a <_svfiprintf_r+0xf6>
 8003d1e:	9a07      	ldr	r2, [sp, #28]
 8003d20:	4654      	mov	r4, sl
 8003d22:	2000      	movs	r0, #0
 8003d24:	f04f 0c0a 	mov.w	ip, #10
 8003d28:	4621      	mov	r1, r4
 8003d2a:	f811 3b01 	ldrb.w	r3, [r1], #1
 8003d2e:	3b30      	subs	r3, #48	; 0x30
 8003d30:	2b09      	cmp	r3, #9
 8003d32:	d94d      	bls.n	8003dd0 <_svfiprintf_r+0x17c>
 8003d34:	b1b0      	cbz	r0, 8003d64 <_svfiprintf_r+0x110>
 8003d36:	9207      	str	r2, [sp, #28]
 8003d38:	e014      	b.n	8003d64 <_svfiprintf_r+0x110>
 8003d3a:	eba0 0308 	sub.w	r3, r0, r8
 8003d3e:	fa09 f303 	lsl.w	r3, r9, r3
 8003d42:	4313      	orrs	r3, r2
 8003d44:	9304      	str	r3, [sp, #16]
 8003d46:	46a2      	mov	sl, r4
 8003d48:	e7d2      	b.n	8003cf0 <_svfiprintf_r+0x9c>
 8003d4a:	9b03      	ldr	r3, [sp, #12]
 8003d4c:	1d19      	adds	r1, r3, #4
 8003d4e:	681b      	ldr	r3, [r3, #0]
 8003d50:	9103      	str	r1, [sp, #12]
 8003d52:	2b00      	cmp	r3, #0
 8003d54:	bfbb      	ittet	lt
 8003d56:	425b      	neglt	r3, r3
 8003d58:	f042 0202 	orrlt.w	r2, r2, #2
 8003d5c:	9307      	strge	r3, [sp, #28]
 8003d5e:	9307      	strlt	r3, [sp, #28]
 8003d60:	bfb8      	it	lt
 8003d62:	9204      	strlt	r2, [sp, #16]
 8003d64:	7823      	ldrb	r3, [r4, #0]
 8003d66:	2b2e      	cmp	r3, #46	; 0x2e
 8003d68:	d10c      	bne.n	8003d84 <_svfiprintf_r+0x130>
 8003d6a:	7863      	ldrb	r3, [r4, #1]
 8003d6c:	2b2a      	cmp	r3, #42	; 0x2a
 8003d6e:	d134      	bne.n	8003dda <_svfiprintf_r+0x186>
 8003d70:	9b03      	ldr	r3, [sp, #12]
 8003d72:	1d1a      	adds	r2, r3, #4
 8003d74:	681b      	ldr	r3, [r3, #0]
 8003d76:	9203      	str	r2, [sp, #12]
 8003d78:	2b00      	cmp	r3, #0
 8003d7a:	bfb8      	it	lt
 8003d7c:	f04f 33ff 	movlt.w	r3, #4294967295
 8003d80:	3402      	adds	r4, #2
 8003d82:	9305      	str	r3, [sp, #20]
 8003d84:	f8df a0c4 	ldr.w	sl, [pc, #196]	; 8003e4c <_svfiprintf_r+0x1f8>
 8003d88:	7821      	ldrb	r1, [r4, #0]
 8003d8a:	2203      	movs	r2, #3
 8003d8c:	4650      	mov	r0, sl
 8003d8e:	f7fc fa27 	bl	80001e0 <memchr>
 8003d92:	b138      	cbz	r0, 8003da4 <_svfiprintf_r+0x150>
 8003d94:	9b04      	ldr	r3, [sp, #16]
 8003d96:	eba0 000a 	sub.w	r0, r0, sl
 8003d9a:	2240      	movs	r2, #64	; 0x40
 8003d9c:	4082      	lsls	r2, r0
 8003d9e:	4313      	orrs	r3, r2
 8003da0:	3401      	adds	r4, #1
 8003da2:	9304      	str	r3, [sp, #16]
 8003da4:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003da8:	4825      	ldr	r0, [pc, #148]	; (8003e40 <_svfiprintf_r+0x1ec>)
 8003daa:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8003dae:	2206      	movs	r2, #6
 8003db0:	f7fc fa16 	bl	80001e0 <memchr>
 8003db4:	2800      	cmp	r0, #0
 8003db6:	d038      	beq.n	8003e2a <_svfiprintf_r+0x1d6>
 8003db8:	4b22      	ldr	r3, [pc, #136]	; (8003e44 <_svfiprintf_r+0x1f0>)
 8003dba:	bb1b      	cbnz	r3, 8003e04 <_svfiprintf_r+0x1b0>
 8003dbc:	9b03      	ldr	r3, [sp, #12]
 8003dbe:	3307      	adds	r3, #7
 8003dc0:	f023 0307 	bic.w	r3, r3, #7
 8003dc4:	3308      	adds	r3, #8
 8003dc6:	9303      	str	r3, [sp, #12]
 8003dc8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003dca:	4433      	add	r3, r6
 8003dcc:	9309      	str	r3, [sp, #36]	; 0x24
 8003dce:	e768      	b.n	8003ca2 <_svfiprintf_r+0x4e>
 8003dd0:	fb0c 3202 	mla	r2, ip, r2, r3
 8003dd4:	460c      	mov	r4, r1
 8003dd6:	2001      	movs	r0, #1
 8003dd8:	e7a6      	b.n	8003d28 <_svfiprintf_r+0xd4>
 8003dda:	2300      	movs	r3, #0
 8003ddc:	3401      	adds	r4, #1
 8003dde:	9305      	str	r3, [sp, #20]
 8003de0:	4619      	mov	r1, r3
 8003de2:	f04f 0c0a 	mov.w	ip, #10
 8003de6:	4620      	mov	r0, r4
 8003de8:	f810 2b01 	ldrb.w	r2, [r0], #1
 8003dec:	3a30      	subs	r2, #48	; 0x30
 8003dee:	2a09      	cmp	r2, #9
 8003df0:	d903      	bls.n	8003dfa <_svfiprintf_r+0x1a6>
 8003df2:	2b00      	cmp	r3, #0
 8003df4:	d0c6      	beq.n	8003d84 <_svfiprintf_r+0x130>
 8003df6:	9105      	str	r1, [sp, #20]
 8003df8:	e7c4      	b.n	8003d84 <_svfiprintf_r+0x130>
 8003dfa:	fb0c 2101 	mla	r1, ip, r1, r2
 8003dfe:	4604      	mov	r4, r0
 8003e00:	2301      	movs	r3, #1
 8003e02:	e7f0      	b.n	8003de6 <_svfiprintf_r+0x192>
 8003e04:	ab03      	add	r3, sp, #12
 8003e06:	9300      	str	r3, [sp, #0]
 8003e08:	462a      	mov	r2, r5
 8003e0a:	4b0f      	ldr	r3, [pc, #60]	; (8003e48 <_svfiprintf_r+0x1f4>)
 8003e0c:	a904      	add	r1, sp, #16
 8003e0e:	4638      	mov	r0, r7
 8003e10:	f3af 8000 	nop.w
 8003e14:	1c42      	adds	r2, r0, #1
 8003e16:	4606      	mov	r6, r0
 8003e18:	d1d6      	bne.n	8003dc8 <_svfiprintf_r+0x174>
 8003e1a:	89ab      	ldrh	r3, [r5, #12]
 8003e1c:	065b      	lsls	r3, r3, #25
 8003e1e:	f53f af2d 	bmi.w	8003c7c <_svfiprintf_r+0x28>
 8003e22:	9809      	ldr	r0, [sp, #36]	; 0x24
 8003e24:	b01d      	add	sp, #116	; 0x74
 8003e26:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003e2a:	ab03      	add	r3, sp, #12
 8003e2c:	9300      	str	r3, [sp, #0]
 8003e2e:	462a      	mov	r2, r5
 8003e30:	4b05      	ldr	r3, [pc, #20]	; (8003e48 <_svfiprintf_r+0x1f4>)
 8003e32:	a904      	add	r1, sp, #16
 8003e34:	4638      	mov	r0, r7
 8003e36:	f000 f879 	bl	8003f2c <_printf_i>
 8003e3a:	e7eb      	b.n	8003e14 <_svfiprintf_r+0x1c0>
 8003e3c:	08004508 	.word	0x08004508
 8003e40:	08004512 	.word	0x08004512
 8003e44:	00000000 	.word	0x00000000
 8003e48:	08003ba1 	.word	0x08003ba1
 8003e4c:	0800450e 	.word	0x0800450e

08003e50 <_printf_common>:
 8003e50:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003e54:	4616      	mov	r6, r2
 8003e56:	4699      	mov	r9, r3
 8003e58:	688a      	ldr	r2, [r1, #8]
 8003e5a:	690b      	ldr	r3, [r1, #16]
 8003e5c:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8003e60:	4293      	cmp	r3, r2
 8003e62:	bfb8      	it	lt
 8003e64:	4613      	movlt	r3, r2
 8003e66:	6033      	str	r3, [r6, #0]
 8003e68:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8003e6c:	4607      	mov	r7, r0
 8003e6e:	460c      	mov	r4, r1
 8003e70:	b10a      	cbz	r2, 8003e76 <_printf_common+0x26>
 8003e72:	3301      	adds	r3, #1
 8003e74:	6033      	str	r3, [r6, #0]
 8003e76:	6823      	ldr	r3, [r4, #0]
 8003e78:	0699      	lsls	r1, r3, #26
 8003e7a:	bf42      	ittt	mi
 8003e7c:	6833      	ldrmi	r3, [r6, #0]
 8003e7e:	3302      	addmi	r3, #2
 8003e80:	6033      	strmi	r3, [r6, #0]
 8003e82:	6825      	ldr	r5, [r4, #0]
 8003e84:	f015 0506 	ands.w	r5, r5, #6
 8003e88:	d106      	bne.n	8003e98 <_printf_common+0x48>
 8003e8a:	f104 0a19 	add.w	sl, r4, #25
 8003e8e:	68e3      	ldr	r3, [r4, #12]
 8003e90:	6832      	ldr	r2, [r6, #0]
 8003e92:	1a9b      	subs	r3, r3, r2
 8003e94:	42ab      	cmp	r3, r5
 8003e96:	dc26      	bgt.n	8003ee6 <_printf_common+0x96>
 8003e98:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8003e9c:	1e13      	subs	r3, r2, #0
 8003e9e:	6822      	ldr	r2, [r4, #0]
 8003ea0:	bf18      	it	ne
 8003ea2:	2301      	movne	r3, #1
 8003ea4:	0692      	lsls	r2, r2, #26
 8003ea6:	d42b      	bmi.n	8003f00 <_printf_common+0xb0>
 8003ea8:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8003eac:	4649      	mov	r1, r9
 8003eae:	4638      	mov	r0, r7
 8003eb0:	47c0      	blx	r8
 8003eb2:	3001      	adds	r0, #1
 8003eb4:	d01e      	beq.n	8003ef4 <_printf_common+0xa4>
 8003eb6:	6823      	ldr	r3, [r4, #0]
 8003eb8:	6922      	ldr	r2, [r4, #16]
 8003eba:	f003 0306 	and.w	r3, r3, #6
 8003ebe:	2b04      	cmp	r3, #4
 8003ec0:	bf02      	ittt	eq
 8003ec2:	68e5      	ldreq	r5, [r4, #12]
 8003ec4:	6833      	ldreq	r3, [r6, #0]
 8003ec6:	1aed      	subeq	r5, r5, r3
 8003ec8:	68a3      	ldr	r3, [r4, #8]
 8003eca:	bf0c      	ite	eq
 8003ecc:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8003ed0:	2500      	movne	r5, #0
 8003ed2:	4293      	cmp	r3, r2
 8003ed4:	bfc4      	itt	gt
 8003ed6:	1a9b      	subgt	r3, r3, r2
 8003ed8:	18ed      	addgt	r5, r5, r3
 8003eda:	2600      	movs	r6, #0
 8003edc:	341a      	adds	r4, #26
 8003ede:	42b5      	cmp	r5, r6
 8003ee0:	d11a      	bne.n	8003f18 <_printf_common+0xc8>
 8003ee2:	2000      	movs	r0, #0
 8003ee4:	e008      	b.n	8003ef8 <_printf_common+0xa8>
 8003ee6:	2301      	movs	r3, #1
 8003ee8:	4652      	mov	r2, sl
 8003eea:	4649      	mov	r1, r9
 8003eec:	4638      	mov	r0, r7
 8003eee:	47c0      	blx	r8
 8003ef0:	3001      	adds	r0, #1
 8003ef2:	d103      	bne.n	8003efc <_printf_common+0xac>
 8003ef4:	f04f 30ff 	mov.w	r0, #4294967295
 8003ef8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003efc:	3501      	adds	r5, #1
 8003efe:	e7c6      	b.n	8003e8e <_printf_common+0x3e>
 8003f00:	18e1      	adds	r1, r4, r3
 8003f02:	1c5a      	adds	r2, r3, #1
 8003f04:	2030      	movs	r0, #48	; 0x30
 8003f06:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8003f0a:	4422      	add	r2, r4
 8003f0c:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8003f10:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8003f14:	3302      	adds	r3, #2
 8003f16:	e7c7      	b.n	8003ea8 <_printf_common+0x58>
 8003f18:	2301      	movs	r3, #1
 8003f1a:	4622      	mov	r2, r4
 8003f1c:	4649      	mov	r1, r9
 8003f1e:	4638      	mov	r0, r7
 8003f20:	47c0      	blx	r8
 8003f22:	3001      	adds	r0, #1
 8003f24:	d0e6      	beq.n	8003ef4 <_printf_common+0xa4>
 8003f26:	3601      	adds	r6, #1
 8003f28:	e7d9      	b.n	8003ede <_printf_common+0x8e>
	...

08003f2c <_printf_i>:
 8003f2c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8003f30:	7e0f      	ldrb	r7, [r1, #24]
 8003f32:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8003f34:	2f78      	cmp	r7, #120	; 0x78
 8003f36:	4691      	mov	r9, r2
 8003f38:	4680      	mov	r8, r0
 8003f3a:	460c      	mov	r4, r1
 8003f3c:	469a      	mov	sl, r3
 8003f3e:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8003f42:	d807      	bhi.n	8003f54 <_printf_i+0x28>
 8003f44:	2f62      	cmp	r7, #98	; 0x62
 8003f46:	d80a      	bhi.n	8003f5e <_printf_i+0x32>
 8003f48:	2f00      	cmp	r7, #0
 8003f4a:	f000 80d4 	beq.w	80040f6 <_printf_i+0x1ca>
 8003f4e:	2f58      	cmp	r7, #88	; 0x58
 8003f50:	f000 80c0 	beq.w	80040d4 <_printf_i+0x1a8>
 8003f54:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8003f58:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8003f5c:	e03a      	b.n	8003fd4 <_printf_i+0xa8>
 8003f5e:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8003f62:	2b15      	cmp	r3, #21
 8003f64:	d8f6      	bhi.n	8003f54 <_printf_i+0x28>
 8003f66:	a101      	add	r1, pc, #4	; (adr r1, 8003f6c <_printf_i+0x40>)
 8003f68:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8003f6c:	08003fc5 	.word	0x08003fc5
 8003f70:	08003fd9 	.word	0x08003fd9
 8003f74:	08003f55 	.word	0x08003f55
 8003f78:	08003f55 	.word	0x08003f55
 8003f7c:	08003f55 	.word	0x08003f55
 8003f80:	08003f55 	.word	0x08003f55
 8003f84:	08003fd9 	.word	0x08003fd9
 8003f88:	08003f55 	.word	0x08003f55
 8003f8c:	08003f55 	.word	0x08003f55
 8003f90:	08003f55 	.word	0x08003f55
 8003f94:	08003f55 	.word	0x08003f55
 8003f98:	080040dd 	.word	0x080040dd
 8003f9c:	08004005 	.word	0x08004005
 8003fa0:	08004097 	.word	0x08004097
 8003fa4:	08003f55 	.word	0x08003f55
 8003fa8:	08003f55 	.word	0x08003f55
 8003fac:	080040ff 	.word	0x080040ff
 8003fb0:	08003f55 	.word	0x08003f55
 8003fb4:	08004005 	.word	0x08004005
 8003fb8:	08003f55 	.word	0x08003f55
 8003fbc:	08003f55 	.word	0x08003f55
 8003fc0:	0800409f 	.word	0x0800409f
 8003fc4:	682b      	ldr	r3, [r5, #0]
 8003fc6:	1d1a      	adds	r2, r3, #4
 8003fc8:	681b      	ldr	r3, [r3, #0]
 8003fca:	602a      	str	r2, [r5, #0]
 8003fcc:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8003fd0:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8003fd4:	2301      	movs	r3, #1
 8003fd6:	e09f      	b.n	8004118 <_printf_i+0x1ec>
 8003fd8:	6820      	ldr	r0, [r4, #0]
 8003fda:	682b      	ldr	r3, [r5, #0]
 8003fdc:	0607      	lsls	r7, r0, #24
 8003fde:	f103 0104 	add.w	r1, r3, #4
 8003fe2:	6029      	str	r1, [r5, #0]
 8003fe4:	d501      	bpl.n	8003fea <_printf_i+0xbe>
 8003fe6:	681e      	ldr	r6, [r3, #0]
 8003fe8:	e003      	b.n	8003ff2 <_printf_i+0xc6>
 8003fea:	0646      	lsls	r6, r0, #25
 8003fec:	d5fb      	bpl.n	8003fe6 <_printf_i+0xba>
 8003fee:	f9b3 6000 	ldrsh.w	r6, [r3]
 8003ff2:	2e00      	cmp	r6, #0
 8003ff4:	da03      	bge.n	8003ffe <_printf_i+0xd2>
 8003ff6:	232d      	movs	r3, #45	; 0x2d
 8003ff8:	4276      	negs	r6, r6
 8003ffa:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8003ffe:	485a      	ldr	r0, [pc, #360]	; (8004168 <_printf_i+0x23c>)
 8004000:	230a      	movs	r3, #10
 8004002:	e012      	b.n	800402a <_printf_i+0xfe>
 8004004:	682b      	ldr	r3, [r5, #0]
 8004006:	6820      	ldr	r0, [r4, #0]
 8004008:	1d19      	adds	r1, r3, #4
 800400a:	6029      	str	r1, [r5, #0]
 800400c:	0605      	lsls	r5, r0, #24
 800400e:	d501      	bpl.n	8004014 <_printf_i+0xe8>
 8004010:	681e      	ldr	r6, [r3, #0]
 8004012:	e002      	b.n	800401a <_printf_i+0xee>
 8004014:	0641      	lsls	r1, r0, #25
 8004016:	d5fb      	bpl.n	8004010 <_printf_i+0xe4>
 8004018:	881e      	ldrh	r6, [r3, #0]
 800401a:	4853      	ldr	r0, [pc, #332]	; (8004168 <_printf_i+0x23c>)
 800401c:	2f6f      	cmp	r7, #111	; 0x6f
 800401e:	bf0c      	ite	eq
 8004020:	2308      	moveq	r3, #8
 8004022:	230a      	movne	r3, #10
 8004024:	2100      	movs	r1, #0
 8004026:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 800402a:	6865      	ldr	r5, [r4, #4]
 800402c:	60a5      	str	r5, [r4, #8]
 800402e:	2d00      	cmp	r5, #0
 8004030:	bfa2      	ittt	ge
 8004032:	6821      	ldrge	r1, [r4, #0]
 8004034:	f021 0104 	bicge.w	r1, r1, #4
 8004038:	6021      	strge	r1, [r4, #0]
 800403a:	b90e      	cbnz	r6, 8004040 <_printf_i+0x114>
 800403c:	2d00      	cmp	r5, #0
 800403e:	d04b      	beq.n	80040d8 <_printf_i+0x1ac>
 8004040:	4615      	mov	r5, r2
 8004042:	fbb6 f1f3 	udiv	r1, r6, r3
 8004046:	fb03 6711 	mls	r7, r3, r1, r6
 800404a:	5dc7      	ldrb	r7, [r0, r7]
 800404c:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8004050:	4637      	mov	r7, r6
 8004052:	42bb      	cmp	r3, r7
 8004054:	460e      	mov	r6, r1
 8004056:	d9f4      	bls.n	8004042 <_printf_i+0x116>
 8004058:	2b08      	cmp	r3, #8
 800405a:	d10b      	bne.n	8004074 <_printf_i+0x148>
 800405c:	6823      	ldr	r3, [r4, #0]
 800405e:	07de      	lsls	r6, r3, #31
 8004060:	d508      	bpl.n	8004074 <_printf_i+0x148>
 8004062:	6923      	ldr	r3, [r4, #16]
 8004064:	6861      	ldr	r1, [r4, #4]
 8004066:	4299      	cmp	r1, r3
 8004068:	bfde      	ittt	le
 800406a:	2330      	movle	r3, #48	; 0x30
 800406c:	f805 3c01 	strble.w	r3, [r5, #-1]
 8004070:	f105 35ff 	addle.w	r5, r5, #4294967295
 8004074:	1b52      	subs	r2, r2, r5
 8004076:	6122      	str	r2, [r4, #16]
 8004078:	f8cd a000 	str.w	sl, [sp]
 800407c:	464b      	mov	r3, r9
 800407e:	aa03      	add	r2, sp, #12
 8004080:	4621      	mov	r1, r4
 8004082:	4640      	mov	r0, r8
 8004084:	f7ff fee4 	bl	8003e50 <_printf_common>
 8004088:	3001      	adds	r0, #1
 800408a:	d14a      	bne.n	8004122 <_printf_i+0x1f6>
 800408c:	f04f 30ff 	mov.w	r0, #4294967295
 8004090:	b004      	add	sp, #16
 8004092:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8004096:	6823      	ldr	r3, [r4, #0]
 8004098:	f043 0320 	orr.w	r3, r3, #32
 800409c:	6023      	str	r3, [r4, #0]
 800409e:	4833      	ldr	r0, [pc, #204]	; (800416c <_printf_i+0x240>)
 80040a0:	2778      	movs	r7, #120	; 0x78
 80040a2:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 80040a6:	6823      	ldr	r3, [r4, #0]
 80040a8:	6829      	ldr	r1, [r5, #0]
 80040aa:	061f      	lsls	r7, r3, #24
 80040ac:	f851 6b04 	ldr.w	r6, [r1], #4
 80040b0:	d402      	bmi.n	80040b8 <_printf_i+0x18c>
 80040b2:	065f      	lsls	r7, r3, #25
 80040b4:	bf48      	it	mi
 80040b6:	b2b6      	uxthmi	r6, r6
 80040b8:	07df      	lsls	r7, r3, #31
 80040ba:	bf48      	it	mi
 80040bc:	f043 0320 	orrmi.w	r3, r3, #32
 80040c0:	6029      	str	r1, [r5, #0]
 80040c2:	bf48      	it	mi
 80040c4:	6023      	strmi	r3, [r4, #0]
 80040c6:	b91e      	cbnz	r6, 80040d0 <_printf_i+0x1a4>
 80040c8:	6823      	ldr	r3, [r4, #0]
 80040ca:	f023 0320 	bic.w	r3, r3, #32
 80040ce:	6023      	str	r3, [r4, #0]
 80040d0:	2310      	movs	r3, #16
 80040d2:	e7a7      	b.n	8004024 <_printf_i+0xf8>
 80040d4:	4824      	ldr	r0, [pc, #144]	; (8004168 <_printf_i+0x23c>)
 80040d6:	e7e4      	b.n	80040a2 <_printf_i+0x176>
 80040d8:	4615      	mov	r5, r2
 80040da:	e7bd      	b.n	8004058 <_printf_i+0x12c>
 80040dc:	682b      	ldr	r3, [r5, #0]
 80040de:	6826      	ldr	r6, [r4, #0]
 80040e0:	6961      	ldr	r1, [r4, #20]
 80040e2:	1d18      	adds	r0, r3, #4
 80040e4:	6028      	str	r0, [r5, #0]
 80040e6:	0635      	lsls	r5, r6, #24
 80040e8:	681b      	ldr	r3, [r3, #0]
 80040ea:	d501      	bpl.n	80040f0 <_printf_i+0x1c4>
 80040ec:	6019      	str	r1, [r3, #0]
 80040ee:	e002      	b.n	80040f6 <_printf_i+0x1ca>
 80040f0:	0670      	lsls	r0, r6, #25
 80040f2:	d5fb      	bpl.n	80040ec <_printf_i+0x1c0>
 80040f4:	8019      	strh	r1, [r3, #0]
 80040f6:	2300      	movs	r3, #0
 80040f8:	6123      	str	r3, [r4, #16]
 80040fa:	4615      	mov	r5, r2
 80040fc:	e7bc      	b.n	8004078 <_printf_i+0x14c>
 80040fe:	682b      	ldr	r3, [r5, #0]
 8004100:	1d1a      	adds	r2, r3, #4
 8004102:	602a      	str	r2, [r5, #0]
 8004104:	681d      	ldr	r5, [r3, #0]
 8004106:	6862      	ldr	r2, [r4, #4]
 8004108:	2100      	movs	r1, #0
 800410a:	4628      	mov	r0, r5
 800410c:	f7fc f868 	bl	80001e0 <memchr>
 8004110:	b108      	cbz	r0, 8004116 <_printf_i+0x1ea>
 8004112:	1b40      	subs	r0, r0, r5
 8004114:	6060      	str	r0, [r4, #4]
 8004116:	6863      	ldr	r3, [r4, #4]
 8004118:	6123      	str	r3, [r4, #16]
 800411a:	2300      	movs	r3, #0
 800411c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8004120:	e7aa      	b.n	8004078 <_printf_i+0x14c>
 8004122:	6923      	ldr	r3, [r4, #16]
 8004124:	462a      	mov	r2, r5
 8004126:	4649      	mov	r1, r9
 8004128:	4640      	mov	r0, r8
 800412a:	47d0      	blx	sl
 800412c:	3001      	adds	r0, #1
 800412e:	d0ad      	beq.n	800408c <_printf_i+0x160>
 8004130:	6823      	ldr	r3, [r4, #0]
 8004132:	079b      	lsls	r3, r3, #30
 8004134:	d413      	bmi.n	800415e <_printf_i+0x232>
 8004136:	68e0      	ldr	r0, [r4, #12]
 8004138:	9b03      	ldr	r3, [sp, #12]
 800413a:	4298      	cmp	r0, r3
 800413c:	bfb8      	it	lt
 800413e:	4618      	movlt	r0, r3
 8004140:	e7a6      	b.n	8004090 <_printf_i+0x164>
 8004142:	2301      	movs	r3, #1
 8004144:	4632      	mov	r2, r6
 8004146:	4649      	mov	r1, r9
 8004148:	4640      	mov	r0, r8
 800414a:	47d0      	blx	sl
 800414c:	3001      	adds	r0, #1
 800414e:	d09d      	beq.n	800408c <_printf_i+0x160>
 8004150:	3501      	adds	r5, #1
 8004152:	68e3      	ldr	r3, [r4, #12]
 8004154:	9903      	ldr	r1, [sp, #12]
 8004156:	1a5b      	subs	r3, r3, r1
 8004158:	42ab      	cmp	r3, r5
 800415a:	dcf2      	bgt.n	8004142 <_printf_i+0x216>
 800415c:	e7eb      	b.n	8004136 <_printf_i+0x20a>
 800415e:	2500      	movs	r5, #0
 8004160:	f104 0619 	add.w	r6, r4, #25
 8004164:	e7f5      	b.n	8004152 <_printf_i+0x226>
 8004166:	bf00      	nop
 8004168:	08004519 	.word	0x08004519
 800416c:	0800452a 	.word	0x0800452a

08004170 <memmove>:
 8004170:	4288      	cmp	r0, r1
 8004172:	b510      	push	{r4, lr}
 8004174:	eb01 0402 	add.w	r4, r1, r2
 8004178:	d902      	bls.n	8004180 <memmove+0x10>
 800417a:	4284      	cmp	r4, r0
 800417c:	4623      	mov	r3, r4
 800417e:	d807      	bhi.n	8004190 <memmove+0x20>
 8004180:	1e43      	subs	r3, r0, #1
 8004182:	42a1      	cmp	r1, r4
 8004184:	d008      	beq.n	8004198 <memmove+0x28>
 8004186:	f811 2b01 	ldrb.w	r2, [r1], #1
 800418a:	f803 2f01 	strb.w	r2, [r3, #1]!
 800418e:	e7f8      	b.n	8004182 <memmove+0x12>
 8004190:	4402      	add	r2, r0
 8004192:	4601      	mov	r1, r0
 8004194:	428a      	cmp	r2, r1
 8004196:	d100      	bne.n	800419a <memmove+0x2a>
 8004198:	bd10      	pop	{r4, pc}
 800419a:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 800419e:	f802 4d01 	strb.w	r4, [r2, #-1]!
 80041a2:	e7f7      	b.n	8004194 <memmove+0x24>

080041a4 <_sbrk_r>:
 80041a4:	b538      	push	{r3, r4, r5, lr}
 80041a6:	4d06      	ldr	r5, [pc, #24]	; (80041c0 <_sbrk_r+0x1c>)
 80041a8:	2300      	movs	r3, #0
 80041aa:	4604      	mov	r4, r0
 80041ac:	4608      	mov	r0, r1
 80041ae:	602b      	str	r3, [r5, #0]
 80041b0:	f7fd fb44 	bl	800183c <_sbrk>
 80041b4:	1c43      	adds	r3, r0, #1
 80041b6:	d102      	bne.n	80041be <_sbrk_r+0x1a>
 80041b8:	682b      	ldr	r3, [r5, #0]
 80041ba:	b103      	cbz	r3, 80041be <_sbrk_r+0x1a>
 80041bc:	6023      	str	r3, [r4, #0]
 80041be:	bd38      	pop	{r3, r4, r5, pc}
 80041c0:	200005d8 	.word	0x200005d8

080041c4 <memcpy>:
 80041c4:	440a      	add	r2, r1
 80041c6:	4291      	cmp	r1, r2
 80041c8:	f100 33ff 	add.w	r3, r0, #4294967295
 80041cc:	d100      	bne.n	80041d0 <memcpy+0xc>
 80041ce:	4770      	bx	lr
 80041d0:	b510      	push	{r4, lr}
 80041d2:	f811 4b01 	ldrb.w	r4, [r1], #1
 80041d6:	f803 4f01 	strb.w	r4, [r3, #1]!
 80041da:	4291      	cmp	r1, r2
 80041dc:	d1f9      	bne.n	80041d2 <memcpy+0xe>
 80041de:	bd10      	pop	{r4, pc}

080041e0 <_realloc_r>:
 80041e0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80041e4:	4680      	mov	r8, r0
 80041e6:	4614      	mov	r4, r2
 80041e8:	460e      	mov	r6, r1
 80041ea:	b921      	cbnz	r1, 80041f6 <_realloc_r+0x16>
 80041ec:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80041f0:	4611      	mov	r1, r2
 80041f2:	f7ff bc49 	b.w	8003a88 <_malloc_r>
 80041f6:	b92a      	cbnz	r2, 8004204 <_realloc_r+0x24>
 80041f8:	f7ff fbda 	bl	80039b0 <_free_r>
 80041fc:	4625      	mov	r5, r4
 80041fe:	4628      	mov	r0, r5
 8004200:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004204:	f000 f81b 	bl	800423e <_malloc_usable_size_r>
 8004208:	4284      	cmp	r4, r0
 800420a:	4607      	mov	r7, r0
 800420c:	d802      	bhi.n	8004214 <_realloc_r+0x34>
 800420e:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 8004212:	d812      	bhi.n	800423a <_realloc_r+0x5a>
 8004214:	4621      	mov	r1, r4
 8004216:	4640      	mov	r0, r8
 8004218:	f7ff fc36 	bl	8003a88 <_malloc_r>
 800421c:	4605      	mov	r5, r0
 800421e:	2800      	cmp	r0, #0
 8004220:	d0ed      	beq.n	80041fe <_realloc_r+0x1e>
 8004222:	42bc      	cmp	r4, r7
 8004224:	4622      	mov	r2, r4
 8004226:	4631      	mov	r1, r6
 8004228:	bf28      	it	cs
 800422a:	463a      	movcs	r2, r7
 800422c:	f7ff ffca 	bl	80041c4 <memcpy>
 8004230:	4631      	mov	r1, r6
 8004232:	4640      	mov	r0, r8
 8004234:	f7ff fbbc 	bl	80039b0 <_free_r>
 8004238:	e7e1      	b.n	80041fe <_realloc_r+0x1e>
 800423a:	4635      	mov	r5, r6
 800423c:	e7df      	b.n	80041fe <_realloc_r+0x1e>

0800423e <_malloc_usable_size_r>:
 800423e:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8004242:	1f18      	subs	r0, r3, #4
 8004244:	2b00      	cmp	r3, #0
 8004246:	bfbc      	itt	lt
 8004248:	580b      	ldrlt	r3, [r1, r0]
 800424a:	18c0      	addlt	r0, r0, r3
 800424c:	4770      	bx	lr
	...

08004250 <_init>:
 8004250:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004252:	bf00      	nop
 8004254:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8004256:	bc08      	pop	{r3}
 8004258:	469e      	mov	lr, r3
 800425a:	4770      	bx	lr

0800425c <_fini>:
 800425c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800425e:	bf00      	nop
 8004260:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8004262:	bc08      	pop	{r3}
 8004264:	469e      	mov	lr, r3
 8004266:	4770      	bx	lr
