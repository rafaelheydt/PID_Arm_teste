
PID_Arm_teste.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000040b8  080001a0  080001a0  000101a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000002d4  08004258  08004258  00014258  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800452c  0800452c  00020088  2**0
                  CONTENTS
  4 .ARM          00000008  0800452c  0800452c  0001452c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08004534  08004534  00020088  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08004534  08004534  00014534  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08004538  08004538  00014538  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000088  20000000  0800453c  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000560  20000088  080045c4  00020088  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200005e8  080045c4  000205e8  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020088  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  000200b8  2**0
                  CONTENTS, READONLY
 13 .debug_info   0000a76f  00000000  00000000  000200fb  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00001bc2  00000000  00000000  0002a86a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000b98  00000000  00000000  0002c430  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00000900  00000000  00000000  0002cfc8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00017577  00000000  00000000  0002d8c8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   0000cd5b  00000000  00000000  00044e3f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00097939  00000000  00000000  00051b9a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  00003580  00000000  00000000  000e94d4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000043  00000000  00000000  000eca54  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	; (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	; (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	; (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	20000088 	.word	0x20000088
 80001bc:	00000000 	.word	0x00000000
 80001c0:	08004240 	.word	0x08004240

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	; (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	; (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	; (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	2000008c 	.word	0x2000008c
 80001dc:	08004240 	.word	0x08004240

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <__aeabi_uldivmod>:
 8000280:	b953      	cbnz	r3, 8000298 <__aeabi_uldivmod+0x18>
 8000282:	b94a      	cbnz	r2, 8000298 <__aeabi_uldivmod+0x18>
 8000284:	2900      	cmp	r1, #0
 8000286:	bf08      	it	eq
 8000288:	2800      	cmpeq	r0, #0
 800028a:	bf1c      	itt	ne
 800028c:	f04f 31ff 	movne.w	r1, #4294967295
 8000290:	f04f 30ff 	movne.w	r0, #4294967295
 8000294:	f000 b970 	b.w	8000578 <__aeabi_idiv0>
 8000298:	f1ad 0c08 	sub.w	ip, sp, #8
 800029c:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002a0:	f000 f806 	bl	80002b0 <__udivmoddi4>
 80002a4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002a8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002ac:	b004      	add	sp, #16
 80002ae:	4770      	bx	lr

080002b0 <__udivmoddi4>:
 80002b0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002b4:	9e08      	ldr	r6, [sp, #32]
 80002b6:	460d      	mov	r5, r1
 80002b8:	4604      	mov	r4, r0
 80002ba:	460f      	mov	r7, r1
 80002bc:	2b00      	cmp	r3, #0
 80002be:	d14a      	bne.n	8000356 <__udivmoddi4+0xa6>
 80002c0:	428a      	cmp	r2, r1
 80002c2:	4694      	mov	ip, r2
 80002c4:	d965      	bls.n	8000392 <__udivmoddi4+0xe2>
 80002c6:	fab2 f382 	clz	r3, r2
 80002ca:	b143      	cbz	r3, 80002de <__udivmoddi4+0x2e>
 80002cc:	fa02 fc03 	lsl.w	ip, r2, r3
 80002d0:	f1c3 0220 	rsb	r2, r3, #32
 80002d4:	409f      	lsls	r7, r3
 80002d6:	fa20 f202 	lsr.w	r2, r0, r2
 80002da:	4317      	orrs	r7, r2
 80002dc:	409c      	lsls	r4, r3
 80002de:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
 80002e2:	fa1f f58c 	uxth.w	r5, ip
 80002e6:	fbb7 f1fe 	udiv	r1, r7, lr
 80002ea:	0c22      	lsrs	r2, r4, #16
 80002ec:	fb0e 7711 	mls	r7, lr, r1, r7
 80002f0:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
 80002f4:	fb01 f005 	mul.w	r0, r1, r5
 80002f8:	4290      	cmp	r0, r2
 80002fa:	d90a      	bls.n	8000312 <__udivmoddi4+0x62>
 80002fc:	eb1c 0202 	adds.w	r2, ip, r2
 8000300:	f101 37ff 	add.w	r7, r1, #4294967295
 8000304:	f080 811c 	bcs.w	8000540 <__udivmoddi4+0x290>
 8000308:	4290      	cmp	r0, r2
 800030a:	f240 8119 	bls.w	8000540 <__udivmoddi4+0x290>
 800030e:	3902      	subs	r1, #2
 8000310:	4462      	add	r2, ip
 8000312:	1a12      	subs	r2, r2, r0
 8000314:	b2a4      	uxth	r4, r4
 8000316:	fbb2 f0fe 	udiv	r0, r2, lr
 800031a:	fb0e 2210 	mls	r2, lr, r0, r2
 800031e:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8000322:	fb00 f505 	mul.w	r5, r0, r5
 8000326:	42a5      	cmp	r5, r4
 8000328:	d90a      	bls.n	8000340 <__udivmoddi4+0x90>
 800032a:	eb1c 0404 	adds.w	r4, ip, r4
 800032e:	f100 32ff 	add.w	r2, r0, #4294967295
 8000332:	f080 8107 	bcs.w	8000544 <__udivmoddi4+0x294>
 8000336:	42a5      	cmp	r5, r4
 8000338:	f240 8104 	bls.w	8000544 <__udivmoddi4+0x294>
 800033c:	4464      	add	r4, ip
 800033e:	3802      	subs	r0, #2
 8000340:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000344:	1b64      	subs	r4, r4, r5
 8000346:	2100      	movs	r1, #0
 8000348:	b11e      	cbz	r6, 8000352 <__udivmoddi4+0xa2>
 800034a:	40dc      	lsrs	r4, r3
 800034c:	2300      	movs	r3, #0
 800034e:	e9c6 4300 	strd	r4, r3, [r6]
 8000352:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000356:	428b      	cmp	r3, r1
 8000358:	d908      	bls.n	800036c <__udivmoddi4+0xbc>
 800035a:	2e00      	cmp	r6, #0
 800035c:	f000 80ed 	beq.w	800053a <__udivmoddi4+0x28a>
 8000360:	2100      	movs	r1, #0
 8000362:	e9c6 0500 	strd	r0, r5, [r6]
 8000366:	4608      	mov	r0, r1
 8000368:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800036c:	fab3 f183 	clz	r1, r3
 8000370:	2900      	cmp	r1, #0
 8000372:	d149      	bne.n	8000408 <__udivmoddi4+0x158>
 8000374:	42ab      	cmp	r3, r5
 8000376:	d302      	bcc.n	800037e <__udivmoddi4+0xce>
 8000378:	4282      	cmp	r2, r0
 800037a:	f200 80f8 	bhi.w	800056e <__udivmoddi4+0x2be>
 800037e:	1a84      	subs	r4, r0, r2
 8000380:	eb65 0203 	sbc.w	r2, r5, r3
 8000384:	2001      	movs	r0, #1
 8000386:	4617      	mov	r7, r2
 8000388:	2e00      	cmp	r6, #0
 800038a:	d0e2      	beq.n	8000352 <__udivmoddi4+0xa2>
 800038c:	e9c6 4700 	strd	r4, r7, [r6]
 8000390:	e7df      	b.n	8000352 <__udivmoddi4+0xa2>
 8000392:	b902      	cbnz	r2, 8000396 <__udivmoddi4+0xe6>
 8000394:	deff      	udf	#255	; 0xff
 8000396:	fab2 f382 	clz	r3, r2
 800039a:	2b00      	cmp	r3, #0
 800039c:	f040 8090 	bne.w	80004c0 <__udivmoddi4+0x210>
 80003a0:	1a8a      	subs	r2, r1, r2
 80003a2:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80003a6:	fa1f fe8c 	uxth.w	lr, ip
 80003aa:	2101      	movs	r1, #1
 80003ac:	fbb2 f5f7 	udiv	r5, r2, r7
 80003b0:	fb07 2015 	mls	r0, r7, r5, r2
 80003b4:	0c22      	lsrs	r2, r4, #16
 80003b6:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 80003ba:	fb0e f005 	mul.w	r0, lr, r5
 80003be:	4290      	cmp	r0, r2
 80003c0:	d908      	bls.n	80003d4 <__udivmoddi4+0x124>
 80003c2:	eb1c 0202 	adds.w	r2, ip, r2
 80003c6:	f105 38ff 	add.w	r8, r5, #4294967295
 80003ca:	d202      	bcs.n	80003d2 <__udivmoddi4+0x122>
 80003cc:	4290      	cmp	r0, r2
 80003ce:	f200 80cb 	bhi.w	8000568 <__udivmoddi4+0x2b8>
 80003d2:	4645      	mov	r5, r8
 80003d4:	1a12      	subs	r2, r2, r0
 80003d6:	b2a4      	uxth	r4, r4
 80003d8:	fbb2 f0f7 	udiv	r0, r2, r7
 80003dc:	fb07 2210 	mls	r2, r7, r0, r2
 80003e0:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 80003e4:	fb0e fe00 	mul.w	lr, lr, r0
 80003e8:	45a6      	cmp	lr, r4
 80003ea:	d908      	bls.n	80003fe <__udivmoddi4+0x14e>
 80003ec:	eb1c 0404 	adds.w	r4, ip, r4
 80003f0:	f100 32ff 	add.w	r2, r0, #4294967295
 80003f4:	d202      	bcs.n	80003fc <__udivmoddi4+0x14c>
 80003f6:	45a6      	cmp	lr, r4
 80003f8:	f200 80bb 	bhi.w	8000572 <__udivmoddi4+0x2c2>
 80003fc:	4610      	mov	r0, r2
 80003fe:	eba4 040e 	sub.w	r4, r4, lr
 8000402:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 8000406:	e79f      	b.n	8000348 <__udivmoddi4+0x98>
 8000408:	f1c1 0720 	rsb	r7, r1, #32
 800040c:	408b      	lsls	r3, r1
 800040e:	fa22 fc07 	lsr.w	ip, r2, r7
 8000412:	ea4c 0c03 	orr.w	ip, ip, r3
 8000416:	fa05 f401 	lsl.w	r4, r5, r1
 800041a:	fa20 f307 	lsr.w	r3, r0, r7
 800041e:	40fd      	lsrs	r5, r7
 8000420:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8000424:	4323      	orrs	r3, r4
 8000426:	fbb5 f8f9 	udiv	r8, r5, r9
 800042a:	fa1f fe8c 	uxth.w	lr, ip
 800042e:	fb09 5518 	mls	r5, r9, r8, r5
 8000432:	0c1c      	lsrs	r4, r3, #16
 8000434:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 8000438:	fb08 f50e 	mul.w	r5, r8, lr
 800043c:	42a5      	cmp	r5, r4
 800043e:	fa02 f201 	lsl.w	r2, r2, r1
 8000442:	fa00 f001 	lsl.w	r0, r0, r1
 8000446:	d90b      	bls.n	8000460 <__udivmoddi4+0x1b0>
 8000448:	eb1c 0404 	adds.w	r4, ip, r4
 800044c:	f108 3aff 	add.w	sl, r8, #4294967295
 8000450:	f080 8088 	bcs.w	8000564 <__udivmoddi4+0x2b4>
 8000454:	42a5      	cmp	r5, r4
 8000456:	f240 8085 	bls.w	8000564 <__udivmoddi4+0x2b4>
 800045a:	f1a8 0802 	sub.w	r8, r8, #2
 800045e:	4464      	add	r4, ip
 8000460:	1b64      	subs	r4, r4, r5
 8000462:	b29d      	uxth	r5, r3
 8000464:	fbb4 f3f9 	udiv	r3, r4, r9
 8000468:	fb09 4413 	mls	r4, r9, r3, r4
 800046c:	ea45 4404 	orr.w	r4, r5, r4, lsl #16
 8000470:	fb03 fe0e 	mul.w	lr, r3, lr
 8000474:	45a6      	cmp	lr, r4
 8000476:	d908      	bls.n	800048a <__udivmoddi4+0x1da>
 8000478:	eb1c 0404 	adds.w	r4, ip, r4
 800047c:	f103 35ff 	add.w	r5, r3, #4294967295
 8000480:	d26c      	bcs.n	800055c <__udivmoddi4+0x2ac>
 8000482:	45a6      	cmp	lr, r4
 8000484:	d96a      	bls.n	800055c <__udivmoddi4+0x2ac>
 8000486:	3b02      	subs	r3, #2
 8000488:	4464      	add	r4, ip
 800048a:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 800048e:	fba3 9502 	umull	r9, r5, r3, r2
 8000492:	eba4 040e 	sub.w	r4, r4, lr
 8000496:	42ac      	cmp	r4, r5
 8000498:	46c8      	mov	r8, r9
 800049a:	46ae      	mov	lr, r5
 800049c:	d356      	bcc.n	800054c <__udivmoddi4+0x29c>
 800049e:	d053      	beq.n	8000548 <__udivmoddi4+0x298>
 80004a0:	b156      	cbz	r6, 80004b8 <__udivmoddi4+0x208>
 80004a2:	ebb0 0208 	subs.w	r2, r0, r8
 80004a6:	eb64 040e 	sbc.w	r4, r4, lr
 80004aa:	fa04 f707 	lsl.w	r7, r4, r7
 80004ae:	40ca      	lsrs	r2, r1
 80004b0:	40cc      	lsrs	r4, r1
 80004b2:	4317      	orrs	r7, r2
 80004b4:	e9c6 7400 	strd	r7, r4, [r6]
 80004b8:	4618      	mov	r0, r3
 80004ba:	2100      	movs	r1, #0
 80004bc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80004c0:	f1c3 0120 	rsb	r1, r3, #32
 80004c4:	fa02 fc03 	lsl.w	ip, r2, r3
 80004c8:	fa20 f201 	lsr.w	r2, r0, r1
 80004cc:	fa25 f101 	lsr.w	r1, r5, r1
 80004d0:	409d      	lsls	r5, r3
 80004d2:	432a      	orrs	r2, r5
 80004d4:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80004d8:	fa1f fe8c 	uxth.w	lr, ip
 80004dc:	fbb1 f0f7 	udiv	r0, r1, r7
 80004e0:	fb07 1510 	mls	r5, r7, r0, r1
 80004e4:	0c11      	lsrs	r1, r2, #16
 80004e6:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 80004ea:	fb00 f50e 	mul.w	r5, r0, lr
 80004ee:	428d      	cmp	r5, r1
 80004f0:	fa04 f403 	lsl.w	r4, r4, r3
 80004f4:	d908      	bls.n	8000508 <__udivmoddi4+0x258>
 80004f6:	eb1c 0101 	adds.w	r1, ip, r1
 80004fa:	f100 38ff 	add.w	r8, r0, #4294967295
 80004fe:	d22f      	bcs.n	8000560 <__udivmoddi4+0x2b0>
 8000500:	428d      	cmp	r5, r1
 8000502:	d92d      	bls.n	8000560 <__udivmoddi4+0x2b0>
 8000504:	3802      	subs	r0, #2
 8000506:	4461      	add	r1, ip
 8000508:	1b49      	subs	r1, r1, r5
 800050a:	b292      	uxth	r2, r2
 800050c:	fbb1 f5f7 	udiv	r5, r1, r7
 8000510:	fb07 1115 	mls	r1, r7, r5, r1
 8000514:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000518:	fb05 f10e 	mul.w	r1, r5, lr
 800051c:	4291      	cmp	r1, r2
 800051e:	d908      	bls.n	8000532 <__udivmoddi4+0x282>
 8000520:	eb1c 0202 	adds.w	r2, ip, r2
 8000524:	f105 38ff 	add.w	r8, r5, #4294967295
 8000528:	d216      	bcs.n	8000558 <__udivmoddi4+0x2a8>
 800052a:	4291      	cmp	r1, r2
 800052c:	d914      	bls.n	8000558 <__udivmoddi4+0x2a8>
 800052e:	3d02      	subs	r5, #2
 8000530:	4462      	add	r2, ip
 8000532:	1a52      	subs	r2, r2, r1
 8000534:	ea45 4100 	orr.w	r1, r5, r0, lsl #16
 8000538:	e738      	b.n	80003ac <__udivmoddi4+0xfc>
 800053a:	4631      	mov	r1, r6
 800053c:	4630      	mov	r0, r6
 800053e:	e708      	b.n	8000352 <__udivmoddi4+0xa2>
 8000540:	4639      	mov	r1, r7
 8000542:	e6e6      	b.n	8000312 <__udivmoddi4+0x62>
 8000544:	4610      	mov	r0, r2
 8000546:	e6fb      	b.n	8000340 <__udivmoddi4+0x90>
 8000548:	4548      	cmp	r0, r9
 800054a:	d2a9      	bcs.n	80004a0 <__udivmoddi4+0x1f0>
 800054c:	ebb9 0802 	subs.w	r8, r9, r2
 8000550:	eb65 0e0c 	sbc.w	lr, r5, ip
 8000554:	3b01      	subs	r3, #1
 8000556:	e7a3      	b.n	80004a0 <__udivmoddi4+0x1f0>
 8000558:	4645      	mov	r5, r8
 800055a:	e7ea      	b.n	8000532 <__udivmoddi4+0x282>
 800055c:	462b      	mov	r3, r5
 800055e:	e794      	b.n	800048a <__udivmoddi4+0x1da>
 8000560:	4640      	mov	r0, r8
 8000562:	e7d1      	b.n	8000508 <__udivmoddi4+0x258>
 8000564:	46d0      	mov	r8, sl
 8000566:	e77b      	b.n	8000460 <__udivmoddi4+0x1b0>
 8000568:	3d02      	subs	r5, #2
 800056a:	4462      	add	r2, ip
 800056c:	e732      	b.n	80003d4 <__udivmoddi4+0x124>
 800056e:	4608      	mov	r0, r1
 8000570:	e70a      	b.n	8000388 <__udivmoddi4+0xd8>
 8000572:	4464      	add	r4, ip
 8000574:	3802      	subs	r0, #2
 8000576:	e742      	b.n	80003fe <__udivmoddi4+0x14e>

08000578 <__aeabi_idiv0>:
 8000578:	4770      	bx	lr
 800057a:	bf00      	nop

0800057c <LCD_setRST>:
 800057c:	b480      	push	{r7}
 800057e:	b083      	sub	sp, #12
 8000580:	af00      	add	r7, sp, #0
 8000582:	6078      	str	r0, [r7, #4]
 8000584:	460b      	mov	r3, r1
 8000586:	807b      	strh	r3, [r7, #2]
 8000588:	4a05      	ldr	r2, [pc, #20]	; (80005a0 <LCD_setRST+0x24>)
 800058a:	687b      	ldr	r3, [r7, #4]
 800058c:	6013      	str	r3, [r2, #0]
 800058e:	4a04      	ldr	r2, [pc, #16]	; (80005a0 <LCD_setRST+0x24>)
 8000590:	887b      	ldrh	r3, [r7, #2]
 8000592:	8093      	strh	r3, [r2, #4]
 8000594:	bf00      	nop
 8000596:	370c      	adds	r7, #12
 8000598:	46bd      	mov	sp, r7
 800059a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800059e:	4770      	bx	lr
 80005a0:	200002a0 	.word	0x200002a0

080005a4 <LCD_setCE>:
 80005a4:	b480      	push	{r7}
 80005a6:	b083      	sub	sp, #12
 80005a8:	af00      	add	r7, sp, #0
 80005aa:	6078      	str	r0, [r7, #4]
 80005ac:	460b      	mov	r3, r1
 80005ae:	807b      	strh	r3, [r7, #2]
 80005b0:	4a05      	ldr	r2, [pc, #20]	; (80005c8 <LCD_setCE+0x24>)
 80005b2:	687b      	ldr	r3, [r7, #4]
 80005b4:	6093      	str	r3, [r2, #8]
 80005b6:	4a04      	ldr	r2, [pc, #16]	; (80005c8 <LCD_setCE+0x24>)
 80005b8:	887b      	ldrh	r3, [r7, #2]
 80005ba:	8193      	strh	r3, [r2, #12]
 80005bc:	bf00      	nop
 80005be:	370c      	adds	r7, #12
 80005c0:	46bd      	mov	sp, r7
 80005c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005c6:	4770      	bx	lr
 80005c8:	200002a0 	.word	0x200002a0

080005cc <LCD_setDC>:
 80005cc:	b480      	push	{r7}
 80005ce:	b083      	sub	sp, #12
 80005d0:	af00      	add	r7, sp, #0
 80005d2:	6078      	str	r0, [r7, #4]
 80005d4:	460b      	mov	r3, r1
 80005d6:	807b      	strh	r3, [r7, #2]
 80005d8:	4a05      	ldr	r2, [pc, #20]	; (80005f0 <LCD_setDC+0x24>)
 80005da:	687b      	ldr	r3, [r7, #4]
 80005dc:	6113      	str	r3, [r2, #16]
 80005de:	4a04      	ldr	r2, [pc, #16]	; (80005f0 <LCD_setDC+0x24>)
 80005e0:	887b      	ldrh	r3, [r7, #2]
 80005e2:	8293      	strh	r3, [r2, #20]
 80005e4:	bf00      	nop
 80005e6:	370c      	adds	r7, #12
 80005e8:	46bd      	mov	sp, r7
 80005ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005ee:	4770      	bx	lr
 80005f0:	200002a0 	.word	0x200002a0

080005f4 <LCD_setDIN>:
 80005f4:	b480      	push	{r7}
 80005f6:	b083      	sub	sp, #12
 80005f8:	af00      	add	r7, sp, #0
 80005fa:	6078      	str	r0, [r7, #4]
 80005fc:	460b      	mov	r3, r1
 80005fe:	807b      	strh	r3, [r7, #2]
 8000600:	4a05      	ldr	r2, [pc, #20]	; (8000618 <LCD_setDIN+0x24>)
 8000602:	687b      	ldr	r3, [r7, #4]
 8000604:	6193      	str	r3, [r2, #24]
 8000606:	4a04      	ldr	r2, [pc, #16]	; (8000618 <LCD_setDIN+0x24>)
 8000608:	887b      	ldrh	r3, [r7, #2]
 800060a:	8393      	strh	r3, [r2, #28]
 800060c:	bf00      	nop
 800060e:	370c      	adds	r7, #12
 8000610:	46bd      	mov	sp, r7
 8000612:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000616:	4770      	bx	lr
 8000618:	200002a0 	.word	0x200002a0

0800061c <LCD_setCLK>:
 800061c:	b480      	push	{r7}
 800061e:	b083      	sub	sp, #12
 8000620:	af00      	add	r7, sp, #0
 8000622:	6078      	str	r0, [r7, #4]
 8000624:	460b      	mov	r3, r1
 8000626:	807b      	strh	r3, [r7, #2]
 8000628:	4a05      	ldr	r2, [pc, #20]	; (8000640 <LCD_setCLK+0x24>)
 800062a:	687b      	ldr	r3, [r7, #4]
 800062c:	6213      	str	r3, [r2, #32]
 800062e:	4a04      	ldr	r2, [pc, #16]	; (8000640 <LCD_setCLK+0x24>)
 8000630:	887b      	ldrh	r3, [r7, #2]
 8000632:	8493      	strh	r3, [r2, #36]	; 0x24
 8000634:	bf00      	nop
 8000636:	370c      	adds	r7, #12
 8000638:	46bd      	mov	sp, r7
 800063a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800063e:	4770      	bx	lr
 8000640:	200002a0 	.word	0x200002a0

08000644 <LCD_send>:
 8000644:	b580      	push	{r7, lr}
 8000646:	b084      	sub	sp, #16
 8000648:	af00      	add	r7, sp, #0
 800064a:	4603      	mov	r3, r0
 800064c:	71fb      	strb	r3, [r7, #7]
 800064e:	2300      	movs	r3, #0
 8000650:	73fb      	strb	r3, [r7, #15]
 8000652:	e026      	b.n	80006a2 <LCD_send+0x5e>
 8000654:	4b17      	ldr	r3, [pc, #92]	; (80006b4 <LCD_send+0x70>)
 8000656:	6998      	ldr	r0, [r3, #24]
 8000658:	4b16      	ldr	r3, [pc, #88]	; (80006b4 <LCD_send+0x70>)
 800065a:	8b99      	ldrh	r1, [r3, #28]
 800065c:	79fa      	ldrb	r2, [r7, #7]
 800065e:	7bfb      	ldrb	r3, [r7, #15]
 8000660:	f1c3 0307 	rsb	r3, r3, #7
 8000664:	fa42 f303 	asr.w	r3, r2, r3
 8000668:	f003 0301 	and.w	r3, r3, #1
 800066c:	2b00      	cmp	r3, #0
 800066e:	bf14      	ite	ne
 8000670:	2301      	movne	r3, #1
 8000672:	2300      	moveq	r3, #0
 8000674:	b2db      	uxtb	r3, r3
 8000676:	461a      	mov	r2, r3
 8000678:	f002 f834 	bl	80026e4 <HAL_GPIO_WritePin>
 800067c:	4b0d      	ldr	r3, [pc, #52]	; (80006b4 <LCD_send+0x70>)
 800067e:	6a1b      	ldr	r3, [r3, #32]
 8000680:	4a0c      	ldr	r2, [pc, #48]	; (80006b4 <LCD_send+0x70>)
 8000682:	8c91      	ldrh	r1, [r2, #36]	; 0x24
 8000684:	2201      	movs	r2, #1
 8000686:	4618      	mov	r0, r3
 8000688:	f002 f82c 	bl	80026e4 <HAL_GPIO_WritePin>
 800068c:	4b09      	ldr	r3, [pc, #36]	; (80006b4 <LCD_send+0x70>)
 800068e:	6a1b      	ldr	r3, [r3, #32]
 8000690:	4a08      	ldr	r2, [pc, #32]	; (80006b4 <LCD_send+0x70>)
 8000692:	8c91      	ldrh	r1, [r2, #36]	; 0x24
 8000694:	2200      	movs	r2, #0
 8000696:	4618      	mov	r0, r3
 8000698:	f002 f824 	bl	80026e4 <HAL_GPIO_WritePin>
 800069c:	7bfb      	ldrb	r3, [r7, #15]
 800069e:	3301      	adds	r3, #1
 80006a0:	73fb      	strb	r3, [r7, #15]
 80006a2:	7bfb      	ldrb	r3, [r7, #15]
 80006a4:	2b07      	cmp	r3, #7
 80006a6:	d9d5      	bls.n	8000654 <LCD_send+0x10>
 80006a8:	bf00      	nop
 80006aa:	bf00      	nop
 80006ac:	3710      	adds	r7, #16
 80006ae:	46bd      	mov	sp, r7
 80006b0:	bd80      	pop	{r7, pc}
 80006b2:	bf00      	nop
 80006b4:	200002a0 	.word	0x200002a0

080006b8 <LCD_write>:
 80006b8:	b580      	push	{r7, lr}
 80006ba:	b082      	sub	sp, #8
 80006bc:	af00      	add	r7, sp, #0
 80006be:	4603      	mov	r3, r0
 80006c0:	460a      	mov	r2, r1
 80006c2:	71fb      	strb	r3, [r7, #7]
 80006c4:	4613      	mov	r3, r2
 80006c6:	71bb      	strb	r3, [r7, #6]
 80006c8:	79bb      	ldrb	r3, [r7, #6]
 80006ca:	2b00      	cmp	r3, #0
 80006cc:	d11c      	bne.n	8000708 <LCD_write+0x50>
 80006ce:	4b1e      	ldr	r3, [pc, #120]	; (8000748 <LCD_write+0x90>)
 80006d0:	691b      	ldr	r3, [r3, #16]
 80006d2:	4a1d      	ldr	r2, [pc, #116]	; (8000748 <LCD_write+0x90>)
 80006d4:	8a91      	ldrh	r1, [r2, #20]
 80006d6:	2200      	movs	r2, #0
 80006d8:	4618      	mov	r0, r3
 80006da:	f002 f803 	bl	80026e4 <HAL_GPIO_WritePin>
 80006de:	4b1a      	ldr	r3, [pc, #104]	; (8000748 <LCD_write+0x90>)
 80006e0:	689b      	ldr	r3, [r3, #8]
 80006e2:	4a19      	ldr	r2, [pc, #100]	; (8000748 <LCD_write+0x90>)
 80006e4:	8991      	ldrh	r1, [r2, #12]
 80006e6:	2200      	movs	r2, #0
 80006e8:	4618      	mov	r0, r3
 80006ea:	f001 fffb 	bl	80026e4 <HAL_GPIO_WritePin>
 80006ee:	79fb      	ldrb	r3, [r7, #7]
 80006f0:	4618      	mov	r0, r3
 80006f2:	f7ff ffa7 	bl	8000644 <LCD_send>
 80006f6:	4b14      	ldr	r3, [pc, #80]	; (8000748 <LCD_write+0x90>)
 80006f8:	689b      	ldr	r3, [r3, #8]
 80006fa:	4a13      	ldr	r2, [pc, #76]	; (8000748 <LCD_write+0x90>)
 80006fc:	8991      	ldrh	r1, [r2, #12]
 80006fe:	2201      	movs	r2, #1
 8000700:	4618      	mov	r0, r3
 8000702:	f001 ffef 	bl	80026e4 <HAL_GPIO_WritePin>
 8000706:	e01b      	b.n	8000740 <LCD_write+0x88>
 8000708:	4b0f      	ldr	r3, [pc, #60]	; (8000748 <LCD_write+0x90>)
 800070a:	691b      	ldr	r3, [r3, #16]
 800070c:	4a0e      	ldr	r2, [pc, #56]	; (8000748 <LCD_write+0x90>)
 800070e:	8a91      	ldrh	r1, [r2, #20]
 8000710:	2201      	movs	r2, #1
 8000712:	4618      	mov	r0, r3
 8000714:	f001 ffe6 	bl	80026e4 <HAL_GPIO_WritePin>
 8000718:	4b0b      	ldr	r3, [pc, #44]	; (8000748 <LCD_write+0x90>)
 800071a:	689b      	ldr	r3, [r3, #8]
 800071c:	4a0a      	ldr	r2, [pc, #40]	; (8000748 <LCD_write+0x90>)
 800071e:	8991      	ldrh	r1, [r2, #12]
 8000720:	2200      	movs	r2, #0
 8000722:	4618      	mov	r0, r3
 8000724:	f001 ffde 	bl	80026e4 <HAL_GPIO_WritePin>
 8000728:	79fb      	ldrb	r3, [r7, #7]
 800072a:	4618      	mov	r0, r3
 800072c:	f7ff ff8a 	bl	8000644 <LCD_send>
 8000730:	4b05      	ldr	r3, [pc, #20]	; (8000748 <LCD_write+0x90>)
 8000732:	689b      	ldr	r3, [r3, #8]
 8000734:	4a04      	ldr	r2, [pc, #16]	; (8000748 <LCD_write+0x90>)
 8000736:	8991      	ldrh	r1, [r2, #12]
 8000738:	2201      	movs	r2, #1
 800073a:	4618      	mov	r0, r3
 800073c:	f001 ffd2 	bl	80026e4 <HAL_GPIO_WritePin>
 8000740:	bf00      	nop
 8000742:	3708      	adds	r7, #8
 8000744:	46bd      	mov	sp, r7
 8000746:	bd80      	pop	{r7, pc}
 8000748:	200002a0 	.word	0x200002a0

0800074c <LCD_init>:
 800074c:	b580      	push	{r7, lr}
 800074e:	af00      	add	r7, sp, #0
 8000750:	4b17      	ldr	r3, [pc, #92]	; (80007b0 <LCD_init+0x64>)
 8000752:	681b      	ldr	r3, [r3, #0]
 8000754:	4a16      	ldr	r2, [pc, #88]	; (80007b0 <LCD_init+0x64>)
 8000756:	8891      	ldrh	r1, [r2, #4]
 8000758:	2200      	movs	r2, #0
 800075a:	4618      	mov	r0, r3
 800075c:	f001 ffc2 	bl	80026e4 <HAL_GPIO_WritePin>
 8000760:	4b13      	ldr	r3, [pc, #76]	; (80007b0 <LCD_init+0x64>)
 8000762:	681b      	ldr	r3, [r3, #0]
 8000764:	4a12      	ldr	r2, [pc, #72]	; (80007b0 <LCD_init+0x64>)
 8000766:	8891      	ldrh	r1, [r2, #4]
 8000768:	2201      	movs	r2, #1
 800076a:	4618      	mov	r0, r3
 800076c:	f001 ffba 	bl	80026e4 <HAL_GPIO_WritePin>
 8000770:	2100      	movs	r1, #0
 8000772:	2021      	movs	r0, #33	; 0x21
 8000774:	f7ff ffa0 	bl	80006b8 <LCD_write>
 8000778:	2100      	movs	r1, #0
 800077a:	20b8      	movs	r0, #184	; 0xb8
 800077c:	f7ff ff9c 	bl	80006b8 <LCD_write>
 8000780:	2100      	movs	r1, #0
 8000782:	2004      	movs	r0, #4
 8000784:	f7ff ff98 	bl	80006b8 <LCD_write>
 8000788:	2100      	movs	r1, #0
 800078a:	2014      	movs	r0, #20
 800078c:	f7ff ff94 	bl	80006b8 <LCD_write>
 8000790:	2100      	movs	r1, #0
 8000792:	2020      	movs	r0, #32
 8000794:	f7ff ff90 	bl	80006b8 <LCD_write>
 8000798:	2100      	movs	r1, #0
 800079a:	200c      	movs	r0, #12
 800079c:	f7ff ff8c 	bl	80006b8 <LCD_write>
 80007a0:	f000 f86c 	bl	800087c <LCD_clrScr>
 80007a4:	4b03      	ldr	r3, [pc, #12]	; (80007b4 <LCD_init+0x68>)
 80007a6:	2200      	movs	r2, #0
 80007a8:	f883 21f8 	strb.w	r2, [r3, #504]	; 0x1f8
 80007ac:	bf00      	nop
 80007ae:	bd80      	pop	{r7, pc}
 80007b0:	200002a0 	.word	0x200002a0
 80007b4:	200000a4 	.word	0x200000a4

080007b8 <LCD_putChar>:
 80007b8:	b580      	push	{r7, lr}
 80007ba:	b084      	sub	sp, #16
 80007bc:	af00      	add	r7, sp, #0
 80007be:	4603      	mov	r3, r0
 80007c0:	71fb      	strb	r3, [r7, #7]
 80007c2:	2300      	movs	r3, #0
 80007c4:	60fb      	str	r3, [r7, #12]
 80007c6:	e02d      	b.n	8000824 <LCD_putChar+0x6c>
 80007c8:	4b1a      	ldr	r3, [pc, #104]	; (8000834 <LCD_putChar+0x7c>)
 80007ca:	f893 31f8 	ldrb.w	r3, [r3, #504]	; 0x1f8
 80007ce:	f083 0301 	eor.w	r3, r3, #1
 80007d2:	b2db      	uxtb	r3, r3
 80007d4:	2b00      	cmp	r3, #0
 80007d6:	d010      	beq.n	80007fa <LCD_putChar+0x42>
 80007d8:	79fb      	ldrb	r3, [r7, #7]
 80007da:	f1a3 0220 	sub.w	r2, r3, #32
 80007de:	4916      	ldr	r1, [pc, #88]	; (8000838 <LCD_putChar+0x80>)
 80007e0:	4613      	mov	r3, r2
 80007e2:	005b      	lsls	r3, r3, #1
 80007e4:	4413      	add	r3, r2
 80007e6:	005b      	lsls	r3, r3, #1
 80007e8:	18ca      	adds	r2, r1, r3
 80007ea:	68fb      	ldr	r3, [r7, #12]
 80007ec:	4413      	add	r3, r2
 80007ee:	781b      	ldrb	r3, [r3, #0]
 80007f0:	2101      	movs	r1, #1
 80007f2:	4618      	mov	r0, r3
 80007f4:	f7ff ff60 	bl	80006b8 <LCD_write>
 80007f8:	e011      	b.n	800081e <LCD_putChar+0x66>
 80007fa:	79fb      	ldrb	r3, [r7, #7]
 80007fc:	f1a3 0220 	sub.w	r2, r3, #32
 8000800:	490d      	ldr	r1, [pc, #52]	; (8000838 <LCD_putChar+0x80>)
 8000802:	4613      	mov	r3, r2
 8000804:	005b      	lsls	r3, r3, #1
 8000806:	4413      	add	r3, r2
 8000808:	005b      	lsls	r3, r3, #1
 800080a:	18ca      	adds	r2, r1, r3
 800080c:	68fb      	ldr	r3, [r7, #12]
 800080e:	4413      	add	r3, r2
 8000810:	781b      	ldrb	r3, [r3, #0]
 8000812:	43db      	mvns	r3, r3
 8000814:	b2db      	uxtb	r3, r3
 8000816:	2101      	movs	r1, #1
 8000818:	4618      	mov	r0, r3
 800081a:	f7ff ff4d 	bl	80006b8 <LCD_write>
 800081e:	68fb      	ldr	r3, [r7, #12]
 8000820:	3301      	adds	r3, #1
 8000822:	60fb      	str	r3, [r7, #12]
 8000824:	68fb      	ldr	r3, [r7, #12]
 8000826:	2b05      	cmp	r3, #5
 8000828:	ddce      	ble.n	80007c8 <LCD_putChar+0x10>
 800082a:	bf00      	nop
 800082c:	bf00      	nop
 800082e:	3710      	adds	r7, #16
 8000830:	46bd      	mov	sp, r7
 8000832:	bd80      	pop	{r7, pc}
 8000834:	200000a4 	.word	0x200000a4
 8000838:	08004298 	.word	0x08004298

0800083c <LCD_print>:
 800083c:	b580      	push	{r7, lr}
 800083e:	b082      	sub	sp, #8
 8000840:	af00      	add	r7, sp, #0
 8000842:	6078      	str	r0, [r7, #4]
 8000844:	460b      	mov	r3, r1
 8000846:	70fb      	strb	r3, [r7, #3]
 8000848:	4613      	mov	r3, r2
 800084a:	70bb      	strb	r3, [r7, #2]
 800084c:	78ba      	ldrb	r2, [r7, #2]
 800084e:	78fb      	ldrb	r3, [r7, #3]
 8000850:	4611      	mov	r1, r2
 8000852:	4618      	mov	r0, r3
 8000854:	f000 f830 	bl	80008b8 <LCD_goXY>
 8000858:	e006      	b.n	8000868 <LCD_print+0x2c>
 800085a:	687b      	ldr	r3, [r7, #4]
 800085c:	1c5a      	adds	r2, r3, #1
 800085e:	607a      	str	r2, [r7, #4]
 8000860:	781b      	ldrb	r3, [r3, #0]
 8000862:	4618      	mov	r0, r3
 8000864:	f7ff ffa8 	bl	80007b8 <LCD_putChar>
 8000868:	687b      	ldr	r3, [r7, #4]
 800086a:	781b      	ldrb	r3, [r3, #0]
 800086c:	2b00      	cmp	r3, #0
 800086e:	d1f4      	bne.n	800085a <LCD_print+0x1e>
 8000870:	bf00      	nop
 8000872:	bf00      	nop
 8000874:	3708      	adds	r7, #8
 8000876:	46bd      	mov	sp, r7
 8000878:	bd80      	pop	{r7, pc}
	...

0800087c <LCD_clrScr>:
 800087c:	b580      	push	{r7, lr}
 800087e:	b082      	sub	sp, #8
 8000880:	af00      	add	r7, sp, #0
 8000882:	2300      	movs	r3, #0
 8000884:	607b      	str	r3, [r7, #4]
 8000886:	e00b      	b.n	80008a0 <LCD_clrScr+0x24>
 8000888:	2101      	movs	r1, #1
 800088a:	2000      	movs	r0, #0
 800088c:	f7ff ff14 	bl	80006b8 <LCD_write>
 8000890:	4a08      	ldr	r2, [pc, #32]	; (80008b4 <LCD_clrScr+0x38>)
 8000892:	687b      	ldr	r3, [r7, #4]
 8000894:	4413      	add	r3, r2
 8000896:	2200      	movs	r2, #0
 8000898:	701a      	strb	r2, [r3, #0]
 800089a:	687b      	ldr	r3, [r7, #4]
 800089c:	3301      	adds	r3, #1
 800089e:	607b      	str	r3, [r7, #4]
 80008a0:	687b      	ldr	r3, [r7, #4]
 80008a2:	f5b3 7ffc 	cmp.w	r3, #504	; 0x1f8
 80008a6:	dbef      	blt.n	8000888 <LCD_clrScr+0xc>
 80008a8:	bf00      	nop
 80008aa:	bf00      	nop
 80008ac:	3708      	adds	r7, #8
 80008ae:	46bd      	mov	sp, r7
 80008b0:	bd80      	pop	{r7, pc}
 80008b2:	bf00      	nop
 80008b4:	200000a4 	.word	0x200000a4

080008b8 <LCD_goXY>:
 80008b8:	b580      	push	{r7, lr}
 80008ba:	b082      	sub	sp, #8
 80008bc:	af00      	add	r7, sp, #0
 80008be:	4603      	mov	r3, r0
 80008c0:	460a      	mov	r2, r1
 80008c2:	71fb      	strb	r3, [r7, #7]
 80008c4:	4613      	mov	r3, r2
 80008c6:	71bb      	strb	r3, [r7, #6]
 80008c8:	79fb      	ldrb	r3, [r7, #7]
 80008ca:	f063 037f 	orn	r3, r3, #127	; 0x7f
 80008ce:	b2db      	uxtb	r3, r3
 80008d0:	2100      	movs	r1, #0
 80008d2:	4618      	mov	r0, r3
 80008d4:	f7ff fef0 	bl	80006b8 <LCD_write>
 80008d8:	79bb      	ldrb	r3, [r7, #6]
 80008da:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80008de:	b2db      	uxtb	r3, r3
 80008e0:	2100      	movs	r1, #0
 80008e2:	4618      	mov	r0, r3
 80008e4:	f7ff fee8 	bl	80006b8 <LCD_write>
 80008e8:	bf00      	nop
 80008ea:	3708      	adds	r7, #8
 80008ec:	46bd      	mov	sp, r7
 80008ee:	bd80      	pop	{r7, pc}

080008f0 <HAL_GPIO_EXTI_Callback>:




void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
{
 80008f0:	b580      	push	{r7, lr}
 80008f2:	b082      	sub	sp, #8
 80008f4:	af00      	add	r7, sp, #0
 80008f6:	4603      	mov	r3, r0
 80008f8:	80fb      	strh	r3, [r7, #6]
	if(GPIO_Pin == BOT1_Pin) // Ações ao apertar o botão 1
 80008fa:	88fb      	ldrh	r3, [r7, #6]
 80008fc:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8000900:	d101      	bne.n	8000906 <HAL_GPIO_EXTI_Callback+0x16>
	{
		LCD_clrScr();
 8000902:	f7ff ffbb 	bl	800087c <LCD_clrScr>
	}
	if(GPIO_Pin == BOT2_Pin) // Ações ao apertar botão 2
	{

	}
}
 8000906:	bf00      	nop
 8000908:	3708      	adds	r7, #8
 800090a:	46bd      	mov	sp, r7
 800090c:	bd80      	pop	{r7, pc}
	...

08000910 <selecionarPinoMux>:

void selecionarPinoMux(int pino)
{
 8000910:	b580      	push	{r7, lr}
 8000912:	b084      	sub	sp, #16
 8000914:	af00      	add	r7, sp, #0
 8000916:	6078      	str	r0, [r7, #4]
	for(int i =0;i<4;i++)
 8000918:	2300      	movs	r3, #0
 800091a:	60fb      	str	r3, [r7, #12]
 800091c:	e040      	b.n	80009a0 <selecionarPinoMux+0x90>
	{
		if(i == 0)
 800091e:	68fb      	ldr	r3, [r7, #12]
 8000920:	2b00      	cmp	r3, #0
 8000922:	d11d      	bne.n	8000960 <selecionarPinoMux+0x50>
		{
			if(pino & (1<<i))
 8000924:	687a      	ldr	r2, [r7, #4]
 8000926:	68fb      	ldr	r3, [r7, #12]
 8000928:	fa42 f303 	asr.w	r3, r2, r3
 800092c:	f003 0301 	and.w	r3, r3, #1
 8000930:	2b00      	cmp	r3, #0
 8000932:	d00a      	beq.n	800094a <selecionarPinoMux+0x3a>
			{
				HAL_GPIO_WritePin(GPIOC, selecionarPino[i], GPIO_PIN_SET);
 8000934:	4a1e      	ldr	r2, [pc, #120]	; (80009b0 <selecionarPinoMux+0xa0>)
 8000936:	68fb      	ldr	r3, [r7, #12]
 8000938:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800093c:	b29b      	uxth	r3, r3
 800093e:	2201      	movs	r2, #1
 8000940:	4619      	mov	r1, r3
 8000942:	481c      	ldr	r0, [pc, #112]	; (80009b4 <selecionarPinoMux+0xa4>)
 8000944:	f001 fece 	bl	80026e4 <HAL_GPIO_WritePin>
 8000948:	e027      	b.n	800099a <selecionarPinoMux+0x8a>
			}
			else
			{
				HAL_GPIO_WritePin(GPIOC, selecionarPino[i], GPIO_PIN_RESET);
 800094a:	4a19      	ldr	r2, [pc, #100]	; (80009b0 <selecionarPinoMux+0xa0>)
 800094c:	68fb      	ldr	r3, [r7, #12]
 800094e:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8000952:	b29b      	uxth	r3, r3
 8000954:	2200      	movs	r2, #0
 8000956:	4619      	mov	r1, r3
 8000958:	4816      	ldr	r0, [pc, #88]	; (80009b4 <selecionarPinoMux+0xa4>)
 800095a:	f001 fec3 	bl	80026e4 <HAL_GPIO_WritePin>
 800095e:	e01c      	b.n	800099a <selecionarPinoMux+0x8a>
			}
		}
		else
		{
			if(pino & (1<<i))
 8000960:	687a      	ldr	r2, [r7, #4]
 8000962:	68fb      	ldr	r3, [r7, #12]
 8000964:	fa42 f303 	asr.w	r3, r2, r3
 8000968:	f003 0301 	and.w	r3, r3, #1
 800096c:	2b00      	cmp	r3, #0
 800096e:	d00a      	beq.n	8000986 <selecionarPinoMux+0x76>
			{
				HAL_GPIO_WritePin(GPIOA, selecionarPino[i], GPIO_PIN_SET);
 8000970:	4a0f      	ldr	r2, [pc, #60]	; (80009b0 <selecionarPinoMux+0xa0>)
 8000972:	68fb      	ldr	r3, [r7, #12]
 8000974:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8000978:	b29b      	uxth	r3, r3
 800097a:	2201      	movs	r2, #1
 800097c:	4619      	mov	r1, r3
 800097e:	480e      	ldr	r0, [pc, #56]	; (80009b8 <selecionarPinoMux+0xa8>)
 8000980:	f001 feb0 	bl	80026e4 <HAL_GPIO_WritePin>
 8000984:	e009      	b.n	800099a <selecionarPinoMux+0x8a>
			}
			else
			{
				HAL_GPIO_WritePin(GPIOA, selecionarPino[i], GPIO_PIN_RESET);
 8000986:	4a0a      	ldr	r2, [pc, #40]	; (80009b0 <selecionarPinoMux+0xa0>)
 8000988:	68fb      	ldr	r3, [r7, #12]
 800098a:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800098e:	b29b      	uxth	r3, r3
 8000990:	2200      	movs	r2, #0
 8000992:	4619      	mov	r1, r3
 8000994:	4808      	ldr	r0, [pc, #32]	; (80009b8 <selecionarPinoMux+0xa8>)
 8000996:	f001 fea5 	bl	80026e4 <HAL_GPIO_WritePin>
	for(int i =0;i<4;i++)
 800099a:	68fb      	ldr	r3, [r7, #12]
 800099c:	3301      	adds	r3, #1
 800099e:	60fb      	str	r3, [r7, #12]
 80009a0:	68fb      	ldr	r3, [r7, #12]
 80009a2:	2b03      	cmp	r3, #3
 80009a4:	ddbb      	ble.n	800091e <selecionarPinoMux+0xe>
			}
		}

	}
}
 80009a6:	bf00      	nop
 80009a8:	bf00      	nop
 80009aa:	3710      	adds	r7, #16
 80009ac:	46bd      	mov	sp, r7
 80009ae:	bd80      	pop	{r7, pc}
 80009b0:	080044d8 	.word	0x080044d8
 80009b4:	40020800 	.word	0x40020800
 80009b8:	40020000 	.word	0x40020000

080009bc <calibrarBranco>:

void calibrarBranco() // Função de Medir a cor Branca
{
 80009bc:	b580      	push	{r7, lr}
 80009be:	b084      	sub	sp, #16
 80009c0:	af00      	add	r7, sp, #0
	for(int i = 0; i<6; i++)
 80009c2:	2300      	movs	r3, #0
 80009c4:	60fb      	str	r3, [r7, #12]
 80009c6:	e018      	b.n	80009fa <calibrarBranco+0x3e>
	{
			selecionarPinoMux(i);
 80009c8:	68f8      	ldr	r0, [r7, #12]
 80009ca:	f7ff ffa1 	bl	8000910 <selecionarPinoMux>
			HAL_ADC_Start(&hadc1);
 80009ce:	482d      	ldr	r0, [pc, #180]	; (8000a84 <calibrarBranco+0xc8>)
 80009d0:	f001 f878 	bl	8001ac4 <HAL_ADC_Start>
			HAL_ADC_PollForConversion(&hadc1, HAL_MAX_DELAY);
 80009d4:	f04f 31ff 	mov.w	r1, #4294967295
 80009d8:	482a      	ldr	r0, [pc, #168]	; (8000a84 <calibrarBranco+0xc8>)
 80009da:	f001 f927 	bl	8001c2c <HAL_ADC_PollForConversion>
			corBranco[5-i] = HAL_ADC_GetValue(&hadc1);
 80009de:	4829      	ldr	r0, [pc, #164]	; (8000a84 <calibrarBranco+0xc8>)
 80009e0:	f001 f9af 	bl	8001d42 <HAL_ADC_GetValue>
 80009e4:	4602      	mov	r2, r0
 80009e6:	68fb      	ldr	r3, [r7, #12]
 80009e8:	f1c3 0305 	rsb	r3, r3, #5
 80009ec:	b291      	uxth	r1, r2
 80009ee:	4a26      	ldr	r2, [pc, #152]	; (8000a88 <calibrarBranco+0xcc>)
 80009f0:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
	for(int i = 0; i<6; i++)
 80009f4:	68fb      	ldr	r3, [r7, #12]
 80009f6:	3301      	adds	r3, #1
 80009f8:	60fb      	str	r3, [r7, #12]
 80009fa:	68fb      	ldr	r3, [r7, #12]
 80009fc:	2b05      	cmp	r3, #5
 80009fe:	dde3      	ble.n	80009c8 <calibrarBranco+0xc>
	}
	for(int j = 10; j<16; j++ )
 8000a00:	230a      	movs	r3, #10
 8000a02:	60bb      	str	r3, [r7, #8]
 8000a04:	e018      	b.n	8000a38 <calibrarBranco+0x7c>
	{
		selecionarPinoMux(j);
 8000a06:	68b8      	ldr	r0, [r7, #8]
 8000a08:	f7ff ff82 	bl	8000910 <selecionarPinoMux>
		HAL_ADC_Start(&hadc1);
 8000a0c:	481d      	ldr	r0, [pc, #116]	; (8000a84 <calibrarBranco+0xc8>)
 8000a0e:	f001 f859 	bl	8001ac4 <HAL_ADC_Start>
		HAL_ADC_PollForConversion(&hadc1, HAL_MAX_DELAY);
 8000a12:	f04f 31ff 	mov.w	r1, #4294967295
 8000a16:	481b      	ldr	r0, [pc, #108]	; (8000a84 <calibrarBranco+0xc8>)
 8000a18:	f001 f908 	bl	8001c2c <HAL_ADC_PollForConversion>
		corBranco[25-j] = HAL_ADC_GetValue(&hadc1);
 8000a1c:	4819      	ldr	r0, [pc, #100]	; (8000a84 <calibrarBranco+0xc8>)
 8000a1e:	f001 f990 	bl	8001d42 <HAL_ADC_GetValue>
 8000a22:	4602      	mov	r2, r0
 8000a24:	68bb      	ldr	r3, [r7, #8]
 8000a26:	f1c3 0319 	rsb	r3, r3, #25
 8000a2a:	b291      	uxth	r1, r2
 8000a2c:	4a16      	ldr	r2, [pc, #88]	; (8000a88 <calibrarBranco+0xcc>)
 8000a2e:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
	for(int j = 10; j<16; j++ )
 8000a32:	68bb      	ldr	r3, [r7, #8]
 8000a34:	3301      	adds	r3, #1
 8000a36:	60bb      	str	r3, [r7, #8]
 8000a38:	68bb      	ldr	r3, [r7, #8]
 8000a3a:	2b0f      	cmp	r3, #15
 8000a3c:	dde3      	ble.n	8000a06 <calibrarBranco+0x4a>
	}
	for(int k = 6; k<10; k++)
 8000a3e:	2306      	movs	r3, #6
 8000a40:	607b      	str	r3, [r7, #4]
 8000a42:	e016      	b.n	8000a72 <calibrarBranco+0xb6>
	{
		selecionarPinoMux(k);
 8000a44:	6878      	ldr	r0, [r7, #4]
 8000a46:	f7ff ff63 	bl	8000910 <selecionarPinoMux>
		HAL_ADC_Start(&hadc1);
 8000a4a:	480e      	ldr	r0, [pc, #56]	; (8000a84 <calibrarBranco+0xc8>)
 8000a4c:	f001 f83a 	bl	8001ac4 <HAL_ADC_Start>
		HAL_ADC_PollForConversion(&hadc1, HAL_MAX_DELAY);
 8000a50:	f04f 31ff 	mov.w	r1, #4294967295
 8000a54:	480b      	ldr	r0, [pc, #44]	; (8000a84 <calibrarBranco+0xc8>)
 8000a56:	f001 f8e9 	bl	8001c2c <HAL_ADC_PollForConversion>
		corBranco[k] = HAL_ADC_GetValue(&hadc1);
 8000a5a:	480a      	ldr	r0, [pc, #40]	; (8000a84 <calibrarBranco+0xc8>)
 8000a5c:	f001 f971 	bl	8001d42 <HAL_ADC_GetValue>
 8000a60:	4603      	mov	r3, r0
 8000a62:	b299      	uxth	r1, r3
 8000a64:	4a08      	ldr	r2, [pc, #32]	; (8000a88 <calibrarBranco+0xcc>)
 8000a66:	687b      	ldr	r3, [r7, #4]
 8000a68:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
	for(int k = 6; k<10; k++)
 8000a6c:	687b      	ldr	r3, [r7, #4]
 8000a6e:	3301      	adds	r3, #1
 8000a70:	607b      	str	r3, [r7, #4]
 8000a72:	687b      	ldr	r3, [r7, #4]
 8000a74:	2b09      	cmp	r3, #9
 8000a76:	dde5      	ble.n	8000a44 <calibrarBranco+0x88>
	}
}
 8000a78:	bf00      	nop
 8000a7a:	bf00      	nop
 8000a7c:	3710      	adds	r7, #16
 8000a7e:	46bd      	mov	sp, r7
 8000a80:	bd80      	pop	{r7, pc}
 8000a82:	bf00      	nop
 8000a84:	200002c8 	.word	0x200002c8
 8000a88:	20000400 	.word	0x20000400

08000a8c <calibrarPreto>:

void calibrarPreto() // Função de medir a cor Preta
{
 8000a8c:	b580      	push	{r7, lr}
 8000a8e:	b084      	sub	sp, #16
 8000a90:	af00      	add	r7, sp, #0
	for(int i = 0; i<6; i++)
 8000a92:	2300      	movs	r3, #0
 8000a94:	60fb      	str	r3, [r7, #12]
 8000a96:	e018      	b.n	8000aca <calibrarPreto+0x3e>
	{
		selecionarPinoMux(i);
 8000a98:	68f8      	ldr	r0, [r7, #12]
 8000a9a:	f7ff ff39 	bl	8000910 <selecionarPinoMux>
		HAL_ADC_Start(&hadc1);
 8000a9e:	482d      	ldr	r0, [pc, #180]	; (8000b54 <calibrarPreto+0xc8>)
 8000aa0:	f001 f810 	bl	8001ac4 <HAL_ADC_Start>
		HAL_ADC_PollForConversion(&hadc1, HAL_MAX_DELAY);
 8000aa4:	f04f 31ff 	mov.w	r1, #4294967295
 8000aa8:	482a      	ldr	r0, [pc, #168]	; (8000b54 <calibrarPreto+0xc8>)
 8000aaa:	f001 f8bf 	bl	8001c2c <HAL_ADC_PollForConversion>
		corPreto[5-i] = HAL_ADC_GetValue(&hadc1);
 8000aae:	4829      	ldr	r0, [pc, #164]	; (8000b54 <calibrarPreto+0xc8>)
 8000ab0:	f001 f947 	bl	8001d42 <HAL_ADC_GetValue>
 8000ab4:	4602      	mov	r2, r0
 8000ab6:	68fb      	ldr	r3, [r7, #12]
 8000ab8:	f1c3 0305 	rsb	r3, r3, #5
 8000abc:	b291      	uxth	r1, r2
 8000abe:	4a26      	ldr	r2, [pc, #152]	; (8000b58 <calibrarPreto+0xcc>)
 8000ac0:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
	for(int i = 0; i<6; i++)
 8000ac4:	68fb      	ldr	r3, [r7, #12]
 8000ac6:	3301      	adds	r3, #1
 8000ac8:	60fb      	str	r3, [r7, #12]
 8000aca:	68fb      	ldr	r3, [r7, #12]
 8000acc:	2b05      	cmp	r3, #5
 8000ace:	dde3      	ble.n	8000a98 <calibrarPreto+0xc>
	}
	for(int j = 10; j<16; j++ )
 8000ad0:	230a      	movs	r3, #10
 8000ad2:	60bb      	str	r3, [r7, #8]
 8000ad4:	e018      	b.n	8000b08 <calibrarPreto+0x7c>
	{
		selecionarPinoMux(j);
 8000ad6:	68b8      	ldr	r0, [r7, #8]
 8000ad8:	f7ff ff1a 	bl	8000910 <selecionarPinoMux>
		HAL_ADC_Start(&hadc1);
 8000adc:	481d      	ldr	r0, [pc, #116]	; (8000b54 <calibrarPreto+0xc8>)
 8000ade:	f000 fff1 	bl	8001ac4 <HAL_ADC_Start>
		HAL_ADC_PollForConversion(&hadc1, HAL_MAX_DELAY);
 8000ae2:	f04f 31ff 	mov.w	r1, #4294967295
 8000ae6:	481b      	ldr	r0, [pc, #108]	; (8000b54 <calibrarPreto+0xc8>)
 8000ae8:	f001 f8a0 	bl	8001c2c <HAL_ADC_PollForConversion>
		corPreto[25-j] = HAL_ADC_GetValue(&hadc1);
 8000aec:	4819      	ldr	r0, [pc, #100]	; (8000b54 <calibrarPreto+0xc8>)
 8000aee:	f001 f928 	bl	8001d42 <HAL_ADC_GetValue>
 8000af2:	4602      	mov	r2, r0
 8000af4:	68bb      	ldr	r3, [r7, #8]
 8000af6:	f1c3 0319 	rsb	r3, r3, #25
 8000afa:	b291      	uxth	r1, r2
 8000afc:	4a16      	ldr	r2, [pc, #88]	; (8000b58 <calibrarPreto+0xcc>)
 8000afe:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
	for(int j = 10; j<16; j++ )
 8000b02:	68bb      	ldr	r3, [r7, #8]
 8000b04:	3301      	adds	r3, #1
 8000b06:	60bb      	str	r3, [r7, #8]
 8000b08:	68bb      	ldr	r3, [r7, #8]
 8000b0a:	2b0f      	cmp	r3, #15
 8000b0c:	dde3      	ble.n	8000ad6 <calibrarPreto+0x4a>
	}
	for(int k = 6; k<10; k++)
 8000b0e:	2306      	movs	r3, #6
 8000b10:	607b      	str	r3, [r7, #4]
 8000b12:	e016      	b.n	8000b42 <calibrarPreto+0xb6>
	{
		selecionarPinoMux(k);
 8000b14:	6878      	ldr	r0, [r7, #4]
 8000b16:	f7ff fefb 	bl	8000910 <selecionarPinoMux>
		HAL_ADC_Start(&hadc1);
 8000b1a:	480e      	ldr	r0, [pc, #56]	; (8000b54 <calibrarPreto+0xc8>)
 8000b1c:	f000 ffd2 	bl	8001ac4 <HAL_ADC_Start>
		HAL_ADC_PollForConversion(&hadc1, HAL_MAX_DELAY);
 8000b20:	f04f 31ff 	mov.w	r1, #4294967295
 8000b24:	480b      	ldr	r0, [pc, #44]	; (8000b54 <calibrarPreto+0xc8>)
 8000b26:	f001 f881 	bl	8001c2c <HAL_ADC_PollForConversion>
		corPreto[k] = HAL_ADC_GetValue(&hadc1);
 8000b2a:	480a      	ldr	r0, [pc, #40]	; (8000b54 <calibrarPreto+0xc8>)
 8000b2c:	f001 f909 	bl	8001d42 <HAL_ADC_GetValue>
 8000b30:	4603      	mov	r3, r0
 8000b32:	b299      	uxth	r1, r3
 8000b34:	4a08      	ldr	r2, [pc, #32]	; (8000b58 <calibrarPreto+0xcc>)
 8000b36:	687b      	ldr	r3, [r7, #4]
 8000b38:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
	for(int k = 6; k<10; k++)
 8000b3c:	687b      	ldr	r3, [r7, #4]
 8000b3e:	3301      	adds	r3, #1
 8000b40:	607b      	str	r3, [r7, #4]
 8000b42:	687b      	ldr	r3, [r7, #4]
 8000b44:	2b09      	cmp	r3, #9
 8000b46:	dde5      	ble.n	8000b14 <calibrarPreto+0x88>
	}
}
 8000b48:	bf00      	nop
 8000b4a:	bf00      	nop
 8000b4c:	3710      	adds	r7, #16
 8000b4e:	46bd      	mov	sp, r7
 8000b50:	bd80      	pop	{r7, pc}
 8000b52:	bf00      	nop
 8000b54:	200002c8 	.word	0x200002c8
 8000b58:	20000420 	.word	0x20000420

08000b5c <calcularMediaSensores>:

void calcularMediaSensores() // Calculo Média das cores para calibração dos sensores
{
 8000b5c:	b480      	push	{r7}
 8000b5e:	b083      	sub	sp, #12
 8000b60:	af00      	add	r7, sp, #0
	for(int i = 0;i<16;i++)
 8000b62:	2300      	movs	r3, #0
 8000b64:	607b      	str	r3, [r7, #4]
 8000b66:	e014      	b.n	8000b92 <calcularMediaSensores+0x36>
	{
		mediaPB[i] = (corPreto[i]+ corBranco[i])/2;
 8000b68:	4a0f      	ldr	r2, [pc, #60]	; (8000ba8 <calcularMediaSensores+0x4c>)
 8000b6a:	687b      	ldr	r3, [r7, #4]
 8000b6c:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8000b70:	4619      	mov	r1, r3
 8000b72:	4a0e      	ldr	r2, [pc, #56]	; (8000bac <calcularMediaSensores+0x50>)
 8000b74:	687b      	ldr	r3, [r7, #4]
 8000b76:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8000b7a:	440b      	add	r3, r1
 8000b7c:	0fda      	lsrs	r2, r3, #31
 8000b7e:	4413      	add	r3, r2
 8000b80:	105b      	asrs	r3, r3, #1
 8000b82:	b299      	uxth	r1, r3
 8000b84:	4a0a      	ldr	r2, [pc, #40]	; (8000bb0 <calcularMediaSensores+0x54>)
 8000b86:	687b      	ldr	r3, [r7, #4]
 8000b88:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
	for(int i = 0;i<16;i++)
 8000b8c:	687b      	ldr	r3, [r7, #4]
 8000b8e:	3301      	adds	r3, #1
 8000b90:	607b      	str	r3, [r7, #4]
 8000b92:	687b      	ldr	r3, [r7, #4]
 8000b94:	2b0f      	cmp	r3, #15
 8000b96:	dde7      	ble.n	8000b68 <calcularMediaSensores+0xc>
	}
}
 8000b98:	bf00      	nop
 8000b9a:	bf00      	nop
 8000b9c:	370c      	adds	r7, #12
 8000b9e:	46bd      	mov	sp, r7
 8000ba0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000ba4:	4770      	bx	lr
 8000ba6:	bf00      	nop
 8000ba8:	20000420 	.word	0x20000420
 8000bac:	20000400 	.word	0x20000400
 8000bb0:	20000440 	.word	0x20000440

08000bb4 <aplicarCalibracao>:

void aplicarCalibracao() // Determina os valores digitais dos sensores apos calibração
{
 8000bb4:	b580      	push	{r7, lr}
 8000bb6:	b084      	sub	sp, #16
 8000bb8:	af00      	add	r7, sp, #0
	for(int i = 0; i<6; i++)
 8000bba:	2300      	movs	r3, #0
 8000bbc:	60fb      	str	r3, [r7, #12]
 8000bbe:	e05a      	b.n	8000c76 <aplicarCalibracao+0xc2>
	{
		selecionarPinoMux(i);
 8000bc0:	68f8      	ldr	r0, [r7, #12]
 8000bc2:	f7ff fea5 	bl	8000910 <selecionarPinoMux>
		HAL_ADC_Start(&hadc1);
 8000bc6:	4888      	ldr	r0, [pc, #544]	; (8000de8 <aplicarCalibracao+0x234>)
 8000bc8:	f000 ff7c 	bl	8001ac4 <HAL_ADC_Start>
		HAL_ADC_PollForConversion(&hadc1, HAL_MAX_DELAY);
 8000bcc:	f04f 31ff 	mov.w	r1, #4294967295
 8000bd0:	4885      	ldr	r0, [pc, #532]	; (8000de8 <aplicarCalibracao+0x234>)
 8000bd2:	f001 f82b 	bl	8001c2c <HAL_ADC_PollForConversion>
		valorSensor[5-i] = HAL_ADC_GetValue(&hadc1);
 8000bd6:	4884      	ldr	r0, [pc, #528]	; (8000de8 <aplicarCalibracao+0x234>)
 8000bd8:	f001 f8b3 	bl	8001d42 <HAL_ADC_GetValue>
 8000bdc:	4602      	mov	r2, r0
 8000bde:	68fb      	ldr	r3, [r7, #12]
 8000be0:	f1c3 0305 	rsb	r3, r3, #5
 8000be4:	b291      	uxth	r1, r2
 8000be6:	4a81      	ldr	r2, [pc, #516]	; (8000dec <aplicarCalibracao+0x238>)
 8000be8:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
		if(linha == 0)
 8000bec:	4b80      	ldr	r3, [pc, #512]	; (8000df0 <aplicarCalibracao+0x23c>)
 8000bee:	681b      	ldr	r3, [r3, #0]
 8000bf0:	2b00      	cmp	r3, #0
 8000bf2:	d11c      	bne.n	8000c2e <aplicarCalibracao+0x7a>
		{
			if(valorSensor[5-i] <= mediaPB[5-i])
 8000bf4:	68fb      	ldr	r3, [r7, #12]
 8000bf6:	f1c3 0305 	rsb	r3, r3, #5
 8000bfa:	4a7c      	ldr	r2, [pc, #496]	; (8000dec <aplicarCalibracao+0x238>)
 8000bfc:	f832 2013 	ldrh.w	r2, [r2, r3, lsl #1]
 8000c00:	68fb      	ldr	r3, [r7, #12]
 8000c02:	f1c3 0305 	rsb	r3, r3, #5
 8000c06:	497b      	ldr	r1, [pc, #492]	; (8000df4 <aplicarCalibracao+0x240>)
 8000c08:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8000c0c:	429a      	cmp	r2, r3
 8000c0e:	d807      	bhi.n	8000c20 <aplicarCalibracao+0x6c>
			{
				sensorDigital[5-i] = 0;
 8000c10:	68fb      	ldr	r3, [r7, #12]
 8000c12:	f1c3 0305 	rsb	r3, r3, #5
 8000c16:	4a78      	ldr	r2, [pc, #480]	; (8000df8 <aplicarCalibracao+0x244>)
 8000c18:	2100      	movs	r1, #0
 8000c1a:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
 8000c1e:	e006      	b.n	8000c2e <aplicarCalibracao+0x7a>
			}
			else
			{
				sensorDigital[5-i] = 1;
 8000c20:	68fb      	ldr	r3, [r7, #12]
 8000c22:	f1c3 0305 	rsb	r3, r3, #5
 8000c26:	4a74      	ldr	r2, [pc, #464]	; (8000df8 <aplicarCalibracao+0x244>)
 8000c28:	2101      	movs	r1, #1
 8000c2a:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
			}
		}
		if(linha == 1)
 8000c2e:	4b70      	ldr	r3, [pc, #448]	; (8000df0 <aplicarCalibracao+0x23c>)
 8000c30:	681b      	ldr	r3, [r3, #0]
 8000c32:	2b01      	cmp	r3, #1
 8000c34:	d11c      	bne.n	8000c70 <aplicarCalibracao+0xbc>
		{
			if(valorSensor[5-i] <= mediaPB[5-i])
 8000c36:	68fb      	ldr	r3, [r7, #12]
 8000c38:	f1c3 0305 	rsb	r3, r3, #5
 8000c3c:	4a6b      	ldr	r2, [pc, #428]	; (8000dec <aplicarCalibracao+0x238>)
 8000c3e:	f832 2013 	ldrh.w	r2, [r2, r3, lsl #1]
 8000c42:	68fb      	ldr	r3, [r7, #12]
 8000c44:	f1c3 0305 	rsb	r3, r3, #5
 8000c48:	496a      	ldr	r1, [pc, #424]	; (8000df4 <aplicarCalibracao+0x240>)
 8000c4a:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8000c4e:	429a      	cmp	r2, r3
 8000c50:	d807      	bhi.n	8000c62 <aplicarCalibracao+0xae>
			{
				sensorDigital[5-i] = 1;
 8000c52:	68fb      	ldr	r3, [r7, #12]
 8000c54:	f1c3 0305 	rsb	r3, r3, #5
 8000c58:	4a67      	ldr	r2, [pc, #412]	; (8000df8 <aplicarCalibracao+0x244>)
 8000c5a:	2101      	movs	r1, #1
 8000c5c:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
 8000c60:	e006      	b.n	8000c70 <aplicarCalibracao+0xbc>
			}
			else
			{
				sensorDigital[5-i] = 0;
 8000c62:	68fb      	ldr	r3, [r7, #12]
 8000c64:	f1c3 0305 	rsb	r3, r3, #5
 8000c68:	4a63      	ldr	r2, [pc, #396]	; (8000df8 <aplicarCalibracao+0x244>)
 8000c6a:	2100      	movs	r1, #0
 8000c6c:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
	for(int i = 0; i<6; i++)
 8000c70:	68fb      	ldr	r3, [r7, #12]
 8000c72:	3301      	adds	r3, #1
 8000c74:	60fb      	str	r3, [r7, #12]
 8000c76:	68fb      	ldr	r3, [r7, #12]
 8000c78:	2b05      	cmp	r3, #5
 8000c7a:	dda1      	ble.n	8000bc0 <aplicarCalibracao+0xc>
			}
		}
	}
	for(int j = 10; j<16; j++ )
 8000c7c:	230a      	movs	r3, #10
 8000c7e:	60bb      	str	r3, [r7, #8]
 8000c80:	e05a      	b.n	8000d38 <aplicarCalibracao+0x184>
	{
		selecionarPinoMux(j);
 8000c82:	68b8      	ldr	r0, [r7, #8]
 8000c84:	f7ff fe44 	bl	8000910 <selecionarPinoMux>
		HAL_ADC_Start(&hadc1);
 8000c88:	4857      	ldr	r0, [pc, #348]	; (8000de8 <aplicarCalibracao+0x234>)
 8000c8a:	f000 ff1b 	bl	8001ac4 <HAL_ADC_Start>
		HAL_ADC_PollForConversion(&hadc1, HAL_MAX_DELAY);
 8000c8e:	f04f 31ff 	mov.w	r1, #4294967295
 8000c92:	4855      	ldr	r0, [pc, #340]	; (8000de8 <aplicarCalibracao+0x234>)
 8000c94:	f000 ffca 	bl	8001c2c <HAL_ADC_PollForConversion>
		valorSensor[25-j] = HAL_ADC_GetValue(&hadc1);
 8000c98:	4853      	ldr	r0, [pc, #332]	; (8000de8 <aplicarCalibracao+0x234>)
 8000c9a:	f001 f852 	bl	8001d42 <HAL_ADC_GetValue>
 8000c9e:	4602      	mov	r2, r0
 8000ca0:	68bb      	ldr	r3, [r7, #8]
 8000ca2:	f1c3 0319 	rsb	r3, r3, #25
 8000ca6:	b291      	uxth	r1, r2
 8000ca8:	4a50      	ldr	r2, [pc, #320]	; (8000dec <aplicarCalibracao+0x238>)
 8000caa:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
		if(linha == 0)
 8000cae:	4b50      	ldr	r3, [pc, #320]	; (8000df0 <aplicarCalibracao+0x23c>)
 8000cb0:	681b      	ldr	r3, [r3, #0]
 8000cb2:	2b00      	cmp	r3, #0
 8000cb4:	d11c      	bne.n	8000cf0 <aplicarCalibracao+0x13c>
		{
			if(valorSensor[25-j] <= mediaPB[25-j])
 8000cb6:	68bb      	ldr	r3, [r7, #8]
 8000cb8:	f1c3 0319 	rsb	r3, r3, #25
 8000cbc:	4a4b      	ldr	r2, [pc, #300]	; (8000dec <aplicarCalibracao+0x238>)
 8000cbe:	f832 2013 	ldrh.w	r2, [r2, r3, lsl #1]
 8000cc2:	68bb      	ldr	r3, [r7, #8]
 8000cc4:	f1c3 0319 	rsb	r3, r3, #25
 8000cc8:	494a      	ldr	r1, [pc, #296]	; (8000df4 <aplicarCalibracao+0x240>)
 8000cca:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8000cce:	429a      	cmp	r2, r3
 8000cd0:	d807      	bhi.n	8000ce2 <aplicarCalibracao+0x12e>
			{
				sensorDigital[25-j] = 0;
 8000cd2:	68bb      	ldr	r3, [r7, #8]
 8000cd4:	f1c3 0319 	rsb	r3, r3, #25
 8000cd8:	4a47      	ldr	r2, [pc, #284]	; (8000df8 <aplicarCalibracao+0x244>)
 8000cda:	2100      	movs	r1, #0
 8000cdc:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
 8000ce0:	e006      	b.n	8000cf0 <aplicarCalibracao+0x13c>
			}
			else
			{
				sensorDigital[25-j] = 1;
 8000ce2:	68bb      	ldr	r3, [r7, #8]
 8000ce4:	f1c3 0319 	rsb	r3, r3, #25
 8000ce8:	4a43      	ldr	r2, [pc, #268]	; (8000df8 <aplicarCalibracao+0x244>)
 8000cea:	2101      	movs	r1, #1
 8000cec:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
			}
		}
		if(linha == 1)
 8000cf0:	4b3f      	ldr	r3, [pc, #252]	; (8000df0 <aplicarCalibracao+0x23c>)
 8000cf2:	681b      	ldr	r3, [r3, #0]
 8000cf4:	2b01      	cmp	r3, #1
 8000cf6:	d11c      	bne.n	8000d32 <aplicarCalibracao+0x17e>
		{
			if(valorSensor[25-j] <= mediaPB[25-j])
 8000cf8:	68bb      	ldr	r3, [r7, #8]
 8000cfa:	f1c3 0319 	rsb	r3, r3, #25
 8000cfe:	4a3b      	ldr	r2, [pc, #236]	; (8000dec <aplicarCalibracao+0x238>)
 8000d00:	f832 2013 	ldrh.w	r2, [r2, r3, lsl #1]
 8000d04:	68bb      	ldr	r3, [r7, #8]
 8000d06:	f1c3 0319 	rsb	r3, r3, #25
 8000d0a:	493a      	ldr	r1, [pc, #232]	; (8000df4 <aplicarCalibracao+0x240>)
 8000d0c:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8000d10:	429a      	cmp	r2, r3
 8000d12:	d807      	bhi.n	8000d24 <aplicarCalibracao+0x170>
			{
				sensorDigital[25-j] = 0;
 8000d14:	68bb      	ldr	r3, [r7, #8]
 8000d16:	f1c3 0319 	rsb	r3, r3, #25
 8000d1a:	4a37      	ldr	r2, [pc, #220]	; (8000df8 <aplicarCalibracao+0x244>)
 8000d1c:	2100      	movs	r1, #0
 8000d1e:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
 8000d22:	e006      	b.n	8000d32 <aplicarCalibracao+0x17e>
			}
			else
			{
				sensorDigital[25-j] = 1;
 8000d24:	68bb      	ldr	r3, [r7, #8]
 8000d26:	f1c3 0319 	rsb	r3, r3, #25
 8000d2a:	4a33      	ldr	r2, [pc, #204]	; (8000df8 <aplicarCalibracao+0x244>)
 8000d2c:	2101      	movs	r1, #1
 8000d2e:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
	for(int j = 10; j<16; j++ )
 8000d32:	68bb      	ldr	r3, [r7, #8]
 8000d34:	3301      	adds	r3, #1
 8000d36:	60bb      	str	r3, [r7, #8]
 8000d38:	68bb      	ldr	r3, [r7, #8]
 8000d3a:	2b0f      	cmp	r3, #15
 8000d3c:	dda1      	ble.n	8000c82 <aplicarCalibracao+0xce>
			}
		}
	}
	for(int k = 6; k<10; k++)
 8000d3e:	2306      	movs	r3, #6
 8000d40:	607b      	str	r3, [r7, #4]
 8000d42:	e048      	b.n	8000dd6 <aplicarCalibracao+0x222>
	{
		selecionarPinoMux(k);
 8000d44:	6878      	ldr	r0, [r7, #4]
 8000d46:	f7ff fde3 	bl	8000910 <selecionarPinoMux>
		HAL_ADC_Start(&hadc1);
 8000d4a:	4827      	ldr	r0, [pc, #156]	; (8000de8 <aplicarCalibracao+0x234>)
 8000d4c:	f000 feba 	bl	8001ac4 <HAL_ADC_Start>
		HAL_ADC_PollForConversion(&hadc1, HAL_MAX_DELAY);
 8000d50:	f04f 31ff 	mov.w	r1, #4294967295
 8000d54:	4824      	ldr	r0, [pc, #144]	; (8000de8 <aplicarCalibracao+0x234>)
 8000d56:	f000 ff69 	bl	8001c2c <HAL_ADC_PollForConversion>
		valorSensor[k] = HAL_ADC_GetValue(&hadc1);
 8000d5a:	4823      	ldr	r0, [pc, #140]	; (8000de8 <aplicarCalibracao+0x234>)
 8000d5c:	f000 fff1 	bl	8001d42 <HAL_ADC_GetValue>
 8000d60:	4603      	mov	r3, r0
 8000d62:	b299      	uxth	r1, r3
 8000d64:	4a21      	ldr	r2, [pc, #132]	; (8000dec <aplicarCalibracao+0x238>)
 8000d66:	687b      	ldr	r3, [r7, #4]
 8000d68:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
		if(linha == 0)
 8000d6c:	4b20      	ldr	r3, [pc, #128]	; (8000df0 <aplicarCalibracao+0x23c>)
 8000d6e:	681b      	ldr	r3, [r3, #0]
 8000d70:	2b00      	cmp	r3, #0
 8000d72:	d114      	bne.n	8000d9e <aplicarCalibracao+0x1ea>
		{
			if(valorSensor[k] <= mediaPB[k])
 8000d74:	4a1d      	ldr	r2, [pc, #116]	; (8000dec <aplicarCalibracao+0x238>)
 8000d76:	687b      	ldr	r3, [r7, #4]
 8000d78:	f832 2013 	ldrh.w	r2, [r2, r3, lsl #1]
 8000d7c:	491d      	ldr	r1, [pc, #116]	; (8000df4 <aplicarCalibracao+0x240>)
 8000d7e:	687b      	ldr	r3, [r7, #4]
 8000d80:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8000d84:	429a      	cmp	r2, r3
 8000d86:	d805      	bhi.n	8000d94 <aplicarCalibracao+0x1e0>
			{
				sensorDigital[k] = 0;
 8000d88:	4a1b      	ldr	r2, [pc, #108]	; (8000df8 <aplicarCalibracao+0x244>)
 8000d8a:	687b      	ldr	r3, [r7, #4]
 8000d8c:	2100      	movs	r1, #0
 8000d8e:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
 8000d92:	e004      	b.n	8000d9e <aplicarCalibracao+0x1ea>
			}
			else
			{
				sensorDigital[k] = 1;
 8000d94:	4a18      	ldr	r2, [pc, #96]	; (8000df8 <aplicarCalibracao+0x244>)
 8000d96:	687b      	ldr	r3, [r7, #4]
 8000d98:	2101      	movs	r1, #1
 8000d9a:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
			}
		}
		if(linha == 1)
 8000d9e:	4b14      	ldr	r3, [pc, #80]	; (8000df0 <aplicarCalibracao+0x23c>)
 8000da0:	681b      	ldr	r3, [r3, #0]
 8000da2:	2b01      	cmp	r3, #1
 8000da4:	d114      	bne.n	8000dd0 <aplicarCalibracao+0x21c>
		{
			if(valorSensor[k] <= mediaPB[k])
 8000da6:	4a11      	ldr	r2, [pc, #68]	; (8000dec <aplicarCalibracao+0x238>)
 8000da8:	687b      	ldr	r3, [r7, #4]
 8000daa:	f832 2013 	ldrh.w	r2, [r2, r3, lsl #1]
 8000dae:	4911      	ldr	r1, [pc, #68]	; (8000df4 <aplicarCalibracao+0x240>)
 8000db0:	687b      	ldr	r3, [r7, #4]
 8000db2:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8000db6:	429a      	cmp	r2, r3
 8000db8:	d805      	bhi.n	8000dc6 <aplicarCalibracao+0x212>
			{
				sensorDigital[k] = 1;
 8000dba:	4a0f      	ldr	r2, [pc, #60]	; (8000df8 <aplicarCalibracao+0x244>)
 8000dbc:	687b      	ldr	r3, [r7, #4]
 8000dbe:	2101      	movs	r1, #1
 8000dc0:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
 8000dc4:	e004      	b.n	8000dd0 <aplicarCalibracao+0x21c>
			}
			else
			{
				sensorDigital[k] = 0;
 8000dc6:	4a0c      	ldr	r2, [pc, #48]	; (8000df8 <aplicarCalibracao+0x244>)
 8000dc8:	687b      	ldr	r3, [r7, #4]
 8000dca:	2100      	movs	r1, #0
 8000dcc:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
	for(int k = 6; k<10; k++)
 8000dd0:	687b      	ldr	r3, [r7, #4]
 8000dd2:	3301      	adds	r3, #1
 8000dd4:	607b      	str	r3, [r7, #4]
 8000dd6:	687b      	ldr	r3, [r7, #4]
 8000dd8:	2b09      	cmp	r3, #9
 8000dda:	ddb3      	ble.n	8000d44 <aplicarCalibracao+0x190>
			}
		}
	}
}
 8000ddc:	bf00      	nop
 8000dde:	bf00      	nop
 8000de0:	3710      	adds	r7, #16
 8000de2:	46bd      	mov	sp, r7
 8000de4:	bd80      	pop	{r7, pc}
 8000de6:	bf00      	nop
 8000de8:	200002c8 	.word	0x200002c8
 8000dec:	200003a0 	.word	0x200003a0
 8000df0:	2000046c 	.word	0x2000046c
 8000df4:	20000440 	.word	0x20000440
 8000df8:	200003c0 	.word	0x200003c0

08000dfc <leituraLinha>:

void leituraLinha() // Retorna Valor da média ponderada para utilizar no PID
{
 8000dfc:	b580      	push	{r7, lr}
 8000dfe:	b084      	sub	sp, #16
 8000e00:	af00      	add	r7, sp, #0
	    /*Definindo e resetando variaveis*/

	    int num = 0; // numerador
 8000e02:	2300      	movs	r3, #0
 8000e04:	60fb      	str	r3, [r7, #12]
	    int den = 0; // denominador
 8000e06:	2300      	movs	r3, #0
 8000e08:	60bb      	str	r3, [r7, #8]
	    pos = 0;
 8000e0a:	4b1a      	ldr	r3, [pc, #104]	; (8000e74 <leituraLinha+0x78>)
 8000e0c:	2200      	movs	r2, #0
 8000e0e:	801a      	strh	r2, [r3, #0]


	    for(int i = 0; i < 16; i++) {
 8000e10:	2300      	movs	r3, #0
 8000e12:	607b      	str	r3, [r7, #4]
 8000e14:	e016      	b.n	8000e44 <leituraLinha+0x48>
	        // soma ponderada
	        num += sensorDigital[i] * peso[i];
 8000e16:	4a18      	ldr	r2, [pc, #96]	; (8000e78 <leituraLinha+0x7c>)
 8000e18:	687b      	ldr	r3, [r7, #4]
 8000e1a:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8000e1e:	4917      	ldr	r1, [pc, #92]	; (8000e7c <leituraLinha+0x80>)
 8000e20:	687a      	ldr	r2, [r7, #4]
 8000e22:	f831 2012 	ldrh.w	r2, [r1, r2, lsl #1]
 8000e26:	fb02 f303 	mul.w	r3, r2, r3
 8000e2a:	68fa      	ldr	r2, [r7, #12]
 8000e2c:	4413      	add	r3, r2
 8000e2e:	60fb      	str	r3, [r7, #12]
	        den += sensorDigital[i];
 8000e30:	4a11      	ldr	r2, [pc, #68]	; (8000e78 <leituraLinha+0x7c>)
 8000e32:	687b      	ldr	r3, [r7, #4]
 8000e34:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8000e38:	68ba      	ldr	r2, [r7, #8]
 8000e3a:	4413      	add	r3, r2
 8000e3c:	60bb      	str	r3, [r7, #8]
	    for(int i = 0; i < 16; i++) {
 8000e3e:	687b      	ldr	r3, [r7, #4]
 8000e40:	3301      	adds	r3, #1
 8000e42:	607b      	str	r3, [r7, #4]
 8000e44:	687b      	ldr	r3, [r7, #4]
 8000e46:	2b0f      	cmp	r3, #15
 8000e48:	dde5      	ble.n	8000e16 <leituraLinha+0x1a>
	    }

	    if (den != 0) {
 8000e4a:	68bb      	ldr	r3, [r7, #8]
 8000e4c:	2b00      	cmp	r3, #0
 8000e4e:	d007      	beq.n	8000e60 <leituraLinha+0x64>
	        pos = (num / den);
 8000e50:	68fa      	ldr	r2, [r7, #12]
 8000e52:	68bb      	ldr	r3, [r7, #8]
 8000e54:	fb92 f3f3 	sdiv	r3, r2, r3
 8000e58:	b29a      	uxth	r2, r3
 8000e5a:	4b06      	ldr	r3, [pc, #24]	; (8000e74 <leituraLinha+0x78>)
 8000e5c:	801a      	strh	r2, [r3, #0]
	       // LCD_print(pos,1, 6);
	    } else {
	    	LCD_print("erro0", 3, 0);
	    }

}
 8000e5e:	e004      	b.n	8000e6a <leituraLinha+0x6e>
	    	LCD_print("erro0", 3, 0);
 8000e60:	2200      	movs	r2, #0
 8000e62:	2103      	movs	r1, #3
 8000e64:	4806      	ldr	r0, [pc, #24]	; (8000e80 <leituraLinha+0x84>)
 8000e66:	f7ff fce9 	bl	800083c <LCD_print>
}
 8000e6a:	bf00      	nop
 8000e6c:	3710      	adds	r7, #16
 8000e6e:	46bd      	mov	sp, r7
 8000e70:	bd80      	pop	{r7, pc}
 8000e72:	bf00      	nop
 8000e74:	20000468 	.word	0x20000468
 8000e78:	200003c0 	.word	0x200003c0
 8000e7c:	20000004 	.word	0x20000004
 8000e80:	08004258 	.word	0x08004258

08000e84 <PID>:

void PID(){
 8000e84:	b480      	push	{r7}
 8000e86:	af00      	add	r7, sp, #0
	/* Essa função atualiza os valores das variáveis PWMA e PWMB, as variáveis veloA e veloB forma a velocidade base

	 */
                         error = (pos -750);
 8000e88:	4b3c      	ldr	r3, [pc, #240]	; (8000f7c <PID+0xf8>)
 8000e8a:	881b      	ldrh	r3, [r3, #0]
 8000e8c:	f2a3 23ee 	subw	r3, r3, #750	; 0x2ee
 8000e90:	4a3b      	ldr	r2, [pc, #236]	; (8000f80 <PID+0xfc>)
 8000e92:	6013      	str	r3, [r2, #0]
                         propo= error;                         //função proporcional
 8000e94:	4b3a      	ldr	r3, [pc, #232]	; (8000f80 <PID+0xfc>)
 8000e96:	681b      	ldr	r3, [r3, #0]
 8000e98:	4a3a      	ldr	r2, [pc, #232]	; (8000f84 <PID+0x100>)
 8000e9a:	6013      	str	r3, [r2, #0]
                         deriv=propo-ultimopropo;             //função derivativo
 8000e9c:	4b39      	ldr	r3, [pc, #228]	; (8000f84 <PID+0x100>)
 8000e9e:	681b      	ldr	r3, [r3, #0]
 8000ea0:	4a39      	ldr	r2, [pc, #228]	; (8000f88 <PID+0x104>)
 8000ea2:	8812      	ldrh	r2, [r2, #0]
 8000ea4:	1a9b      	subs	r3, r3, r2
 8000ea6:	4a39      	ldr	r2, [pc, #228]	; (8000f8c <PID+0x108>)
 8000ea8:	6013      	str	r3, [r2, #0]
                         integral=propo+deriv;                //função integral
 8000eaa:	4b36      	ldr	r3, [pc, #216]	; (8000f84 <PID+0x100>)
 8000eac:	681b      	ldr	r3, [r3, #0]
 8000eae:	b29a      	uxth	r2, r3
 8000eb0:	4b36      	ldr	r3, [pc, #216]	; (8000f8c <PID+0x108>)
 8000eb2:	681b      	ldr	r3, [r3, #0]
 8000eb4:	b29b      	uxth	r3, r3
 8000eb6:	4413      	add	r3, r2
 8000eb8:	b29a      	uxth	r2, r3
 8000eba:	4b35      	ldr	r3, [pc, #212]	; (8000f90 <PID+0x10c>)
 8000ebc:	801a      	strh	r2, [r3, #0]
                         ultimopropo=propo;
 8000ebe:	4b31      	ldr	r3, [pc, #196]	; (8000f84 <PID+0x100>)
 8000ec0:	681b      	ldr	r3, [r3, #0]
 8000ec2:	b29a      	uxth	r2, r3
 8000ec4:	4b30      	ldr	r3, [pc, #192]	; (8000f88 <PID+0x104>)
 8000ec6:	801a      	strh	r2, [r3, #0]

                         PWMA =(Velo1 +((Kp*propo)+(deriv*Kd)+(integral*Ki)));
 8000ec8:	4b32      	ldr	r3, [pc, #200]	; (8000f94 <PID+0x110>)
 8000eca:	881b      	ldrh	r3, [r3, #0]
 8000ecc:	4619      	mov	r1, r3
 8000ece:	4b32      	ldr	r3, [pc, #200]	; (8000f98 <PID+0x114>)
 8000ed0:	881b      	ldrh	r3, [r3, #0]
 8000ed2:	461a      	mov	r2, r3
 8000ed4:	4b2b      	ldr	r3, [pc, #172]	; (8000f84 <PID+0x100>)
 8000ed6:	681b      	ldr	r3, [r3, #0]
 8000ed8:	fb03 f202 	mul.w	r2, r3, r2
 8000edc:	4b2f      	ldr	r3, [pc, #188]	; (8000f9c <PID+0x118>)
 8000ede:	881b      	ldrh	r3, [r3, #0]
 8000ee0:	4618      	mov	r0, r3
 8000ee2:	4b2a      	ldr	r3, [pc, #168]	; (8000f8c <PID+0x108>)
 8000ee4:	681b      	ldr	r3, [r3, #0]
 8000ee6:	fb00 f303 	mul.w	r3, r0, r3
 8000eea:	441a      	add	r2, r3
 8000eec:	4b28      	ldr	r3, [pc, #160]	; (8000f90 <PID+0x10c>)
 8000eee:	881b      	ldrh	r3, [r3, #0]
 8000ef0:	4618      	mov	r0, r3
 8000ef2:	4b2b      	ldr	r3, [pc, #172]	; (8000fa0 <PID+0x11c>)
 8000ef4:	881b      	ldrh	r3, [r3, #0]
 8000ef6:	fb00 f303 	mul.w	r3, r0, r3
 8000efa:	4413      	add	r3, r2
 8000efc:	440b      	add	r3, r1
 8000efe:	461a      	mov	r2, r3
 8000f00:	4b28      	ldr	r3, [pc, #160]	; (8000fa4 <PID+0x120>)
 8000f02:	601a      	str	r2, [r3, #0]
                         PWMB =(Velo2 -((Kp*propo)+(deriv*Kd)+(integral*Ki)));
 8000f04:	4b28      	ldr	r3, [pc, #160]	; (8000fa8 <PID+0x124>)
 8000f06:	881b      	ldrh	r3, [r3, #0]
 8000f08:	4619      	mov	r1, r3
 8000f0a:	4b23      	ldr	r3, [pc, #140]	; (8000f98 <PID+0x114>)
 8000f0c:	881b      	ldrh	r3, [r3, #0]
 8000f0e:	461a      	mov	r2, r3
 8000f10:	4b1c      	ldr	r3, [pc, #112]	; (8000f84 <PID+0x100>)
 8000f12:	681b      	ldr	r3, [r3, #0]
 8000f14:	fb03 f202 	mul.w	r2, r3, r2
 8000f18:	4b20      	ldr	r3, [pc, #128]	; (8000f9c <PID+0x118>)
 8000f1a:	881b      	ldrh	r3, [r3, #0]
 8000f1c:	4618      	mov	r0, r3
 8000f1e:	4b1b      	ldr	r3, [pc, #108]	; (8000f8c <PID+0x108>)
 8000f20:	681b      	ldr	r3, [r3, #0]
 8000f22:	fb00 f303 	mul.w	r3, r0, r3
 8000f26:	441a      	add	r2, r3
 8000f28:	4b19      	ldr	r3, [pc, #100]	; (8000f90 <PID+0x10c>)
 8000f2a:	881b      	ldrh	r3, [r3, #0]
 8000f2c:	4618      	mov	r0, r3
 8000f2e:	4b1c      	ldr	r3, [pc, #112]	; (8000fa0 <PID+0x11c>)
 8000f30:	881b      	ldrh	r3, [r3, #0]
 8000f32:	fb00 f303 	mul.w	r3, r0, r3
 8000f36:	4413      	add	r3, r2
 8000f38:	1acb      	subs	r3, r1, r3
 8000f3a:	461a      	mov	r2, r3
 8000f3c:	4b1b      	ldr	r3, [pc, #108]	; (8000fac <PID+0x128>)
 8000f3e:	601a      	str	r2, [r3, #0]

                         if(PWMA>velomax){
 8000f40:	4b1b      	ldr	r3, [pc, #108]	; (8000fb0 <PID+0x12c>)
 8000f42:	881b      	ldrh	r3, [r3, #0]
 8000f44:	461a      	mov	r2, r3
 8000f46:	4b17      	ldr	r3, [pc, #92]	; (8000fa4 <PID+0x120>)
 8000f48:	681b      	ldr	r3, [r3, #0]
 8000f4a:	429a      	cmp	r2, r3
 8000f4c:	d204      	bcs.n	8000f58 <PID+0xd4>
                        	 PWMA=velomax;
 8000f4e:	4b18      	ldr	r3, [pc, #96]	; (8000fb0 <PID+0x12c>)
 8000f50:	881b      	ldrh	r3, [r3, #0]
 8000f52:	461a      	mov	r2, r3
 8000f54:	4b13      	ldr	r3, [pc, #76]	; (8000fa4 <PID+0x120>)
 8000f56:	601a      	str	r2, [r3, #0]
                         }
                         if(PWMB>velomax){
 8000f58:	4b15      	ldr	r3, [pc, #84]	; (8000fb0 <PID+0x12c>)
 8000f5a:	881b      	ldrh	r3, [r3, #0]
 8000f5c:	461a      	mov	r2, r3
 8000f5e:	4b13      	ldr	r3, [pc, #76]	; (8000fac <PID+0x128>)
 8000f60:	681b      	ldr	r3, [r3, #0]
 8000f62:	429a      	cmp	r2, r3
 8000f64:	d204      	bcs.n	8000f70 <PID+0xec>
                        	 PWMB=velomax;
 8000f66:	4b12      	ldr	r3, [pc, #72]	; (8000fb0 <PID+0x12c>)
 8000f68:	881b      	ldrh	r3, [r3, #0]
 8000f6a:	461a      	mov	r2, r3
 8000f6c:	4b0f      	ldr	r3, [pc, #60]	; (8000fac <PID+0x128>)
 8000f6e:	601a      	str	r2, [r3, #0]
                         }

}
 8000f70:	bf00      	nop
 8000f72:	46bd      	mov	sp, r7
 8000f74:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000f78:	4770      	bx	lr
 8000f7a:	bf00      	nop
 8000f7c:	20000468 	.word	0x20000468
 8000f80:	20000484 	.word	0x20000484
 8000f84:	2000048c 	.word	0x2000048c
 8000f88:	20000496 	.word	0x20000496
 8000f8c:	20000490 	.word	0x20000490
 8000f90:	20000494 	.word	0x20000494
 8000f94:	20000026 	.word	0x20000026
 8000f98:	20000024 	.word	0x20000024
 8000f9c:	20000488 	.word	0x20000488
 8000fa0:	2000048a 	.word	0x2000048a
 8000fa4:	20000460 	.word	0x20000460
 8000fa8:	20000028 	.word	0x20000028
 8000fac:	20000464 	.word	0x20000464
 8000fb0:	2000002a 	.word	0x2000002a

08000fb4 <setPWM>:
void setPWM()
{
 8000fb4:	b480      	push	{r7}
 8000fb6:	af00      	add	r7, sp, #0

	TIM2->CCR2= PWMA;
 8000fb8:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8000fbc:	4b05      	ldr	r3, [pc, #20]	; (8000fd4 <setPWM+0x20>)
 8000fbe:	681b      	ldr	r3, [r3, #0]
 8000fc0:	6393      	str	r3, [r2, #56]	; 0x38
	TIM1->CCR1 = PWMB;
 8000fc2:	4a05      	ldr	r2, [pc, #20]	; (8000fd8 <setPWM+0x24>)
 8000fc4:	4b05      	ldr	r3, [pc, #20]	; (8000fdc <setPWM+0x28>)
 8000fc6:	681b      	ldr	r3, [r3, #0]
 8000fc8:	6353      	str	r3, [r2, #52]	; 0x34

}
 8000fca:	bf00      	nop
 8000fcc:	46bd      	mov	sp, r7
 8000fce:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000fd2:	4770      	bx	lr
 8000fd4:	20000460 	.word	0x20000460
 8000fd8:	40010000 	.word	0x40010000
 8000fdc:	20000464 	.word	0x20000464

08000fe0 <ligarMotorA>:

void ligarMotorA() // Motor A-> Esquerda
{
 8000fe0:	b580      	push	{r7, lr}
 8000fe2:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(STBY_GPIO_Port,STBY_Pin, GPIO_PIN_SET);
 8000fe4:	2201      	movs	r2, #1
 8000fe6:	f44f 6100 	mov.w	r1, #2048	; 0x800
 8000fea:	4808      	ldr	r0, [pc, #32]	; (800100c <ligarMotorA+0x2c>)
 8000fec:	f001 fb7a 	bl	80026e4 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(AI1_GPIO_Port,AI1_Pin, GPIO_PIN_SET);
 8000ff0:	2201      	movs	r2, #1
 8000ff2:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8000ff6:	4805      	ldr	r0, [pc, #20]	; (800100c <ligarMotorA+0x2c>)
 8000ff8:	f001 fb74 	bl	80026e4 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(AI2_GPIO_Port,AI2_Pin, GPIO_PIN_RESET);
 8000ffc:	2200      	movs	r2, #0
 8000ffe:	f44f 7100 	mov.w	r1, #512	; 0x200
 8001002:	4802      	ldr	r0, [pc, #8]	; (800100c <ligarMotorA+0x2c>)
 8001004:	f001 fb6e 	bl	80026e4 <HAL_GPIO_WritePin>
}
 8001008:	bf00      	nop
 800100a:	bd80      	pop	{r7, pc}
 800100c:	40020000 	.word	0x40020000

08001010 <ligarMotorB>:

void ligarMotorB() // Motor B-> Direita
{
 8001010:	b580      	push	{r7, lr}
 8001012:	af00      	add	r7, sp, #0

	HAL_GPIO_WritePin(BI1_GPIO_Port,BI1_Pin, GPIO_PIN_SET);
 8001014:	2201      	movs	r2, #1
 8001016:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 800101a:	4805      	ldr	r0, [pc, #20]	; (8001030 <ligarMotorB+0x20>)
 800101c:	f001 fb62 	bl	80026e4 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(BI2_GPIO_Port,BI2_Pin, GPIO_PIN_RESET);
 8001020:	2200      	movs	r2, #0
 8001022:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 8001026:	4802      	ldr	r0, [pc, #8]	; (8001030 <ligarMotorB+0x20>)
 8001028:	f001 fb5c 	bl	80026e4 <HAL_GPIO_WritePin>
}
 800102c:	bf00      	nop
 800102e:	bd80      	pop	{r7, pc}
 8001030:	40020000 	.word	0x40020000

08001034 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8001034:	b580      	push	{r7, lr}
 8001036:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8001038:	f000 fc6a 	bl	8001910 <HAL_Init>

  /* USER CODE BEGIN Init */
  LCD_setRST(RST_GPIO_Port, RST_Pin);
 800103c:	2104      	movs	r1, #4
 800103e:	483f      	ldr	r0, [pc, #252]	; (800113c <main+0x108>)
 8001040:	f7ff fa9c 	bl	800057c <LCD_setRST>
  LCD_setCE(CE_GPIO_Port, CE_Pin);
 8001044:	2102      	movs	r1, #2
 8001046:	483d      	ldr	r0, [pc, #244]	; (800113c <main+0x108>)
 8001048:	f7ff faac 	bl	80005a4 <LCD_setCE>
  LCD_setDC(DC_GPIO_Port, DC_Pin);
 800104c:	2101      	movs	r1, #1
 800104e:	483b      	ldr	r0, [pc, #236]	; (800113c <main+0x108>)
 8001050:	f7ff fabc 	bl	80005cc <LCD_setDC>
  LCD_setDIN(DIN_GPIO_Port, DIN_Pin);
 8001054:	2180      	movs	r1, #128	; 0x80
 8001056:	483a      	ldr	r0, [pc, #232]	; (8001140 <main+0x10c>)
 8001058:	f7ff facc 	bl	80005f4 <LCD_setDIN>
  LCD_setCLK(CLK_GPIO_Port, CLK_Pin);
 800105c:	2120      	movs	r1, #32
 800105e:	4838      	ldr	r0, [pc, #224]	; (8001140 <main+0x10c>)
 8001060:	f7ff fadc 	bl	800061c <LCD_setCLK>

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8001064:	f000 f884 	bl	8001170 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8001068:	f000 fa0e 	bl	8001488 <MX_GPIO_Init>
  MX_ADC1_Init();
 800106c:	f000 f8de 	bl	800122c <MX_ADC1_Init>
  MX_TIM1_Init();
 8001070:	f000 f92e 	bl	80012d0 <MX_TIM1_Init>
  MX_TIM2_Init();
 8001074:	f000 f9b0 	bl	80013d8 <MX_TIM2_Init>
  /* USER CODE BEGIN 2 */
  LCD_init();
 8001078:	f7ff fb68 	bl	800074c <LCD_init>

 // HAL_ADC_Start_DMA(&hadc1, &readValue, 1);
  HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_2);
 800107c:	2104      	movs	r1, #4
 800107e:	4831      	ldr	r0, [pc, #196]	; (8001144 <main+0x110>)
 8001080:	f001 ffd6 	bl	8003030 <HAL_TIM_PWM_Start>
  HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_1);
 8001084:	2100      	movs	r1, #0
 8001086:	4830      	ldr	r0, [pc, #192]	; (8001148 <main+0x114>)
 8001088:	f001 ffd2 	bl	8003030 <HAL_TIM_PWM_Start>
  HAL_GPIO_WritePin(EN_GPIO_Port,EN_Pin, GPIO_PIN_RESET); // EN do MUX como 0
 800108c:	2200      	movs	r2, #0
 800108e:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 8001092:	482e      	ldr	r0, [pc, #184]	; (800114c <main+0x118>)
 8001094:	f001 fb26 	bl	80026e4 <HAL_GPIO_WritePin>
  while (1)
  {
    /* USER CODE END WHILE */

    /* USER CODE BEGIN 3 */
	  switch(mode)
 8001098:	4b2d      	ldr	r3, [pc, #180]	; (8001150 <main+0x11c>)
 800109a:	781b      	ldrb	r3, [r3, #0]
 800109c:	2b01      	cmp	r3, #1
 800109e:	d002      	beq.n	80010a6 <main+0x72>
 80010a0:	2b02      	cmp	r3, #2
 80010a2:	d035      	beq.n	8001110 <main+0xdc>
 80010a4:	e7f8      	b.n	8001098 <main+0x64>
	  {
	  	 case 1:

	  		LCD_print("CalibrarPreto", 0, 0);
 80010a6:	2200      	movs	r2, #0
 80010a8:	2100      	movs	r1, #0
 80010aa:	482a      	ldr	r0, [pc, #168]	; (8001154 <main+0x120>)
 80010ac:	f7ff fbc6 	bl	800083c <LCD_print>
	  		HAL_Delay(5000);
 80010b0:	f241 3088 	movw	r0, #5000	; 0x1388
 80010b4:	f000 fc9e 	bl	80019f4 <HAL_Delay>
	  		calibrarPreto();
 80010b8:	f7ff fce8 	bl	8000a8c <calibrarPreto>
	  		LCD_print("CalibrarBranco", 0, 0);
 80010bc:	2200      	movs	r2, #0
 80010be:	2100      	movs	r1, #0
 80010c0:	4825      	ldr	r0, [pc, #148]	; (8001158 <main+0x124>)
 80010c2:	f7ff fbbb 	bl	800083c <LCD_print>
	  		HAL_Delay(5000);
 80010c6:	f241 3088 	movw	r0, #5000	; 0x1388
 80010ca:	f000 fc93 	bl	80019f4 <HAL_Delay>
	  		calibrarBranco();
 80010ce:	f7ff fc75 	bl	80009bc <calibrarBranco>
	  		calcularMediaSensores();
 80010d2:	f7ff fd43 	bl	8000b5c <calcularMediaSensores>
  		    ligarMotorA();
 80010d6:	f7ff ff83 	bl	8000fe0 <ligarMotorA>
  		    ligarMotorB();
 80010da:	f7ff ff99 	bl	8001010 <ligarMotorB>
	  		mode++;
 80010de:	4b1c      	ldr	r3, [pc, #112]	; (8001150 <main+0x11c>)
 80010e0:	781b      	ldrb	r3, [r3, #0]
 80010e2:	3301      	adds	r3, #1
 80010e4:	b2da      	uxtb	r2, r3
 80010e6:	4b1a      	ldr	r3, [pc, #104]	; (8001150 <main+0x11c>)
 80010e8:	701a      	strb	r2, [r3, #0]
	  		LCD_clrScr();
 80010ea:	f7ff fbc7 	bl	800087c <LCD_clrScr>
	  		LCD_print("Calibrado", 0, 0);
 80010ee:	2200      	movs	r2, #0
 80010f0:	2100      	movs	r1, #0
 80010f2:	481a      	ldr	r0, [pc, #104]	; (800115c <main+0x128>)
 80010f4:	f7ff fba2 	bl	800083c <LCD_print>
  			HAL_Delay(3000);
 80010f8:	f640 30b8 	movw	r0, #3000	; 0xbb8
 80010fc:	f000 fc7a 	bl	80019f4 <HAL_Delay>
  			LCD_clrScr();
 8001100:	f7ff fbbc 	bl	800087c <LCD_clrScr>
  			LCD_print("Andar", 0, 0);
 8001104:	2200      	movs	r2, #0
 8001106:	2100      	movs	r1, #0
 8001108:	4815      	ldr	r0, [pc, #84]	; (8001160 <main+0x12c>)
 800110a:	f7ff fb97 	bl	800083c <LCD_print>

	  	break;
 800110e:	e014      	b.n	800113a <main+0x106>

	  	case 2:


  				sprintf(Buffer, "%d", error);
 8001110:	4b14      	ldr	r3, [pc, #80]	; (8001164 <main+0x130>)
 8001112:	681b      	ldr	r3, [r3, #0]
 8001114:	461a      	mov	r2, r3
 8001116:	4914      	ldr	r1, [pc, #80]	; (8001168 <main+0x134>)
 8001118:	4814      	ldr	r0, [pc, #80]	; (800116c <main+0x138>)
 800111a:	f002 fbed 	bl	80038f8 <siprintf>
  				LCD_print(Buffer, 3, 3);
 800111e:	2203      	movs	r2, #3
 8001120:	2103      	movs	r1, #3
 8001122:	4812      	ldr	r0, [pc, #72]	; (800116c <main+0x138>)
 8001124:	f7ff fb8a 	bl	800083c <LCD_print>
	  			aplicarCalibracao();
 8001128:	f7ff fd44 	bl	8000bb4 <aplicarCalibracao>
	  		    leituraLinha();
 800112c:	f7ff fe66 	bl	8000dfc <leituraLinha>
	  		    PID();
 8001130:	f7ff fea8 	bl	8000e84 <PID>
	  		    setPWM();
 8001134:	f7ff ff3e 	bl	8000fb4 <setPWM>





	  	break;
 8001138:	bf00      	nop
	  switch(mode)
 800113a:	e7ad      	b.n	8001098 <main+0x64>
 800113c:	40020400 	.word	0x40020400
 8001140:	40020000 	.word	0x40020000
 8001144:	20000358 	.word	0x20000358
 8001148:	20000310 	.word	0x20000310
 800114c:	40020800 	.word	0x40020800
 8001150:	20000000 	.word	0x20000000
 8001154:	08004260 	.word	0x08004260
 8001158:	08004270 	.word	0x08004270
 800115c:	08004280 	.word	0x08004280
 8001160:	0800428c 	.word	0x0800428c
 8001164:	20000484 	.word	0x20000484
 8001168:	08004294 	.word	0x08004294
 800116c:	20000470 	.word	0x20000470

08001170 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8001170:	b580      	push	{r7, lr}
 8001172:	b094      	sub	sp, #80	; 0x50
 8001174:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8001176:	f107 0320 	add.w	r3, r7, #32
 800117a:	2230      	movs	r2, #48	; 0x30
 800117c:	2100      	movs	r1, #0
 800117e:	4618      	mov	r0, r3
 8001180:	f002 fbda 	bl	8003938 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001184:	f107 030c 	add.w	r3, r7, #12
 8001188:	2200      	movs	r2, #0
 800118a:	601a      	str	r2, [r3, #0]
 800118c:	605a      	str	r2, [r3, #4]
 800118e:	609a      	str	r2, [r3, #8]
 8001190:	60da      	str	r2, [r3, #12]
 8001192:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 8001194:	2300      	movs	r3, #0
 8001196:	60bb      	str	r3, [r7, #8]
 8001198:	4b22      	ldr	r3, [pc, #136]	; (8001224 <SystemClock_Config+0xb4>)
 800119a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800119c:	4a21      	ldr	r2, [pc, #132]	; (8001224 <SystemClock_Config+0xb4>)
 800119e:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80011a2:	6413      	str	r3, [r2, #64]	; 0x40
 80011a4:	4b1f      	ldr	r3, [pc, #124]	; (8001224 <SystemClock_Config+0xb4>)
 80011a6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80011a8:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80011ac:	60bb      	str	r3, [r7, #8]
 80011ae:	68bb      	ldr	r3, [r7, #8]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 80011b0:	2300      	movs	r3, #0
 80011b2:	607b      	str	r3, [r7, #4]
 80011b4:	4b1c      	ldr	r3, [pc, #112]	; (8001228 <SystemClock_Config+0xb8>)
 80011b6:	681b      	ldr	r3, [r3, #0]
 80011b8:	4a1b      	ldr	r2, [pc, #108]	; (8001228 <SystemClock_Config+0xb8>)
 80011ba:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 80011be:	6013      	str	r3, [r2, #0]
 80011c0:	4b19      	ldr	r3, [pc, #100]	; (8001228 <SystemClock_Config+0xb8>)
 80011c2:	681b      	ldr	r3, [r3, #0]
 80011c4:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 80011c8:	607b      	str	r3, [r7, #4]
 80011ca:	687b      	ldr	r3, [r7, #4]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 80011cc:	2302      	movs	r3, #2
 80011ce:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 80011d0:	2301      	movs	r3, #1
 80011d2:	62fb      	str	r3, [r7, #44]	; 0x2c
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 80011d4:	2310      	movs	r3, #16
 80011d6:	633b      	str	r3, [r7, #48]	; 0x30
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 80011d8:	2300      	movs	r3, #0
 80011da:	63bb      	str	r3, [r7, #56]	; 0x38
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80011dc:	f107 0320 	add.w	r3, r7, #32
 80011e0:	4618      	mov	r0, r3
 80011e2:	f001 fab1 	bl	8002748 <HAL_RCC_OscConfig>
 80011e6:	4603      	mov	r3, r0
 80011e8:	2b00      	cmp	r3, #0
 80011ea:	d001      	beq.n	80011f0 <SystemClock_Config+0x80>
  {
    Error_Handler();
 80011ec:	f000 f9e0 	bl	80015b0 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80011f0:	230f      	movs	r3, #15
 80011f2:	60fb      	str	r3, [r7, #12]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 80011f4:	2300      	movs	r3, #0
 80011f6:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80011f8:	2300      	movs	r3, #0
 80011fa:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 80011fc:	2300      	movs	r3, #0
 80011fe:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8001200:	2300      	movs	r3, #0
 8001202:	61fb      	str	r3, [r7, #28]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 8001204:	f107 030c 	add.w	r3, r7, #12
 8001208:	2100      	movs	r1, #0
 800120a:	4618      	mov	r0, r3
 800120c:	f001 fd14 	bl	8002c38 <HAL_RCC_ClockConfig>
 8001210:	4603      	mov	r3, r0
 8001212:	2b00      	cmp	r3, #0
 8001214:	d001      	beq.n	800121a <SystemClock_Config+0xaa>
  {
    Error_Handler();
 8001216:	f000 f9cb 	bl	80015b0 <Error_Handler>
  }
}
 800121a:	bf00      	nop
 800121c:	3750      	adds	r7, #80	; 0x50
 800121e:	46bd      	mov	sp, r7
 8001220:	bd80      	pop	{r7, pc}
 8001222:	bf00      	nop
 8001224:	40023800 	.word	0x40023800
 8001228:	40007000 	.word	0x40007000

0800122c <MX_ADC1_Init>:
  * @brief ADC1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_ADC1_Init(void)
{
 800122c:	b580      	push	{r7, lr}
 800122e:	b084      	sub	sp, #16
 8001230:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC1_Init 0 */

  /* USER CODE END ADC1_Init 0 */

  ADC_ChannelConfTypeDef sConfig = {0};
 8001232:	463b      	mov	r3, r7
 8001234:	2200      	movs	r2, #0
 8001236:	601a      	str	r2, [r3, #0]
 8001238:	605a      	str	r2, [r3, #4]
 800123a:	609a      	str	r2, [r3, #8]
 800123c:	60da      	str	r2, [r3, #12]

  /* USER CODE END ADC1_Init 1 */

  /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of conversion)
  */
  hadc1.Instance = ADC1;
 800123e:	4b21      	ldr	r3, [pc, #132]	; (80012c4 <MX_ADC1_Init+0x98>)
 8001240:	4a21      	ldr	r2, [pc, #132]	; (80012c8 <MX_ADC1_Init+0x9c>)
 8001242:	601a      	str	r2, [r3, #0]
  hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV2;
 8001244:	4b1f      	ldr	r3, [pc, #124]	; (80012c4 <MX_ADC1_Init+0x98>)
 8001246:	2200      	movs	r2, #0
 8001248:	605a      	str	r2, [r3, #4]
  hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 800124a:	4b1e      	ldr	r3, [pc, #120]	; (80012c4 <MX_ADC1_Init+0x98>)
 800124c:	2200      	movs	r2, #0
 800124e:	609a      	str	r2, [r3, #8]
  hadc1.Init.ScanConvMode = DISABLE;
 8001250:	4b1c      	ldr	r3, [pc, #112]	; (80012c4 <MX_ADC1_Init+0x98>)
 8001252:	2200      	movs	r2, #0
 8001254:	611a      	str	r2, [r3, #16]
  hadc1.Init.ContinuousConvMode = DISABLE;
 8001256:	4b1b      	ldr	r3, [pc, #108]	; (80012c4 <MX_ADC1_Init+0x98>)
 8001258:	2200      	movs	r2, #0
 800125a:	761a      	strb	r2, [r3, #24]
  hadc1.Init.DiscontinuousConvMode = DISABLE;
 800125c:	4b19      	ldr	r3, [pc, #100]	; (80012c4 <MX_ADC1_Init+0x98>)
 800125e:	2200      	movs	r2, #0
 8001260:	f883 2020 	strb.w	r2, [r3, #32]
  hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 8001264:	4b17      	ldr	r3, [pc, #92]	; (80012c4 <MX_ADC1_Init+0x98>)
 8001266:	2200      	movs	r2, #0
 8001268:	62da      	str	r2, [r3, #44]	; 0x2c
  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 800126a:	4b16      	ldr	r3, [pc, #88]	; (80012c4 <MX_ADC1_Init+0x98>)
 800126c:	4a17      	ldr	r2, [pc, #92]	; (80012cc <MX_ADC1_Init+0xa0>)
 800126e:	629a      	str	r2, [r3, #40]	; 0x28
  hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 8001270:	4b14      	ldr	r3, [pc, #80]	; (80012c4 <MX_ADC1_Init+0x98>)
 8001272:	2200      	movs	r2, #0
 8001274:	60da      	str	r2, [r3, #12]
  hadc1.Init.NbrOfConversion = 1;
 8001276:	4b13      	ldr	r3, [pc, #76]	; (80012c4 <MX_ADC1_Init+0x98>)
 8001278:	2201      	movs	r2, #1
 800127a:	61da      	str	r2, [r3, #28]
  hadc1.Init.DMAContinuousRequests = DISABLE;
 800127c:	4b11      	ldr	r3, [pc, #68]	; (80012c4 <MX_ADC1_Init+0x98>)
 800127e:	2200      	movs	r2, #0
 8001280:	f883 2030 	strb.w	r2, [r3, #48]	; 0x30
  hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 8001284:	4b0f      	ldr	r3, [pc, #60]	; (80012c4 <MX_ADC1_Init+0x98>)
 8001286:	2201      	movs	r2, #1
 8001288:	615a      	str	r2, [r3, #20]
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 800128a:	480e      	ldr	r0, [pc, #56]	; (80012c4 <MX_ADC1_Init+0x98>)
 800128c:	f000 fbd6 	bl	8001a3c <HAL_ADC_Init>
 8001290:	4603      	mov	r3, r0
 8001292:	2b00      	cmp	r3, #0
 8001294:	d001      	beq.n	800129a <MX_ADC1_Init+0x6e>
  {
    Error_Handler();
 8001296:	f000 f98b 	bl	80015b0 <Error_Handler>
  }

  /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and its sample time.
  */
  sConfig.Channel = ADC_CHANNEL_3;
 800129a:	2303      	movs	r3, #3
 800129c:	603b      	str	r3, [r7, #0]
  sConfig.Rank = 1;
 800129e:	2301      	movs	r3, #1
 80012a0:	607b      	str	r3, [r7, #4]
  sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 80012a2:	2300      	movs	r3, #0
 80012a4:	60bb      	str	r3, [r7, #8]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 80012a6:	463b      	mov	r3, r7
 80012a8:	4619      	mov	r1, r3
 80012aa:	4806      	ldr	r0, [pc, #24]	; (80012c4 <MX_ADC1_Init+0x98>)
 80012ac:	f000 fd56 	bl	8001d5c <HAL_ADC_ConfigChannel>
 80012b0:	4603      	mov	r3, r0
 80012b2:	2b00      	cmp	r3, #0
 80012b4:	d001      	beq.n	80012ba <MX_ADC1_Init+0x8e>
  {
    Error_Handler();
 80012b6:	f000 f97b 	bl	80015b0 <Error_Handler>
  }
  /* USER CODE BEGIN ADC1_Init 2 */

  /* USER CODE END ADC1_Init 2 */

}
 80012ba:	bf00      	nop
 80012bc:	3710      	adds	r7, #16
 80012be:	46bd      	mov	sp, r7
 80012c0:	bd80      	pop	{r7, pc}
 80012c2:	bf00      	nop
 80012c4:	200002c8 	.word	0x200002c8
 80012c8:	40012000 	.word	0x40012000
 80012cc:	0f000001 	.word	0x0f000001

080012d0 <MX_TIM1_Init>:
  * @brief TIM1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM1_Init(void)
{
 80012d0:	b580      	push	{r7, lr}
 80012d2:	b092      	sub	sp, #72	; 0x48
 80012d4:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM1_Init 0 */

  /* USER CODE END TIM1_Init 0 */

  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80012d6:	f107 0340 	add.w	r3, r7, #64	; 0x40
 80012da:	2200      	movs	r2, #0
 80012dc:	601a      	str	r2, [r3, #0]
 80012de:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 80012e0:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80012e4:	2200      	movs	r2, #0
 80012e6:	601a      	str	r2, [r3, #0]
 80012e8:	605a      	str	r2, [r3, #4]
 80012ea:	609a      	str	r2, [r3, #8]
 80012ec:	60da      	str	r2, [r3, #12]
 80012ee:	611a      	str	r2, [r3, #16]
 80012f0:	615a      	str	r2, [r3, #20]
 80012f2:	619a      	str	r2, [r3, #24]
  TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 80012f4:	1d3b      	adds	r3, r7, #4
 80012f6:	2220      	movs	r2, #32
 80012f8:	2100      	movs	r1, #0
 80012fa:	4618      	mov	r0, r3
 80012fc:	f002 fb1c 	bl	8003938 <memset>

  /* USER CODE BEGIN TIM1_Init 1 */

  /* USER CODE END TIM1_Init 1 */
  htim1.Instance = TIM1;
 8001300:	4b33      	ldr	r3, [pc, #204]	; (80013d0 <MX_TIM1_Init+0x100>)
 8001302:	4a34      	ldr	r2, [pc, #208]	; (80013d4 <MX_TIM1_Init+0x104>)
 8001304:	601a      	str	r2, [r3, #0]
  htim1.Init.Prescaler = 0;
 8001306:	4b32      	ldr	r3, [pc, #200]	; (80013d0 <MX_TIM1_Init+0x100>)
 8001308:	2200      	movs	r2, #0
 800130a:	605a      	str	r2, [r3, #4]
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 800130c:	4b30      	ldr	r3, [pc, #192]	; (80013d0 <MX_TIM1_Init+0x100>)
 800130e:	2200      	movs	r2, #0
 8001310:	609a      	str	r2, [r3, #8]
  htim1.Init.Period = 4570;
 8001312:	4b2f      	ldr	r3, [pc, #188]	; (80013d0 <MX_TIM1_Init+0x100>)
 8001314:	f241 12da 	movw	r2, #4570	; 0x11da
 8001318:	60da      	str	r2, [r3, #12]
  htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800131a:	4b2d      	ldr	r3, [pc, #180]	; (80013d0 <MX_TIM1_Init+0x100>)
 800131c:	2200      	movs	r2, #0
 800131e:	611a      	str	r2, [r3, #16]
  htim1.Init.RepetitionCounter = 0;
 8001320:	4b2b      	ldr	r3, [pc, #172]	; (80013d0 <MX_TIM1_Init+0x100>)
 8001322:	2200      	movs	r2, #0
 8001324:	615a      	str	r2, [r3, #20]
  htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001326:	4b2a      	ldr	r3, [pc, #168]	; (80013d0 <MX_TIM1_Init+0x100>)
 8001328:	2200      	movs	r2, #0
 800132a:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
 800132c:	4828      	ldr	r0, [pc, #160]	; (80013d0 <MX_TIM1_Init+0x100>)
 800132e:	f001 fe2f 	bl	8002f90 <HAL_TIM_PWM_Init>
 8001332:	4603      	mov	r3, r0
 8001334:	2b00      	cmp	r3, #0
 8001336:	d001      	beq.n	800133c <MX_TIM1_Init+0x6c>
  {
    Error_Handler();
 8001338:	f000 f93a 	bl	80015b0 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 800133c:	2300      	movs	r3, #0
 800133e:	643b      	str	r3, [r7, #64]	; 0x40
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001340:	2300      	movs	r3, #0
 8001342:	647b      	str	r3, [r7, #68]	; 0x44
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 8001344:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8001348:	4619      	mov	r1, r3
 800134a:	4821      	ldr	r0, [pc, #132]	; (80013d0 <MX_TIM1_Init+0x100>)
 800134c:	f002 fa14 	bl	8003778 <HAL_TIMEx_MasterConfigSynchronization>
 8001350:	4603      	mov	r3, r0
 8001352:	2b00      	cmp	r3, #0
 8001354:	d001      	beq.n	800135a <MX_TIM1_Init+0x8a>
  {
    Error_Handler();
 8001356:	f000 f92b 	bl	80015b0 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 800135a:	2360      	movs	r3, #96	; 0x60
 800135c:	627b      	str	r3, [r7, #36]	; 0x24
  sConfigOC.Pulse = 0;
 800135e:	2300      	movs	r3, #0
 8001360:	62bb      	str	r3, [r7, #40]	; 0x28
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8001362:	2300      	movs	r3, #0
 8001364:	62fb      	str	r3, [r7, #44]	; 0x2c
  sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 8001366:	2300      	movs	r3, #0
 8001368:	633b      	str	r3, [r7, #48]	; 0x30
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 800136a:	2300      	movs	r3, #0
 800136c:	637b      	str	r3, [r7, #52]	; 0x34
  sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 800136e:	2300      	movs	r3, #0
 8001370:	63bb      	str	r3, [r7, #56]	; 0x38
  sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 8001372:	2300      	movs	r3, #0
 8001374:	63fb      	str	r3, [r7, #60]	; 0x3c
  if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8001376:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800137a:	2200      	movs	r2, #0
 800137c:	4619      	mov	r1, r3
 800137e:	4814      	ldr	r0, [pc, #80]	; (80013d0 <MX_TIM1_Init+0x100>)
 8001380:	f001 ff06 	bl	8003190 <HAL_TIM_PWM_ConfigChannel>
 8001384:	4603      	mov	r3, r0
 8001386:	2b00      	cmp	r3, #0
 8001388:	d001      	beq.n	800138e <MX_TIM1_Init+0xbe>
  {
    Error_Handler();
 800138a:	f000 f911 	bl	80015b0 <Error_Handler>
  }
  sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 800138e:	2300      	movs	r3, #0
 8001390:	607b      	str	r3, [r7, #4]
  sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 8001392:	2300      	movs	r3, #0
 8001394:	60bb      	str	r3, [r7, #8]
  sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 8001396:	2300      	movs	r3, #0
 8001398:	60fb      	str	r3, [r7, #12]
  sBreakDeadTimeConfig.DeadTime = 0;
 800139a:	2300      	movs	r3, #0
 800139c:	613b      	str	r3, [r7, #16]
  sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 800139e:	2300      	movs	r3, #0
 80013a0:	617b      	str	r3, [r7, #20]
  sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 80013a2:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 80013a6:	61bb      	str	r3, [r7, #24]
  sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 80013a8:	2300      	movs	r3, #0
 80013aa:	623b      	str	r3, [r7, #32]
  if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 80013ac:	1d3b      	adds	r3, r7, #4
 80013ae:	4619      	mov	r1, r3
 80013b0:	4807      	ldr	r0, [pc, #28]	; (80013d0 <MX_TIM1_Init+0x100>)
 80013b2:	f002 fa4f 	bl	8003854 <HAL_TIMEx_ConfigBreakDeadTime>
 80013b6:	4603      	mov	r3, r0
 80013b8:	2b00      	cmp	r3, #0
 80013ba:	d001      	beq.n	80013c0 <MX_TIM1_Init+0xf0>
  {
    Error_Handler();
 80013bc:	f000 f8f8 	bl	80015b0 <Error_Handler>
  }
  /* USER CODE BEGIN TIM1_Init 2 */

  /* USER CODE END TIM1_Init 2 */
  HAL_TIM_MspPostInit(&htim1);
 80013c0:	4803      	ldr	r0, [pc, #12]	; (80013d0 <MX_TIM1_Init+0x100>)
 80013c2:	f000 f99d 	bl	8001700 <HAL_TIM_MspPostInit>

}
 80013c6:	bf00      	nop
 80013c8:	3748      	adds	r7, #72	; 0x48
 80013ca:	46bd      	mov	sp, r7
 80013cc:	bd80      	pop	{r7, pc}
 80013ce:	bf00      	nop
 80013d0:	20000310 	.word	0x20000310
 80013d4:	40010000 	.word	0x40010000

080013d8 <MX_TIM2_Init>:
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM2_Init(void)
{
 80013d8:	b580      	push	{r7, lr}
 80013da:	b08a      	sub	sp, #40	; 0x28
 80013dc:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80013de:	f107 0320 	add.w	r3, r7, #32
 80013e2:	2200      	movs	r2, #0
 80013e4:	601a      	str	r2, [r3, #0]
 80013e6:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 80013e8:	1d3b      	adds	r3, r7, #4
 80013ea:	2200      	movs	r2, #0
 80013ec:	601a      	str	r2, [r3, #0]
 80013ee:	605a      	str	r2, [r3, #4]
 80013f0:	609a      	str	r2, [r3, #8]
 80013f2:	60da      	str	r2, [r3, #12]
 80013f4:	611a      	str	r2, [r3, #16]
 80013f6:	615a      	str	r2, [r3, #20]
 80013f8:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 80013fa:	4b22      	ldr	r3, [pc, #136]	; (8001484 <MX_TIM2_Init+0xac>)
 80013fc:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8001400:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 0;
 8001402:	4b20      	ldr	r3, [pc, #128]	; (8001484 <MX_TIM2_Init+0xac>)
 8001404:	2200      	movs	r2, #0
 8001406:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001408:	4b1e      	ldr	r3, [pc, #120]	; (8001484 <MX_TIM2_Init+0xac>)
 800140a:	2200      	movs	r2, #0
 800140c:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 4570;
 800140e:	4b1d      	ldr	r3, [pc, #116]	; (8001484 <MX_TIM2_Init+0xac>)
 8001410:	f241 12da 	movw	r2, #4570	; 0x11da
 8001414:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8001416:	4b1b      	ldr	r3, [pc, #108]	; (8001484 <MX_TIM2_Init+0xac>)
 8001418:	2200      	movs	r2, #0
 800141a:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 800141c:	4b19      	ldr	r3, [pc, #100]	; (8001484 <MX_TIM2_Init+0xac>)
 800141e:	2200      	movs	r2, #0
 8001420:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 8001422:	4818      	ldr	r0, [pc, #96]	; (8001484 <MX_TIM2_Init+0xac>)
 8001424:	f001 fdb4 	bl	8002f90 <HAL_TIM_PWM_Init>
 8001428:	4603      	mov	r3, r0
 800142a:	2b00      	cmp	r3, #0
 800142c:	d001      	beq.n	8001432 <MX_TIM2_Init+0x5a>
  {
    Error_Handler();
 800142e:	f000 f8bf 	bl	80015b0 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8001432:	2300      	movs	r3, #0
 8001434:	623b      	str	r3, [r7, #32]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001436:	2300      	movs	r3, #0
 8001438:	627b      	str	r3, [r7, #36]	; 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 800143a:	f107 0320 	add.w	r3, r7, #32
 800143e:	4619      	mov	r1, r3
 8001440:	4810      	ldr	r0, [pc, #64]	; (8001484 <MX_TIM2_Init+0xac>)
 8001442:	f002 f999 	bl	8003778 <HAL_TIMEx_MasterConfigSynchronization>
 8001446:	4603      	mov	r3, r0
 8001448:	2b00      	cmp	r3, #0
 800144a:	d001      	beq.n	8001450 <MX_TIM2_Init+0x78>
  {
    Error_Handler();
 800144c:	f000 f8b0 	bl	80015b0 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8001450:	2360      	movs	r3, #96	; 0x60
 8001452:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 0;
 8001454:	2300      	movs	r3, #0
 8001456:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8001458:	2300      	movs	r3, #0
 800145a:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 800145c:	2300      	movs	r3, #0
 800145e:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 8001460:	1d3b      	adds	r3, r7, #4
 8001462:	2204      	movs	r2, #4
 8001464:	4619      	mov	r1, r3
 8001466:	4807      	ldr	r0, [pc, #28]	; (8001484 <MX_TIM2_Init+0xac>)
 8001468:	f001 fe92 	bl	8003190 <HAL_TIM_PWM_ConfigChannel>
 800146c:	4603      	mov	r3, r0
 800146e:	2b00      	cmp	r3, #0
 8001470:	d001      	beq.n	8001476 <MX_TIM2_Init+0x9e>
  {
    Error_Handler();
 8001472:	f000 f89d 	bl	80015b0 <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */
  HAL_TIM_MspPostInit(&htim2);
 8001476:	4803      	ldr	r0, [pc, #12]	; (8001484 <MX_TIM2_Init+0xac>)
 8001478:	f000 f942 	bl	8001700 <HAL_TIM_MspPostInit>

}
 800147c:	bf00      	nop
 800147e:	3728      	adds	r7, #40	; 0x28
 8001480:	46bd      	mov	sp, r7
 8001482:	bd80      	pop	{r7, pc}
 8001484:	20000358 	.word	0x20000358

08001488 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8001488:	b580      	push	{r7, lr}
 800148a:	b088      	sub	sp, #32
 800148c:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800148e:	f107 030c 	add.w	r3, r7, #12
 8001492:	2200      	movs	r2, #0
 8001494:	601a      	str	r2, [r3, #0]
 8001496:	605a      	str	r2, [r3, #4]
 8001498:	609a      	str	r2, [r3, #8]
 800149a:	60da      	str	r2, [r3, #12]
 800149c:	611a      	str	r2, [r3, #16]
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 800149e:	2300      	movs	r3, #0
 80014a0:	60bb      	str	r3, [r7, #8]
 80014a2:	4b3f      	ldr	r3, [pc, #252]	; (80015a0 <MX_GPIO_Init+0x118>)
 80014a4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80014a6:	4a3e      	ldr	r2, [pc, #248]	; (80015a0 <MX_GPIO_Init+0x118>)
 80014a8:	f043 0304 	orr.w	r3, r3, #4
 80014ac:	6313      	str	r3, [r2, #48]	; 0x30
 80014ae:	4b3c      	ldr	r3, [pc, #240]	; (80015a0 <MX_GPIO_Init+0x118>)
 80014b0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80014b2:	f003 0304 	and.w	r3, r3, #4
 80014b6:	60bb      	str	r3, [r7, #8]
 80014b8:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80014ba:	2300      	movs	r3, #0
 80014bc:	607b      	str	r3, [r7, #4]
 80014be:	4b38      	ldr	r3, [pc, #224]	; (80015a0 <MX_GPIO_Init+0x118>)
 80014c0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80014c2:	4a37      	ldr	r2, [pc, #220]	; (80015a0 <MX_GPIO_Init+0x118>)
 80014c4:	f043 0301 	orr.w	r3, r3, #1
 80014c8:	6313      	str	r3, [r2, #48]	; 0x30
 80014ca:	4b35      	ldr	r3, [pc, #212]	; (80015a0 <MX_GPIO_Init+0x118>)
 80014cc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80014ce:	f003 0301 	and.w	r3, r3, #1
 80014d2:	607b      	str	r3, [r7, #4]
 80014d4:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80014d6:	2300      	movs	r3, #0
 80014d8:	603b      	str	r3, [r7, #0]
 80014da:	4b31      	ldr	r3, [pc, #196]	; (80015a0 <MX_GPIO_Init+0x118>)
 80014dc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80014de:	4a30      	ldr	r2, [pc, #192]	; (80015a0 <MX_GPIO_Init+0x118>)
 80014e0:	f043 0302 	orr.w	r3, r3, #2
 80014e4:	6313      	str	r3, [r2, #48]	; 0x30
 80014e6:	4b2e      	ldr	r3, [pc, #184]	; (80015a0 <MX_GPIO_Init+0x118>)
 80014e8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80014ea:	f003 0302 	and.w	r3, r3, #2
 80014ee:	603b      	str	r3, [r7, #0]
 80014f0:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOC, EN_Pin|S0_Pin, GPIO_PIN_RESET);
 80014f2:	2200      	movs	r2, #0
 80014f4:	f44f 4140 	mov.w	r1, #49152	; 0xc000
 80014f8:	482a      	ldr	r0, [pc, #168]	; (80015a4 <MX_GPIO_Init+0x11c>)
 80014fa:	f001 f8f3 	bl	80026e4 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, S1_Pin|S2_Pin|S3_Pin|BL_Pin
 80014fe:	2200      	movs	r2, #0
 8001500:	f649 61b7 	movw	r1, #40631	; 0x9eb7
 8001504:	4828      	ldr	r0, [pc, #160]	; (80015a8 <MX_GPIO_Init+0x120>)
 8001506:	f001 f8ed 	bl	80026e4 <HAL_GPIO_WritePin>
                          |CLK_Pin|DIN_Pin|AI2_Pin|AI1_Pin
                          |STBY_Pin|BI1_Pin|BI2_Pin, GPIO_PIN_RESET);

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, DC_Pin|CE_Pin|RST_Pin, GPIO_PIN_RESET);
 800150a:	2200      	movs	r2, #0
 800150c:	2107      	movs	r1, #7
 800150e:	4827      	ldr	r0, [pc, #156]	; (80015ac <MX_GPIO_Init+0x124>)
 8001510:	f001 f8e8 	bl	80026e4 <HAL_GPIO_WritePin>

  /*Configure GPIO pins : EN_Pin S0_Pin */
  GPIO_InitStruct.Pin = EN_Pin|S0_Pin;
 8001514:	f44f 4340 	mov.w	r3, #49152	; 0xc000
 8001518:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800151a:	2301      	movs	r3, #1
 800151c:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800151e:	2300      	movs	r3, #0
 8001520:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001522:	2300      	movs	r3, #0
 8001524:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001526:	f107 030c 	add.w	r3, r7, #12
 800152a:	4619      	mov	r1, r3
 800152c:	481d      	ldr	r0, [pc, #116]	; (80015a4 <MX_GPIO_Init+0x11c>)
 800152e:	f000 ff55 	bl	80023dc <HAL_GPIO_Init>

  /*Configure GPIO pins : S1_Pin S2_Pin S3_Pin BL_Pin
                           CLK_Pin DIN_Pin AI2_Pin AI1_Pin
                           STBY_Pin BI1_Pin BI2_Pin */
  GPIO_InitStruct.Pin = S1_Pin|S2_Pin|S3_Pin|BL_Pin
 8001532:	f649 63b7 	movw	r3, #40631	; 0x9eb7
 8001536:	60fb      	str	r3, [r7, #12]
                          |CLK_Pin|DIN_Pin|AI2_Pin|AI1_Pin
                          |STBY_Pin|BI1_Pin|BI2_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001538:	2301      	movs	r3, #1
 800153a:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800153c:	2300      	movs	r3, #0
 800153e:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001540:	2300      	movs	r3, #0
 8001542:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001544:	f107 030c 	add.w	r3, r7, #12
 8001548:	4619      	mov	r1, r3
 800154a:	4817      	ldr	r0, [pc, #92]	; (80015a8 <MX_GPIO_Init+0x120>)
 800154c:	f000 ff46 	bl	80023dc <HAL_GPIO_Init>

  /*Configure GPIO pins : DC_Pin CE_Pin RST_Pin */
  GPIO_InitStruct.Pin = DC_Pin|CE_Pin|RST_Pin;
 8001550:	2307      	movs	r3, #7
 8001552:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001554:	2301      	movs	r3, #1
 8001556:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001558:	2300      	movs	r3, #0
 800155a:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800155c:	2300      	movs	r3, #0
 800155e:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001560:	f107 030c 	add.w	r3, r7, #12
 8001564:	4619      	mov	r1, r3
 8001566:	4811      	ldr	r0, [pc, #68]	; (80015ac <MX_GPIO_Init+0x124>)
 8001568:	f000 ff38 	bl	80023dc <HAL_GPIO_Init>

  /*Configure GPIO pins : BOT2_Pin BOT1_Pin */
  GPIO_InitStruct.Pin = BOT2_Pin|BOT1_Pin;
 800156c:	f44f 7340 	mov.w	r3, #768	; 0x300
 8001570:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8001572:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
 8001576:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001578:	2300      	movs	r3, #0
 800157a:	617b      	str	r3, [r7, #20]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800157c:	f107 030c 	add.w	r3, r7, #12
 8001580:	4619      	mov	r1, r3
 8001582:	480a      	ldr	r0, [pc, #40]	; (80015ac <MX_GPIO_Init+0x124>)
 8001584:	f000 ff2a 	bl	80023dc <HAL_GPIO_Init>

  /* EXTI interrupt init*/
  HAL_NVIC_SetPriority(EXTI9_5_IRQn, 0, 0);
 8001588:	2200      	movs	r2, #0
 800158a:	2100      	movs	r1, #0
 800158c:	2017      	movs	r0, #23
 800158e:	f000 feee 	bl	800236e <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI9_5_IRQn);
 8001592:	2017      	movs	r0, #23
 8001594:	f000 ff07 	bl	80023a6 <HAL_NVIC_EnableIRQ>

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}
 8001598:	bf00      	nop
 800159a:	3720      	adds	r7, #32
 800159c:	46bd      	mov	sp, r7
 800159e:	bd80      	pop	{r7, pc}
 80015a0:	40023800 	.word	0x40023800
 80015a4:	40020800 	.word	0x40020800
 80015a8:	40020000 	.word	0x40020000
 80015ac:	40020400 	.word	0x40020400

080015b0 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 80015b0:	b480      	push	{r7}
 80015b2:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 80015b4:	b672      	cpsid	i
}
 80015b6:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 80015b8:	e7fe      	b.n	80015b8 <Error_Handler+0x8>
	...

080015bc <HAL_MspInit>:
void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);
                                        /**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 80015bc:	b480      	push	{r7}
 80015be:	b083      	sub	sp, #12
 80015c0:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 80015c2:	2300      	movs	r3, #0
 80015c4:	607b      	str	r3, [r7, #4]
 80015c6:	4b10      	ldr	r3, [pc, #64]	; (8001608 <HAL_MspInit+0x4c>)
 80015c8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80015ca:	4a0f      	ldr	r2, [pc, #60]	; (8001608 <HAL_MspInit+0x4c>)
 80015cc:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80015d0:	6453      	str	r3, [r2, #68]	; 0x44
 80015d2:	4b0d      	ldr	r3, [pc, #52]	; (8001608 <HAL_MspInit+0x4c>)
 80015d4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80015d6:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 80015da:	607b      	str	r3, [r7, #4]
 80015dc:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 80015de:	2300      	movs	r3, #0
 80015e0:	603b      	str	r3, [r7, #0]
 80015e2:	4b09      	ldr	r3, [pc, #36]	; (8001608 <HAL_MspInit+0x4c>)
 80015e4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80015e6:	4a08      	ldr	r2, [pc, #32]	; (8001608 <HAL_MspInit+0x4c>)
 80015e8:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80015ec:	6413      	str	r3, [r2, #64]	; 0x40
 80015ee:	4b06      	ldr	r3, [pc, #24]	; (8001608 <HAL_MspInit+0x4c>)
 80015f0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80015f2:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80015f6:	603b      	str	r3, [r7, #0]
 80015f8:	683b      	ldr	r3, [r7, #0]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 80015fa:	bf00      	nop
 80015fc:	370c      	adds	r7, #12
 80015fe:	46bd      	mov	sp, r7
 8001600:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001604:	4770      	bx	lr
 8001606:	bf00      	nop
 8001608:	40023800 	.word	0x40023800

0800160c <HAL_ADC_MspInit>:
* This function configures the hardware resources used in this example
* @param hadc: ADC handle pointer
* @retval None
*/
void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
{
 800160c:	b580      	push	{r7, lr}
 800160e:	b08a      	sub	sp, #40	; 0x28
 8001610:	af00      	add	r7, sp, #0
 8001612:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001614:	f107 0314 	add.w	r3, r7, #20
 8001618:	2200      	movs	r2, #0
 800161a:	601a      	str	r2, [r3, #0]
 800161c:	605a      	str	r2, [r3, #4]
 800161e:	609a      	str	r2, [r3, #8]
 8001620:	60da      	str	r2, [r3, #12]
 8001622:	611a      	str	r2, [r3, #16]
  if(hadc->Instance==ADC1)
 8001624:	687b      	ldr	r3, [r7, #4]
 8001626:	681b      	ldr	r3, [r3, #0]
 8001628:	4a17      	ldr	r2, [pc, #92]	; (8001688 <HAL_ADC_MspInit+0x7c>)
 800162a:	4293      	cmp	r3, r2
 800162c:	d127      	bne.n	800167e <HAL_ADC_MspInit+0x72>
  {
  /* USER CODE BEGIN ADC1_MspInit 0 */

  /* USER CODE END ADC1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_ADC1_CLK_ENABLE();
 800162e:	2300      	movs	r3, #0
 8001630:	613b      	str	r3, [r7, #16]
 8001632:	4b16      	ldr	r3, [pc, #88]	; (800168c <HAL_ADC_MspInit+0x80>)
 8001634:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001636:	4a15      	ldr	r2, [pc, #84]	; (800168c <HAL_ADC_MspInit+0x80>)
 8001638:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800163c:	6453      	str	r3, [r2, #68]	; 0x44
 800163e:	4b13      	ldr	r3, [pc, #76]	; (800168c <HAL_ADC_MspInit+0x80>)
 8001640:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001642:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8001646:	613b      	str	r3, [r7, #16]
 8001648:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 800164a:	2300      	movs	r3, #0
 800164c:	60fb      	str	r3, [r7, #12]
 800164e:	4b0f      	ldr	r3, [pc, #60]	; (800168c <HAL_ADC_MspInit+0x80>)
 8001650:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001652:	4a0e      	ldr	r2, [pc, #56]	; (800168c <HAL_ADC_MspInit+0x80>)
 8001654:	f043 0301 	orr.w	r3, r3, #1
 8001658:	6313      	str	r3, [r2, #48]	; 0x30
 800165a:	4b0c      	ldr	r3, [pc, #48]	; (800168c <HAL_ADC_MspInit+0x80>)
 800165c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800165e:	f003 0301 	and.w	r3, r3, #1
 8001662:	60fb      	str	r3, [r7, #12]
 8001664:	68fb      	ldr	r3, [r7, #12]
    /**ADC1 GPIO Configuration
    PA3     ------> ADC1_IN3
    */
    GPIO_InitStruct.Pin = SIG_Pin;
 8001666:	2308      	movs	r3, #8
 8001668:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 800166a:	2303      	movs	r3, #3
 800166c:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800166e:	2300      	movs	r3, #0
 8001670:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(SIG_GPIO_Port, &GPIO_InitStruct);
 8001672:	f107 0314 	add.w	r3, r7, #20
 8001676:	4619      	mov	r1, r3
 8001678:	4805      	ldr	r0, [pc, #20]	; (8001690 <HAL_ADC_MspInit+0x84>)
 800167a:	f000 feaf 	bl	80023dc <HAL_GPIO_Init>
  /* USER CODE BEGIN ADC1_MspInit 1 */

  /* USER CODE END ADC1_MspInit 1 */
  }

}
 800167e:	bf00      	nop
 8001680:	3728      	adds	r7, #40	; 0x28
 8001682:	46bd      	mov	sp, r7
 8001684:	bd80      	pop	{r7, pc}
 8001686:	bf00      	nop
 8001688:	40012000 	.word	0x40012000
 800168c:	40023800 	.word	0x40023800
 8001690:	40020000 	.word	0x40020000

08001694 <HAL_TIM_PWM_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_pwm: TIM_PWM handle pointer
* @retval None
*/
void HAL_TIM_PWM_MspInit(TIM_HandleTypeDef* htim_pwm)
{
 8001694:	b480      	push	{r7}
 8001696:	b085      	sub	sp, #20
 8001698:	af00      	add	r7, sp, #0
 800169a:	6078      	str	r0, [r7, #4]
  if(htim_pwm->Instance==TIM1)
 800169c:	687b      	ldr	r3, [r7, #4]
 800169e:	681b      	ldr	r3, [r3, #0]
 80016a0:	4a15      	ldr	r2, [pc, #84]	; (80016f8 <HAL_TIM_PWM_MspInit+0x64>)
 80016a2:	4293      	cmp	r3, r2
 80016a4:	d10e      	bne.n	80016c4 <HAL_TIM_PWM_MspInit+0x30>
  {
  /* USER CODE BEGIN TIM1_MspInit 0 */

  /* USER CODE END TIM1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM1_CLK_ENABLE();
 80016a6:	2300      	movs	r3, #0
 80016a8:	60fb      	str	r3, [r7, #12]
 80016aa:	4b14      	ldr	r3, [pc, #80]	; (80016fc <HAL_TIM_PWM_MspInit+0x68>)
 80016ac:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80016ae:	4a13      	ldr	r2, [pc, #76]	; (80016fc <HAL_TIM_PWM_MspInit+0x68>)
 80016b0:	f043 0301 	orr.w	r3, r3, #1
 80016b4:	6453      	str	r3, [r2, #68]	; 0x44
 80016b6:	4b11      	ldr	r3, [pc, #68]	; (80016fc <HAL_TIM_PWM_MspInit+0x68>)
 80016b8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80016ba:	f003 0301 	and.w	r3, r3, #1
 80016be:	60fb      	str	r3, [r7, #12]
 80016c0:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN TIM2_MspInit 1 */

  /* USER CODE END TIM2_MspInit 1 */
  }

}
 80016c2:	e012      	b.n	80016ea <HAL_TIM_PWM_MspInit+0x56>
  else if(htim_pwm->Instance==TIM2)
 80016c4:	687b      	ldr	r3, [r7, #4]
 80016c6:	681b      	ldr	r3, [r3, #0]
 80016c8:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80016cc:	d10d      	bne.n	80016ea <HAL_TIM_PWM_MspInit+0x56>
    __HAL_RCC_TIM2_CLK_ENABLE();
 80016ce:	2300      	movs	r3, #0
 80016d0:	60bb      	str	r3, [r7, #8]
 80016d2:	4b0a      	ldr	r3, [pc, #40]	; (80016fc <HAL_TIM_PWM_MspInit+0x68>)
 80016d4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80016d6:	4a09      	ldr	r2, [pc, #36]	; (80016fc <HAL_TIM_PWM_MspInit+0x68>)
 80016d8:	f043 0301 	orr.w	r3, r3, #1
 80016dc:	6413      	str	r3, [r2, #64]	; 0x40
 80016de:	4b07      	ldr	r3, [pc, #28]	; (80016fc <HAL_TIM_PWM_MspInit+0x68>)
 80016e0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80016e2:	f003 0301 	and.w	r3, r3, #1
 80016e6:	60bb      	str	r3, [r7, #8]
 80016e8:	68bb      	ldr	r3, [r7, #8]
}
 80016ea:	bf00      	nop
 80016ec:	3714      	adds	r7, #20
 80016ee:	46bd      	mov	sp, r7
 80016f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80016f4:	4770      	bx	lr
 80016f6:	bf00      	nop
 80016f8:	40010000 	.word	0x40010000
 80016fc:	40023800 	.word	0x40023800

08001700 <HAL_TIM_MspPostInit>:

void HAL_TIM_MspPostInit(TIM_HandleTypeDef* htim)
{
 8001700:	b580      	push	{r7, lr}
 8001702:	b08a      	sub	sp, #40	; 0x28
 8001704:	af00      	add	r7, sp, #0
 8001706:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001708:	f107 0314 	add.w	r3, r7, #20
 800170c:	2200      	movs	r2, #0
 800170e:	601a      	str	r2, [r3, #0]
 8001710:	605a      	str	r2, [r3, #4]
 8001712:	609a      	str	r2, [r3, #8]
 8001714:	60da      	str	r2, [r3, #12]
 8001716:	611a      	str	r2, [r3, #16]
  if(htim->Instance==TIM1)
 8001718:	687b      	ldr	r3, [r7, #4]
 800171a:	681b      	ldr	r3, [r3, #0]
 800171c:	4a24      	ldr	r2, [pc, #144]	; (80017b0 <HAL_TIM_MspPostInit+0xb0>)
 800171e:	4293      	cmp	r3, r2
 8001720:	d11f      	bne.n	8001762 <HAL_TIM_MspPostInit+0x62>
  {
  /* USER CODE BEGIN TIM1_MspPostInit 0 */

  /* USER CODE END TIM1_MspPostInit 0 */
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001722:	2300      	movs	r3, #0
 8001724:	613b      	str	r3, [r7, #16]
 8001726:	4b23      	ldr	r3, [pc, #140]	; (80017b4 <HAL_TIM_MspPostInit+0xb4>)
 8001728:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800172a:	4a22      	ldr	r2, [pc, #136]	; (80017b4 <HAL_TIM_MspPostInit+0xb4>)
 800172c:	f043 0301 	orr.w	r3, r3, #1
 8001730:	6313      	str	r3, [r2, #48]	; 0x30
 8001732:	4b20      	ldr	r3, [pc, #128]	; (80017b4 <HAL_TIM_MspPostInit+0xb4>)
 8001734:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001736:	f003 0301 	and.w	r3, r3, #1
 800173a:	613b      	str	r3, [r7, #16]
 800173c:	693b      	ldr	r3, [r7, #16]
    /**TIM1 GPIO Configuration
    PA8     ------> TIM1_CH1
    */
    GPIO_InitStruct.Pin = PWM_A_Pin;
 800173e:	f44f 7380 	mov.w	r3, #256	; 0x100
 8001742:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001744:	2302      	movs	r3, #2
 8001746:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001748:	2300      	movs	r3, #0
 800174a:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800174c:	2300      	movs	r3, #0
 800174e:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF1_TIM1;
 8001750:	2301      	movs	r3, #1
 8001752:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(PWM_A_GPIO_Port, &GPIO_InitStruct);
 8001754:	f107 0314 	add.w	r3, r7, #20
 8001758:	4619      	mov	r1, r3
 800175a:	4817      	ldr	r0, [pc, #92]	; (80017b8 <HAL_TIM_MspPostInit+0xb8>)
 800175c:	f000 fe3e 	bl	80023dc <HAL_GPIO_Init>
  /* USER CODE BEGIN TIM2_MspPostInit 1 */

  /* USER CODE END TIM2_MspPostInit 1 */
  }

}
 8001760:	e022      	b.n	80017a8 <HAL_TIM_MspPostInit+0xa8>
  else if(htim->Instance==TIM2)
 8001762:	687b      	ldr	r3, [r7, #4]
 8001764:	681b      	ldr	r3, [r3, #0]
 8001766:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800176a:	d11d      	bne.n	80017a8 <HAL_TIM_MspPostInit+0xa8>
    __HAL_RCC_GPIOB_CLK_ENABLE();
 800176c:	2300      	movs	r3, #0
 800176e:	60fb      	str	r3, [r7, #12]
 8001770:	4b10      	ldr	r3, [pc, #64]	; (80017b4 <HAL_TIM_MspPostInit+0xb4>)
 8001772:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001774:	4a0f      	ldr	r2, [pc, #60]	; (80017b4 <HAL_TIM_MspPostInit+0xb4>)
 8001776:	f043 0302 	orr.w	r3, r3, #2
 800177a:	6313      	str	r3, [r2, #48]	; 0x30
 800177c:	4b0d      	ldr	r3, [pc, #52]	; (80017b4 <HAL_TIM_MspPostInit+0xb4>)
 800177e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001780:	f003 0302 	and.w	r3, r3, #2
 8001784:	60fb      	str	r3, [r7, #12]
 8001786:	68fb      	ldr	r3, [r7, #12]
    GPIO_InitStruct.Pin = PWM_B_Pin;
 8001788:	2308      	movs	r3, #8
 800178a:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800178c:	2302      	movs	r3, #2
 800178e:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001790:	2300      	movs	r3, #0
 8001792:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001794:	2300      	movs	r3, #0
 8001796:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF1_TIM2;
 8001798:	2301      	movs	r3, #1
 800179a:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(PWM_B_GPIO_Port, &GPIO_InitStruct);
 800179c:	f107 0314 	add.w	r3, r7, #20
 80017a0:	4619      	mov	r1, r3
 80017a2:	4806      	ldr	r0, [pc, #24]	; (80017bc <HAL_TIM_MspPostInit+0xbc>)
 80017a4:	f000 fe1a 	bl	80023dc <HAL_GPIO_Init>
}
 80017a8:	bf00      	nop
 80017aa:	3728      	adds	r7, #40	; 0x28
 80017ac:	46bd      	mov	sp, r7
 80017ae:	bd80      	pop	{r7, pc}
 80017b0:	40010000 	.word	0x40010000
 80017b4:	40023800 	.word	0x40023800
 80017b8:	40020000 	.word	0x40020000
 80017bc:	40020400 	.word	0x40020400

080017c0 <NMI_Handler>:
 80017c0:	b480      	push	{r7}
 80017c2:	af00      	add	r7, sp, #0
 80017c4:	e7fe      	b.n	80017c4 <NMI_Handler+0x4>

080017c6 <HardFault_Handler>:
 80017c6:	b480      	push	{r7}
 80017c8:	af00      	add	r7, sp, #0
 80017ca:	e7fe      	b.n	80017ca <HardFault_Handler+0x4>

080017cc <MemManage_Handler>:
 80017cc:	b480      	push	{r7}
 80017ce:	af00      	add	r7, sp, #0
 80017d0:	e7fe      	b.n	80017d0 <MemManage_Handler+0x4>

080017d2 <BusFault_Handler>:
 80017d2:	b480      	push	{r7}
 80017d4:	af00      	add	r7, sp, #0
 80017d6:	e7fe      	b.n	80017d6 <BusFault_Handler+0x4>

080017d8 <UsageFault_Handler>:
 80017d8:	b480      	push	{r7}
 80017da:	af00      	add	r7, sp, #0
 80017dc:	e7fe      	b.n	80017dc <UsageFault_Handler+0x4>

080017de <SVC_Handler>:
 80017de:	b480      	push	{r7}
 80017e0:	af00      	add	r7, sp, #0
 80017e2:	bf00      	nop
 80017e4:	46bd      	mov	sp, r7
 80017e6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80017ea:	4770      	bx	lr

080017ec <DebugMon_Handler>:
 80017ec:	b480      	push	{r7}
 80017ee:	af00      	add	r7, sp, #0
 80017f0:	bf00      	nop
 80017f2:	46bd      	mov	sp, r7
 80017f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80017f8:	4770      	bx	lr

080017fa <PendSV_Handler>:
 80017fa:	b480      	push	{r7}
 80017fc:	af00      	add	r7, sp, #0
 80017fe:	bf00      	nop
 8001800:	46bd      	mov	sp, r7
 8001802:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001806:	4770      	bx	lr

08001808 <SysTick_Handler>:
 8001808:	b580      	push	{r7, lr}
 800180a:	af00      	add	r7, sp, #0
 800180c:	f000 f8d2 	bl	80019b4 <HAL_IncTick>
 8001810:	bf00      	nop
 8001812:	bd80      	pop	{r7, pc}

08001814 <EXTI9_5_IRQHandler>:
 8001814:	b580      	push	{r7, lr}
 8001816:	af00      	add	r7, sp, #0
 8001818:	f44f 7080 	mov.w	r0, #256	; 0x100
 800181c:	f000 ff7c 	bl	8002718 <HAL_GPIO_EXTI_IRQHandler>
 8001820:	f44f 7000 	mov.w	r0, #512	; 0x200
 8001824:	f000 ff78 	bl	8002718 <HAL_GPIO_EXTI_IRQHandler>
 8001828:	bf00      	nop
 800182a:	bd80      	pop	{r7, pc}

0800182c <_sbrk>:
 800182c:	b580      	push	{r7, lr}
 800182e:	b086      	sub	sp, #24
 8001830:	af00      	add	r7, sp, #0
 8001832:	6078      	str	r0, [r7, #4]
 8001834:	4a14      	ldr	r2, [pc, #80]	; (8001888 <_sbrk+0x5c>)
 8001836:	4b15      	ldr	r3, [pc, #84]	; (800188c <_sbrk+0x60>)
 8001838:	1ad3      	subs	r3, r2, r3
 800183a:	617b      	str	r3, [r7, #20]
 800183c:	697b      	ldr	r3, [r7, #20]
 800183e:	613b      	str	r3, [r7, #16]
 8001840:	4b13      	ldr	r3, [pc, #76]	; (8001890 <_sbrk+0x64>)
 8001842:	681b      	ldr	r3, [r3, #0]
 8001844:	2b00      	cmp	r3, #0
 8001846:	d102      	bne.n	800184e <_sbrk+0x22>
 8001848:	4b11      	ldr	r3, [pc, #68]	; (8001890 <_sbrk+0x64>)
 800184a:	4a12      	ldr	r2, [pc, #72]	; (8001894 <_sbrk+0x68>)
 800184c:	601a      	str	r2, [r3, #0]
 800184e:	4b10      	ldr	r3, [pc, #64]	; (8001890 <_sbrk+0x64>)
 8001850:	681a      	ldr	r2, [r3, #0]
 8001852:	687b      	ldr	r3, [r7, #4]
 8001854:	4413      	add	r3, r2
 8001856:	693a      	ldr	r2, [r7, #16]
 8001858:	429a      	cmp	r2, r3
 800185a:	d207      	bcs.n	800186c <_sbrk+0x40>
 800185c:	f002 f874 	bl	8003948 <__errno>
 8001860:	4603      	mov	r3, r0
 8001862:	220c      	movs	r2, #12
 8001864:	601a      	str	r2, [r3, #0]
 8001866:	f04f 33ff 	mov.w	r3, #4294967295
 800186a:	e009      	b.n	8001880 <_sbrk+0x54>
 800186c:	4b08      	ldr	r3, [pc, #32]	; (8001890 <_sbrk+0x64>)
 800186e:	681b      	ldr	r3, [r3, #0]
 8001870:	60fb      	str	r3, [r7, #12]
 8001872:	4b07      	ldr	r3, [pc, #28]	; (8001890 <_sbrk+0x64>)
 8001874:	681a      	ldr	r2, [r3, #0]
 8001876:	687b      	ldr	r3, [r7, #4]
 8001878:	4413      	add	r3, r2
 800187a:	4a05      	ldr	r2, [pc, #20]	; (8001890 <_sbrk+0x64>)
 800187c:	6013      	str	r3, [r2, #0]
 800187e:	68fb      	ldr	r3, [r7, #12]
 8001880:	4618      	mov	r0, r3
 8001882:	3718      	adds	r7, #24
 8001884:	46bd      	mov	sp, r7
 8001886:	bd80      	pop	{r7, pc}
 8001888:	20020000 	.word	0x20020000
 800188c:	00000400 	.word	0x00000400
 8001890:	20000498 	.word	0x20000498
 8001894:	200005e8 	.word	0x200005e8

08001898 <SystemInit>:
 8001898:	b480      	push	{r7}
 800189a:	af00      	add	r7, sp, #0
 800189c:	4b06      	ldr	r3, [pc, #24]	; (80018b8 <SystemInit+0x20>)
 800189e:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 80018a2:	4a05      	ldr	r2, [pc, #20]	; (80018b8 <SystemInit+0x20>)
 80018a4:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 80018a8:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 80018ac:	bf00      	nop
 80018ae:	46bd      	mov	sp, r7
 80018b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80018b4:	4770      	bx	lr
 80018b6:	bf00      	nop
 80018b8:	e000ed00 	.word	0xe000ed00

080018bc <Reset_Handler>:
 80018bc:	f8df d034 	ldr.w	sp, [pc, #52]	; 80018f4 <LoopFillZerobss+0x12>
 80018c0:	480d      	ldr	r0, [pc, #52]	; (80018f8 <LoopFillZerobss+0x16>)
 80018c2:	490e      	ldr	r1, [pc, #56]	; (80018fc <LoopFillZerobss+0x1a>)
 80018c4:	4a0e      	ldr	r2, [pc, #56]	; (8001900 <LoopFillZerobss+0x1e>)
 80018c6:	2300      	movs	r3, #0
 80018c8:	e002      	b.n	80018d0 <LoopCopyDataInit>

080018ca <CopyDataInit>:
 80018ca:	58d4      	ldr	r4, [r2, r3]
 80018cc:	50c4      	str	r4, [r0, r3]
 80018ce:	3304      	adds	r3, #4

080018d0 <LoopCopyDataInit>:
 80018d0:	18c4      	adds	r4, r0, r3
 80018d2:	428c      	cmp	r4, r1
 80018d4:	d3f9      	bcc.n	80018ca <CopyDataInit>
 80018d6:	4a0b      	ldr	r2, [pc, #44]	; (8001904 <LoopFillZerobss+0x22>)
 80018d8:	4c0b      	ldr	r4, [pc, #44]	; (8001908 <LoopFillZerobss+0x26>)
 80018da:	2300      	movs	r3, #0
 80018dc:	e001      	b.n	80018e2 <LoopFillZerobss>

080018de <FillZerobss>:
 80018de:	6013      	str	r3, [r2, #0]
 80018e0:	3204      	adds	r2, #4

080018e2 <LoopFillZerobss>:
 80018e2:	42a2      	cmp	r2, r4
 80018e4:	d3fb      	bcc.n	80018de <FillZerobss>
 80018e6:	f7ff ffd7 	bl	8001898 <SystemInit>
 80018ea:	f002 f833 	bl	8003954 <__libc_init_array>
 80018ee:	f7ff fba1 	bl	8001034 <main>
 80018f2:	4770      	bx	lr
 80018f4:	20020000 	.word	0x20020000
 80018f8:	20000000 	.word	0x20000000
 80018fc:	20000088 	.word	0x20000088
 8001900:	0800453c 	.word	0x0800453c
 8001904:	20000088 	.word	0x20000088
 8001908:	200005e8 	.word	0x200005e8

0800190c <ADC_IRQHandler>:
 800190c:	e7fe      	b.n	800190c <ADC_IRQHandler>
	...

08001910 <HAL_Init>:
 8001910:	b580      	push	{r7, lr}
 8001912:	af00      	add	r7, sp, #0
 8001914:	4b0e      	ldr	r3, [pc, #56]	; (8001950 <HAL_Init+0x40>)
 8001916:	681b      	ldr	r3, [r3, #0]
 8001918:	4a0d      	ldr	r2, [pc, #52]	; (8001950 <HAL_Init+0x40>)
 800191a:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800191e:	6013      	str	r3, [r2, #0]
 8001920:	4b0b      	ldr	r3, [pc, #44]	; (8001950 <HAL_Init+0x40>)
 8001922:	681b      	ldr	r3, [r3, #0]
 8001924:	4a0a      	ldr	r2, [pc, #40]	; (8001950 <HAL_Init+0x40>)
 8001926:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800192a:	6013      	str	r3, [r2, #0]
 800192c:	4b08      	ldr	r3, [pc, #32]	; (8001950 <HAL_Init+0x40>)
 800192e:	681b      	ldr	r3, [r3, #0]
 8001930:	4a07      	ldr	r2, [pc, #28]	; (8001950 <HAL_Init+0x40>)
 8001932:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8001936:	6013      	str	r3, [r2, #0]
 8001938:	2003      	movs	r0, #3
 800193a:	f000 fd0d 	bl	8002358 <HAL_NVIC_SetPriorityGrouping>
 800193e:	200f      	movs	r0, #15
 8001940:	f000 f808 	bl	8001954 <HAL_InitTick>
 8001944:	f7ff fe3a 	bl	80015bc <HAL_MspInit>
 8001948:	2300      	movs	r3, #0
 800194a:	4618      	mov	r0, r3
 800194c:	bd80      	pop	{r7, pc}
 800194e:	bf00      	nop
 8001950:	40023c00 	.word	0x40023c00

08001954 <HAL_InitTick>:
 8001954:	b580      	push	{r7, lr}
 8001956:	b082      	sub	sp, #8
 8001958:	af00      	add	r7, sp, #0
 800195a:	6078      	str	r0, [r7, #4]
 800195c:	4b12      	ldr	r3, [pc, #72]	; (80019a8 <HAL_InitTick+0x54>)
 800195e:	681a      	ldr	r2, [r3, #0]
 8001960:	4b12      	ldr	r3, [pc, #72]	; (80019ac <HAL_InitTick+0x58>)
 8001962:	781b      	ldrb	r3, [r3, #0]
 8001964:	4619      	mov	r1, r3
 8001966:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800196a:	fbb3 f3f1 	udiv	r3, r3, r1
 800196e:	fbb2 f3f3 	udiv	r3, r2, r3
 8001972:	4618      	mov	r0, r3
 8001974:	f000 fd25 	bl	80023c2 <HAL_SYSTICK_Config>
 8001978:	4603      	mov	r3, r0
 800197a:	2b00      	cmp	r3, #0
 800197c:	d001      	beq.n	8001982 <HAL_InitTick+0x2e>
 800197e:	2301      	movs	r3, #1
 8001980:	e00e      	b.n	80019a0 <HAL_InitTick+0x4c>
 8001982:	687b      	ldr	r3, [r7, #4]
 8001984:	2b0f      	cmp	r3, #15
 8001986:	d80a      	bhi.n	800199e <HAL_InitTick+0x4a>
 8001988:	2200      	movs	r2, #0
 800198a:	6879      	ldr	r1, [r7, #4]
 800198c:	f04f 30ff 	mov.w	r0, #4294967295
 8001990:	f000 fced 	bl	800236e <HAL_NVIC_SetPriority>
 8001994:	4a06      	ldr	r2, [pc, #24]	; (80019b0 <HAL_InitTick+0x5c>)
 8001996:	687b      	ldr	r3, [r7, #4]
 8001998:	6013      	str	r3, [r2, #0]
 800199a:	2300      	movs	r3, #0
 800199c:	e000      	b.n	80019a0 <HAL_InitTick+0x4c>
 800199e:	2301      	movs	r3, #1
 80019a0:	4618      	mov	r0, r3
 80019a2:	3708      	adds	r7, #8
 80019a4:	46bd      	mov	sp, r7
 80019a6:	bd80      	pop	{r7, pc}
 80019a8:	2000002c 	.word	0x2000002c
 80019ac:	20000034 	.word	0x20000034
 80019b0:	20000030 	.word	0x20000030

080019b4 <HAL_IncTick>:
 80019b4:	b480      	push	{r7}
 80019b6:	af00      	add	r7, sp, #0
 80019b8:	4b06      	ldr	r3, [pc, #24]	; (80019d4 <HAL_IncTick+0x20>)
 80019ba:	781b      	ldrb	r3, [r3, #0]
 80019bc:	461a      	mov	r2, r3
 80019be:	4b06      	ldr	r3, [pc, #24]	; (80019d8 <HAL_IncTick+0x24>)
 80019c0:	681b      	ldr	r3, [r3, #0]
 80019c2:	4413      	add	r3, r2
 80019c4:	4a04      	ldr	r2, [pc, #16]	; (80019d8 <HAL_IncTick+0x24>)
 80019c6:	6013      	str	r3, [r2, #0]
 80019c8:	bf00      	nop
 80019ca:	46bd      	mov	sp, r7
 80019cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80019d0:	4770      	bx	lr
 80019d2:	bf00      	nop
 80019d4:	20000034 	.word	0x20000034
 80019d8:	2000049c 	.word	0x2000049c

080019dc <HAL_GetTick>:
 80019dc:	b480      	push	{r7}
 80019de:	af00      	add	r7, sp, #0
 80019e0:	4b03      	ldr	r3, [pc, #12]	; (80019f0 <HAL_GetTick+0x14>)
 80019e2:	681b      	ldr	r3, [r3, #0]
 80019e4:	4618      	mov	r0, r3
 80019e6:	46bd      	mov	sp, r7
 80019e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80019ec:	4770      	bx	lr
 80019ee:	bf00      	nop
 80019f0:	2000049c 	.word	0x2000049c

080019f4 <HAL_Delay>:
 80019f4:	b580      	push	{r7, lr}
 80019f6:	b084      	sub	sp, #16
 80019f8:	af00      	add	r7, sp, #0
 80019fa:	6078      	str	r0, [r7, #4]
 80019fc:	f7ff ffee 	bl	80019dc <HAL_GetTick>
 8001a00:	60b8      	str	r0, [r7, #8]
 8001a02:	687b      	ldr	r3, [r7, #4]
 8001a04:	60fb      	str	r3, [r7, #12]
 8001a06:	68fb      	ldr	r3, [r7, #12]
 8001a08:	f1b3 3fff 	cmp.w	r3, #4294967295
 8001a0c:	d005      	beq.n	8001a1a <HAL_Delay+0x26>
 8001a0e:	4b0a      	ldr	r3, [pc, #40]	; (8001a38 <HAL_Delay+0x44>)
 8001a10:	781b      	ldrb	r3, [r3, #0]
 8001a12:	461a      	mov	r2, r3
 8001a14:	68fb      	ldr	r3, [r7, #12]
 8001a16:	4413      	add	r3, r2
 8001a18:	60fb      	str	r3, [r7, #12]
 8001a1a:	bf00      	nop
 8001a1c:	f7ff ffde 	bl	80019dc <HAL_GetTick>
 8001a20:	4602      	mov	r2, r0
 8001a22:	68bb      	ldr	r3, [r7, #8]
 8001a24:	1ad3      	subs	r3, r2, r3
 8001a26:	68fa      	ldr	r2, [r7, #12]
 8001a28:	429a      	cmp	r2, r3
 8001a2a:	d8f7      	bhi.n	8001a1c <HAL_Delay+0x28>
 8001a2c:	bf00      	nop
 8001a2e:	bf00      	nop
 8001a30:	3710      	adds	r7, #16
 8001a32:	46bd      	mov	sp, r7
 8001a34:	bd80      	pop	{r7, pc}
 8001a36:	bf00      	nop
 8001a38:	20000034 	.word	0x20000034

08001a3c <HAL_ADC_Init>:
 8001a3c:	b580      	push	{r7, lr}
 8001a3e:	b084      	sub	sp, #16
 8001a40:	af00      	add	r7, sp, #0
 8001a42:	6078      	str	r0, [r7, #4]
 8001a44:	2300      	movs	r3, #0
 8001a46:	73fb      	strb	r3, [r7, #15]
 8001a48:	687b      	ldr	r3, [r7, #4]
 8001a4a:	2b00      	cmp	r3, #0
 8001a4c:	d101      	bne.n	8001a52 <HAL_ADC_Init+0x16>
 8001a4e:	2301      	movs	r3, #1
 8001a50:	e033      	b.n	8001aba <HAL_ADC_Init+0x7e>
 8001a52:	687b      	ldr	r3, [r7, #4]
 8001a54:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001a56:	2b00      	cmp	r3, #0
 8001a58:	d109      	bne.n	8001a6e <HAL_ADC_Init+0x32>
 8001a5a:	6878      	ldr	r0, [r7, #4]
 8001a5c:	f7ff fdd6 	bl	800160c <HAL_ADC_MspInit>
 8001a60:	687b      	ldr	r3, [r7, #4]
 8001a62:	2200      	movs	r2, #0
 8001a64:	645a      	str	r2, [r3, #68]	; 0x44
 8001a66:	687b      	ldr	r3, [r7, #4]
 8001a68:	2200      	movs	r2, #0
 8001a6a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8001a6e:	687b      	ldr	r3, [r7, #4]
 8001a70:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001a72:	f003 0310 	and.w	r3, r3, #16
 8001a76:	2b00      	cmp	r3, #0
 8001a78:	d118      	bne.n	8001aac <HAL_ADC_Init+0x70>
 8001a7a:	687b      	ldr	r3, [r7, #4]
 8001a7c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001a7e:	f423 5388 	bic.w	r3, r3, #4352	; 0x1100
 8001a82:	f023 0302 	bic.w	r3, r3, #2
 8001a86:	f043 0202 	orr.w	r2, r3, #2
 8001a8a:	687b      	ldr	r3, [r7, #4]
 8001a8c:	641a      	str	r2, [r3, #64]	; 0x40
 8001a8e:	6878      	ldr	r0, [r7, #4]
 8001a90:	f000 fa96 	bl	8001fc0 <ADC_Init>
 8001a94:	687b      	ldr	r3, [r7, #4]
 8001a96:	2200      	movs	r2, #0
 8001a98:	645a      	str	r2, [r3, #68]	; 0x44
 8001a9a:	687b      	ldr	r3, [r7, #4]
 8001a9c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001a9e:	f023 0303 	bic.w	r3, r3, #3
 8001aa2:	f043 0201 	orr.w	r2, r3, #1
 8001aa6:	687b      	ldr	r3, [r7, #4]
 8001aa8:	641a      	str	r2, [r3, #64]	; 0x40
 8001aaa:	e001      	b.n	8001ab0 <HAL_ADC_Init+0x74>
 8001aac:	2301      	movs	r3, #1
 8001aae:	73fb      	strb	r3, [r7, #15]
 8001ab0:	687b      	ldr	r3, [r7, #4]
 8001ab2:	2200      	movs	r2, #0
 8001ab4:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8001ab8:	7bfb      	ldrb	r3, [r7, #15]
 8001aba:	4618      	mov	r0, r3
 8001abc:	3710      	adds	r7, #16
 8001abe:	46bd      	mov	sp, r7
 8001ac0:	bd80      	pop	{r7, pc}
	...

08001ac4 <HAL_ADC_Start>:
 8001ac4:	b480      	push	{r7}
 8001ac6:	b085      	sub	sp, #20
 8001ac8:	af00      	add	r7, sp, #0
 8001aca:	6078      	str	r0, [r7, #4]
 8001acc:	2300      	movs	r3, #0
 8001ace:	60bb      	str	r3, [r7, #8]
 8001ad0:	687b      	ldr	r3, [r7, #4]
 8001ad2:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8001ad6:	2b01      	cmp	r3, #1
 8001ad8:	d101      	bne.n	8001ade <HAL_ADC_Start+0x1a>
 8001ada:	2302      	movs	r3, #2
 8001adc:	e097      	b.n	8001c0e <HAL_ADC_Start+0x14a>
 8001ade:	687b      	ldr	r3, [r7, #4]
 8001ae0:	2201      	movs	r2, #1
 8001ae2:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8001ae6:	687b      	ldr	r3, [r7, #4]
 8001ae8:	681b      	ldr	r3, [r3, #0]
 8001aea:	689b      	ldr	r3, [r3, #8]
 8001aec:	f003 0301 	and.w	r3, r3, #1
 8001af0:	2b01      	cmp	r3, #1
 8001af2:	d018      	beq.n	8001b26 <HAL_ADC_Start+0x62>
 8001af4:	687b      	ldr	r3, [r7, #4]
 8001af6:	681b      	ldr	r3, [r3, #0]
 8001af8:	689a      	ldr	r2, [r3, #8]
 8001afa:	687b      	ldr	r3, [r7, #4]
 8001afc:	681b      	ldr	r3, [r3, #0]
 8001afe:	f042 0201 	orr.w	r2, r2, #1
 8001b02:	609a      	str	r2, [r3, #8]
 8001b04:	4b45      	ldr	r3, [pc, #276]	; (8001c1c <HAL_ADC_Start+0x158>)
 8001b06:	681b      	ldr	r3, [r3, #0]
 8001b08:	4a45      	ldr	r2, [pc, #276]	; (8001c20 <HAL_ADC_Start+0x15c>)
 8001b0a:	fba2 2303 	umull	r2, r3, r2, r3
 8001b0e:	0c9a      	lsrs	r2, r3, #18
 8001b10:	4613      	mov	r3, r2
 8001b12:	005b      	lsls	r3, r3, #1
 8001b14:	4413      	add	r3, r2
 8001b16:	60bb      	str	r3, [r7, #8]
 8001b18:	e002      	b.n	8001b20 <HAL_ADC_Start+0x5c>
 8001b1a:	68bb      	ldr	r3, [r7, #8]
 8001b1c:	3b01      	subs	r3, #1
 8001b1e:	60bb      	str	r3, [r7, #8]
 8001b20:	68bb      	ldr	r3, [r7, #8]
 8001b22:	2b00      	cmp	r3, #0
 8001b24:	d1f9      	bne.n	8001b1a <HAL_ADC_Start+0x56>
 8001b26:	687b      	ldr	r3, [r7, #4]
 8001b28:	681b      	ldr	r3, [r3, #0]
 8001b2a:	689b      	ldr	r3, [r3, #8]
 8001b2c:	f003 0301 	and.w	r3, r3, #1
 8001b30:	2b01      	cmp	r3, #1
 8001b32:	d15f      	bne.n	8001bf4 <HAL_ADC_Start+0x130>
 8001b34:	687b      	ldr	r3, [r7, #4]
 8001b36:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001b38:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 8001b3c:	f023 0301 	bic.w	r3, r3, #1
 8001b40:	f443 7280 	orr.w	r2, r3, #256	; 0x100
 8001b44:	687b      	ldr	r3, [r7, #4]
 8001b46:	641a      	str	r2, [r3, #64]	; 0x40
 8001b48:	687b      	ldr	r3, [r7, #4]
 8001b4a:	681b      	ldr	r3, [r3, #0]
 8001b4c:	685b      	ldr	r3, [r3, #4]
 8001b4e:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8001b52:	2b00      	cmp	r3, #0
 8001b54:	d007      	beq.n	8001b66 <HAL_ADC_Start+0xa2>
 8001b56:	687b      	ldr	r3, [r7, #4]
 8001b58:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001b5a:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 8001b5e:	f443 5280 	orr.w	r2, r3, #4096	; 0x1000
 8001b62:	687b      	ldr	r3, [r7, #4]
 8001b64:	641a      	str	r2, [r3, #64]	; 0x40
 8001b66:	687b      	ldr	r3, [r7, #4]
 8001b68:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001b6a:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8001b6e:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8001b72:	d106      	bne.n	8001b82 <HAL_ADC_Start+0xbe>
 8001b74:	687b      	ldr	r3, [r7, #4]
 8001b76:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001b78:	f023 0206 	bic.w	r2, r3, #6
 8001b7c:	687b      	ldr	r3, [r7, #4]
 8001b7e:	645a      	str	r2, [r3, #68]	; 0x44
 8001b80:	e002      	b.n	8001b88 <HAL_ADC_Start+0xc4>
 8001b82:	687b      	ldr	r3, [r7, #4]
 8001b84:	2200      	movs	r2, #0
 8001b86:	645a      	str	r2, [r3, #68]	; 0x44
 8001b88:	687b      	ldr	r3, [r7, #4]
 8001b8a:	2200      	movs	r2, #0
 8001b8c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8001b90:	4b24      	ldr	r3, [pc, #144]	; (8001c24 <HAL_ADC_Start+0x160>)
 8001b92:	60fb      	str	r3, [r7, #12]
 8001b94:	687b      	ldr	r3, [r7, #4]
 8001b96:	681b      	ldr	r3, [r3, #0]
 8001b98:	f06f 0222 	mvn.w	r2, #34	; 0x22
 8001b9c:	601a      	str	r2, [r3, #0]
 8001b9e:	68fb      	ldr	r3, [r7, #12]
 8001ba0:	685b      	ldr	r3, [r3, #4]
 8001ba2:	f003 031f 	and.w	r3, r3, #31
 8001ba6:	2b00      	cmp	r3, #0
 8001ba8:	d10f      	bne.n	8001bca <HAL_ADC_Start+0x106>
 8001baa:	687b      	ldr	r3, [r7, #4]
 8001bac:	681b      	ldr	r3, [r3, #0]
 8001bae:	689b      	ldr	r3, [r3, #8]
 8001bb0:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 8001bb4:	2b00      	cmp	r3, #0
 8001bb6:	d129      	bne.n	8001c0c <HAL_ADC_Start+0x148>
 8001bb8:	687b      	ldr	r3, [r7, #4]
 8001bba:	681b      	ldr	r3, [r3, #0]
 8001bbc:	689a      	ldr	r2, [r3, #8]
 8001bbe:	687b      	ldr	r3, [r7, #4]
 8001bc0:	681b      	ldr	r3, [r3, #0]
 8001bc2:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 8001bc6:	609a      	str	r2, [r3, #8]
 8001bc8:	e020      	b.n	8001c0c <HAL_ADC_Start+0x148>
 8001bca:	687b      	ldr	r3, [r7, #4]
 8001bcc:	681b      	ldr	r3, [r3, #0]
 8001bce:	4a16      	ldr	r2, [pc, #88]	; (8001c28 <HAL_ADC_Start+0x164>)
 8001bd0:	4293      	cmp	r3, r2
 8001bd2:	d11b      	bne.n	8001c0c <HAL_ADC_Start+0x148>
 8001bd4:	687b      	ldr	r3, [r7, #4]
 8001bd6:	681b      	ldr	r3, [r3, #0]
 8001bd8:	689b      	ldr	r3, [r3, #8]
 8001bda:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 8001bde:	2b00      	cmp	r3, #0
 8001be0:	d114      	bne.n	8001c0c <HAL_ADC_Start+0x148>
 8001be2:	687b      	ldr	r3, [r7, #4]
 8001be4:	681b      	ldr	r3, [r3, #0]
 8001be6:	689a      	ldr	r2, [r3, #8]
 8001be8:	687b      	ldr	r3, [r7, #4]
 8001bea:	681b      	ldr	r3, [r3, #0]
 8001bec:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 8001bf0:	609a      	str	r2, [r3, #8]
 8001bf2:	e00b      	b.n	8001c0c <HAL_ADC_Start+0x148>
 8001bf4:	687b      	ldr	r3, [r7, #4]
 8001bf6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001bf8:	f043 0210 	orr.w	r2, r3, #16
 8001bfc:	687b      	ldr	r3, [r7, #4]
 8001bfe:	641a      	str	r2, [r3, #64]	; 0x40
 8001c00:	687b      	ldr	r3, [r7, #4]
 8001c02:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001c04:	f043 0201 	orr.w	r2, r3, #1
 8001c08:	687b      	ldr	r3, [r7, #4]
 8001c0a:	645a      	str	r2, [r3, #68]	; 0x44
 8001c0c:	2300      	movs	r3, #0
 8001c0e:	4618      	mov	r0, r3
 8001c10:	3714      	adds	r7, #20
 8001c12:	46bd      	mov	sp, r7
 8001c14:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001c18:	4770      	bx	lr
 8001c1a:	bf00      	nop
 8001c1c:	2000002c 	.word	0x2000002c
 8001c20:	431bde83 	.word	0x431bde83
 8001c24:	40012300 	.word	0x40012300
 8001c28:	40012000 	.word	0x40012000

08001c2c <HAL_ADC_PollForConversion>:
 8001c2c:	b580      	push	{r7, lr}
 8001c2e:	b084      	sub	sp, #16
 8001c30:	af00      	add	r7, sp, #0
 8001c32:	6078      	str	r0, [r7, #4]
 8001c34:	6039      	str	r1, [r7, #0]
 8001c36:	2300      	movs	r3, #0
 8001c38:	60fb      	str	r3, [r7, #12]
 8001c3a:	687b      	ldr	r3, [r7, #4]
 8001c3c:	681b      	ldr	r3, [r3, #0]
 8001c3e:	689b      	ldr	r3, [r3, #8]
 8001c40:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8001c44:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8001c48:	d113      	bne.n	8001c72 <HAL_ADC_PollForConversion+0x46>
 8001c4a:	687b      	ldr	r3, [r7, #4]
 8001c4c:	681b      	ldr	r3, [r3, #0]
 8001c4e:	689b      	ldr	r3, [r3, #8]
 8001c50:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8001c54:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8001c58:	d10b      	bne.n	8001c72 <HAL_ADC_PollForConversion+0x46>
 8001c5a:	687b      	ldr	r3, [r7, #4]
 8001c5c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001c5e:	f043 0220 	orr.w	r2, r3, #32
 8001c62:	687b      	ldr	r3, [r7, #4]
 8001c64:	641a      	str	r2, [r3, #64]	; 0x40
 8001c66:	687b      	ldr	r3, [r7, #4]
 8001c68:	2200      	movs	r2, #0
 8001c6a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8001c6e:	2301      	movs	r3, #1
 8001c70:	e063      	b.n	8001d3a <HAL_ADC_PollForConversion+0x10e>
 8001c72:	f7ff feb3 	bl	80019dc <HAL_GetTick>
 8001c76:	60f8      	str	r0, [r7, #12]
 8001c78:	e021      	b.n	8001cbe <HAL_ADC_PollForConversion+0x92>
 8001c7a:	683b      	ldr	r3, [r7, #0]
 8001c7c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8001c80:	d01d      	beq.n	8001cbe <HAL_ADC_PollForConversion+0x92>
 8001c82:	683b      	ldr	r3, [r7, #0]
 8001c84:	2b00      	cmp	r3, #0
 8001c86:	d007      	beq.n	8001c98 <HAL_ADC_PollForConversion+0x6c>
 8001c88:	f7ff fea8 	bl	80019dc <HAL_GetTick>
 8001c8c:	4602      	mov	r2, r0
 8001c8e:	68fb      	ldr	r3, [r7, #12]
 8001c90:	1ad3      	subs	r3, r2, r3
 8001c92:	683a      	ldr	r2, [r7, #0]
 8001c94:	429a      	cmp	r2, r3
 8001c96:	d212      	bcs.n	8001cbe <HAL_ADC_PollForConversion+0x92>
 8001c98:	687b      	ldr	r3, [r7, #4]
 8001c9a:	681b      	ldr	r3, [r3, #0]
 8001c9c:	681b      	ldr	r3, [r3, #0]
 8001c9e:	f003 0302 	and.w	r3, r3, #2
 8001ca2:	2b02      	cmp	r3, #2
 8001ca4:	d00b      	beq.n	8001cbe <HAL_ADC_PollForConversion+0x92>
 8001ca6:	687b      	ldr	r3, [r7, #4]
 8001ca8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001caa:	f043 0204 	orr.w	r2, r3, #4
 8001cae:	687b      	ldr	r3, [r7, #4]
 8001cb0:	641a      	str	r2, [r3, #64]	; 0x40
 8001cb2:	687b      	ldr	r3, [r7, #4]
 8001cb4:	2200      	movs	r2, #0
 8001cb6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8001cba:	2303      	movs	r3, #3
 8001cbc:	e03d      	b.n	8001d3a <HAL_ADC_PollForConversion+0x10e>
 8001cbe:	687b      	ldr	r3, [r7, #4]
 8001cc0:	681b      	ldr	r3, [r3, #0]
 8001cc2:	681b      	ldr	r3, [r3, #0]
 8001cc4:	f003 0302 	and.w	r3, r3, #2
 8001cc8:	2b02      	cmp	r3, #2
 8001cca:	d1d6      	bne.n	8001c7a <HAL_ADC_PollForConversion+0x4e>
 8001ccc:	687b      	ldr	r3, [r7, #4]
 8001cce:	681b      	ldr	r3, [r3, #0]
 8001cd0:	f06f 0212 	mvn.w	r2, #18
 8001cd4:	601a      	str	r2, [r3, #0]
 8001cd6:	687b      	ldr	r3, [r7, #4]
 8001cd8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001cda:	f443 7200 	orr.w	r2, r3, #512	; 0x200
 8001cde:	687b      	ldr	r3, [r7, #4]
 8001ce0:	641a      	str	r2, [r3, #64]	; 0x40
 8001ce2:	687b      	ldr	r3, [r7, #4]
 8001ce4:	681b      	ldr	r3, [r3, #0]
 8001ce6:	689b      	ldr	r3, [r3, #8]
 8001ce8:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 8001cec:	2b00      	cmp	r3, #0
 8001cee:	d123      	bne.n	8001d38 <HAL_ADC_PollForConversion+0x10c>
 8001cf0:	687b      	ldr	r3, [r7, #4]
 8001cf2:	7e1b      	ldrb	r3, [r3, #24]
 8001cf4:	2b00      	cmp	r3, #0
 8001cf6:	d11f      	bne.n	8001d38 <HAL_ADC_PollForConversion+0x10c>
 8001cf8:	687b      	ldr	r3, [r7, #4]
 8001cfa:	681b      	ldr	r3, [r3, #0]
 8001cfc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8001cfe:	f403 0370 	and.w	r3, r3, #15728640	; 0xf00000
 8001d02:	2b00      	cmp	r3, #0
 8001d04:	d006      	beq.n	8001d14 <HAL_ADC_PollForConversion+0xe8>
 8001d06:	687b      	ldr	r3, [r7, #4]
 8001d08:	681b      	ldr	r3, [r3, #0]
 8001d0a:	689b      	ldr	r3, [r3, #8]
 8001d0c:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8001d10:	2b00      	cmp	r3, #0
 8001d12:	d111      	bne.n	8001d38 <HAL_ADC_PollForConversion+0x10c>
 8001d14:	687b      	ldr	r3, [r7, #4]
 8001d16:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001d18:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 8001d1c:	687b      	ldr	r3, [r7, #4]
 8001d1e:	641a      	str	r2, [r3, #64]	; 0x40
 8001d20:	687b      	ldr	r3, [r7, #4]
 8001d22:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001d24:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8001d28:	2b00      	cmp	r3, #0
 8001d2a:	d105      	bne.n	8001d38 <HAL_ADC_PollForConversion+0x10c>
 8001d2c:	687b      	ldr	r3, [r7, #4]
 8001d2e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001d30:	f043 0201 	orr.w	r2, r3, #1
 8001d34:	687b      	ldr	r3, [r7, #4]
 8001d36:	641a      	str	r2, [r3, #64]	; 0x40
 8001d38:	2300      	movs	r3, #0
 8001d3a:	4618      	mov	r0, r3
 8001d3c:	3710      	adds	r7, #16
 8001d3e:	46bd      	mov	sp, r7
 8001d40:	bd80      	pop	{r7, pc}

08001d42 <HAL_ADC_GetValue>:
 8001d42:	b480      	push	{r7}
 8001d44:	b083      	sub	sp, #12
 8001d46:	af00      	add	r7, sp, #0
 8001d48:	6078      	str	r0, [r7, #4]
 8001d4a:	687b      	ldr	r3, [r7, #4]
 8001d4c:	681b      	ldr	r3, [r3, #0]
 8001d4e:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8001d50:	4618      	mov	r0, r3
 8001d52:	370c      	adds	r7, #12
 8001d54:	46bd      	mov	sp, r7
 8001d56:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001d5a:	4770      	bx	lr

08001d5c <HAL_ADC_ConfigChannel>:
 8001d5c:	b480      	push	{r7}
 8001d5e:	b085      	sub	sp, #20
 8001d60:	af00      	add	r7, sp, #0
 8001d62:	6078      	str	r0, [r7, #4]
 8001d64:	6039      	str	r1, [r7, #0]
 8001d66:	2300      	movs	r3, #0
 8001d68:	60bb      	str	r3, [r7, #8]
 8001d6a:	687b      	ldr	r3, [r7, #4]
 8001d6c:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8001d70:	2b01      	cmp	r3, #1
 8001d72:	d101      	bne.n	8001d78 <HAL_ADC_ConfigChannel+0x1c>
 8001d74:	2302      	movs	r3, #2
 8001d76:	e113      	b.n	8001fa0 <HAL_ADC_ConfigChannel+0x244>
 8001d78:	687b      	ldr	r3, [r7, #4]
 8001d7a:	2201      	movs	r2, #1
 8001d7c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8001d80:	683b      	ldr	r3, [r7, #0]
 8001d82:	681b      	ldr	r3, [r3, #0]
 8001d84:	2b09      	cmp	r3, #9
 8001d86:	d925      	bls.n	8001dd4 <HAL_ADC_ConfigChannel+0x78>
 8001d88:	687b      	ldr	r3, [r7, #4]
 8001d8a:	681b      	ldr	r3, [r3, #0]
 8001d8c:	68d9      	ldr	r1, [r3, #12]
 8001d8e:	683b      	ldr	r3, [r7, #0]
 8001d90:	681b      	ldr	r3, [r3, #0]
 8001d92:	b29b      	uxth	r3, r3
 8001d94:	461a      	mov	r2, r3
 8001d96:	4613      	mov	r3, r2
 8001d98:	005b      	lsls	r3, r3, #1
 8001d9a:	4413      	add	r3, r2
 8001d9c:	3b1e      	subs	r3, #30
 8001d9e:	2207      	movs	r2, #7
 8001da0:	fa02 f303 	lsl.w	r3, r2, r3
 8001da4:	43da      	mvns	r2, r3
 8001da6:	687b      	ldr	r3, [r7, #4]
 8001da8:	681b      	ldr	r3, [r3, #0]
 8001daa:	400a      	ands	r2, r1
 8001dac:	60da      	str	r2, [r3, #12]
 8001dae:	687b      	ldr	r3, [r7, #4]
 8001db0:	681b      	ldr	r3, [r3, #0]
 8001db2:	68d9      	ldr	r1, [r3, #12]
 8001db4:	683b      	ldr	r3, [r7, #0]
 8001db6:	689a      	ldr	r2, [r3, #8]
 8001db8:	683b      	ldr	r3, [r7, #0]
 8001dba:	681b      	ldr	r3, [r3, #0]
 8001dbc:	b29b      	uxth	r3, r3
 8001dbe:	4618      	mov	r0, r3
 8001dc0:	4603      	mov	r3, r0
 8001dc2:	005b      	lsls	r3, r3, #1
 8001dc4:	4403      	add	r3, r0
 8001dc6:	3b1e      	subs	r3, #30
 8001dc8:	409a      	lsls	r2, r3
 8001dca:	687b      	ldr	r3, [r7, #4]
 8001dcc:	681b      	ldr	r3, [r3, #0]
 8001dce:	430a      	orrs	r2, r1
 8001dd0:	60da      	str	r2, [r3, #12]
 8001dd2:	e022      	b.n	8001e1a <HAL_ADC_ConfigChannel+0xbe>
 8001dd4:	687b      	ldr	r3, [r7, #4]
 8001dd6:	681b      	ldr	r3, [r3, #0]
 8001dd8:	6919      	ldr	r1, [r3, #16]
 8001dda:	683b      	ldr	r3, [r7, #0]
 8001ddc:	681b      	ldr	r3, [r3, #0]
 8001dde:	b29b      	uxth	r3, r3
 8001de0:	461a      	mov	r2, r3
 8001de2:	4613      	mov	r3, r2
 8001de4:	005b      	lsls	r3, r3, #1
 8001de6:	4413      	add	r3, r2
 8001de8:	2207      	movs	r2, #7
 8001dea:	fa02 f303 	lsl.w	r3, r2, r3
 8001dee:	43da      	mvns	r2, r3
 8001df0:	687b      	ldr	r3, [r7, #4]
 8001df2:	681b      	ldr	r3, [r3, #0]
 8001df4:	400a      	ands	r2, r1
 8001df6:	611a      	str	r2, [r3, #16]
 8001df8:	687b      	ldr	r3, [r7, #4]
 8001dfa:	681b      	ldr	r3, [r3, #0]
 8001dfc:	6919      	ldr	r1, [r3, #16]
 8001dfe:	683b      	ldr	r3, [r7, #0]
 8001e00:	689a      	ldr	r2, [r3, #8]
 8001e02:	683b      	ldr	r3, [r7, #0]
 8001e04:	681b      	ldr	r3, [r3, #0]
 8001e06:	b29b      	uxth	r3, r3
 8001e08:	4618      	mov	r0, r3
 8001e0a:	4603      	mov	r3, r0
 8001e0c:	005b      	lsls	r3, r3, #1
 8001e0e:	4403      	add	r3, r0
 8001e10:	409a      	lsls	r2, r3
 8001e12:	687b      	ldr	r3, [r7, #4]
 8001e14:	681b      	ldr	r3, [r3, #0]
 8001e16:	430a      	orrs	r2, r1
 8001e18:	611a      	str	r2, [r3, #16]
 8001e1a:	683b      	ldr	r3, [r7, #0]
 8001e1c:	685b      	ldr	r3, [r3, #4]
 8001e1e:	2b06      	cmp	r3, #6
 8001e20:	d824      	bhi.n	8001e6c <HAL_ADC_ConfigChannel+0x110>
 8001e22:	687b      	ldr	r3, [r7, #4]
 8001e24:	681b      	ldr	r3, [r3, #0]
 8001e26:	6b59      	ldr	r1, [r3, #52]	; 0x34
 8001e28:	683b      	ldr	r3, [r7, #0]
 8001e2a:	685a      	ldr	r2, [r3, #4]
 8001e2c:	4613      	mov	r3, r2
 8001e2e:	009b      	lsls	r3, r3, #2
 8001e30:	4413      	add	r3, r2
 8001e32:	3b05      	subs	r3, #5
 8001e34:	221f      	movs	r2, #31
 8001e36:	fa02 f303 	lsl.w	r3, r2, r3
 8001e3a:	43da      	mvns	r2, r3
 8001e3c:	687b      	ldr	r3, [r7, #4]
 8001e3e:	681b      	ldr	r3, [r3, #0]
 8001e40:	400a      	ands	r2, r1
 8001e42:	635a      	str	r2, [r3, #52]	; 0x34
 8001e44:	687b      	ldr	r3, [r7, #4]
 8001e46:	681b      	ldr	r3, [r3, #0]
 8001e48:	6b59      	ldr	r1, [r3, #52]	; 0x34
 8001e4a:	683b      	ldr	r3, [r7, #0]
 8001e4c:	681b      	ldr	r3, [r3, #0]
 8001e4e:	b29b      	uxth	r3, r3
 8001e50:	4618      	mov	r0, r3
 8001e52:	683b      	ldr	r3, [r7, #0]
 8001e54:	685a      	ldr	r2, [r3, #4]
 8001e56:	4613      	mov	r3, r2
 8001e58:	009b      	lsls	r3, r3, #2
 8001e5a:	4413      	add	r3, r2
 8001e5c:	3b05      	subs	r3, #5
 8001e5e:	fa00 f203 	lsl.w	r2, r0, r3
 8001e62:	687b      	ldr	r3, [r7, #4]
 8001e64:	681b      	ldr	r3, [r3, #0]
 8001e66:	430a      	orrs	r2, r1
 8001e68:	635a      	str	r2, [r3, #52]	; 0x34
 8001e6a:	e04c      	b.n	8001f06 <HAL_ADC_ConfigChannel+0x1aa>
 8001e6c:	683b      	ldr	r3, [r7, #0]
 8001e6e:	685b      	ldr	r3, [r3, #4]
 8001e70:	2b0c      	cmp	r3, #12
 8001e72:	d824      	bhi.n	8001ebe <HAL_ADC_ConfigChannel+0x162>
 8001e74:	687b      	ldr	r3, [r7, #4]
 8001e76:	681b      	ldr	r3, [r3, #0]
 8001e78:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001e7a:	683b      	ldr	r3, [r7, #0]
 8001e7c:	685a      	ldr	r2, [r3, #4]
 8001e7e:	4613      	mov	r3, r2
 8001e80:	009b      	lsls	r3, r3, #2
 8001e82:	4413      	add	r3, r2
 8001e84:	3b23      	subs	r3, #35	; 0x23
 8001e86:	221f      	movs	r2, #31
 8001e88:	fa02 f303 	lsl.w	r3, r2, r3
 8001e8c:	43da      	mvns	r2, r3
 8001e8e:	687b      	ldr	r3, [r7, #4]
 8001e90:	681b      	ldr	r3, [r3, #0]
 8001e92:	400a      	ands	r2, r1
 8001e94:	631a      	str	r2, [r3, #48]	; 0x30
 8001e96:	687b      	ldr	r3, [r7, #4]
 8001e98:	681b      	ldr	r3, [r3, #0]
 8001e9a:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8001e9c:	683b      	ldr	r3, [r7, #0]
 8001e9e:	681b      	ldr	r3, [r3, #0]
 8001ea0:	b29b      	uxth	r3, r3
 8001ea2:	4618      	mov	r0, r3
 8001ea4:	683b      	ldr	r3, [r7, #0]
 8001ea6:	685a      	ldr	r2, [r3, #4]
 8001ea8:	4613      	mov	r3, r2
 8001eaa:	009b      	lsls	r3, r3, #2
 8001eac:	4413      	add	r3, r2
 8001eae:	3b23      	subs	r3, #35	; 0x23
 8001eb0:	fa00 f203 	lsl.w	r2, r0, r3
 8001eb4:	687b      	ldr	r3, [r7, #4]
 8001eb6:	681b      	ldr	r3, [r3, #0]
 8001eb8:	430a      	orrs	r2, r1
 8001eba:	631a      	str	r2, [r3, #48]	; 0x30
 8001ebc:	e023      	b.n	8001f06 <HAL_ADC_ConfigChannel+0x1aa>
 8001ebe:	687b      	ldr	r3, [r7, #4]
 8001ec0:	681b      	ldr	r3, [r3, #0]
 8001ec2:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8001ec4:	683b      	ldr	r3, [r7, #0]
 8001ec6:	685a      	ldr	r2, [r3, #4]
 8001ec8:	4613      	mov	r3, r2
 8001eca:	009b      	lsls	r3, r3, #2
 8001ecc:	4413      	add	r3, r2
 8001ece:	3b41      	subs	r3, #65	; 0x41
 8001ed0:	221f      	movs	r2, #31
 8001ed2:	fa02 f303 	lsl.w	r3, r2, r3
 8001ed6:	43da      	mvns	r2, r3
 8001ed8:	687b      	ldr	r3, [r7, #4]
 8001eda:	681b      	ldr	r3, [r3, #0]
 8001edc:	400a      	ands	r2, r1
 8001ede:	62da      	str	r2, [r3, #44]	; 0x2c
 8001ee0:	687b      	ldr	r3, [r7, #4]
 8001ee2:	681b      	ldr	r3, [r3, #0]
 8001ee4:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8001ee6:	683b      	ldr	r3, [r7, #0]
 8001ee8:	681b      	ldr	r3, [r3, #0]
 8001eea:	b29b      	uxth	r3, r3
 8001eec:	4618      	mov	r0, r3
 8001eee:	683b      	ldr	r3, [r7, #0]
 8001ef0:	685a      	ldr	r2, [r3, #4]
 8001ef2:	4613      	mov	r3, r2
 8001ef4:	009b      	lsls	r3, r3, #2
 8001ef6:	4413      	add	r3, r2
 8001ef8:	3b41      	subs	r3, #65	; 0x41
 8001efa:	fa00 f203 	lsl.w	r2, r0, r3
 8001efe:	687b      	ldr	r3, [r7, #4]
 8001f00:	681b      	ldr	r3, [r3, #0]
 8001f02:	430a      	orrs	r2, r1
 8001f04:	62da      	str	r2, [r3, #44]	; 0x2c
 8001f06:	4b29      	ldr	r3, [pc, #164]	; (8001fac <HAL_ADC_ConfigChannel+0x250>)
 8001f08:	60fb      	str	r3, [r7, #12]
 8001f0a:	687b      	ldr	r3, [r7, #4]
 8001f0c:	681b      	ldr	r3, [r3, #0]
 8001f0e:	4a28      	ldr	r2, [pc, #160]	; (8001fb0 <HAL_ADC_ConfigChannel+0x254>)
 8001f10:	4293      	cmp	r3, r2
 8001f12:	d10f      	bne.n	8001f34 <HAL_ADC_ConfigChannel+0x1d8>
 8001f14:	683b      	ldr	r3, [r7, #0]
 8001f16:	681b      	ldr	r3, [r3, #0]
 8001f18:	2b12      	cmp	r3, #18
 8001f1a:	d10b      	bne.n	8001f34 <HAL_ADC_ConfigChannel+0x1d8>
 8001f1c:	68fb      	ldr	r3, [r7, #12]
 8001f1e:	685b      	ldr	r3, [r3, #4]
 8001f20:	f423 0200 	bic.w	r2, r3, #8388608	; 0x800000
 8001f24:	68fb      	ldr	r3, [r7, #12]
 8001f26:	605a      	str	r2, [r3, #4]
 8001f28:	68fb      	ldr	r3, [r7, #12]
 8001f2a:	685b      	ldr	r3, [r3, #4]
 8001f2c:	f443 0280 	orr.w	r2, r3, #4194304	; 0x400000
 8001f30:	68fb      	ldr	r3, [r7, #12]
 8001f32:	605a      	str	r2, [r3, #4]
 8001f34:	687b      	ldr	r3, [r7, #4]
 8001f36:	681b      	ldr	r3, [r3, #0]
 8001f38:	4a1d      	ldr	r2, [pc, #116]	; (8001fb0 <HAL_ADC_ConfigChannel+0x254>)
 8001f3a:	4293      	cmp	r3, r2
 8001f3c:	d12b      	bne.n	8001f96 <HAL_ADC_ConfigChannel+0x23a>
 8001f3e:	683b      	ldr	r3, [r7, #0]
 8001f40:	681b      	ldr	r3, [r3, #0]
 8001f42:	4a1c      	ldr	r2, [pc, #112]	; (8001fb4 <HAL_ADC_ConfigChannel+0x258>)
 8001f44:	4293      	cmp	r3, r2
 8001f46:	d003      	beq.n	8001f50 <HAL_ADC_ConfigChannel+0x1f4>
 8001f48:	683b      	ldr	r3, [r7, #0]
 8001f4a:	681b      	ldr	r3, [r3, #0]
 8001f4c:	2b11      	cmp	r3, #17
 8001f4e:	d122      	bne.n	8001f96 <HAL_ADC_ConfigChannel+0x23a>
 8001f50:	68fb      	ldr	r3, [r7, #12]
 8001f52:	685b      	ldr	r3, [r3, #4]
 8001f54:	f423 0280 	bic.w	r2, r3, #4194304	; 0x400000
 8001f58:	68fb      	ldr	r3, [r7, #12]
 8001f5a:	605a      	str	r2, [r3, #4]
 8001f5c:	68fb      	ldr	r3, [r7, #12]
 8001f5e:	685b      	ldr	r3, [r3, #4]
 8001f60:	f443 0200 	orr.w	r2, r3, #8388608	; 0x800000
 8001f64:	68fb      	ldr	r3, [r7, #12]
 8001f66:	605a      	str	r2, [r3, #4]
 8001f68:	683b      	ldr	r3, [r7, #0]
 8001f6a:	681b      	ldr	r3, [r3, #0]
 8001f6c:	4a11      	ldr	r2, [pc, #68]	; (8001fb4 <HAL_ADC_ConfigChannel+0x258>)
 8001f6e:	4293      	cmp	r3, r2
 8001f70:	d111      	bne.n	8001f96 <HAL_ADC_ConfigChannel+0x23a>
 8001f72:	4b11      	ldr	r3, [pc, #68]	; (8001fb8 <HAL_ADC_ConfigChannel+0x25c>)
 8001f74:	681b      	ldr	r3, [r3, #0]
 8001f76:	4a11      	ldr	r2, [pc, #68]	; (8001fbc <HAL_ADC_ConfigChannel+0x260>)
 8001f78:	fba2 2303 	umull	r2, r3, r2, r3
 8001f7c:	0c9a      	lsrs	r2, r3, #18
 8001f7e:	4613      	mov	r3, r2
 8001f80:	009b      	lsls	r3, r3, #2
 8001f82:	4413      	add	r3, r2
 8001f84:	005b      	lsls	r3, r3, #1
 8001f86:	60bb      	str	r3, [r7, #8]
 8001f88:	e002      	b.n	8001f90 <HAL_ADC_ConfigChannel+0x234>
 8001f8a:	68bb      	ldr	r3, [r7, #8]
 8001f8c:	3b01      	subs	r3, #1
 8001f8e:	60bb      	str	r3, [r7, #8]
 8001f90:	68bb      	ldr	r3, [r7, #8]
 8001f92:	2b00      	cmp	r3, #0
 8001f94:	d1f9      	bne.n	8001f8a <HAL_ADC_ConfigChannel+0x22e>
 8001f96:	687b      	ldr	r3, [r7, #4]
 8001f98:	2200      	movs	r2, #0
 8001f9a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8001f9e:	2300      	movs	r3, #0
 8001fa0:	4618      	mov	r0, r3
 8001fa2:	3714      	adds	r7, #20
 8001fa4:	46bd      	mov	sp, r7
 8001fa6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001faa:	4770      	bx	lr
 8001fac:	40012300 	.word	0x40012300
 8001fb0:	40012000 	.word	0x40012000
 8001fb4:	10000012 	.word	0x10000012
 8001fb8:	2000002c 	.word	0x2000002c
 8001fbc:	431bde83 	.word	0x431bde83

08001fc0 <ADC_Init>:
 8001fc0:	b480      	push	{r7}
 8001fc2:	b085      	sub	sp, #20
 8001fc4:	af00      	add	r7, sp, #0
 8001fc6:	6078      	str	r0, [r7, #4]
 8001fc8:	4b79      	ldr	r3, [pc, #484]	; (80021b0 <ADC_Init+0x1f0>)
 8001fca:	60fb      	str	r3, [r7, #12]
 8001fcc:	68fb      	ldr	r3, [r7, #12]
 8001fce:	685b      	ldr	r3, [r3, #4]
 8001fd0:	f423 3240 	bic.w	r2, r3, #196608	; 0x30000
 8001fd4:	68fb      	ldr	r3, [r7, #12]
 8001fd6:	605a      	str	r2, [r3, #4]
 8001fd8:	68fb      	ldr	r3, [r7, #12]
 8001fda:	685a      	ldr	r2, [r3, #4]
 8001fdc:	687b      	ldr	r3, [r7, #4]
 8001fde:	685b      	ldr	r3, [r3, #4]
 8001fe0:	431a      	orrs	r2, r3
 8001fe2:	68fb      	ldr	r3, [r7, #12]
 8001fe4:	605a      	str	r2, [r3, #4]
 8001fe6:	687b      	ldr	r3, [r7, #4]
 8001fe8:	681b      	ldr	r3, [r3, #0]
 8001fea:	685a      	ldr	r2, [r3, #4]
 8001fec:	687b      	ldr	r3, [r7, #4]
 8001fee:	681b      	ldr	r3, [r3, #0]
 8001ff0:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8001ff4:	605a      	str	r2, [r3, #4]
 8001ff6:	687b      	ldr	r3, [r7, #4]
 8001ff8:	681b      	ldr	r3, [r3, #0]
 8001ffa:	6859      	ldr	r1, [r3, #4]
 8001ffc:	687b      	ldr	r3, [r7, #4]
 8001ffe:	691b      	ldr	r3, [r3, #16]
 8002000:	021a      	lsls	r2, r3, #8
 8002002:	687b      	ldr	r3, [r7, #4]
 8002004:	681b      	ldr	r3, [r3, #0]
 8002006:	430a      	orrs	r2, r1
 8002008:	605a      	str	r2, [r3, #4]
 800200a:	687b      	ldr	r3, [r7, #4]
 800200c:	681b      	ldr	r3, [r3, #0]
 800200e:	685a      	ldr	r2, [r3, #4]
 8002010:	687b      	ldr	r3, [r7, #4]
 8002012:	681b      	ldr	r3, [r3, #0]
 8002014:	f022 7240 	bic.w	r2, r2, #50331648	; 0x3000000
 8002018:	605a      	str	r2, [r3, #4]
 800201a:	687b      	ldr	r3, [r7, #4]
 800201c:	681b      	ldr	r3, [r3, #0]
 800201e:	6859      	ldr	r1, [r3, #4]
 8002020:	687b      	ldr	r3, [r7, #4]
 8002022:	689a      	ldr	r2, [r3, #8]
 8002024:	687b      	ldr	r3, [r7, #4]
 8002026:	681b      	ldr	r3, [r3, #0]
 8002028:	430a      	orrs	r2, r1
 800202a:	605a      	str	r2, [r3, #4]
 800202c:	687b      	ldr	r3, [r7, #4]
 800202e:	681b      	ldr	r3, [r3, #0]
 8002030:	689a      	ldr	r2, [r3, #8]
 8002032:	687b      	ldr	r3, [r7, #4]
 8002034:	681b      	ldr	r3, [r3, #0]
 8002036:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800203a:	609a      	str	r2, [r3, #8]
 800203c:	687b      	ldr	r3, [r7, #4]
 800203e:	681b      	ldr	r3, [r3, #0]
 8002040:	6899      	ldr	r1, [r3, #8]
 8002042:	687b      	ldr	r3, [r7, #4]
 8002044:	68da      	ldr	r2, [r3, #12]
 8002046:	687b      	ldr	r3, [r7, #4]
 8002048:	681b      	ldr	r3, [r3, #0]
 800204a:	430a      	orrs	r2, r1
 800204c:	609a      	str	r2, [r3, #8]
 800204e:	687b      	ldr	r3, [r7, #4]
 8002050:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002052:	4a58      	ldr	r2, [pc, #352]	; (80021b4 <ADC_Init+0x1f4>)
 8002054:	4293      	cmp	r3, r2
 8002056:	d022      	beq.n	800209e <ADC_Init+0xde>
 8002058:	687b      	ldr	r3, [r7, #4]
 800205a:	681b      	ldr	r3, [r3, #0]
 800205c:	689a      	ldr	r2, [r3, #8]
 800205e:	687b      	ldr	r3, [r7, #4]
 8002060:	681b      	ldr	r3, [r3, #0]
 8002062:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 8002066:	609a      	str	r2, [r3, #8]
 8002068:	687b      	ldr	r3, [r7, #4]
 800206a:	681b      	ldr	r3, [r3, #0]
 800206c:	6899      	ldr	r1, [r3, #8]
 800206e:	687b      	ldr	r3, [r7, #4]
 8002070:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8002072:	687b      	ldr	r3, [r7, #4]
 8002074:	681b      	ldr	r3, [r3, #0]
 8002076:	430a      	orrs	r2, r1
 8002078:	609a      	str	r2, [r3, #8]
 800207a:	687b      	ldr	r3, [r7, #4]
 800207c:	681b      	ldr	r3, [r3, #0]
 800207e:	689a      	ldr	r2, [r3, #8]
 8002080:	687b      	ldr	r3, [r7, #4]
 8002082:	681b      	ldr	r3, [r3, #0]
 8002084:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 8002088:	609a      	str	r2, [r3, #8]
 800208a:	687b      	ldr	r3, [r7, #4]
 800208c:	681b      	ldr	r3, [r3, #0]
 800208e:	6899      	ldr	r1, [r3, #8]
 8002090:	687b      	ldr	r3, [r7, #4]
 8002092:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8002094:	687b      	ldr	r3, [r7, #4]
 8002096:	681b      	ldr	r3, [r3, #0]
 8002098:	430a      	orrs	r2, r1
 800209a:	609a      	str	r2, [r3, #8]
 800209c:	e00f      	b.n	80020be <ADC_Init+0xfe>
 800209e:	687b      	ldr	r3, [r7, #4]
 80020a0:	681b      	ldr	r3, [r3, #0]
 80020a2:	689a      	ldr	r2, [r3, #8]
 80020a4:	687b      	ldr	r3, [r7, #4]
 80020a6:	681b      	ldr	r3, [r3, #0]
 80020a8:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 80020ac:	609a      	str	r2, [r3, #8]
 80020ae:	687b      	ldr	r3, [r7, #4]
 80020b0:	681b      	ldr	r3, [r3, #0]
 80020b2:	689a      	ldr	r2, [r3, #8]
 80020b4:	687b      	ldr	r3, [r7, #4]
 80020b6:	681b      	ldr	r3, [r3, #0]
 80020b8:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 80020bc:	609a      	str	r2, [r3, #8]
 80020be:	687b      	ldr	r3, [r7, #4]
 80020c0:	681b      	ldr	r3, [r3, #0]
 80020c2:	689a      	ldr	r2, [r3, #8]
 80020c4:	687b      	ldr	r3, [r7, #4]
 80020c6:	681b      	ldr	r3, [r3, #0]
 80020c8:	f022 0202 	bic.w	r2, r2, #2
 80020cc:	609a      	str	r2, [r3, #8]
 80020ce:	687b      	ldr	r3, [r7, #4]
 80020d0:	681b      	ldr	r3, [r3, #0]
 80020d2:	6899      	ldr	r1, [r3, #8]
 80020d4:	687b      	ldr	r3, [r7, #4]
 80020d6:	7e1b      	ldrb	r3, [r3, #24]
 80020d8:	005a      	lsls	r2, r3, #1
 80020da:	687b      	ldr	r3, [r7, #4]
 80020dc:	681b      	ldr	r3, [r3, #0]
 80020de:	430a      	orrs	r2, r1
 80020e0:	609a      	str	r2, [r3, #8]
 80020e2:	687b      	ldr	r3, [r7, #4]
 80020e4:	f893 3020 	ldrb.w	r3, [r3, #32]
 80020e8:	2b00      	cmp	r3, #0
 80020ea:	d01b      	beq.n	8002124 <ADC_Init+0x164>
 80020ec:	687b      	ldr	r3, [r7, #4]
 80020ee:	681b      	ldr	r3, [r3, #0]
 80020f0:	685a      	ldr	r2, [r3, #4]
 80020f2:	687b      	ldr	r3, [r7, #4]
 80020f4:	681b      	ldr	r3, [r3, #0]
 80020f6:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 80020fa:	605a      	str	r2, [r3, #4]
 80020fc:	687b      	ldr	r3, [r7, #4]
 80020fe:	681b      	ldr	r3, [r3, #0]
 8002100:	685a      	ldr	r2, [r3, #4]
 8002102:	687b      	ldr	r3, [r7, #4]
 8002104:	681b      	ldr	r3, [r3, #0]
 8002106:	f422 4260 	bic.w	r2, r2, #57344	; 0xe000
 800210a:	605a      	str	r2, [r3, #4]
 800210c:	687b      	ldr	r3, [r7, #4]
 800210e:	681b      	ldr	r3, [r3, #0]
 8002110:	6859      	ldr	r1, [r3, #4]
 8002112:	687b      	ldr	r3, [r7, #4]
 8002114:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002116:	3b01      	subs	r3, #1
 8002118:	035a      	lsls	r2, r3, #13
 800211a:	687b      	ldr	r3, [r7, #4]
 800211c:	681b      	ldr	r3, [r3, #0]
 800211e:	430a      	orrs	r2, r1
 8002120:	605a      	str	r2, [r3, #4]
 8002122:	e007      	b.n	8002134 <ADC_Init+0x174>
 8002124:	687b      	ldr	r3, [r7, #4]
 8002126:	681b      	ldr	r3, [r3, #0]
 8002128:	685a      	ldr	r2, [r3, #4]
 800212a:	687b      	ldr	r3, [r7, #4]
 800212c:	681b      	ldr	r3, [r3, #0]
 800212e:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8002132:	605a      	str	r2, [r3, #4]
 8002134:	687b      	ldr	r3, [r7, #4]
 8002136:	681b      	ldr	r3, [r3, #0]
 8002138:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800213a:	687b      	ldr	r3, [r7, #4]
 800213c:	681b      	ldr	r3, [r3, #0]
 800213e:	f422 0270 	bic.w	r2, r2, #15728640	; 0xf00000
 8002142:	62da      	str	r2, [r3, #44]	; 0x2c
 8002144:	687b      	ldr	r3, [r7, #4]
 8002146:	681b      	ldr	r3, [r3, #0]
 8002148:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 800214a:	687b      	ldr	r3, [r7, #4]
 800214c:	69db      	ldr	r3, [r3, #28]
 800214e:	3b01      	subs	r3, #1
 8002150:	051a      	lsls	r2, r3, #20
 8002152:	687b      	ldr	r3, [r7, #4]
 8002154:	681b      	ldr	r3, [r3, #0]
 8002156:	430a      	orrs	r2, r1
 8002158:	62da      	str	r2, [r3, #44]	; 0x2c
 800215a:	687b      	ldr	r3, [r7, #4]
 800215c:	681b      	ldr	r3, [r3, #0]
 800215e:	689a      	ldr	r2, [r3, #8]
 8002160:	687b      	ldr	r3, [r7, #4]
 8002162:	681b      	ldr	r3, [r3, #0]
 8002164:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 8002168:	609a      	str	r2, [r3, #8]
 800216a:	687b      	ldr	r3, [r7, #4]
 800216c:	681b      	ldr	r3, [r3, #0]
 800216e:	6899      	ldr	r1, [r3, #8]
 8002170:	687b      	ldr	r3, [r7, #4]
 8002172:	f893 3030 	ldrb.w	r3, [r3, #48]	; 0x30
 8002176:	025a      	lsls	r2, r3, #9
 8002178:	687b      	ldr	r3, [r7, #4]
 800217a:	681b      	ldr	r3, [r3, #0]
 800217c:	430a      	orrs	r2, r1
 800217e:	609a      	str	r2, [r3, #8]
 8002180:	687b      	ldr	r3, [r7, #4]
 8002182:	681b      	ldr	r3, [r3, #0]
 8002184:	689a      	ldr	r2, [r3, #8]
 8002186:	687b      	ldr	r3, [r7, #4]
 8002188:	681b      	ldr	r3, [r3, #0]
 800218a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800218e:	609a      	str	r2, [r3, #8]
 8002190:	687b      	ldr	r3, [r7, #4]
 8002192:	681b      	ldr	r3, [r3, #0]
 8002194:	6899      	ldr	r1, [r3, #8]
 8002196:	687b      	ldr	r3, [r7, #4]
 8002198:	695b      	ldr	r3, [r3, #20]
 800219a:	029a      	lsls	r2, r3, #10
 800219c:	687b      	ldr	r3, [r7, #4]
 800219e:	681b      	ldr	r3, [r3, #0]
 80021a0:	430a      	orrs	r2, r1
 80021a2:	609a      	str	r2, [r3, #8]
 80021a4:	bf00      	nop
 80021a6:	3714      	adds	r7, #20
 80021a8:	46bd      	mov	sp, r7
 80021aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80021ae:	4770      	bx	lr
 80021b0:	40012300 	.word	0x40012300
 80021b4:	0f000001 	.word	0x0f000001

080021b8 <__NVIC_SetPriorityGrouping>:
 80021b8:	b480      	push	{r7}
 80021ba:	b085      	sub	sp, #20
 80021bc:	af00      	add	r7, sp, #0
 80021be:	6078      	str	r0, [r7, #4]
 80021c0:	687b      	ldr	r3, [r7, #4]
 80021c2:	f003 0307 	and.w	r3, r3, #7
 80021c6:	60fb      	str	r3, [r7, #12]
 80021c8:	4b0c      	ldr	r3, [pc, #48]	; (80021fc <__NVIC_SetPriorityGrouping+0x44>)
 80021ca:	68db      	ldr	r3, [r3, #12]
 80021cc:	60bb      	str	r3, [r7, #8]
 80021ce:	68ba      	ldr	r2, [r7, #8]
 80021d0:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 80021d4:	4013      	ands	r3, r2
 80021d6:	60bb      	str	r3, [r7, #8]
 80021d8:	68fb      	ldr	r3, [r7, #12]
 80021da:	021a      	lsls	r2, r3, #8
 80021dc:	68bb      	ldr	r3, [r7, #8]
 80021de:	4313      	orrs	r3, r2
 80021e0:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 80021e4:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80021e8:	60bb      	str	r3, [r7, #8]
 80021ea:	4a04      	ldr	r2, [pc, #16]	; (80021fc <__NVIC_SetPriorityGrouping+0x44>)
 80021ec:	68bb      	ldr	r3, [r7, #8]
 80021ee:	60d3      	str	r3, [r2, #12]
 80021f0:	bf00      	nop
 80021f2:	3714      	adds	r7, #20
 80021f4:	46bd      	mov	sp, r7
 80021f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80021fa:	4770      	bx	lr
 80021fc:	e000ed00 	.word	0xe000ed00

08002200 <__NVIC_GetPriorityGrouping>:
 8002200:	b480      	push	{r7}
 8002202:	af00      	add	r7, sp, #0
 8002204:	4b04      	ldr	r3, [pc, #16]	; (8002218 <__NVIC_GetPriorityGrouping+0x18>)
 8002206:	68db      	ldr	r3, [r3, #12]
 8002208:	0a1b      	lsrs	r3, r3, #8
 800220a:	f003 0307 	and.w	r3, r3, #7
 800220e:	4618      	mov	r0, r3
 8002210:	46bd      	mov	sp, r7
 8002212:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002216:	4770      	bx	lr
 8002218:	e000ed00 	.word	0xe000ed00

0800221c <__NVIC_EnableIRQ>:
 800221c:	b480      	push	{r7}
 800221e:	b083      	sub	sp, #12
 8002220:	af00      	add	r7, sp, #0
 8002222:	4603      	mov	r3, r0
 8002224:	71fb      	strb	r3, [r7, #7]
 8002226:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800222a:	2b00      	cmp	r3, #0
 800222c:	db0b      	blt.n	8002246 <__NVIC_EnableIRQ+0x2a>
 800222e:	79fb      	ldrb	r3, [r7, #7]
 8002230:	f003 021f 	and.w	r2, r3, #31
 8002234:	4907      	ldr	r1, [pc, #28]	; (8002254 <__NVIC_EnableIRQ+0x38>)
 8002236:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800223a:	095b      	lsrs	r3, r3, #5
 800223c:	2001      	movs	r0, #1
 800223e:	fa00 f202 	lsl.w	r2, r0, r2
 8002242:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8002246:	bf00      	nop
 8002248:	370c      	adds	r7, #12
 800224a:	46bd      	mov	sp, r7
 800224c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002250:	4770      	bx	lr
 8002252:	bf00      	nop
 8002254:	e000e100 	.word	0xe000e100

08002258 <__NVIC_SetPriority>:
 8002258:	b480      	push	{r7}
 800225a:	b083      	sub	sp, #12
 800225c:	af00      	add	r7, sp, #0
 800225e:	4603      	mov	r3, r0
 8002260:	6039      	str	r1, [r7, #0]
 8002262:	71fb      	strb	r3, [r7, #7]
 8002264:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002268:	2b00      	cmp	r3, #0
 800226a:	db0a      	blt.n	8002282 <__NVIC_SetPriority+0x2a>
 800226c:	683b      	ldr	r3, [r7, #0]
 800226e:	b2da      	uxtb	r2, r3
 8002270:	490c      	ldr	r1, [pc, #48]	; (80022a4 <__NVIC_SetPriority+0x4c>)
 8002272:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002276:	0112      	lsls	r2, r2, #4
 8002278:	b2d2      	uxtb	r2, r2
 800227a:	440b      	add	r3, r1
 800227c:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8002280:	e00a      	b.n	8002298 <__NVIC_SetPriority+0x40>
 8002282:	683b      	ldr	r3, [r7, #0]
 8002284:	b2da      	uxtb	r2, r3
 8002286:	4908      	ldr	r1, [pc, #32]	; (80022a8 <__NVIC_SetPriority+0x50>)
 8002288:	79fb      	ldrb	r3, [r7, #7]
 800228a:	f003 030f 	and.w	r3, r3, #15
 800228e:	3b04      	subs	r3, #4
 8002290:	0112      	lsls	r2, r2, #4
 8002292:	b2d2      	uxtb	r2, r2
 8002294:	440b      	add	r3, r1
 8002296:	761a      	strb	r2, [r3, #24]
 8002298:	bf00      	nop
 800229a:	370c      	adds	r7, #12
 800229c:	46bd      	mov	sp, r7
 800229e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80022a2:	4770      	bx	lr
 80022a4:	e000e100 	.word	0xe000e100
 80022a8:	e000ed00 	.word	0xe000ed00

080022ac <NVIC_EncodePriority>:
 80022ac:	b480      	push	{r7}
 80022ae:	b089      	sub	sp, #36	; 0x24
 80022b0:	af00      	add	r7, sp, #0
 80022b2:	60f8      	str	r0, [r7, #12]
 80022b4:	60b9      	str	r1, [r7, #8]
 80022b6:	607a      	str	r2, [r7, #4]
 80022b8:	68fb      	ldr	r3, [r7, #12]
 80022ba:	f003 0307 	and.w	r3, r3, #7
 80022be:	61fb      	str	r3, [r7, #28]
 80022c0:	69fb      	ldr	r3, [r7, #28]
 80022c2:	f1c3 0307 	rsb	r3, r3, #7
 80022c6:	2b04      	cmp	r3, #4
 80022c8:	bf28      	it	cs
 80022ca:	2304      	movcs	r3, #4
 80022cc:	61bb      	str	r3, [r7, #24]
 80022ce:	69fb      	ldr	r3, [r7, #28]
 80022d0:	3304      	adds	r3, #4
 80022d2:	2b06      	cmp	r3, #6
 80022d4:	d902      	bls.n	80022dc <NVIC_EncodePriority+0x30>
 80022d6:	69fb      	ldr	r3, [r7, #28]
 80022d8:	3b03      	subs	r3, #3
 80022da:	e000      	b.n	80022de <NVIC_EncodePriority+0x32>
 80022dc:	2300      	movs	r3, #0
 80022de:	617b      	str	r3, [r7, #20]
 80022e0:	f04f 32ff 	mov.w	r2, #4294967295
 80022e4:	69bb      	ldr	r3, [r7, #24]
 80022e6:	fa02 f303 	lsl.w	r3, r2, r3
 80022ea:	43da      	mvns	r2, r3
 80022ec:	68bb      	ldr	r3, [r7, #8]
 80022ee:	401a      	ands	r2, r3
 80022f0:	697b      	ldr	r3, [r7, #20]
 80022f2:	409a      	lsls	r2, r3
 80022f4:	f04f 31ff 	mov.w	r1, #4294967295
 80022f8:	697b      	ldr	r3, [r7, #20]
 80022fa:	fa01 f303 	lsl.w	r3, r1, r3
 80022fe:	43d9      	mvns	r1, r3
 8002300:	687b      	ldr	r3, [r7, #4]
 8002302:	400b      	ands	r3, r1
 8002304:	4313      	orrs	r3, r2
 8002306:	4618      	mov	r0, r3
 8002308:	3724      	adds	r7, #36	; 0x24
 800230a:	46bd      	mov	sp, r7
 800230c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002310:	4770      	bx	lr
	...

08002314 <SysTick_Config>:
 8002314:	b580      	push	{r7, lr}
 8002316:	b082      	sub	sp, #8
 8002318:	af00      	add	r7, sp, #0
 800231a:	6078      	str	r0, [r7, #4]
 800231c:	687b      	ldr	r3, [r7, #4]
 800231e:	3b01      	subs	r3, #1
 8002320:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8002324:	d301      	bcc.n	800232a <SysTick_Config+0x16>
 8002326:	2301      	movs	r3, #1
 8002328:	e00f      	b.n	800234a <SysTick_Config+0x36>
 800232a:	4a0a      	ldr	r2, [pc, #40]	; (8002354 <SysTick_Config+0x40>)
 800232c:	687b      	ldr	r3, [r7, #4]
 800232e:	3b01      	subs	r3, #1
 8002330:	6053      	str	r3, [r2, #4]
 8002332:	210f      	movs	r1, #15
 8002334:	f04f 30ff 	mov.w	r0, #4294967295
 8002338:	f7ff ff8e 	bl	8002258 <__NVIC_SetPriority>
 800233c:	4b05      	ldr	r3, [pc, #20]	; (8002354 <SysTick_Config+0x40>)
 800233e:	2200      	movs	r2, #0
 8002340:	609a      	str	r2, [r3, #8]
 8002342:	4b04      	ldr	r3, [pc, #16]	; (8002354 <SysTick_Config+0x40>)
 8002344:	2207      	movs	r2, #7
 8002346:	601a      	str	r2, [r3, #0]
 8002348:	2300      	movs	r3, #0
 800234a:	4618      	mov	r0, r3
 800234c:	3708      	adds	r7, #8
 800234e:	46bd      	mov	sp, r7
 8002350:	bd80      	pop	{r7, pc}
 8002352:	bf00      	nop
 8002354:	e000e010 	.word	0xe000e010

08002358 <HAL_NVIC_SetPriorityGrouping>:
 8002358:	b580      	push	{r7, lr}
 800235a:	b082      	sub	sp, #8
 800235c:	af00      	add	r7, sp, #0
 800235e:	6078      	str	r0, [r7, #4]
 8002360:	6878      	ldr	r0, [r7, #4]
 8002362:	f7ff ff29 	bl	80021b8 <__NVIC_SetPriorityGrouping>
 8002366:	bf00      	nop
 8002368:	3708      	adds	r7, #8
 800236a:	46bd      	mov	sp, r7
 800236c:	bd80      	pop	{r7, pc}

0800236e <HAL_NVIC_SetPriority>:
 800236e:	b580      	push	{r7, lr}
 8002370:	b086      	sub	sp, #24
 8002372:	af00      	add	r7, sp, #0
 8002374:	4603      	mov	r3, r0
 8002376:	60b9      	str	r1, [r7, #8]
 8002378:	607a      	str	r2, [r7, #4]
 800237a:	73fb      	strb	r3, [r7, #15]
 800237c:	2300      	movs	r3, #0
 800237e:	617b      	str	r3, [r7, #20]
 8002380:	f7ff ff3e 	bl	8002200 <__NVIC_GetPriorityGrouping>
 8002384:	6178      	str	r0, [r7, #20]
 8002386:	687a      	ldr	r2, [r7, #4]
 8002388:	68b9      	ldr	r1, [r7, #8]
 800238a:	6978      	ldr	r0, [r7, #20]
 800238c:	f7ff ff8e 	bl	80022ac <NVIC_EncodePriority>
 8002390:	4602      	mov	r2, r0
 8002392:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8002396:	4611      	mov	r1, r2
 8002398:	4618      	mov	r0, r3
 800239a:	f7ff ff5d 	bl	8002258 <__NVIC_SetPriority>
 800239e:	bf00      	nop
 80023a0:	3718      	adds	r7, #24
 80023a2:	46bd      	mov	sp, r7
 80023a4:	bd80      	pop	{r7, pc}

080023a6 <HAL_NVIC_EnableIRQ>:
 80023a6:	b580      	push	{r7, lr}
 80023a8:	b082      	sub	sp, #8
 80023aa:	af00      	add	r7, sp, #0
 80023ac:	4603      	mov	r3, r0
 80023ae:	71fb      	strb	r3, [r7, #7]
 80023b0:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80023b4:	4618      	mov	r0, r3
 80023b6:	f7ff ff31 	bl	800221c <__NVIC_EnableIRQ>
 80023ba:	bf00      	nop
 80023bc:	3708      	adds	r7, #8
 80023be:	46bd      	mov	sp, r7
 80023c0:	bd80      	pop	{r7, pc}

080023c2 <HAL_SYSTICK_Config>:
 80023c2:	b580      	push	{r7, lr}
 80023c4:	b082      	sub	sp, #8
 80023c6:	af00      	add	r7, sp, #0
 80023c8:	6078      	str	r0, [r7, #4]
 80023ca:	6878      	ldr	r0, [r7, #4]
 80023cc:	f7ff ffa2 	bl	8002314 <SysTick_Config>
 80023d0:	4603      	mov	r3, r0
 80023d2:	4618      	mov	r0, r3
 80023d4:	3708      	adds	r7, #8
 80023d6:	46bd      	mov	sp, r7
 80023d8:	bd80      	pop	{r7, pc}
	...

080023dc <HAL_GPIO_Init>:
 80023dc:	b480      	push	{r7}
 80023de:	b089      	sub	sp, #36	; 0x24
 80023e0:	af00      	add	r7, sp, #0
 80023e2:	6078      	str	r0, [r7, #4]
 80023e4:	6039      	str	r1, [r7, #0]
 80023e6:	2300      	movs	r3, #0
 80023e8:	617b      	str	r3, [r7, #20]
 80023ea:	2300      	movs	r3, #0
 80023ec:	613b      	str	r3, [r7, #16]
 80023ee:	2300      	movs	r3, #0
 80023f0:	61bb      	str	r3, [r7, #24]
 80023f2:	2300      	movs	r3, #0
 80023f4:	61fb      	str	r3, [r7, #28]
 80023f6:	e159      	b.n	80026ac <HAL_GPIO_Init+0x2d0>
 80023f8:	2201      	movs	r2, #1
 80023fa:	69fb      	ldr	r3, [r7, #28]
 80023fc:	fa02 f303 	lsl.w	r3, r2, r3
 8002400:	617b      	str	r3, [r7, #20]
 8002402:	683b      	ldr	r3, [r7, #0]
 8002404:	681b      	ldr	r3, [r3, #0]
 8002406:	697a      	ldr	r2, [r7, #20]
 8002408:	4013      	ands	r3, r2
 800240a:	613b      	str	r3, [r7, #16]
 800240c:	693a      	ldr	r2, [r7, #16]
 800240e:	697b      	ldr	r3, [r7, #20]
 8002410:	429a      	cmp	r2, r3
 8002412:	f040 8148 	bne.w	80026a6 <HAL_GPIO_Init+0x2ca>
 8002416:	683b      	ldr	r3, [r7, #0]
 8002418:	685b      	ldr	r3, [r3, #4]
 800241a:	f003 0303 	and.w	r3, r3, #3
 800241e:	2b01      	cmp	r3, #1
 8002420:	d005      	beq.n	800242e <HAL_GPIO_Init+0x52>
 8002422:	683b      	ldr	r3, [r7, #0]
 8002424:	685b      	ldr	r3, [r3, #4]
 8002426:	f003 0303 	and.w	r3, r3, #3
 800242a:	2b02      	cmp	r3, #2
 800242c:	d130      	bne.n	8002490 <HAL_GPIO_Init+0xb4>
 800242e:	687b      	ldr	r3, [r7, #4]
 8002430:	689b      	ldr	r3, [r3, #8]
 8002432:	61bb      	str	r3, [r7, #24]
 8002434:	69fb      	ldr	r3, [r7, #28]
 8002436:	005b      	lsls	r3, r3, #1
 8002438:	2203      	movs	r2, #3
 800243a:	fa02 f303 	lsl.w	r3, r2, r3
 800243e:	43db      	mvns	r3, r3
 8002440:	69ba      	ldr	r2, [r7, #24]
 8002442:	4013      	ands	r3, r2
 8002444:	61bb      	str	r3, [r7, #24]
 8002446:	683b      	ldr	r3, [r7, #0]
 8002448:	68da      	ldr	r2, [r3, #12]
 800244a:	69fb      	ldr	r3, [r7, #28]
 800244c:	005b      	lsls	r3, r3, #1
 800244e:	fa02 f303 	lsl.w	r3, r2, r3
 8002452:	69ba      	ldr	r2, [r7, #24]
 8002454:	4313      	orrs	r3, r2
 8002456:	61bb      	str	r3, [r7, #24]
 8002458:	687b      	ldr	r3, [r7, #4]
 800245a:	69ba      	ldr	r2, [r7, #24]
 800245c:	609a      	str	r2, [r3, #8]
 800245e:	687b      	ldr	r3, [r7, #4]
 8002460:	685b      	ldr	r3, [r3, #4]
 8002462:	61bb      	str	r3, [r7, #24]
 8002464:	2201      	movs	r2, #1
 8002466:	69fb      	ldr	r3, [r7, #28]
 8002468:	fa02 f303 	lsl.w	r3, r2, r3
 800246c:	43db      	mvns	r3, r3
 800246e:	69ba      	ldr	r2, [r7, #24]
 8002470:	4013      	ands	r3, r2
 8002472:	61bb      	str	r3, [r7, #24]
 8002474:	683b      	ldr	r3, [r7, #0]
 8002476:	685b      	ldr	r3, [r3, #4]
 8002478:	091b      	lsrs	r3, r3, #4
 800247a:	f003 0201 	and.w	r2, r3, #1
 800247e:	69fb      	ldr	r3, [r7, #28]
 8002480:	fa02 f303 	lsl.w	r3, r2, r3
 8002484:	69ba      	ldr	r2, [r7, #24]
 8002486:	4313      	orrs	r3, r2
 8002488:	61bb      	str	r3, [r7, #24]
 800248a:	687b      	ldr	r3, [r7, #4]
 800248c:	69ba      	ldr	r2, [r7, #24]
 800248e:	605a      	str	r2, [r3, #4]
 8002490:	683b      	ldr	r3, [r7, #0]
 8002492:	685b      	ldr	r3, [r3, #4]
 8002494:	f003 0303 	and.w	r3, r3, #3
 8002498:	2b03      	cmp	r3, #3
 800249a:	d017      	beq.n	80024cc <HAL_GPIO_Init+0xf0>
 800249c:	687b      	ldr	r3, [r7, #4]
 800249e:	68db      	ldr	r3, [r3, #12]
 80024a0:	61bb      	str	r3, [r7, #24]
 80024a2:	69fb      	ldr	r3, [r7, #28]
 80024a4:	005b      	lsls	r3, r3, #1
 80024a6:	2203      	movs	r2, #3
 80024a8:	fa02 f303 	lsl.w	r3, r2, r3
 80024ac:	43db      	mvns	r3, r3
 80024ae:	69ba      	ldr	r2, [r7, #24]
 80024b0:	4013      	ands	r3, r2
 80024b2:	61bb      	str	r3, [r7, #24]
 80024b4:	683b      	ldr	r3, [r7, #0]
 80024b6:	689a      	ldr	r2, [r3, #8]
 80024b8:	69fb      	ldr	r3, [r7, #28]
 80024ba:	005b      	lsls	r3, r3, #1
 80024bc:	fa02 f303 	lsl.w	r3, r2, r3
 80024c0:	69ba      	ldr	r2, [r7, #24]
 80024c2:	4313      	orrs	r3, r2
 80024c4:	61bb      	str	r3, [r7, #24]
 80024c6:	687b      	ldr	r3, [r7, #4]
 80024c8:	69ba      	ldr	r2, [r7, #24]
 80024ca:	60da      	str	r2, [r3, #12]
 80024cc:	683b      	ldr	r3, [r7, #0]
 80024ce:	685b      	ldr	r3, [r3, #4]
 80024d0:	f003 0303 	and.w	r3, r3, #3
 80024d4:	2b02      	cmp	r3, #2
 80024d6:	d123      	bne.n	8002520 <HAL_GPIO_Init+0x144>
 80024d8:	69fb      	ldr	r3, [r7, #28]
 80024da:	08da      	lsrs	r2, r3, #3
 80024dc:	687b      	ldr	r3, [r7, #4]
 80024de:	3208      	adds	r2, #8
 80024e0:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 80024e4:	61bb      	str	r3, [r7, #24]
 80024e6:	69fb      	ldr	r3, [r7, #28]
 80024e8:	f003 0307 	and.w	r3, r3, #7
 80024ec:	009b      	lsls	r3, r3, #2
 80024ee:	220f      	movs	r2, #15
 80024f0:	fa02 f303 	lsl.w	r3, r2, r3
 80024f4:	43db      	mvns	r3, r3
 80024f6:	69ba      	ldr	r2, [r7, #24]
 80024f8:	4013      	ands	r3, r2
 80024fa:	61bb      	str	r3, [r7, #24]
 80024fc:	683b      	ldr	r3, [r7, #0]
 80024fe:	691a      	ldr	r2, [r3, #16]
 8002500:	69fb      	ldr	r3, [r7, #28]
 8002502:	f003 0307 	and.w	r3, r3, #7
 8002506:	009b      	lsls	r3, r3, #2
 8002508:	fa02 f303 	lsl.w	r3, r2, r3
 800250c:	69ba      	ldr	r2, [r7, #24]
 800250e:	4313      	orrs	r3, r2
 8002510:	61bb      	str	r3, [r7, #24]
 8002512:	69fb      	ldr	r3, [r7, #28]
 8002514:	08da      	lsrs	r2, r3, #3
 8002516:	687b      	ldr	r3, [r7, #4]
 8002518:	3208      	adds	r2, #8
 800251a:	69b9      	ldr	r1, [r7, #24]
 800251c:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8002520:	687b      	ldr	r3, [r7, #4]
 8002522:	681b      	ldr	r3, [r3, #0]
 8002524:	61bb      	str	r3, [r7, #24]
 8002526:	69fb      	ldr	r3, [r7, #28]
 8002528:	005b      	lsls	r3, r3, #1
 800252a:	2203      	movs	r2, #3
 800252c:	fa02 f303 	lsl.w	r3, r2, r3
 8002530:	43db      	mvns	r3, r3
 8002532:	69ba      	ldr	r2, [r7, #24]
 8002534:	4013      	ands	r3, r2
 8002536:	61bb      	str	r3, [r7, #24]
 8002538:	683b      	ldr	r3, [r7, #0]
 800253a:	685b      	ldr	r3, [r3, #4]
 800253c:	f003 0203 	and.w	r2, r3, #3
 8002540:	69fb      	ldr	r3, [r7, #28]
 8002542:	005b      	lsls	r3, r3, #1
 8002544:	fa02 f303 	lsl.w	r3, r2, r3
 8002548:	69ba      	ldr	r2, [r7, #24]
 800254a:	4313      	orrs	r3, r2
 800254c:	61bb      	str	r3, [r7, #24]
 800254e:	687b      	ldr	r3, [r7, #4]
 8002550:	69ba      	ldr	r2, [r7, #24]
 8002552:	601a      	str	r2, [r3, #0]
 8002554:	683b      	ldr	r3, [r7, #0]
 8002556:	685b      	ldr	r3, [r3, #4]
 8002558:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 800255c:	2b00      	cmp	r3, #0
 800255e:	f000 80a2 	beq.w	80026a6 <HAL_GPIO_Init+0x2ca>
 8002562:	2300      	movs	r3, #0
 8002564:	60fb      	str	r3, [r7, #12]
 8002566:	4b57      	ldr	r3, [pc, #348]	; (80026c4 <HAL_GPIO_Init+0x2e8>)
 8002568:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800256a:	4a56      	ldr	r2, [pc, #344]	; (80026c4 <HAL_GPIO_Init+0x2e8>)
 800256c:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8002570:	6453      	str	r3, [r2, #68]	; 0x44
 8002572:	4b54      	ldr	r3, [pc, #336]	; (80026c4 <HAL_GPIO_Init+0x2e8>)
 8002574:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002576:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 800257a:	60fb      	str	r3, [r7, #12]
 800257c:	68fb      	ldr	r3, [r7, #12]
 800257e:	4a52      	ldr	r2, [pc, #328]	; (80026c8 <HAL_GPIO_Init+0x2ec>)
 8002580:	69fb      	ldr	r3, [r7, #28]
 8002582:	089b      	lsrs	r3, r3, #2
 8002584:	3302      	adds	r3, #2
 8002586:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800258a:	61bb      	str	r3, [r7, #24]
 800258c:	69fb      	ldr	r3, [r7, #28]
 800258e:	f003 0303 	and.w	r3, r3, #3
 8002592:	009b      	lsls	r3, r3, #2
 8002594:	220f      	movs	r2, #15
 8002596:	fa02 f303 	lsl.w	r3, r2, r3
 800259a:	43db      	mvns	r3, r3
 800259c:	69ba      	ldr	r2, [r7, #24]
 800259e:	4013      	ands	r3, r2
 80025a0:	61bb      	str	r3, [r7, #24]
 80025a2:	687b      	ldr	r3, [r7, #4]
 80025a4:	4a49      	ldr	r2, [pc, #292]	; (80026cc <HAL_GPIO_Init+0x2f0>)
 80025a6:	4293      	cmp	r3, r2
 80025a8:	d019      	beq.n	80025de <HAL_GPIO_Init+0x202>
 80025aa:	687b      	ldr	r3, [r7, #4]
 80025ac:	4a48      	ldr	r2, [pc, #288]	; (80026d0 <HAL_GPIO_Init+0x2f4>)
 80025ae:	4293      	cmp	r3, r2
 80025b0:	d013      	beq.n	80025da <HAL_GPIO_Init+0x1fe>
 80025b2:	687b      	ldr	r3, [r7, #4]
 80025b4:	4a47      	ldr	r2, [pc, #284]	; (80026d4 <HAL_GPIO_Init+0x2f8>)
 80025b6:	4293      	cmp	r3, r2
 80025b8:	d00d      	beq.n	80025d6 <HAL_GPIO_Init+0x1fa>
 80025ba:	687b      	ldr	r3, [r7, #4]
 80025bc:	4a46      	ldr	r2, [pc, #280]	; (80026d8 <HAL_GPIO_Init+0x2fc>)
 80025be:	4293      	cmp	r3, r2
 80025c0:	d007      	beq.n	80025d2 <HAL_GPIO_Init+0x1f6>
 80025c2:	687b      	ldr	r3, [r7, #4]
 80025c4:	4a45      	ldr	r2, [pc, #276]	; (80026dc <HAL_GPIO_Init+0x300>)
 80025c6:	4293      	cmp	r3, r2
 80025c8:	d101      	bne.n	80025ce <HAL_GPIO_Init+0x1f2>
 80025ca:	2304      	movs	r3, #4
 80025cc:	e008      	b.n	80025e0 <HAL_GPIO_Init+0x204>
 80025ce:	2307      	movs	r3, #7
 80025d0:	e006      	b.n	80025e0 <HAL_GPIO_Init+0x204>
 80025d2:	2303      	movs	r3, #3
 80025d4:	e004      	b.n	80025e0 <HAL_GPIO_Init+0x204>
 80025d6:	2302      	movs	r3, #2
 80025d8:	e002      	b.n	80025e0 <HAL_GPIO_Init+0x204>
 80025da:	2301      	movs	r3, #1
 80025dc:	e000      	b.n	80025e0 <HAL_GPIO_Init+0x204>
 80025de:	2300      	movs	r3, #0
 80025e0:	69fa      	ldr	r2, [r7, #28]
 80025e2:	f002 0203 	and.w	r2, r2, #3
 80025e6:	0092      	lsls	r2, r2, #2
 80025e8:	4093      	lsls	r3, r2
 80025ea:	69ba      	ldr	r2, [r7, #24]
 80025ec:	4313      	orrs	r3, r2
 80025ee:	61bb      	str	r3, [r7, #24]
 80025f0:	4935      	ldr	r1, [pc, #212]	; (80026c8 <HAL_GPIO_Init+0x2ec>)
 80025f2:	69fb      	ldr	r3, [r7, #28]
 80025f4:	089b      	lsrs	r3, r3, #2
 80025f6:	3302      	adds	r3, #2
 80025f8:	69ba      	ldr	r2, [r7, #24]
 80025fa:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80025fe:	4b38      	ldr	r3, [pc, #224]	; (80026e0 <HAL_GPIO_Init+0x304>)
 8002600:	689b      	ldr	r3, [r3, #8]
 8002602:	61bb      	str	r3, [r7, #24]
 8002604:	693b      	ldr	r3, [r7, #16]
 8002606:	43db      	mvns	r3, r3
 8002608:	69ba      	ldr	r2, [r7, #24]
 800260a:	4013      	ands	r3, r2
 800260c:	61bb      	str	r3, [r7, #24]
 800260e:	683b      	ldr	r3, [r7, #0]
 8002610:	685b      	ldr	r3, [r3, #4]
 8002612:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 8002616:	2b00      	cmp	r3, #0
 8002618:	d003      	beq.n	8002622 <HAL_GPIO_Init+0x246>
 800261a:	69ba      	ldr	r2, [r7, #24]
 800261c:	693b      	ldr	r3, [r7, #16]
 800261e:	4313      	orrs	r3, r2
 8002620:	61bb      	str	r3, [r7, #24]
 8002622:	4a2f      	ldr	r2, [pc, #188]	; (80026e0 <HAL_GPIO_Init+0x304>)
 8002624:	69bb      	ldr	r3, [r7, #24]
 8002626:	6093      	str	r3, [r2, #8]
 8002628:	4b2d      	ldr	r3, [pc, #180]	; (80026e0 <HAL_GPIO_Init+0x304>)
 800262a:	68db      	ldr	r3, [r3, #12]
 800262c:	61bb      	str	r3, [r7, #24]
 800262e:	693b      	ldr	r3, [r7, #16]
 8002630:	43db      	mvns	r3, r3
 8002632:	69ba      	ldr	r2, [r7, #24]
 8002634:	4013      	ands	r3, r2
 8002636:	61bb      	str	r3, [r7, #24]
 8002638:	683b      	ldr	r3, [r7, #0]
 800263a:	685b      	ldr	r3, [r3, #4]
 800263c:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8002640:	2b00      	cmp	r3, #0
 8002642:	d003      	beq.n	800264c <HAL_GPIO_Init+0x270>
 8002644:	69ba      	ldr	r2, [r7, #24]
 8002646:	693b      	ldr	r3, [r7, #16]
 8002648:	4313      	orrs	r3, r2
 800264a:	61bb      	str	r3, [r7, #24]
 800264c:	4a24      	ldr	r2, [pc, #144]	; (80026e0 <HAL_GPIO_Init+0x304>)
 800264e:	69bb      	ldr	r3, [r7, #24]
 8002650:	60d3      	str	r3, [r2, #12]
 8002652:	4b23      	ldr	r3, [pc, #140]	; (80026e0 <HAL_GPIO_Init+0x304>)
 8002654:	685b      	ldr	r3, [r3, #4]
 8002656:	61bb      	str	r3, [r7, #24]
 8002658:	693b      	ldr	r3, [r7, #16]
 800265a:	43db      	mvns	r3, r3
 800265c:	69ba      	ldr	r2, [r7, #24]
 800265e:	4013      	ands	r3, r2
 8002660:	61bb      	str	r3, [r7, #24]
 8002662:	683b      	ldr	r3, [r7, #0]
 8002664:	685b      	ldr	r3, [r3, #4]
 8002666:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800266a:	2b00      	cmp	r3, #0
 800266c:	d003      	beq.n	8002676 <HAL_GPIO_Init+0x29a>
 800266e:	69ba      	ldr	r2, [r7, #24]
 8002670:	693b      	ldr	r3, [r7, #16]
 8002672:	4313      	orrs	r3, r2
 8002674:	61bb      	str	r3, [r7, #24]
 8002676:	4a1a      	ldr	r2, [pc, #104]	; (80026e0 <HAL_GPIO_Init+0x304>)
 8002678:	69bb      	ldr	r3, [r7, #24]
 800267a:	6053      	str	r3, [r2, #4]
 800267c:	4b18      	ldr	r3, [pc, #96]	; (80026e0 <HAL_GPIO_Init+0x304>)
 800267e:	681b      	ldr	r3, [r3, #0]
 8002680:	61bb      	str	r3, [r7, #24]
 8002682:	693b      	ldr	r3, [r7, #16]
 8002684:	43db      	mvns	r3, r3
 8002686:	69ba      	ldr	r2, [r7, #24]
 8002688:	4013      	ands	r3, r2
 800268a:	61bb      	str	r3, [r7, #24]
 800268c:	683b      	ldr	r3, [r7, #0]
 800268e:	685b      	ldr	r3, [r3, #4]
 8002690:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8002694:	2b00      	cmp	r3, #0
 8002696:	d003      	beq.n	80026a0 <HAL_GPIO_Init+0x2c4>
 8002698:	69ba      	ldr	r2, [r7, #24]
 800269a:	693b      	ldr	r3, [r7, #16]
 800269c:	4313      	orrs	r3, r2
 800269e:	61bb      	str	r3, [r7, #24]
 80026a0:	4a0f      	ldr	r2, [pc, #60]	; (80026e0 <HAL_GPIO_Init+0x304>)
 80026a2:	69bb      	ldr	r3, [r7, #24]
 80026a4:	6013      	str	r3, [r2, #0]
 80026a6:	69fb      	ldr	r3, [r7, #28]
 80026a8:	3301      	adds	r3, #1
 80026aa:	61fb      	str	r3, [r7, #28]
 80026ac:	69fb      	ldr	r3, [r7, #28]
 80026ae:	2b0f      	cmp	r3, #15
 80026b0:	f67f aea2 	bls.w	80023f8 <HAL_GPIO_Init+0x1c>
 80026b4:	bf00      	nop
 80026b6:	bf00      	nop
 80026b8:	3724      	adds	r7, #36	; 0x24
 80026ba:	46bd      	mov	sp, r7
 80026bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80026c0:	4770      	bx	lr
 80026c2:	bf00      	nop
 80026c4:	40023800 	.word	0x40023800
 80026c8:	40013800 	.word	0x40013800
 80026cc:	40020000 	.word	0x40020000
 80026d0:	40020400 	.word	0x40020400
 80026d4:	40020800 	.word	0x40020800
 80026d8:	40020c00 	.word	0x40020c00
 80026dc:	40021000 	.word	0x40021000
 80026e0:	40013c00 	.word	0x40013c00

080026e4 <HAL_GPIO_WritePin>:
 80026e4:	b480      	push	{r7}
 80026e6:	b083      	sub	sp, #12
 80026e8:	af00      	add	r7, sp, #0
 80026ea:	6078      	str	r0, [r7, #4]
 80026ec:	460b      	mov	r3, r1
 80026ee:	807b      	strh	r3, [r7, #2]
 80026f0:	4613      	mov	r3, r2
 80026f2:	707b      	strb	r3, [r7, #1]
 80026f4:	787b      	ldrb	r3, [r7, #1]
 80026f6:	2b00      	cmp	r3, #0
 80026f8:	d003      	beq.n	8002702 <HAL_GPIO_WritePin+0x1e>
 80026fa:	887a      	ldrh	r2, [r7, #2]
 80026fc:	687b      	ldr	r3, [r7, #4]
 80026fe:	619a      	str	r2, [r3, #24]
 8002700:	e003      	b.n	800270a <HAL_GPIO_WritePin+0x26>
 8002702:	887b      	ldrh	r3, [r7, #2]
 8002704:	041a      	lsls	r2, r3, #16
 8002706:	687b      	ldr	r3, [r7, #4]
 8002708:	619a      	str	r2, [r3, #24]
 800270a:	bf00      	nop
 800270c:	370c      	adds	r7, #12
 800270e:	46bd      	mov	sp, r7
 8002710:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002714:	4770      	bx	lr
	...

08002718 <HAL_GPIO_EXTI_IRQHandler>:
 8002718:	b580      	push	{r7, lr}
 800271a:	b082      	sub	sp, #8
 800271c:	af00      	add	r7, sp, #0
 800271e:	4603      	mov	r3, r0
 8002720:	80fb      	strh	r3, [r7, #6]
 8002722:	4b08      	ldr	r3, [pc, #32]	; (8002744 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8002724:	695a      	ldr	r2, [r3, #20]
 8002726:	88fb      	ldrh	r3, [r7, #6]
 8002728:	4013      	ands	r3, r2
 800272a:	2b00      	cmp	r3, #0
 800272c:	d006      	beq.n	800273c <HAL_GPIO_EXTI_IRQHandler+0x24>
 800272e:	4a05      	ldr	r2, [pc, #20]	; (8002744 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8002730:	88fb      	ldrh	r3, [r7, #6]
 8002732:	6153      	str	r3, [r2, #20]
 8002734:	88fb      	ldrh	r3, [r7, #6]
 8002736:	4618      	mov	r0, r3
 8002738:	f7fe f8da 	bl	80008f0 <HAL_GPIO_EXTI_Callback>
 800273c:	bf00      	nop
 800273e:	3708      	adds	r7, #8
 8002740:	46bd      	mov	sp, r7
 8002742:	bd80      	pop	{r7, pc}
 8002744:	40013c00 	.word	0x40013c00

08002748 <HAL_RCC_OscConfig>:
 8002748:	b580      	push	{r7, lr}
 800274a:	b086      	sub	sp, #24
 800274c:	af00      	add	r7, sp, #0
 800274e:	6078      	str	r0, [r7, #4]
 8002750:	687b      	ldr	r3, [r7, #4]
 8002752:	2b00      	cmp	r3, #0
 8002754:	d101      	bne.n	800275a <HAL_RCC_OscConfig+0x12>
 8002756:	2301      	movs	r3, #1
 8002758:	e267      	b.n	8002c2a <HAL_RCC_OscConfig+0x4e2>
 800275a:	687b      	ldr	r3, [r7, #4]
 800275c:	681b      	ldr	r3, [r3, #0]
 800275e:	f003 0301 	and.w	r3, r3, #1
 8002762:	2b00      	cmp	r3, #0
 8002764:	d075      	beq.n	8002852 <HAL_RCC_OscConfig+0x10a>
 8002766:	4b88      	ldr	r3, [pc, #544]	; (8002988 <HAL_RCC_OscConfig+0x240>)
 8002768:	689b      	ldr	r3, [r3, #8]
 800276a:	f003 030c 	and.w	r3, r3, #12
 800276e:	2b04      	cmp	r3, #4
 8002770:	d00c      	beq.n	800278c <HAL_RCC_OscConfig+0x44>
 8002772:	4b85      	ldr	r3, [pc, #532]	; (8002988 <HAL_RCC_OscConfig+0x240>)
 8002774:	689b      	ldr	r3, [r3, #8]
 8002776:	f003 030c 	and.w	r3, r3, #12
 800277a:	2b08      	cmp	r3, #8
 800277c:	d112      	bne.n	80027a4 <HAL_RCC_OscConfig+0x5c>
 800277e:	4b82      	ldr	r3, [pc, #520]	; (8002988 <HAL_RCC_OscConfig+0x240>)
 8002780:	685b      	ldr	r3, [r3, #4]
 8002782:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8002786:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 800278a:	d10b      	bne.n	80027a4 <HAL_RCC_OscConfig+0x5c>
 800278c:	4b7e      	ldr	r3, [pc, #504]	; (8002988 <HAL_RCC_OscConfig+0x240>)
 800278e:	681b      	ldr	r3, [r3, #0]
 8002790:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002794:	2b00      	cmp	r3, #0
 8002796:	d05b      	beq.n	8002850 <HAL_RCC_OscConfig+0x108>
 8002798:	687b      	ldr	r3, [r7, #4]
 800279a:	685b      	ldr	r3, [r3, #4]
 800279c:	2b00      	cmp	r3, #0
 800279e:	d157      	bne.n	8002850 <HAL_RCC_OscConfig+0x108>
 80027a0:	2301      	movs	r3, #1
 80027a2:	e242      	b.n	8002c2a <HAL_RCC_OscConfig+0x4e2>
 80027a4:	687b      	ldr	r3, [r7, #4]
 80027a6:	685b      	ldr	r3, [r3, #4]
 80027a8:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80027ac:	d106      	bne.n	80027bc <HAL_RCC_OscConfig+0x74>
 80027ae:	4b76      	ldr	r3, [pc, #472]	; (8002988 <HAL_RCC_OscConfig+0x240>)
 80027b0:	681b      	ldr	r3, [r3, #0]
 80027b2:	4a75      	ldr	r2, [pc, #468]	; (8002988 <HAL_RCC_OscConfig+0x240>)
 80027b4:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80027b8:	6013      	str	r3, [r2, #0]
 80027ba:	e01d      	b.n	80027f8 <HAL_RCC_OscConfig+0xb0>
 80027bc:	687b      	ldr	r3, [r7, #4]
 80027be:	685b      	ldr	r3, [r3, #4]
 80027c0:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 80027c4:	d10c      	bne.n	80027e0 <HAL_RCC_OscConfig+0x98>
 80027c6:	4b70      	ldr	r3, [pc, #448]	; (8002988 <HAL_RCC_OscConfig+0x240>)
 80027c8:	681b      	ldr	r3, [r3, #0]
 80027ca:	4a6f      	ldr	r2, [pc, #444]	; (8002988 <HAL_RCC_OscConfig+0x240>)
 80027cc:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 80027d0:	6013      	str	r3, [r2, #0]
 80027d2:	4b6d      	ldr	r3, [pc, #436]	; (8002988 <HAL_RCC_OscConfig+0x240>)
 80027d4:	681b      	ldr	r3, [r3, #0]
 80027d6:	4a6c      	ldr	r2, [pc, #432]	; (8002988 <HAL_RCC_OscConfig+0x240>)
 80027d8:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80027dc:	6013      	str	r3, [r2, #0]
 80027de:	e00b      	b.n	80027f8 <HAL_RCC_OscConfig+0xb0>
 80027e0:	4b69      	ldr	r3, [pc, #420]	; (8002988 <HAL_RCC_OscConfig+0x240>)
 80027e2:	681b      	ldr	r3, [r3, #0]
 80027e4:	4a68      	ldr	r2, [pc, #416]	; (8002988 <HAL_RCC_OscConfig+0x240>)
 80027e6:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80027ea:	6013      	str	r3, [r2, #0]
 80027ec:	4b66      	ldr	r3, [pc, #408]	; (8002988 <HAL_RCC_OscConfig+0x240>)
 80027ee:	681b      	ldr	r3, [r3, #0]
 80027f0:	4a65      	ldr	r2, [pc, #404]	; (8002988 <HAL_RCC_OscConfig+0x240>)
 80027f2:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80027f6:	6013      	str	r3, [r2, #0]
 80027f8:	687b      	ldr	r3, [r7, #4]
 80027fa:	685b      	ldr	r3, [r3, #4]
 80027fc:	2b00      	cmp	r3, #0
 80027fe:	d013      	beq.n	8002828 <HAL_RCC_OscConfig+0xe0>
 8002800:	f7ff f8ec 	bl	80019dc <HAL_GetTick>
 8002804:	6138      	str	r0, [r7, #16]
 8002806:	e008      	b.n	800281a <HAL_RCC_OscConfig+0xd2>
 8002808:	f7ff f8e8 	bl	80019dc <HAL_GetTick>
 800280c:	4602      	mov	r2, r0
 800280e:	693b      	ldr	r3, [r7, #16]
 8002810:	1ad3      	subs	r3, r2, r3
 8002812:	2b64      	cmp	r3, #100	; 0x64
 8002814:	d901      	bls.n	800281a <HAL_RCC_OscConfig+0xd2>
 8002816:	2303      	movs	r3, #3
 8002818:	e207      	b.n	8002c2a <HAL_RCC_OscConfig+0x4e2>
 800281a:	4b5b      	ldr	r3, [pc, #364]	; (8002988 <HAL_RCC_OscConfig+0x240>)
 800281c:	681b      	ldr	r3, [r3, #0]
 800281e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002822:	2b00      	cmp	r3, #0
 8002824:	d0f0      	beq.n	8002808 <HAL_RCC_OscConfig+0xc0>
 8002826:	e014      	b.n	8002852 <HAL_RCC_OscConfig+0x10a>
 8002828:	f7ff f8d8 	bl	80019dc <HAL_GetTick>
 800282c:	6138      	str	r0, [r7, #16]
 800282e:	e008      	b.n	8002842 <HAL_RCC_OscConfig+0xfa>
 8002830:	f7ff f8d4 	bl	80019dc <HAL_GetTick>
 8002834:	4602      	mov	r2, r0
 8002836:	693b      	ldr	r3, [r7, #16]
 8002838:	1ad3      	subs	r3, r2, r3
 800283a:	2b64      	cmp	r3, #100	; 0x64
 800283c:	d901      	bls.n	8002842 <HAL_RCC_OscConfig+0xfa>
 800283e:	2303      	movs	r3, #3
 8002840:	e1f3      	b.n	8002c2a <HAL_RCC_OscConfig+0x4e2>
 8002842:	4b51      	ldr	r3, [pc, #324]	; (8002988 <HAL_RCC_OscConfig+0x240>)
 8002844:	681b      	ldr	r3, [r3, #0]
 8002846:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800284a:	2b00      	cmp	r3, #0
 800284c:	d1f0      	bne.n	8002830 <HAL_RCC_OscConfig+0xe8>
 800284e:	e000      	b.n	8002852 <HAL_RCC_OscConfig+0x10a>
 8002850:	bf00      	nop
 8002852:	687b      	ldr	r3, [r7, #4]
 8002854:	681b      	ldr	r3, [r3, #0]
 8002856:	f003 0302 	and.w	r3, r3, #2
 800285a:	2b00      	cmp	r3, #0
 800285c:	d063      	beq.n	8002926 <HAL_RCC_OscConfig+0x1de>
 800285e:	4b4a      	ldr	r3, [pc, #296]	; (8002988 <HAL_RCC_OscConfig+0x240>)
 8002860:	689b      	ldr	r3, [r3, #8]
 8002862:	f003 030c 	and.w	r3, r3, #12
 8002866:	2b00      	cmp	r3, #0
 8002868:	d00b      	beq.n	8002882 <HAL_RCC_OscConfig+0x13a>
 800286a:	4b47      	ldr	r3, [pc, #284]	; (8002988 <HAL_RCC_OscConfig+0x240>)
 800286c:	689b      	ldr	r3, [r3, #8]
 800286e:	f003 030c 	and.w	r3, r3, #12
 8002872:	2b08      	cmp	r3, #8
 8002874:	d11c      	bne.n	80028b0 <HAL_RCC_OscConfig+0x168>
 8002876:	4b44      	ldr	r3, [pc, #272]	; (8002988 <HAL_RCC_OscConfig+0x240>)
 8002878:	685b      	ldr	r3, [r3, #4]
 800287a:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 800287e:	2b00      	cmp	r3, #0
 8002880:	d116      	bne.n	80028b0 <HAL_RCC_OscConfig+0x168>
 8002882:	4b41      	ldr	r3, [pc, #260]	; (8002988 <HAL_RCC_OscConfig+0x240>)
 8002884:	681b      	ldr	r3, [r3, #0]
 8002886:	f003 0302 	and.w	r3, r3, #2
 800288a:	2b00      	cmp	r3, #0
 800288c:	d005      	beq.n	800289a <HAL_RCC_OscConfig+0x152>
 800288e:	687b      	ldr	r3, [r7, #4]
 8002890:	68db      	ldr	r3, [r3, #12]
 8002892:	2b01      	cmp	r3, #1
 8002894:	d001      	beq.n	800289a <HAL_RCC_OscConfig+0x152>
 8002896:	2301      	movs	r3, #1
 8002898:	e1c7      	b.n	8002c2a <HAL_RCC_OscConfig+0x4e2>
 800289a:	4b3b      	ldr	r3, [pc, #236]	; (8002988 <HAL_RCC_OscConfig+0x240>)
 800289c:	681b      	ldr	r3, [r3, #0]
 800289e:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 80028a2:	687b      	ldr	r3, [r7, #4]
 80028a4:	691b      	ldr	r3, [r3, #16]
 80028a6:	00db      	lsls	r3, r3, #3
 80028a8:	4937      	ldr	r1, [pc, #220]	; (8002988 <HAL_RCC_OscConfig+0x240>)
 80028aa:	4313      	orrs	r3, r2
 80028ac:	600b      	str	r3, [r1, #0]
 80028ae:	e03a      	b.n	8002926 <HAL_RCC_OscConfig+0x1de>
 80028b0:	687b      	ldr	r3, [r7, #4]
 80028b2:	68db      	ldr	r3, [r3, #12]
 80028b4:	2b00      	cmp	r3, #0
 80028b6:	d020      	beq.n	80028fa <HAL_RCC_OscConfig+0x1b2>
 80028b8:	4b34      	ldr	r3, [pc, #208]	; (800298c <HAL_RCC_OscConfig+0x244>)
 80028ba:	2201      	movs	r2, #1
 80028bc:	601a      	str	r2, [r3, #0]
 80028be:	f7ff f88d 	bl	80019dc <HAL_GetTick>
 80028c2:	6138      	str	r0, [r7, #16]
 80028c4:	e008      	b.n	80028d8 <HAL_RCC_OscConfig+0x190>
 80028c6:	f7ff f889 	bl	80019dc <HAL_GetTick>
 80028ca:	4602      	mov	r2, r0
 80028cc:	693b      	ldr	r3, [r7, #16]
 80028ce:	1ad3      	subs	r3, r2, r3
 80028d0:	2b02      	cmp	r3, #2
 80028d2:	d901      	bls.n	80028d8 <HAL_RCC_OscConfig+0x190>
 80028d4:	2303      	movs	r3, #3
 80028d6:	e1a8      	b.n	8002c2a <HAL_RCC_OscConfig+0x4e2>
 80028d8:	4b2b      	ldr	r3, [pc, #172]	; (8002988 <HAL_RCC_OscConfig+0x240>)
 80028da:	681b      	ldr	r3, [r3, #0]
 80028dc:	f003 0302 	and.w	r3, r3, #2
 80028e0:	2b00      	cmp	r3, #0
 80028e2:	d0f0      	beq.n	80028c6 <HAL_RCC_OscConfig+0x17e>
 80028e4:	4b28      	ldr	r3, [pc, #160]	; (8002988 <HAL_RCC_OscConfig+0x240>)
 80028e6:	681b      	ldr	r3, [r3, #0]
 80028e8:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 80028ec:	687b      	ldr	r3, [r7, #4]
 80028ee:	691b      	ldr	r3, [r3, #16]
 80028f0:	00db      	lsls	r3, r3, #3
 80028f2:	4925      	ldr	r1, [pc, #148]	; (8002988 <HAL_RCC_OscConfig+0x240>)
 80028f4:	4313      	orrs	r3, r2
 80028f6:	600b      	str	r3, [r1, #0]
 80028f8:	e015      	b.n	8002926 <HAL_RCC_OscConfig+0x1de>
 80028fa:	4b24      	ldr	r3, [pc, #144]	; (800298c <HAL_RCC_OscConfig+0x244>)
 80028fc:	2200      	movs	r2, #0
 80028fe:	601a      	str	r2, [r3, #0]
 8002900:	f7ff f86c 	bl	80019dc <HAL_GetTick>
 8002904:	6138      	str	r0, [r7, #16]
 8002906:	e008      	b.n	800291a <HAL_RCC_OscConfig+0x1d2>
 8002908:	f7ff f868 	bl	80019dc <HAL_GetTick>
 800290c:	4602      	mov	r2, r0
 800290e:	693b      	ldr	r3, [r7, #16]
 8002910:	1ad3      	subs	r3, r2, r3
 8002912:	2b02      	cmp	r3, #2
 8002914:	d901      	bls.n	800291a <HAL_RCC_OscConfig+0x1d2>
 8002916:	2303      	movs	r3, #3
 8002918:	e187      	b.n	8002c2a <HAL_RCC_OscConfig+0x4e2>
 800291a:	4b1b      	ldr	r3, [pc, #108]	; (8002988 <HAL_RCC_OscConfig+0x240>)
 800291c:	681b      	ldr	r3, [r3, #0]
 800291e:	f003 0302 	and.w	r3, r3, #2
 8002922:	2b00      	cmp	r3, #0
 8002924:	d1f0      	bne.n	8002908 <HAL_RCC_OscConfig+0x1c0>
 8002926:	687b      	ldr	r3, [r7, #4]
 8002928:	681b      	ldr	r3, [r3, #0]
 800292a:	f003 0308 	and.w	r3, r3, #8
 800292e:	2b00      	cmp	r3, #0
 8002930:	d036      	beq.n	80029a0 <HAL_RCC_OscConfig+0x258>
 8002932:	687b      	ldr	r3, [r7, #4]
 8002934:	695b      	ldr	r3, [r3, #20]
 8002936:	2b00      	cmp	r3, #0
 8002938:	d016      	beq.n	8002968 <HAL_RCC_OscConfig+0x220>
 800293a:	4b15      	ldr	r3, [pc, #84]	; (8002990 <HAL_RCC_OscConfig+0x248>)
 800293c:	2201      	movs	r2, #1
 800293e:	601a      	str	r2, [r3, #0]
 8002940:	f7ff f84c 	bl	80019dc <HAL_GetTick>
 8002944:	6138      	str	r0, [r7, #16]
 8002946:	e008      	b.n	800295a <HAL_RCC_OscConfig+0x212>
 8002948:	f7ff f848 	bl	80019dc <HAL_GetTick>
 800294c:	4602      	mov	r2, r0
 800294e:	693b      	ldr	r3, [r7, #16]
 8002950:	1ad3      	subs	r3, r2, r3
 8002952:	2b02      	cmp	r3, #2
 8002954:	d901      	bls.n	800295a <HAL_RCC_OscConfig+0x212>
 8002956:	2303      	movs	r3, #3
 8002958:	e167      	b.n	8002c2a <HAL_RCC_OscConfig+0x4e2>
 800295a:	4b0b      	ldr	r3, [pc, #44]	; (8002988 <HAL_RCC_OscConfig+0x240>)
 800295c:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800295e:	f003 0302 	and.w	r3, r3, #2
 8002962:	2b00      	cmp	r3, #0
 8002964:	d0f0      	beq.n	8002948 <HAL_RCC_OscConfig+0x200>
 8002966:	e01b      	b.n	80029a0 <HAL_RCC_OscConfig+0x258>
 8002968:	4b09      	ldr	r3, [pc, #36]	; (8002990 <HAL_RCC_OscConfig+0x248>)
 800296a:	2200      	movs	r2, #0
 800296c:	601a      	str	r2, [r3, #0]
 800296e:	f7ff f835 	bl	80019dc <HAL_GetTick>
 8002972:	6138      	str	r0, [r7, #16]
 8002974:	e00e      	b.n	8002994 <HAL_RCC_OscConfig+0x24c>
 8002976:	f7ff f831 	bl	80019dc <HAL_GetTick>
 800297a:	4602      	mov	r2, r0
 800297c:	693b      	ldr	r3, [r7, #16]
 800297e:	1ad3      	subs	r3, r2, r3
 8002980:	2b02      	cmp	r3, #2
 8002982:	d907      	bls.n	8002994 <HAL_RCC_OscConfig+0x24c>
 8002984:	2303      	movs	r3, #3
 8002986:	e150      	b.n	8002c2a <HAL_RCC_OscConfig+0x4e2>
 8002988:	40023800 	.word	0x40023800
 800298c:	42470000 	.word	0x42470000
 8002990:	42470e80 	.word	0x42470e80
 8002994:	4b88      	ldr	r3, [pc, #544]	; (8002bb8 <HAL_RCC_OscConfig+0x470>)
 8002996:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8002998:	f003 0302 	and.w	r3, r3, #2
 800299c:	2b00      	cmp	r3, #0
 800299e:	d1ea      	bne.n	8002976 <HAL_RCC_OscConfig+0x22e>
 80029a0:	687b      	ldr	r3, [r7, #4]
 80029a2:	681b      	ldr	r3, [r3, #0]
 80029a4:	f003 0304 	and.w	r3, r3, #4
 80029a8:	2b00      	cmp	r3, #0
 80029aa:	f000 8097 	beq.w	8002adc <HAL_RCC_OscConfig+0x394>
 80029ae:	2300      	movs	r3, #0
 80029b0:	75fb      	strb	r3, [r7, #23]
 80029b2:	4b81      	ldr	r3, [pc, #516]	; (8002bb8 <HAL_RCC_OscConfig+0x470>)
 80029b4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80029b6:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80029ba:	2b00      	cmp	r3, #0
 80029bc:	d10f      	bne.n	80029de <HAL_RCC_OscConfig+0x296>
 80029be:	2300      	movs	r3, #0
 80029c0:	60bb      	str	r3, [r7, #8]
 80029c2:	4b7d      	ldr	r3, [pc, #500]	; (8002bb8 <HAL_RCC_OscConfig+0x470>)
 80029c4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80029c6:	4a7c      	ldr	r2, [pc, #496]	; (8002bb8 <HAL_RCC_OscConfig+0x470>)
 80029c8:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80029cc:	6413      	str	r3, [r2, #64]	; 0x40
 80029ce:	4b7a      	ldr	r3, [pc, #488]	; (8002bb8 <HAL_RCC_OscConfig+0x470>)
 80029d0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80029d2:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80029d6:	60bb      	str	r3, [r7, #8]
 80029d8:	68bb      	ldr	r3, [r7, #8]
 80029da:	2301      	movs	r3, #1
 80029dc:	75fb      	strb	r3, [r7, #23]
 80029de:	4b77      	ldr	r3, [pc, #476]	; (8002bbc <HAL_RCC_OscConfig+0x474>)
 80029e0:	681b      	ldr	r3, [r3, #0]
 80029e2:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80029e6:	2b00      	cmp	r3, #0
 80029e8:	d118      	bne.n	8002a1c <HAL_RCC_OscConfig+0x2d4>
 80029ea:	4b74      	ldr	r3, [pc, #464]	; (8002bbc <HAL_RCC_OscConfig+0x474>)
 80029ec:	681b      	ldr	r3, [r3, #0]
 80029ee:	4a73      	ldr	r2, [pc, #460]	; (8002bbc <HAL_RCC_OscConfig+0x474>)
 80029f0:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80029f4:	6013      	str	r3, [r2, #0]
 80029f6:	f7fe fff1 	bl	80019dc <HAL_GetTick>
 80029fa:	6138      	str	r0, [r7, #16]
 80029fc:	e008      	b.n	8002a10 <HAL_RCC_OscConfig+0x2c8>
 80029fe:	f7fe ffed 	bl	80019dc <HAL_GetTick>
 8002a02:	4602      	mov	r2, r0
 8002a04:	693b      	ldr	r3, [r7, #16]
 8002a06:	1ad3      	subs	r3, r2, r3
 8002a08:	2b02      	cmp	r3, #2
 8002a0a:	d901      	bls.n	8002a10 <HAL_RCC_OscConfig+0x2c8>
 8002a0c:	2303      	movs	r3, #3
 8002a0e:	e10c      	b.n	8002c2a <HAL_RCC_OscConfig+0x4e2>
 8002a10:	4b6a      	ldr	r3, [pc, #424]	; (8002bbc <HAL_RCC_OscConfig+0x474>)
 8002a12:	681b      	ldr	r3, [r3, #0]
 8002a14:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8002a18:	2b00      	cmp	r3, #0
 8002a1a:	d0f0      	beq.n	80029fe <HAL_RCC_OscConfig+0x2b6>
 8002a1c:	687b      	ldr	r3, [r7, #4]
 8002a1e:	689b      	ldr	r3, [r3, #8]
 8002a20:	2b01      	cmp	r3, #1
 8002a22:	d106      	bne.n	8002a32 <HAL_RCC_OscConfig+0x2ea>
 8002a24:	4b64      	ldr	r3, [pc, #400]	; (8002bb8 <HAL_RCC_OscConfig+0x470>)
 8002a26:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8002a28:	4a63      	ldr	r2, [pc, #396]	; (8002bb8 <HAL_RCC_OscConfig+0x470>)
 8002a2a:	f043 0301 	orr.w	r3, r3, #1
 8002a2e:	6713      	str	r3, [r2, #112]	; 0x70
 8002a30:	e01c      	b.n	8002a6c <HAL_RCC_OscConfig+0x324>
 8002a32:	687b      	ldr	r3, [r7, #4]
 8002a34:	689b      	ldr	r3, [r3, #8]
 8002a36:	2b05      	cmp	r3, #5
 8002a38:	d10c      	bne.n	8002a54 <HAL_RCC_OscConfig+0x30c>
 8002a3a:	4b5f      	ldr	r3, [pc, #380]	; (8002bb8 <HAL_RCC_OscConfig+0x470>)
 8002a3c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8002a3e:	4a5e      	ldr	r2, [pc, #376]	; (8002bb8 <HAL_RCC_OscConfig+0x470>)
 8002a40:	f043 0304 	orr.w	r3, r3, #4
 8002a44:	6713      	str	r3, [r2, #112]	; 0x70
 8002a46:	4b5c      	ldr	r3, [pc, #368]	; (8002bb8 <HAL_RCC_OscConfig+0x470>)
 8002a48:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8002a4a:	4a5b      	ldr	r2, [pc, #364]	; (8002bb8 <HAL_RCC_OscConfig+0x470>)
 8002a4c:	f043 0301 	orr.w	r3, r3, #1
 8002a50:	6713      	str	r3, [r2, #112]	; 0x70
 8002a52:	e00b      	b.n	8002a6c <HAL_RCC_OscConfig+0x324>
 8002a54:	4b58      	ldr	r3, [pc, #352]	; (8002bb8 <HAL_RCC_OscConfig+0x470>)
 8002a56:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8002a58:	4a57      	ldr	r2, [pc, #348]	; (8002bb8 <HAL_RCC_OscConfig+0x470>)
 8002a5a:	f023 0301 	bic.w	r3, r3, #1
 8002a5e:	6713      	str	r3, [r2, #112]	; 0x70
 8002a60:	4b55      	ldr	r3, [pc, #340]	; (8002bb8 <HAL_RCC_OscConfig+0x470>)
 8002a62:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8002a64:	4a54      	ldr	r2, [pc, #336]	; (8002bb8 <HAL_RCC_OscConfig+0x470>)
 8002a66:	f023 0304 	bic.w	r3, r3, #4
 8002a6a:	6713      	str	r3, [r2, #112]	; 0x70
 8002a6c:	687b      	ldr	r3, [r7, #4]
 8002a6e:	689b      	ldr	r3, [r3, #8]
 8002a70:	2b00      	cmp	r3, #0
 8002a72:	d015      	beq.n	8002aa0 <HAL_RCC_OscConfig+0x358>
 8002a74:	f7fe ffb2 	bl	80019dc <HAL_GetTick>
 8002a78:	6138      	str	r0, [r7, #16]
 8002a7a:	e00a      	b.n	8002a92 <HAL_RCC_OscConfig+0x34a>
 8002a7c:	f7fe ffae 	bl	80019dc <HAL_GetTick>
 8002a80:	4602      	mov	r2, r0
 8002a82:	693b      	ldr	r3, [r7, #16]
 8002a84:	1ad3      	subs	r3, r2, r3
 8002a86:	f241 3288 	movw	r2, #5000	; 0x1388
 8002a8a:	4293      	cmp	r3, r2
 8002a8c:	d901      	bls.n	8002a92 <HAL_RCC_OscConfig+0x34a>
 8002a8e:	2303      	movs	r3, #3
 8002a90:	e0cb      	b.n	8002c2a <HAL_RCC_OscConfig+0x4e2>
 8002a92:	4b49      	ldr	r3, [pc, #292]	; (8002bb8 <HAL_RCC_OscConfig+0x470>)
 8002a94:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8002a96:	f003 0302 	and.w	r3, r3, #2
 8002a9a:	2b00      	cmp	r3, #0
 8002a9c:	d0ee      	beq.n	8002a7c <HAL_RCC_OscConfig+0x334>
 8002a9e:	e014      	b.n	8002aca <HAL_RCC_OscConfig+0x382>
 8002aa0:	f7fe ff9c 	bl	80019dc <HAL_GetTick>
 8002aa4:	6138      	str	r0, [r7, #16]
 8002aa6:	e00a      	b.n	8002abe <HAL_RCC_OscConfig+0x376>
 8002aa8:	f7fe ff98 	bl	80019dc <HAL_GetTick>
 8002aac:	4602      	mov	r2, r0
 8002aae:	693b      	ldr	r3, [r7, #16]
 8002ab0:	1ad3      	subs	r3, r2, r3
 8002ab2:	f241 3288 	movw	r2, #5000	; 0x1388
 8002ab6:	4293      	cmp	r3, r2
 8002ab8:	d901      	bls.n	8002abe <HAL_RCC_OscConfig+0x376>
 8002aba:	2303      	movs	r3, #3
 8002abc:	e0b5      	b.n	8002c2a <HAL_RCC_OscConfig+0x4e2>
 8002abe:	4b3e      	ldr	r3, [pc, #248]	; (8002bb8 <HAL_RCC_OscConfig+0x470>)
 8002ac0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8002ac2:	f003 0302 	and.w	r3, r3, #2
 8002ac6:	2b00      	cmp	r3, #0
 8002ac8:	d1ee      	bne.n	8002aa8 <HAL_RCC_OscConfig+0x360>
 8002aca:	7dfb      	ldrb	r3, [r7, #23]
 8002acc:	2b01      	cmp	r3, #1
 8002ace:	d105      	bne.n	8002adc <HAL_RCC_OscConfig+0x394>
 8002ad0:	4b39      	ldr	r3, [pc, #228]	; (8002bb8 <HAL_RCC_OscConfig+0x470>)
 8002ad2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002ad4:	4a38      	ldr	r2, [pc, #224]	; (8002bb8 <HAL_RCC_OscConfig+0x470>)
 8002ad6:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8002ada:	6413      	str	r3, [r2, #64]	; 0x40
 8002adc:	687b      	ldr	r3, [r7, #4]
 8002ade:	699b      	ldr	r3, [r3, #24]
 8002ae0:	2b00      	cmp	r3, #0
 8002ae2:	f000 80a1 	beq.w	8002c28 <HAL_RCC_OscConfig+0x4e0>
 8002ae6:	4b34      	ldr	r3, [pc, #208]	; (8002bb8 <HAL_RCC_OscConfig+0x470>)
 8002ae8:	689b      	ldr	r3, [r3, #8]
 8002aea:	f003 030c 	and.w	r3, r3, #12
 8002aee:	2b08      	cmp	r3, #8
 8002af0:	d05c      	beq.n	8002bac <HAL_RCC_OscConfig+0x464>
 8002af2:	687b      	ldr	r3, [r7, #4]
 8002af4:	699b      	ldr	r3, [r3, #24]
 8002af6:	2b02      	cmp	r3, #2
 8002af8:	d141      	bne.n	8002b7e <HAL_RCC_OscConfig+0x436>
 8002afa:	4b31      	ldr	r3, [pc, #196]	; (8002bc0 <HAL_RCC_OscConfig+0x478>)
 8002afc:	2200      	movs	r2, #0
 8002afe:	601a      	str	r2, [r3, #0]
 8002b00:	f7fe ff6c 	bl	80019dc <HAL_GetTick>
 8002b04:	6138      	str	r0, [r7, #16]
 8002b06:	e008      	b.n	8002b1a <HAL_RCC_OscConfig+0x3d2>
 8002b08:	f7fe ff68 	bl	80019dc <HAL_GetTick>
 8002b0c:	4602      	mov	r2, r0
 8002b0e:	693b      	ldr	r3, [r7, #16]
 8002b10:	1ad3      	subs	r3, r2, r3
 8002b12:	2b02      	cmp	r3, #2
 8002b14:	d901      	bls.n	8002b1a <HAL_RCC_OscConfig+0x3d2>
 8002b16:	2303      	movs	r3, #3
 8002b18:	e087      	b.n	8002c2a <HAL_RCC_OscConfig+0x4e2>
 8002b1a:	4b27      	ldr	r3, [pc, #156]	; (8002bb8 <HAL_RCC_OscConfig+0x470>)
 8002b1c:	681b      	ldr	r3, [r3, #0]
 8002b1e:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8002b22:	2b00      	cmp	r3, #0
 8002b24:	d1f0      	bne.n	8002b08 <HAL_RCC_OscConfig+0x3c0>
 8002b26:	687b      	ldr	r3, [r7, #4]
 8002b28:	69da      	ldr	r2, [r3, #28]
 8002b2a:	687b      	ldr	r3, [r7, #4]
 8002b2c:	6a1b      	ldr	r3, [r3, #32]
 8002b2e:	431a      	orrs	r2, r3
 8002b30:	687b      	ldr	r3, [r7, #4]
 8002b32:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002b34:	019b      	lsls	r3, r3, #6
 8002b36:	431a      	orrs	r2, r3
 8002b38:	687b      	ldr	r3, [r7, #4]
 8002b3a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002b3c:	085b      	lsrs	r3, r3, #1
 8002b3e:	3b01      	subs	r3, #1
 8002b40:	041b      	lsls	r3, r3, #16
 8002b42:	431a      	orrs	r2, r3
 8002b44:	687b      	ldr	r3, [r7, #4]
 8002b46:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002b48:	061b      	lsls	r3, r3, #24
 8002b4a:	491b      	ldr	r1, [pc, #108]	; (8002bb8 <HAL_RCC_OscConfig+0x470>)
 8002b4c:	4313      	orrs	r3, r2
 8002b4e:	604b      	str	r3, [r1, #4]
 8002b50:	4b1b      	ldr	r3, [pc, #108]	; (8002bc0 <HAL_RCC_OscConfig+0x478>)
 8002b52:	2201      	movs	r2, #1
 8002b54:	601a      	str	r2, [r3, #0]
 8002b56:	f7fe ff41 	bl	80019dc <HAL_GetTick>
 8002b5a:	6138      	str	r0, [r7, #16]
 8002b5c:	e008      	b.n	8002b70 <HAL_RCC_OscConfig+0x428>
 8002b5e:	f7fe ff3d 	bl	80019dc <HAL_GetTick>
 8002b62:	4602      	mov	r2, r0
 8002b64:	693b      	ldr	r3, [r7, #16]
 8002b66:	1ad3      	subs	r3, r2, r3
 8002b68:	2b02      	cmp	r3, #2
 8002b6a:	d901      	bls.n	8002b70 <HAL_RCC_OscConfig+0x428>
 8002b6c:	2303      	movs	r3, #3
 8002b6e:	e05c      	b.n	8002c2a <HAL_RCC_OscConfig+0x4e2>
 8002b70:	4b11      	ldr	r3, [pc, #68]	; (8002bb8 <HAL_RCC_OscConfig+0x470>)
 8002b72:	681b      	ldr	r3, [r3, #0]
 8002b74:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8002b78:	2b00      	cmp	r3, #0
 8002b7a:	d0f0      	beq.n	8002b5e <HAL_RCC_OscConfig+0x416>
 8002b7c:	e054      	b.n	8002c28 <HAL_RCC_OscConfig+0x4e0>
 8002b7e:	4b10      	ldr	r3, [pc, #64]	; (8002bc0 <HAL_RCC_OscConfig+0x478>)
 8002b80:	2200      	movs	r2, #0
 8002b82:	601a      	str	r2, [r3, #0]
 8002b84:	f7fe ff2a 	bl	80019dc <HAL_GetTick>
 8002b88:	6138      	str	r0, [r7, #16]
 8002b8a:	e008      	b.n	8002b9e <HAL_RCC_OscConfig+0x456>
 8002b8c:	f7fe ff26 	bl	80019dc <HAL_GetTick>
 8002b90:	4602      	mov	r2, r0
 8002b92:	693b      	ldr	r3, [r7, #16]
 8002b94:	1ad3      	subs	r3, r2, r3
 8002b96:	2b02      	cmp	r3, #2
 8002b98:	d901      	bls.n	8002b9e <HAL_RCC_OscConfig+0x456>
 8002b9a:	2303      	movs	r3, #3
 8002b9c:	e045      	b.n	8002c2a <HAL_RCC_OscConfig+0x4e2>
 8002b9e:	4b06      	ldr	r3, [pc, #24]	; (8002bb8 <HAL_RCC_OscConfig+0x470>)
 8002ba0:	681b      	ldr	r3, [r3, #0]
 8002ba2:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8002ba6:	2b00      	cmp	r3, #0
 8002ba8:	d1f0      	bne.n	8002b8c <HAL_RCC_OscConfig+0x444>
 8002baa:	e03d      	b.n	8002c28 <HAL_RCC_OscConfig+0x4e0>
 8002bac:	687b      	ldr	r3, [r7, #4]
 8002bae:	699b      	ldr	r3, [r3, #24]
 8002bb0:	2b01      	cmp	r3, #1
 8002bb2:	d107      	bne.n	8002bc4 <HAL_RCC_OscConfig+0x47c>
 8002bb4:	2301      	movs	r3, #1
 8002bb6:	e038      	b.n	8002c2a <HAL_RCC_OscConfig+0x4e2>
 8002bb8:	40023800 	.word	0x40023800
 8002bbc:	40007000 	.word	0x40007000
 8002bc0:	42470060 	.word	0x42470060
 8002bc4:	4b1b      	ldr	r3, [pc, #108]	; (8002c34 <HAL_RCC_OscConfig+0x4ec>)
 8002bc6:	685b      	ldr	r3, [r3, #4]
 8002bc8:	60fb      	str	r3, [r7, #12]
 8002bca:	687b      	ldr	r3, [r7, #4]
 8002bcc:	699b      	ldr	r3, [r3, #24]
 8002bce:	2b01      	cmp	r3, #1
 8002bd0:	d028      	beq.n	8002c24 <HAL_RCC_OscConfig+0x4dc>
 8002bd2:	68fb      	ldr	r3, [r7, #12]
 8002bd4:	f403 0280 	and.w	r2, r3, #4194304	; 0x400000
 8002bd8:	687b      	ldr	r3, [r7, #4]
 8002bda:	69db      	ldr	r3, [r3, #28]
 8002bdc:	429a      	cmp	r2, r3
 8002bde:	d121      	bne.n	8002c24 <HAL_RCC_OscConfig+0x4dc>
 8002be0:	68fb      	ldr	r3, [r7, #12]
 8002be2:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 8002be6:	687b      	ldr	r3, [r7, #4]
 8002be8:	6a1b      	ldr	r3, [r3, #32]
 8002bea:	429a      	cmp	r2, r3
 8002bec:	d11a      	bne.n	8002c24 <HAL_RCC_OscConfig+0x4dc>
 8002bee:	68fa      	ldr	r2, [r7, #12]
 8002bf0:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 8002bf4:	4013      	ands	r3, r2
 8002bf6:	687a      	ldr	r2, [r7, #4]
 8002bf8:	6a52      	ldr	r2, [r2, #36]	; 0x24
 8002bfa:	0192      	lsls	r2, r2, #6
 8002bfc:	4293      	cmp	r3, r2
 8002bfe:	d111      	bne.n	8002c24 <HAL_RCC_OscConfig+0x4dc>
 8002c00:	68fb      	ldr	r3, [r7, #12]
 8002c02:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
 8002c06:	687b      	ldr	r3, [r7, #4]
 8002c08:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002c0a:	085b      	lsrs	r3, r3, #1
 8002c0c:	3b01      	subs	r3, #1
 8002c0e:	041b      	lsls	r3, r3, #16
 8002c10:	429a      	cmp	r2, r3
 8002c12:	d107      	bne.n	8002c24 <HAL_RCC_OscConfig+0x4dc>
 8002c14:	68fb      	ldr	r3, [r7, #12]
 8002c16:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
 8002c1a:	687b      	ldr	r3, [r7, #4]
 8002c1c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002c1e:	061b      	lsls	r3, r3, #24
 8002c20:	429a      	cmp	r2, r3
 8002c22:	d001      	beq.n	8002c28 <HAL_RCC_OscConfig+0x4e0>
 8002c24:	2301      	movs	r3, #1
 8002c26:	e000      	b.n	8002c2a <HAL_RCC_OscConfig+0x4e2>
 8002c28:	2300      	movs	r3, #0
 8002c2a:	4618      	mov	r0, r3
 8002c2c:	3718      	adds	r7, #24
 8002c2e:	46bd      	mov	sp, r7
 8002c30:	bd80      	pop	{r7, pc}
 8002c32:	bf00      	nop
 8002c34:	40023800 	.word	0x40023800

08002c38 <HAL_RCC_ClockConfig>:
 8002c38:	b580      	push	{r7, lr}
 8002c3a:	b084      	sub	sp, #16
 8002c3c:	af00      	add	r7, sp, #0
 8002c3e:	6078      	str	r0, [r7, #4]
 8002c40:	6039      	str	r1, [r7, #0]
 8002c42:	687b      	ldr	r3, [r7, #4]
 8002c44:	2b00      	cmp	r3, #0
 8002c46:	d101      	bne.n	8002c4c <HAL_RCC_ClockConfig+0x14>
 8002c48:	2301      	movs	r3, #1
 8002c4a:	e0cc      	b.n	8002de6 <HAL_RCC_ClockConfig+0x1ae>
 8002c4c:	4b68      	ldr	r3, [pc, #416]	; (8002df0 <HAL_RCC_ClockConfig+0x1b8>)
 8002c4e:	681b      	ldr	r3, [r3, #0]
 8002c50:	f003 0307 	and.w	r3, r3, #7
 8002c54:	683a      	ldr	r2, [r7, #0]
 8002c56:	429a      	cmp	r2, r3
 8002c58:	d90c      	bls.n	8002c74 <HAL_RCC_ClockConfig+0x3c>
 8002c5a:	4b65      	ldr	r3, [pc, #404]	; (8002df0 <HAL_RCC_ClockConfig+0x1b8>)
 8002c5c:	683a      	ldr	r2, [r7, #0]
 8002c5e:	b2d2      	uxtb	r2, r2
 8002c60:	701a      	strb	r2, [r3, #0]
 8002c62:	4b63      	ldr	r3, [pc, #396]	; (8002df0 <HAL_RCC_ClockConfig+0x1b8>)
 8002c64:	681b      	ldr	r3, [r3, #0]
 8002c66:	f003 0307 	and.w	r3, r3, #7
 8002c6a:	683a      	ldr	r2, [r7, #0]
 8002c6c:	429a      	cmp	r2, r3
 8002c6e:	d001      	beq.n	8002c74 <HAL_RCC_ClockConfig+0x3c>
 8002c70:	2301      	movs	r3, #1
 8002c72:	e0b8      	b.n	8002de6 <HAL_RCC_ClockConfig+0x1ae>
 8002c74:	687b      	ldr	r3, [r7, #4]
 8002c76:	681b      	ldr	r3, [r3, #0]
 8002c78:	f003 0302 	and.w	r3, r3, #2
 8002c7c:	2b00      	cmp	r3, #0
 8002c7e:	d020      	beq.n	8002cc2 <HAL_RCC_ClockConfig+0x8a>
 8002c80:	687b      	ldr	r3, [r7, #4]
 8002c82:	681b      	ldr	r3, [r3, #0]
 8002c84:	f003 0304 	and.w	r3, r3, #4
 8002c88:	2b00      	cmp	r3, #0
 8002c8a:	d005      	beq.n	8002c98 <HAL_RCC_ClockConfig+0x60>
 8002c8c:	4b59      	ldr	r3, [pc, #356]	; (8002df4 <HAL_RCC_ClockConfig+0x1bc>)
 8002c8e:	689b      	ldr	r3, [r3, #8]
 8002c90:	4a58      	ldr	r2, [pc, #352]	; (8002df4 <HAL_RCC_ClockConfig+0x1bc>)
 8002c92:	f443 53e0 	orr.w	r3, r3, #7168	; 0x1c00
 8002c96:	6093      	str	r3, [r2, #8]
 8002c98:	687b      	ldr	r3, [r7, #4]
 8002c9a:	681b      	ldr	r3, [r3, #0]
 8002c9c:	f003 0308 	and.w	r3, r3, #8
 8002ca0:	2b00      	cmp	r3, #0
 8002ca2:	d005      	beq.n	8002cb0 <HAL_RCC_ClockConfig+0x78>
 8002ca4:	4b53      	ldr	r3, [pc, #332]	; (8002df4 <HAL_RCC_ClockConfig+0x1bc>)
 8002ca6:	689b      	ldr	r3, [r3, #8]
 8002ca8:	4a52      	ldr	r2, [pc, #328]	; (8002df4 <HAL_RCC_ClockConfig+0x1bc>)
 8002caa:	f443 4360 	orr.w	r3, r3, #57344	; 0xe000
 8002cae:	6093      	str	r3, [r2, #8]
 8002cb0:	4b50      	ldr	r3, [pc, #320]	; (8002df4 <HAL_RCC_ClockConfig+0x1bc>)
 8002cb2:	689b      	ldr	r3, [r3, #8]
 8002cb4:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8002cb8:	687b      	ldr	r3, [r7, #4]
 8002cba:	689b      	ldr	r3, [r3, #8]
 8002cbc:	494d      	ldr	r1, [pc, #308]	; (8002df4 <HAL_RCC_ClockConfig+0x1bc>)
 8002cbe:	4313      	orrs	r3, r2
 8002cc0:	608b      	str	r3, [r1, #8]
 8002cc2:	687b      	ldr	r3, [r7, #4]
 8002cc4:	681b      	ldr	r3, [r3, #0]
 8002cc6:	f003 0301 	and.w	r3, r3, #1
 8002cca:	2b00      	cmp	r3, #0
 8002ccc:	d044      	beq.n	8002d58 <HAL_RCC_ClockConfig+0x120>
 8002cce:	687b      	ldr	r3, [r7, #4]
 8002cd0:	685b      	ldr	r3, [r3, #4]
 8002cd2:	2b01      	cmp	r3, #1
 8002cd4:	d107      	bne.n	8002ce6 <HAL_RCC_ClockConfig+0xae>
 8002cd6:	4b47      	ldr	r3, [pc, #284]	; (8002df4 <HAL_RCC_ClockConfig+0x1bc>)
 8002cd8:	681b      	ldr	r3, [r3, #0]
 8002cda:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002cde:	2b00      	cmp	r3, #0
 8002ce0:	d119      	bne.n	8002d16 <HAL_RCC_ClockConfig+0xde>
 8002ce2:	2301      	movs	r3, #1
 8002ce4:	e07f      	b.n	8002de6 <HAL_RCC_ClockConfig+0x1ae>
 8002ce6:	687b      	ldr	r3, [r7, #4]
 8002ce8:	685b      	ldr	r3, [r3, #4]
 8002cea:	2b02      	cmp	r3, #2
 8002cec:	d003      	beq.n	8002cf6 <HAL_RCC_ClockConfig+0xbe>
 8002cee:	687b      	ldr	r3, [r7, #4]
 8002cf0:	685b      	ldr	r3, [r3, #4]
 8002cf2:	2b03      	cmp	r3, #3
 8002cf4:	d107      	bne.n	8002d06 <HAL_RCC_ClockConfig+0xce>
 8002cf6:	4b3f      	ldr	r3, [pc, #252]	; (8002df4 <HAL_RCC_ClockConfig+0x1bc>)
 8002cf8:	681b      	ldr	r3, [r3, #0]
 8002cfa:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8002cfe:	2b00      	cmp	r3, #0
 8002d00:	d109      	bne.n	8002d16 <HAL_RCC_ClockConfig+0xde>
 8002d02:	2301      	movs	r3, #1
 8002d04:	e06f      	b.n	8002de6 <HAL_RCC_ClockConfig+0x1ae>
 8002d06:	4b3b      	ldr	r3, [pc, #236]	; (8002df4 <HAL_RCC_ClockConfig+0x1bc>)
 8002d08:	681b      	ldr	r3, [r3, #0]
 8002d0a:	f003 0302 	and.w	r3, r3, #2
 8002d0e:	2b00      	cmp	r3, #0
 8002d10:	d101      	bne.n	8002d16 <HAL_RCC_ClockConfig+0xde>
 8002d12:	2301      	movs	r3, #1
 8002d14:	e067      	b.n	8002de6 <HAL_RCC_ClockConfig+0x1ae>
 8002d16:	4b37      	ldr	r3, [pc, #220]	; (8002df4 <HAL_RCC_ClockConfig+0x1bc>)
 8002d18:	689b      	ldr	r3, [r3, #8]
 8002d1a:	f023 0203 	bic.w	r2, r3, #3
 8002d1e:	687b      	ldr	r3, [r7, #4]
 8002d20:	685b      	ldr	r3, [r3, #4]
 8002d22:	4934      	ldr	r1, [pc, #208]	; (8002df4 <HAL_RCC_ClockConfig+0x1bc>)
 8002d24:	4313      	orrs	r3, r2
 8002d26:	608b      	str	r3, [r1, #8]
 8002d28:	f7fe fe58 	bl	80019dc <HAL_GetTick>
 8002d2c:	60f8      	str	r0, [r7, #12]
 8002d2e:	e00a      	b.n	8002d46 <HAL_RCC_ClockConfig+0x10e>
 8002d30:	f7fe fe54 	bl	80019dc <HAL_GetTick>
 8002d34:	4602      	mov	r2, r0
 8002d36:	68fb      	ldr	r3, [r7, #12]
 8002d38:	1ad3      	subs	r3, r2, r3
 8002d3a:	f241 3288 	movw	r2, #5000	; 0x1388
 8002d3e:	4293      	cmp	r3, r2
 8002d40:	d901      	bls.n	8002d46 <HAL_RCC_ClockConfig+0x10e>
 8002d42:	2303      	movs	r3, #3
 8002d44:	e04f      	b.n	8002de6 <HAL_RCC_ClockConfig+0x1ae>
 8002d46:	4b2b      	ldr	r3, [pc, #172]	; (8002df4 <HAL_RCC_ClockConfig+0x1bc>)
 8002d48:	689b      	ldr	r3, [r3, #8]
 8002d4a:	f003 020c 	and.w	r2, r3, #12
 8002d4e:	687b      	ldr	r3, [r7, #4]
 8002d50:	685b      	ldr	r3, [r3, #4]
 8002d52:	009b      	lsls	r3, r3, #2
 8002d54:	429a      	cmp	r2, r3
 8002d56:	d1eb      	bne.n	8002d30 <HAL_RCC_ClockConfig+0xf8>
 8002d58:	4b25      	ldr	r3, [pc, #148]	; (8002df0 <HAL_RCC_ClockConfig+0x1b8>)
 8002d5a:	681b      	ldr	r3, [r3, #0]
 8002d5c:	f003 0307 	and.w	r3, r3, #7
 8002d60:	683a      	ldr	r2, [r7, #0]
 8002d62:	429a      	cmp	r2, r3
 8002d64:	d20c      	bcs.n	8002d80 <HAL_RCC_ClockConfig+0x148>
 8002d66:	4b22      	ldr	r3, [pc, #136]	; (8002df0 <HAL_RCC_ClockConfig+0x1b8>)
 8002d68:	683a      	ldr	r2, [r7, #0]
 8002d6a:	b2d2      	uxtb	r2, r2
 8002d6c:	701a      	strb	r2, [r3, #0]
 8002d6e:	4b20      	ldr	r3, [pc, #128]	; (8002df0 <HAL_RCC_ClockConfig+0x1b8>)
 8002d70:	681b      	ldr	r3, [r3, #0]
 8002d72:	f003 0307 	and.w	r3, r3, #7
 8002d76:	683a      	ldr	r2, [r7, #0]
 8002d78:	429a      	cmp	r2, r3
 8002d7a:	d001      	beq.n	8002d80 <HAL_RCC_ClockConfig+0x148>
 8002d7c:	2301      	movs	r3, #1
 8002d7e:	e032      	b.n	8002de6 <HAL_RCC_ClockConfig+0x1ae>
 8002d80:	687b      	ldr	r3, [r7, #4]
 8002d82:	681b      	ldr	r3, [r3, #0]
 8002d84:	f003 0304 	and.w	r3, r3, #4
 8002d88:	2b00      	cmp	r3, #0
 8002d8a:	d008      	beq.n	8002d9e <HAL_RCC_ClockConfig+0x166>
 8002d8c:	4b19      	ldr	r3, [pc, #100]	; (8002df4 <HAL_RCC_ClockConfig+0x1bc>)
 8002d8e:	689b      	ldr	r3, [r3, #8]
 8002d90:	f423 52e0 	bic.w	r2, r3, #7168	; 0x1c00
 8002d94:	687b      	ldr	r3, [r7, #4]
 8002d96:	68db      	ldr	r3, [r3, #12]
 8002d98:	4916      	ldr	r1, [pc, #88]	; (8002df4 <HAL_RCC_ClockConfig+0x1bc>)
 8002d9a:	4313      	orrs	r3, r2
 8002d9c:	608b      	str	r3, [r1, #8]
 8002d9e:	687b      	ldr	r3, [r7, #4]
 8002da0:	681b      	ldr	r3, [r3, #0]
 8002da2:	f003 0308 	and.w	r3, r3, #8
 8002da6:	2b00      	cmp	r3, #0
 8002da8:	d009      	beq.n	8002dbe <HAL_RCC_ClockConfig+0x186>
 8002daa:	4b12      	ldr	r3, [pc, #72]	; (8002df4 <HAL_RCC_ClockConfig+0x1bc>)
 8002dac:	689b      	ldr	r3, [r3, #8]
 8002dae:	f423 4260 	bic.w	r2, r3, #57344	; 0xe000
 8002db2:	687b      	ldr	r3, [r7, #4]
 8002db4:	691b      	ldr	r3, [r3, #16]
 8002db6:	00db      	lsls	r3, r3, #3
 8002db8:	490e      	ldr	r1, [pc, #56]	; (8002df4 <HAL_RCC_ClockConfig+0x1bc>)
 8002dba:	4313      	orrs	r3, r2
 8002dbc:	608b      	str	r3, [r1, #8]
 8002dbe:	f000 f821 	bl	8002e04 <HAL_RCC_GetSysClockFreq>
 8002dc2:	4602      	mov	r2, r0
 8002dc4:	4b0b      	ldr	r3, [pc, #44]	; (8002df4 <HAL_RCC_ClockConfig+0x1bc>)
 8002dc6:	689b      	ldr	r3, [r3, #8]
 8002dc8:	091b      	lsrs	r3, r3, #4
 8002dca:	f003 030f 	and.w	r3, r3, #15
 8002dce:	490a      	ldr	r1, [pc, #40]	; (8002df8 <HAL_RCC_ClockConfig+0x1c0>)
 8002dd0:	5ccb      	ldrb	r3, [r1, r3]
 8002dd2:	fa22 f303 	lsr.w	r3, r2, r3
 8002dd6:	4a09      	ldr	r2, [pc, #36]	; (8002dfc <HAL_RCC_ClockConfig+0x1c4>)
 8002dd8:	6013      	str	r3, [r2, #0]
 8002dda:	4b09      	ldr	r3, [pc, #36]	; (8002e00 <HAL_RCC_ClockConfig+0x1c8>)
 8002ddc:	681b      	ldr	r3, [r3, #0]
 8002dde:	4618      	mov	r0, r3
 8002de0:	f7fe fdb8 	bl	8001954 <HAL_InitTick>
 8002de4:	2300      	movs	r3, #0
 8002de6:	4618      	mov	r0, r3
 8002de8:	3710      	adds	r7, #16
 8002dea:	46bd      	mov	sp, r7
 8002dec:	bd80      	pop	{r7, pc}
 8002dee:	bf00      	nop
 8002df0:	40023c00 	.word	0x40023c00
 8002df4:	40023800 	.word	0x40023800
 8002df8:	080044e8 	.word	0x080044e8
 8002dfc:	2000002c 	.word	0x2000002c
 8002e00:	20000030 	.word	0x20000030

08002e04 <HAL_RCC_GetSysClockFreq>:
 8002e04:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8002e08:	b090      	sub	sp, #64	; 0x40
 8002e0a:	af00      	add	r7, sp, #0
 8002e0c:	2300      	movs	r3, #0
 8002e0e:	637b      	str	r3, [r7, #52]	; 0x34
 8002e10:	2300      	movs	r3, #0
 8002e12:	63fb      	str	r3, [r7, #60]	; 0x3c
 8002e14:	2300      	movs	r3, #0
 8002e16:	633b      	str	r3, [r7, #48]	; 0x30
 8002e18:	2300      	movs	r3, #0
 8002e1a:	63bb      	str	r3, [r7, #56]	; 0x38
 8002e1c:	4b59      	ldr	r3, [pc, #356]	; (8002f84 <HAL_RCC_GetSysClockFreq+0x180>)
 8002e1e:	689b      	ldr	r3, [r3, #8]
 8002e20:	f003 030c 	and.w	r3, r3, #12
 8002e24:	2b08      	cmp	r3, #8
 8002e26:	d00d      	beq.n	8002e44 <HAL_RCC_GetSysClockFreq+0x40>
 8002e28:	2b08      	cmp	r3, #8
 8002e2a:	f200 80a1 	bhi.w	8002f70 <HAL_RCC_GetSysClockFreq+0x16c>
 8002e2e:	2b00      	cmp	r3, #0
 8002e30:	d002      	beq.n	8002e38 <HAL_RCC_GetSysClockFreq+0x34>
 8002e32:	2b04      	cmp	r3, #4
 8002e34:	d003      	beq.n	8002e3e <HAL_RCC_GetSysClockFreq+0x3a>
 8002e36:	e09b      	b.n	8002f70 <HAL_RCC_GetSysClockFreq+0x16c>
 8002e38:	4b53      	ldr	r3, [pc, #332]	; (8002f88 <HAL_RCC_GetSysClockFreq+0x184>)
 8002e3a:	63bb      	str	r3, [r7, #56]	; 0x38
 8002e3c:	e09b      	b.n	8002f76 <HAL_RCC_GetSysClockFreq+0x172>
 8002e3e:	4b53      	ldr	r3, [pc, #332]	; (8002f8c <HAL_RCC_GetSysClockFreq+0x188>)
 8002e40:	63bb      	str	r3, [r7, #56]	; 0x38
 8002e42:	e098      	b.n	8002f76 <HAL_RCC_GetSysClockFreq+0x172>
 8002e44:	4b4f      	ldr	r3, [pc, #316]	; (8002f84 <HAL_RCC_GetSysClockFreq+0x180>)
 8002e46:	685b      	ldr	r3, [r3, #4]
 8002e48:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8002e4c:	637b      	str	r3, [r7, #52]	; 0x34
 8002e4e:	4b4d      	ldr	r3, [pc, #308]	; (8002f84 <HAL_RCC_GetSysClockFreq+0x180>)
 8002e50:	685b      	ldr	r3, [r3, #4]
 8002e52:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8002e56:	2b00      	cmp	r3, #0
 8002e58:	d028      	beq.n	8002eac <HAL_RCC_GetSysClockFreq+0xa8>
 8002e5a:	4b4a      	ldr	r3, [pc, #296]	; (8002f84 <HAL_RCC_GetSysClockFreq+0x180>)
 8002e5c:	685b      	ldr	r3, [r3, #4]
 8002e5e:	099b      	lsrs	r3, r3, #6
 8002e60:	2200      	movs	r2, #0
 8002e62:	623b      	str	r3, [r7, #32]
 8002e64:	627a      	str	r2, [r7, #36]	; 0x24
 8002e66:	6a3b      	ldr	r3, [r7, #32]
 8002e68:	f3c3 0008 	ubfx	r0, r3, #0, #9
 8002e6c:	2100      	movs	r1, #0
 8002e6e:	4b47      	ldr	r3, [pc, #284]	; (8002f8c <HAL_RCC_GetSysClockFreq+0x188>)
 8002e70:	fb03 f201 	mul.w	r2, r3, r1
 8002e74:	2300      	movs	r3, #0
 8002e76:	fb00 f303 	mul.w	r3, r0, r3
 8002e7a:	4413      	add	r3, r2
 8002e7c:	4a43      	ldr	r2, [pc, #268]	; (8002f8c <HAL_RCC_GetSysClockFreq+0x188>)
 8002e7e:	fba0 1202 	umull	r1, r2, r0, r2
 8002e82:	62fa      	str	r2, [r7, #44]	; 0x2c
 8002e84:	460a      	mov	r2, r1
 8002e86:	62ba      	str	r2, [r7, #40]	; 0x28
 8002e88:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8002e8a:	4413      	add	r3, r2
 8002e8c:	62fb      	str	r3, [r7, #44]	; 0x2c
 8002e8e:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8002e90:	2200      	movs	r2, #0
 8002e92:	61bb      	str	r3, [r7, #24]
 8002e94:	61fa      	str	r2, [r7, #28]
 8002e96:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8002e9a:	e9d7 010a 	ldrd	r0, r1, [r7, #40]	; 0x28
 8002e9e:	f7fd f9ef 	bl	8000280 <__aeabi_uldivmod>
 8002ea2:	4602      	mov	r2, r0
 8002ea4:	460b      	mov	r3, r1
 8002ea6:	4613      	mov	r3, r2
 8002ea8:	63fb      	str	r3, [r7, #60]	; 0x3c
 8002eaa:	e053      	b.n	8002f54 <HAL_RCC_GetSysClockFreq+0x150>
 8002eac:	4b35      	ldr	r3, [pc, #212]	; (8002f84 <HAL_RCC_GetSysClockFreq+0x180>)
 8002eae:	685b      	ldr	r3, [r3, #4]
 8002eb0:	099b      	lsrs	r3, r3, #6
 8002eb2:	2200      	movs	r2, #0
 8002eb4:	613b      	str	r3, [r7, #16]
 8002eb6:	617a      	str	r2, [r7, #20]
 8002eb8:	693b      	ldr	r3, [r7, #16]
 8002eba:	f3c3 0a08 	ubfx	sl, r3, #0, #9
 8002ebe:	f04f 0b00 	mov.w	fp, #0
 8002ec2:	4652      	mov	r2, sl
 8002ec4:	465b      	mov	r3, fp
 8002ec6:	f04f 0000 	mov.w	r0, #0
 8002eca:	f04f 0100 	mov.w	r1, #0
 8002ece:	0159      	lsls	r1, r3, #5
 8002ed0:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8002ed4:	0150      	lsls	r0, r2, #5
 8002ed6:	4602      	mov	r2, r0
 8002ed8:	460b      	mov	r3, r1
 8002eda:	ebb2 080a 	subs.w	r8, r2, sl
 8002ede:	eb63 090b 	sbc.w	r9, r3, fp
 8002ee2:	f04f 0200 	mov.w	r2, #0
 8002ee6:	f04f 0300 	mov.w	r3, #0
 8002eea:	ea4f 1389 	mov.w	r3, r9, lsl #6
 8002eee:	ea43 6398 	orr.w	r3, r3, r8, lsr #26
 8002ef2:	ea4f 1288 	mov.w	r2, r8, lsl #6
 8002ef6:	ebb2 0408 	subs.w	r4, r2, r8
 8002efa:	eb63 0509 	sbc.w	r5, r3, r9
 8002efe:	f04f 0200 	mov.w	r2, #0
 8002f02:	f04f 0300 	mov.w	r3, #0
 8002f06:	00eb      	lsls	r3, r5, #3
 8002f08:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8002f0c:	00e2      	lsls	r2, r4, #3
 8002f0e:	4614      	mov	r4, r2
 8002f10:	461d      	mov	r5, r3
 8002f12:	eb14 030a 	adds.w	r3, r4, sl
 8002f16:	603b      	str	r3, [r7, #0]
 8002f18:	eb45 030b 	adc.w	r3, r5, fp
 8002f1c:	607b      	str	r3, [r7, #4]
 8002f1e:	f04f 0200 	mov.w	r2, #0
 8002f22:	f04f 0300 	mov.w	r3, #0
 8002f26:	e9d7 4500 	ldrd	r4, r5, [r7]
 8002f2a:	4629      	mov	r1, r5
 8002f2c:	028b      	lsls	r3, r1, #10
 8002f2e:	4621      	mov	r1, r4
 8002f30:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8002f34:	4621      	mov	r1, r4
 8002f36:	028a      	lsls	r2, r1, #10
 8002f38:	4610      	mov	r0, r2
 8002f3a:	4619      	mov	r1, r3
 8002f3c:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8002f3e:	2200      	movs	r2, #0
 8002f40:	60bb      	str	r3, [r7, #8]
 8002f42:	60fa      	str	r2, [r7, #12]
 8002f44:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8002f48:	f7fd f99a 	bl	8000280 <__aeabi_uldivmod>
 8002f4c:	4602      	mov	r2, r0
 8002f4e:	460b      	mov	r3, r1
 8002f50:	4613      	mov	r3, r2
 8002f52:	63fb      	str	r3, [r7, #60]	; 0x3c
 8002f54:	4b0b      	ldr	r3, [pc, #44]	; (8002f84 <HAL_RCC_GetSysClockFreq+0x180>)
 8002f56:	685b      	ldr	r3, [r3, #4]
 8002f58:	0c1b      	lsrs	r3, r3, #16
 8002f5a:	f003 0303 	and.w	r3, r3, #3
 8002f5e:	3301      	adds	r3, #1
 8002f60:	005b      	lsls	r3, r3, #1
 8002f62:	633b      	str	r3, [r7, #48]	; 0x30
 8002f64:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 8002f66:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8002f68:	fbb2 f3f3 	udiv	r3, r2, r3
 8002f6c:	63bb      	str	r3, [r7, #56]	; 0x38
 8002f6e:	e002      	b.n	8002f76 <HAL_RCC_GetSysClockFreq+0x172>
 8002f70:	4b05      	ldr	r3, [pc, #20]	; (8002f88 <HAL_RCC_GetSysClockFreq+0x184>)
 8002f72:	63bb      	str	r3, [r7, #56]	; 0x38
 8002f74:	bf00      	nop
 8002f76:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8002f78:	4618      	mov	r0, r3
 8002f7a:	3740      	adds	r7, #64	; 0x40
 8002f7c:	46bd      	mov	sp, r7
 8002f7e:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8002f82:	bf00      	nop
 8002f84:	40023800 	.word	0x40023800
 8002f88:	00f42400 	.word	0x00f42400
 8002f8c:	017d7840 	.word	0x017d7840

08002f90 <HAL_TIM_PWM_Init>:
 8002f90:	b580      	push	{r7, lr}
 8002f92:	b082      	sub	sp, #8
 8002f94:	af00      	add	r7, sp, #0
 8002f96:	6078      	str	r0, [r7, #4]
 8002f98:	687b      	ldr	r3, [r7, #4]
 8002f9a:	2b00      	cmp	r3, #0
 8002f9c:	d101      	bne.n	8002fa2 <HAL_TIM_PWM_Init+0x12>
 8002f9e:	2301      	movs	r3, #1
 8002fa0:	e041      	b.n	8003026 <HAL_TIM_PWM_Init+0x96>
 8002fa2:	687b      	ldr	r3, [r7, #4]
 8002fa4:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8002fa8:	b2db      	uxtb	r3, r3
 8002faa:	2b00      	cmp	r3, #0
 8002fac:	d106      	bne.n	8002fbc <HAL_TIM_PWM_Init+0x2c>
 8002fae:	687b      	ldr	r3, [r7, #4]
 8002fb0:	2200      	movs	r2, #0
 8002fb2:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002fb6:	6878      	ldr	r0, [r7, #4]
 8002fb8:	f7fe fb6c 	bl	8001694 <HAL_TIM_PWM_MspInit>
 8002fbc:	687b      	ldr	r3, [r7, #4]
 8002fbe:	2202      	movs	r2, #2
 8002fc0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8002fc4:	687b      	ldr	r3, [r7, #4]
 8002fc6:	681a      	ldr	r2, [r3, #0]
 8002fc8:	687b      	ldr	r3, [r7, #4]
 8002fca:	3304      	adds	r3, #4
 8002fcc:	4619      	mov	r1, r3
 8002fce:	4610      	mov	r0, r2
 8002fd0:	f000 f9a0 	bl	8003314 <TIM_Base_SetConfig>
 8002fd4:	687b      	ldr	r3, [r7, #4]
 8002fd6:	2201      	movs	r2, #1
 8002fd8:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8002fdc:	687b      	ldr	r3, [r7, #4]
 8002fde:	2201      	movs	r2, #1
 8002fe0:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8002fe4:	687b      	ldr	r3, [r7, #4]
 8002fe6:	2201      	movs	r2, #1
 8002fe8:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8002fec:	687b      	ldr	r3, [r7, #4]
 8002fee:	2201      	movs	r2, #1
 8002ff0:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8002ff4:	687b      	ldr	r3, [r7, #4]
 8002ff6:	2201      	movs	r2, #1
 8002ff8:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8002ffc:	687b      	ldr	r3, [r7, #4]
 8002ffe:	2201      	movs	r2, #1
 8003000:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8003004:	687b      	ldr	r3, [r7, #4]
 8003006:	2201      	movs	r2, #1
 8003008:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 800300c:	687b      	ldr	r3, [r7, #4]
 800300e:	2201      	movs	r2, #1
 8003010:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8003014:	687b      	ldr	r3, [r7, #4]
 8003016:	2201      	movs	r2, #1
 8003018:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 800301c:	687b      	ldr	r3, [r7, #4]
 800301e:	2201      	movs	r2, #1
 8003020:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003024:	2300      	movs	r3, #0
 8003026:	4618      	mov	r0, r3
 8003028:	3708      	adds	r7, #8
 800302a:	46bd      	mov	sp, r7
 800302c:	bd80      	pop	{r7, pc}
	...

08003030 <HAL_TIM_PWM_Start>:
 8003030:	b580      	push	{r7, lr}
 8003032:	b084      	sub	sp, #16
 8003034:	af00      	add	r7, sp, #0
 8003036:	6078      	str	r0, [r7, #4]
 8003038:	6039      	str	r1, [r7, #0]
 800303a:	683b      	ldr	r3, [r7, #0]
 800303c:	2b00      	cmp	r3, #0
 800303e:	d109      	bne.n	8003054 <HAL_TIM_PWM_Start+0x24>
 8003040:	687b      	ldr	r3, [r7, #4]
 8003042:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8003046:	b2db      	uxtb	r3, r3
 8003048:	2b01      	cmp	r3, #1
 800304a:	bf14      	ite	ne
 800304c:	2301      	movne	r3, #1
 800304e:	2300      	moveq	r3, #0
 8003050:	b2db      	uxtb	r3, r3
 8003052:	e022      	b.n	800309a <HAL_TIM_PWM_Start+0x6a>
 8003054:	683b      	ldr	r3, [r7, #0]
 8003056:	2b04      	cmp	r3, #4
 8003058:	d109      	bne.n	800306e <HAL_TIM_PWM_Start+0x3e>
 800305a:	687b      	ldr	r3, [r7, #4]
 800305c:	f893 303f 	ldrb.w	r3, [r3, #63]	; 0x3f
 8003060:	b2db      	uxtb	r3, r3
 8003062:	2b01      	cmp	r3, #1
 8003064:	bf14      	ite	ne
 8003066:	2301      	movne	r3, #1
 8003068:	2300      	moveq	r3, #0
 800306a:	b2db      	uxtb	r3, r3
 800306c:	e015      	b.n	800309a <HAL_TIM_PWM_Start+0x6a>
 800306e:	683b      	ldr	r3, [r7, #0]
 8003070:	2b08      	cmp	r3, #8
 8003072:	d109      	bne.n	8003088 <HAL_TIM_PWM_Start+0x58>
 8003074:	687b      	ldr	r3, [r7, #4]
 8003076:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 800307a:	b2db      	uxtb	r3, r3
 800307c:	2b01      	cmp	r3, #1
 800307e:	bf14      	ite	ne
 8003080:	2301      	movne	r3, #1
 8003082:	2300      	moveq	r3, #0
 8003084:	b2db      	uxtb	r3, r3
 8003086:	e008      	b.n	800309a <HAL_TIM_PWM_Start+0x6a>
 8003088:	687b      	ldr	r3, [r7, #4]
 800308a:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 800308e:	b2db      	uxtb	r3, r3
 8003090:	2b01      	cmp	r3, #1
 8003092:	bf14      	ite	ne
 8003094:	2301      	movne	r3, #1
 8003096:	2300      	moveq	r3, #0
 8003098:	b2db      	uxtb	r3, r3
 800309a:	2b00      	cmp	r3, #0
 800309c:	d001      	beq.n	80030a2 <HAL_TIM_PWM_Start+0x72>
 800309e:	2301      	movs	r3, #1
 80030a0:	e068      	b.n	8003174 <HAL_TIM_PWM_Start+0x144>
 80030a2:	683b      	ldr	r3, [r7, #0]
 80030a4:	2b00      	cmp	r3, #0
 80030a6:	d104      	bne.n	80030b2 <HAL_TIM_PWM_Start+0x82>
 80030a8:	687b      	ldr	r3, [r7, #4]
 80030aa:	2202      	movs	r2, #2
 80030ac:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80030b0:	e013      	b.n	80030da <HAL_TIM_PWM_Start+0xaa>
 80030b2:	683b      	ldr	r3, [r7, #0]
 80030b4:	2b04      	cmp	r3, #4
 80030b6:	d104      	bne.n	80030c2 <HAL_TIM_PWM_Start+0x92>
 80030b8:	687b      	ldr	r3, [r7, #4]
 80030ba:	2202      	movs	r2, #2
 80030bc:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 80030c0:	e00b      	b.n	80030da <HAL_TIM_PWM_Start+0xaa>
 80030c2:	683b      	ldr	r3, [r7, #0]
 80030c4:	2b08      	cmp	r3, #8
 80030c6:	d104      	bne.n	80030d2 <HAL_TIM_PWM_Start+0xa2>
 80030c8:	687b      	ldr	r3, [r7, #4]
 80030ca:	2202      	movs	r2, #2
 80030cc:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 80030d0:	e003      	b.n	80030da <HAL_TIM_PWM_Start+0xaa>
 80030d2:	687b      	ldr	r3, [r7, #4]
 80030d4:	2202      	movs	r2, #2
 80030d6:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 80030da:	687b      	ldr	r3, [r7, #4]
 80030dc:	681b      	ldr	r3, [r3, #0]
 80030de:	2201      	movs	r2, #1
 80030e0:	6839      	ldr	r1, [r7, #0]
 80030e2:	4618      	mov	r0, r3
 80030e4:	f000 fb22 	bl	800372c <TIM_CCxChannelCmd>
 80030e8:	687b      	ldr	r3, [r7, #4]
 80030ea:	681b      	ldr	r3, [r3, #0]
 80030ec:	4a23      	ldr	r2, [pc, #140]	; (800317c <HAL_TIM_PWM_Start+0x14c>)
 80030ee:	4293      	cmp	r3, r2
 80030f0:	d107      	bne.n	8003102 <HAL_TIM_PWM_Start+0xd2>
 80030f2:	687b      	ldr	r3, [r7, #4]
 80030f4:	681b      	ldr	r3, [r3, #0]
 80030f6:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80030f8:	687b      	ldr	r3, [r7, #4]
 80030fa:	681b      	ldr	r3, [r3, #0]
 80030fc:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8003100:	645a      	str	r2, [r3, #68]	; 0x44
 8003102:	687b      	ldr	r3, [r7, #4]
 8003104:	681b      	ldr	r3, [r3, #0]
 8003106:	4a1d      	ldr	r2, [pc, #116]	; (800317c <HAL_TIM_PWM_Start+0x14c>)
 8003108:	4293      	cmp	r3, r2
 800310a:	d018      	beq.n	800313e <HAL_TIM_PWM_Start+0x10e>
 800310c:	687b      	ldr	r3, [r7, #4]
 800310e:	681b      	ldr	r3, [r3, #0]
 8003110:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8003114:	d013      	beq.n	800313e <HAL_TIM_PWM_Start+0x10e>
 8003116:	687b      	ldr	r3, [r7, #4]
 8003118:	681b      	ldr	r3, [r3, #0]
 800311a:	4a19      	ldr	r2, [pc, #100]	; (8003180 <HAL_TIM_PWM_Start+0x150>)
 800311c:	4293      	cmp	r3, r2
 800311e:	d00e      	beq.n	800313e <HAL_TIM_PWM_Start+0x10e>
 8003120:	687b      	ldr	r3, [r7, #4]
 8003122:	681b      	ldr	r3, [r3, #0]
 8003124:	4a17      	ldr	r2, [pc, #92]	; (8003184 <HAL_TIM_PWM_Start+0x154>)
 8003126:	4293      	cmp	r3, r2
 8003128:	d009      	beq.n	800313e <HAL_TIM_PWM_Start+0x10e>
 800312a:	687b      	ldr	r3, [r7, #4]
 800312c:	681b      	ldr	r3, [r3, #0]
 800312e:	4a16      	ldr	r2, [pc, #88]	; (8003188 <HAL_TIM_PWM_Start+0x158>)
 8003130:	4293      	cmp	r3, r2
 8003132:	d004      	beq.n	800313e <HAL_TIM_PWM_Start+0x10e>
 8003134:	687b      	ldr	r3, [r7, #4]
 8003136:	681b      	ldr	r3, [r3, #0]
 8003138:	4a14      	ldr	r2, [pc, #80]	; (800318c <HAL_TIM_PWM_Start+0x15c>)
 800313a:	4293      	cmp	r3, r2
 800313c:	d111      	bne.n	8003162 <HAL_TIM_PWM_Start+0x132>
 800313e:	687b      	ldr	r3, [r7, #4]
 8003140:	681b      	ldr	r3, [r3, #0]
 8003142:	689b      	ldr	r3, [r3, #8]
 8003144:	f003 0307 	and.w	r3, r3, #7
 8003148:	60fb      	str	r3, [r7, #12]
 800314a:	68fb      	ldr	r3, [r7, #12]
 800314c:	2b06      	cmp	r3, #6
 800314e:	d010      	beq.n	8003172 <HAL_TIM_PWM_Start+0x142>
 8003150:	687b      	ldr	r3, [r7, #4]
 8003152:	681b      	ldr	r3, [r3, #0]
 8003154:	681a      	ldr	r2, [r3, #0]
 8003156:	687b      	ldr	r3, [r7, #4]
 8003158:	681b      	ldr	r3, [r3, #0]
 800315a:	f042 0201 	orr.w	r2, r2, #1
 800315e:	601a      	str	r2, [r3, #0]
 8003160:	e007      	b.n	8003172 <HAL_TIM_PWM_Start+0x142>
 8003162:	687b      	ldr	r3, [r7, #4]
 8003164:	681b      	ldr	r3, [r3, #0]
 8003166:	681a      	ldr	r2, [r3, #0]
 8003168:	687b      	ldr	r3, [r7, #4]
 800316a:	681b      	ldr	r3, [r3, #0]
 800316c:	f042 0201 	orr.w	r2, r2, #1
 8003170:	601a      	str	r2, [r3, #0]
 8003172:	2300      	movs	r3, #0
 8003174:	4618      	mov	r0, r3
 8003176:	3710      	adds	r7, #16
 8003178:	46bd      	mov	sp, r7
 800317a:	bd80      	pop	{r7, pc}
 800317c:	40010000 	.word	0x40010000
 8003180:	40000400 	.word	0x40000400
 8003184:	40000800 	.word	0x40000800
 8003188:	40000c00 	.word	0x40000c00
 800318c:	40014000 	.word	0x40014000

08003190 <HAL_TIM_PWM_ConfigChannel>:
 8003190:	b580      	push	{r7, lr}
 8003192:	b086      	sub	sp, #24
 8003194:	af00      	add	r7, sp, #0
 8003196:	60f8      	str	r0, [r7, #12]
 8003198:	60b9      	str	r1, [r7, #8]
 800319a:	607a      	str	r2, [r7, #4]
 800319c:	2300      	movs	r3, #0
 800319e:	75fb      	strb	r3, [r7, #23]
 80031a0:	68fb      	ldr	r3, [r7, #12]
 80031a2:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80031a6:	2b01      	cmp	r3, #1
 80031a8:	d101      	bne.n	80031ae <HAL_TIM_PWM_ConfigChannel+0x1e>
 80031aa:	2302      	movs	r3, #2
 80031ac:	e0ae      	b.n	800330c <HAL_TIM_PWM_ConfigChannel+0x17c>
 80031ae:	68fb      	ldr	r3, [r7, #12]
 80031b0:	2201      	movs	r2, #1
 80031b2:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80031b6:	687b      	ldr	r3, [r7, #4]
 80031b8:	2b0c      	cmp	r3, #12
 80031ba:	f200 809f 	bhi.w	80032fc <HAL_TIM_PWM_ConfigChannel+0x16c>
 80031be:	a201      	add	r2, pc, #4	; (adr r2, 80031c4 <HAL_TIM_PWM_ConfigChannel+0x34>)
 80031c0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80031c4:	080031f9 	.word	0x080031f9
 80031c8:	080032fd 	.word	0x080032fd
 80031cc:	080032fd 	.word	0x080032fd
 80031d0:	080032fd 	.word	0x080032fd
 80031d4:	08003239 	.word	0x08003239
 80031d8:	080032fd 	.word	0x080032fd
 80031dc:	080032fd 	.word	0x080032fd
 80031e0:	080032fd 	.word	0x080032fd
 80031e4:	0800327b 	.word	0x0800327b
 80031e8:	080032fd 	.word	0x080032fd
 80031ec:	080032fd 	.word	0x080032fd
 80031f0:	080032fd 	.word	0x080032fd
 80031f4:	080032bb 	.word	0x080032bb
 80031f8:	68fb      	ldr	r3, [r7, #12]
 80031fa:	681b      	ldr	r3, [r3, #0]
 80031fc:	68b9      	ldr	r1, [r7, #8]
 80031fe:	4618      	mov	r0, r3
 8003200:	f000 f908 	bl	8003414 <TIM_OC1_SetConfig>
 8003204:	68fb      	ldr	r3, [r7, #12]
 8003206:	681b      	ldr	r3, [r3, #0]
 8003208:	699a      	ldr	r2, [r3, #24]
 800320a:	68fb      	ldr	r3, [r7, #12]
 800320c:	681b      	ldr	r3, [r3, #0]
 800320e:	f042 0208 	orr.w	r2, r2, #8
 8003212:	619a      	str	r2, [r3, #24]
 8003214:	68fb      	ldr	r3, [r7, #12]
 8003216:	681b      	ldr	r3, [r3, #0]
 8003218:	699a      	ldr	r2, [r3, #24]
 800321a:	68fb      	ldr	r3, [r7, #12]
 800321c:	681b      	ldr	r3, [r3, #0]
 800321e:	f022 0204 	bic.w	r2, r2, #4
 8003222:	619a      	str	r2, [r3, #24]
 8003224:	68fb      	ldr	r3, [r7, #12]
 8003226:	681b      	ldr	r3, [r3, #0]
 8003228:	6999      	ldr	r1, [r3, #24]
 800322a:	68bb      	ldr	r3, [r7, #8]
 800322c:	691a      	ldr	r2, [r3, #16]
 800322e:	68fb      	ldr	r3, [r7, #12]
 8003230:	681b      	ldr	r3, [r3, #0]
 8003232:	430a      	orrs	r2, r1
 8003234:	619a      	str	r2, [r3, #24]
 8003236:	e064      	b.n	8003302 <HAL_TIM_PWM_ConfigChannel+0x172>
 8003238:	68fb      	ldr	r3, [r7, #12]
 800323a:	681b      	ldr	r3, [r3, #0]
 800323c:	68b9      	ldr	r1, [r7, #8]
 800323e:	4618      	mov	r0, r3
 8003240:	f000 f94e 	bl	80034e0 <TIM_OC2_SetConfig>
 8003244:	68fb      	ldr	r3, [r7, #12]
 8003246:	681b      	ldr	r3, [r3, #0]
 8003248:	699a      	ldr	r2, [r3, #24]
 800324a:	68fb      	ldr	r3, [r7, #12]
 800324c:	681b      	ldr	r3, [r3, #0]
 800324e:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8003252:	619a      	str	r2, [r3, #24]
 8003254:	68fb      	ldr	r3, [r7, #12]
 8003256:	681b      	ldr	r3, [r3, #0]
 8003258:	699a      	ldr	r2, [r3, #24]
 800325a:	68fb      	ldr	r3, [r7, #12]
 800325c:	681b      	ldr	r3, [r3, #0]
 800325e:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8003262:	619a      	str	r2, [r3, #24]
 8003264:	68fb      	ldr	r3, [r7, #12]
 8003266:	681b      	ldr	r3, [r3, #0]
 8003268:	6999      	ldr	r1, [r3, #24]
 800326a:	68bb      	ldr	r3, [r7, #8]
 800326c:	691b      	ldr	r3, [r3, #16]
 800326e:	021a      	lsls	r2, r3, #8
 8003270:	68fb      	ldr	r3, [r7, #12]
 8003272:	681b      	ldr	r3, [r3, #0]
 8003274:	430a      	orrs	r2, r1
 8003276:	619a      	str	r2, [r3, #24]
 8003278:	e043      	b.n	8003302 <HAL_TIM_PWM_ConfigChannel+0x172>
 800327a:	68fb      	ldr	r3, [r7, #12]
 800327c:	681b      	ldr	r3, [r3, #0]
 800327e:	68b9      	ldr	r1, [r7, #8]
 8003280:	4618      	mov	r0, r3
 8003282:	f000 f999 	bl	80035b8 <TIM_OC3_SetConfig>
 8003286:	68fb      	ldr	r3, [r7, #12]
 8003288:	681b      	ldr	r3, [r3, #0]
 800328a:	69da      	ldr	r2, [r3, #28]
 800328c:	68fb      	ldr	r3, [r7, #12]
 800328e:	681b      	ldr	r3, [r3, #0]
 8003290:	f042 0208 	orr.w	r2, r2, #8
 8003294:	61da      	str	r2, [r3, #28]
 8003296:	68fb      	ldr	r3, [r7, #12]
 8003298:	681b      	ldr	r3, [r3, #0]
 800329a:	69da      	ldr	r2, [r3, #28]
 800329c:	68fb      	ldr	r3, [r7, #12]
 800329e:	681b      	ldr	r3, [r3, #0]
 80032a0:	f022 0204 	bic.w	r2, r2, #4
 80032a4:	61da      	str	r2, [r3, #28]
 80032a6:	68fb      	ldr	r3, [r7, #12]
 80032a8:	681b      	ldr	r3, [r3, #0]
 80032aa:	69d9      	ldr	r1, [r3, #28]
 80032ac:	68bb      	ldr	r3, [r7, #8]
 80032ae:	691a      	ldr	r2, [r3, #16]
 80032b0:	68fb      	ldr	r3, [r7, #12]
 80032b2:	681b      	ldr	r3, [r3, #0]
 80032b4:	430a      	orrs	r2, r1
 80032b6:	61da      	str	r2, [r3, #28]
 80032b8:	e023      	b.n	8003302 <HAL_TIM_PWM_ConfigChannel+0x172>
 80032ba:	68fb      	ldr	r3, [r7, #12]
 80032bc:	681b      	ldr	r3, [r3, #0]
 80032be:	68b9      	ldr	r1, [r7, #8]
 80032c0:	4618      	mov	r0, r3
 80032c2:	f000 f9e3 	bl	800368c <TIM_OC4_SetConfig>
 80032c6:	68fb      	ldr	r3, [r7, #12]
 80032c8:	681b      	ldr	r3, [r3, #0]
 80032ca:	69da      	ldr	r2, [r3, #28]
 80032cc:	68fb      	ldr	r3, [r7, #12]
 80032ce:	681b      	ldr	r3, [r3, #0]
 80032d0:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 80032d4:	61da      	str	r2, [r3, #28]
 80032d6:	68fb      	ldr	r3, [r7, #12]
 80032d8:	681b      	ldr	r3, [r3, #0]
 80032da:	69da      	ldr	r2, [r3, #28]
 80032dc:	68fb      	ldr	r3, [r7, #12]
 80032de:	681b      	ldr	r3, [r3, #0]
 80032e0:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80032e4:	61da      	str	r2, [r3, #28]
 80032e6:	68fb      	ldr	r3, [r7, #12]
 80032e8:	681b      	ldr	r3, [r3, #0]
 80032ea:	69d9      	ldr	r1, [r3, #28]
 80032ec:	68bb      	ldr	r3, [r7, #8]
 80032ee:	691b      	ldr	r3, [r3, #16]
 80032f0:	021a      	lsls	r2, r3, #8
 80032f2:	68fb      	ldr	r3, [r7, #12]
 80032f4:	681b      	ldr	r3, [r3, #0]
 80032f6:	430a      	orrs	r2, r1
 80032f8:	61da      	str	r2, [r3, #28]
 80032fa:	e002      	b.n	8003302 <HAL_TIM_PWM_ConfigChannel+0x172>
 80032fc:	2301      	movs	r3, #1
 80032fe:	75fb      	strb	r3, [r7, #23]
 8003300:	bf00      	nop
 8003302:	68fb      	ldr	r3, [r7, #12]
 8003304:	2200      	movs	r2, #0
 8003306:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800330a:	7dfb      	ldrb	r3, [r7, #23]
 800330c:	4618      	mov	r0, r3
 800330e:	3718      	adds	r7, #24
 8003310:	46bd      	mov	sp, r7
 8003312:	bd80      	pop	{r7, pc}

08003314 <TIM_Base_SetConfig>:
 8003314:	b480      	push	{r7}
 8003316:	b085      	sub	sp, #20
 8003318:	af00      	add	r7, sp, #0
 800331a:	6078      	str	r0, [r7, #4]
 800331c:	6039      	str	r1, [r7, #0]
 800331e:	687b      	ldr	r3, [r7, #4]
 8003320:	681b      	ldr	r3, [r3, #0]
 8003322:	60fb      	str	r3, [r7, #12]
 8003324:	687b      	ldr	r3, [r7, #4]
 8003326:	4a34      	ldr	r2, [pc, #208]	; (80033f8 <TIM_Base_SetConfig+0xe4>)
 8003328:	4293      	cmp	r3, r2
 800332a:	d00f      	beq.n	800334c <TIM_Base_SetConfig+0x38>
 800332c:	687b      	ldr	r3, [r7, #4]
 800332e:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8003332:	d00b      	beq.n	800334c <TIM_Base_SetConfig+0x38>
 8003334:	687b      	ldr	r3, [r7, #4]
 8003336:	4a31      	ldr	r2, [pc, #196]	; (80033fc <TIM_Base_SetConfig+0xe8>)
 8003338:	4293      	cmp	r3, r2
 800333a:	d007      	beq.n	800334c <TIM_Base_SetConfig+0x38>
 800333c:	687b      	ldr	r3, [r7, #4]
 800333e:	4a30      	ldr	r2, [pc, #192]	; (8003400 <TIM_Base_SetConfig+0xec>)
 8003340:	4293      	cmp	r3, r2
 8003342:	d003      	beq.n	800334c <TIM_Base_SetConfig+0x38>
 8003344:	687b      	ldr	r3, [r7, #4]
 8003346:	4a2f      	ldr	r2, [pc, #188]	; (8003404 <TIM_Base_SetConfig+0xf0>)
 8003348:	4293      	cmp	r3, r2
 800334a:	d108      	bne.n	800335e <TIM_Base_SetConfig+0x4a>
 800334c:	68fb      	ldr	r3, [r7, #12]
 800334e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8003352:	60fb      	str	r3, [r7, #12]
 8003354:	683b      	ldr	r3, [r7, #0]
 8003356:	685b      	ldr	r3, [r3, #4]
 8003358:	68fa      	ldr	r2, [r7, #12]
 800335a:	4313      	orrs	r3, r2
 800335c:	60fb      	str	r3, [r7, #12]
 800335e:	687b      	ldr	r3, [r7, #4]
 8003360:	4a25      	ldr	r2, [pc, #148]	; (80033f8 <TIM_Base_SetConfig+0xe4>)
 8003362:	4293      	cmp	r3, r2
 8003364:	d01b      	beq.n	800339e <TIM_Base_SetConfig+0x8a>
 8003366:	687b      	ldr	r3, [r7, #4]
 8003368:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800336c:	d017      	beq.n	800339e <TIM_Base_SetConfig+0x8a>
 800336e:	687b      	ldr	r3, [r7, #4]
 8003370:	4a22      	ldr	r2, [pc, #136]	; (80033fc <TIM_Base_SetConfig+0xe8>)
 8003372:	4293      	cmp	r3, r2
 8003374:	d013      	beq.n	800339e <TIM_Base_SetConfig+0x8a>
 8003376:	687b      	ldr	r3, [r7, #4]
 8003378:	4a21      	ldr	r2, [pc, #132]	; (8003400 <TIM_Base_SetConfig+0xec>)
 800337a:	4293      	cmp	r3, r2
 800337c:	d00f      	beq.n	800339e <TIM_Base_SetConfig+0x8a>
 800337e:	687b      	ldr	r3, [r7, #4]
 8003380:	4a20      	ldr	r2, [pc, #128]	; (8003404 <TIM_Base_SetConfig+0xf0>)
 8003382:	4293      	cmp	r3, r2
 8003384:	d00b      	beq.n	800339e <TIM_Base_SetConfig+0x8a>
 8003386:	687b      	ldr	r3, [r7, #4]
 8003388:	4a1f      	ldr	r2, [pc, #124]	; (8003408 <TIM_Base_SetConfig+0xf4>)
 800338a:	4293      	cmp	r3, r2
 800338c:	d007      	beq.n	800339e <TIM_Base_SetConfig+0x8a>
 800338e:	687b      	ldr	r3, [r7, #4]
 8003390:	4a1e      	ldr	r2, [pc, #120]	; (800340c <TIM_Base_SetConfig+0xf8>)
 8003392:	4293      	cmp	r3, r2
 8003394:	d003      	beq.n	800339e <TIM_Base_SetConfig+0x8a>
 8003396:	687b      	ldr	r3, [r7, #4]
 8003398:	4a1d      	ldr	r2, [pc, #116]	; (8003410 <TIM_Base_SetConfig+0xfc>)
 800339a:	4293      	cmp	r3, r2
 800339c:	d108      	bne.n	80033b0 <TIM_Base_SetConfig+0x9c>
 800339e:	68fb      	ldr	r3, [r7, #12]
 80033a0:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80033a4:	60fb      	str	r3, [r7, #12]
 80033a6:	683b      	ldr	r3, [r7, #0]
 80033a8:	68db      	ldr	r3, [r3, #12]
 80033aa:	68fa      	ldr	r2, [r7, #12]
 80033ac:	4313      	orrs	r3, r2
 80033ae:	60fb      	str	r3, [r7, #12]
 80033b0:	68fb      	ldr	r3, [r7, #12]
 80033b2:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 80033b6:	683b      	ldr	r3, [r7, #0]
 80033b8:	695b      	ldr	r3, [r3, #20]
 80033ba:	4313      	orrs	r3, r2
 80033bc:	60fb      	str	r3, [r7, #12]
 80033be:	687b      	ldr	r3, [r7, #4]
 80033c0:	68fa      	ldr	r2, [r7, #12]
 80033c2:	601a      	str	r2, [r3, #0]
 80033c4:	683b      	ldr	r3, [r7, #0]
 80033c6:	689a      	ldr	r2, [r3, #8]
 80033c8:	687b      	ldr	r3, [r7, #4]
 80033ca:	62da      	str	r2, [r3, #44]	; 0x2c
 80033cc:	683b      	ldr	r3, [r7, #0]
 80033ce:	681a      	ldr	r2, [r3, #0]
 80033d0:	687b      	ldr	r3, [r7, #4]
 80033d2:	629a      	str	r2, [r3, #40]	; 0x28
 80033d4:	687b      	ldr	r3, [r7, #4]
 80033d6:	4a08      	ldr	r2, [pc, #32]	; (80033f8 <TIM_Base_SetConfig+0xe4>)
 80033d8:	4293      	cmp	r3, r2
 80033da:	d103      	bne.n	80033e4 <TIM_Base_SetConfig+0xd0>
 80033dc:	683b      	ldr	r3, [r7, #0]
 80033de:	691a      	ldr	r2, [r3, #16]
 80033e0:	687b      	ldr	r3, [r7, #4]
 80033e2:	631a      	str	r2, [r3, #48]	; 0x30
 80033e4:	687b      	ldr	r3, [r7, #4]
 80033e6:	2201      	movs	r2, #1
 80033e8:	615a      	str	r2, [r3, #20]
 80033ea:	bf00      	nop
 80033ec:	3714      	adds	r7, #20
 80033ee:	46bd      	mov	sp, r7
 80033f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80033f4:	4770      	bx	lr
 80033f6:	bf00      	nop
 80033f8:	40010000 	.word	0x40010000
 80033fc:	40000400 	.word	0x40000400
 8003400:	40000800 	.word	0x40000800
 8003404:	40000c00 	.word	0x40000c00
 8003408:	40014000 	.word	0x40014000
 800340c:	40014400 	.word	0x40014400
 8003410:	40014800 	.word	0x40014800

08003414 <TIM_OC1_SetConfig>:
 8003414:	b480      	push	{r7}
 8003416:	b087      	sub	sp, #28
 8003418:	af00      	add	r7, sp, #0
 800341a:	6078      	str	r0, [r7, #4]
 800341c:	6039      	str	r1, [r7, #0]
 800341e:	687b      	ldr	r3, [r7, #4]
 8003420:	6a1b      	ldr	r3, [r3, #32]
 8003422:	f023 0201 	bic.w	r2, r3, #1
 8003426:	687b      	ldr	r3, [r7, #4]
 8003428:	621a      	str	r2, [r3, #32]
 800342a:	687b      	ldr	r3, [r7, #4]
 800342c:	6a1b      	ldr	r3, [r3, #32]
 800342e:	617b      	str	r3, [r7, #20]
 8003430:	687b      	ldr	r3, [r7, #4]
 8003432:	685b      	ldr	r3, [r3, #4]
 8003434:	613b      	str	r3, [r7, #16]
 8003436:	687b      	ldr	r3, [r7, #4]
 8003438:	699b      	ldr	r3, [r3, #24]
 800343a:	60fb      	str	r3, [r7, #12]
 800343c:	68fb      	ldr	r3, [r7, #12]
 800343e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8003442:	60fb      	str	r3, [r7, #12]
 8003444:	68fb      	ldr	r3, [r7, #12]
 8003446:	f023 0303 	bic.w	r3, r3, #3
 800344a:	60fb      	str	r3, [r7, #12]
 800344c:	683b      	ldr	r3, [r7, #0]
 800344e:	681b      	ldr	r3, [r3, #0]
 8003450:	68fa      	ldr	r2, [r7, #12]
 8003452:	4313      	orrs	r3, r2
 8003454:	60fb      	str	r3, [r7, #12]
 8003456:	697b      	ldr	r3, [r7, #20]
 8003458:	f023 0302 	bic.w	r3, r3, #2
 800345c:	617b      	str	r3, [r7, #20]
 800345e:	683b      	ldr	r3, [r7, #0]
 8003460:	689b      	ldr	r3, [r3, #8]
 8003462:	697a      	ldr	r2, [r7, #20]
 8003464:	4313      	orrs	r3, r2
 8003466:	617b      	str	r3, [r7, #20]
 8003468:	687b      	ldr	r3, [r7, #4]
 800346a:	4a1c      	ldr	r2, [pc, #112]	; (80034dc <TIM_OC1_SetConfig+0xc8>)
 800346c:	4293      	cmp	r3, r2
 800346e:	d10c      	bne.n	800348a <TIM_OC1_SetConfig+0x76>
 8003470:	697b      	ldr	r3, [r7, #20]
 8003472:	f023 0308 	bic.w	r3, r3, #8
 8003476:	617b      	str	r3, [r7, #20]
 8003478:	683b      	ldr	r3, [r7, #0]
 800347a:	68db      	ldr	r3, [r3, #12]
 800347c:	697a      	ldr	r2, [r7, #20]
 800347e:	4313      	orrs	r3, r2
 8003480:	617b      	str	r3, [r7, #20]
 8003482:	697b      	ldr	r3, [r7, #20]
 8003484:	f023 0304 	bic.w	r3, r3, #4
 8003488:	617b      	str	r3, [r7, #20]
 800348a:	687b      	ldr	r3, [r7, #4]
 800348c:	4a13      	ldr	r2, [pc, #76]	; (80034dc <TIM_OC1_SetConfig+0xc8>)
 800348e:	4293      	cmp	r3, r2
 8003490:	d111      	bne.n	80034b6 <TIM_OC1_SetConfig+0xa2>
 8003492:	693b      	ldr	r3, [r7, #16]
 8003494:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8003498:	613b      	str	r3, [r7, #16]
 800349a:	693b      	ldr	r3, [r7, #16]
 800349c:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 80034a0:	613b      	str	r3, [r7, #16]
 80034a2:	683b      	ldr	r3, [r7, #0]
 80034a4:	695b      	ldr	r3, [r3, #20]
 80034a6:	693a      	ldr	r2, [r7, #16]
 80034a8:	4313      	orrs	r3, r2
 80034aa:	613b      	str	r3, [r7, #16]
 80034ac:	683b      	ldr	r3, [r7, #0]
 80034ae:	699b      	ldr	r3, [r3, #24]
 80034b0:	693a      	ldr	r2, [r7, #16]
 80034b2:	4313      	orrs	r3, r2
 80034b4:	613b      	str	r3, [r7, #16]
 80034b6:	687b      	ldr	r3, [r7, #4]
 80034b8:	693a      	ldr	r2, [r7, #16]
 80034ba:	605a      	str	r2, [r3, #4]
 80034bc:	687b      	ldr	r3, [r7, #4]
 80034be:	68fa      	ldr	r2, [r7, #12]
 80034c0:	619a      	str	r2, [r3, #24]
 80034c2:	683b      	ldr	r3, [r7, #0]
 80034c4:	685a      	ldr	r2, [r3, #4]
 80034c6:	687b      	ldr	r3, [r7, #4]
 80034c8:	635a      	str	r2, [r3, #52]	; 0x34
 80034ca:	687b      	ldr	r3, [r7, #4]
 80034cc:	697a      	ldr	r2, [r7, #20]
 80034ce:	621a      	str	r2, [r3, #32]
 80034d0:	bf00      	nop
 80034d2:	371c      	adds	r7, #28
 80034d4:	46bd      	mov	sp, r7
 80034d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80034da:	4770      	bx	lr
 80034dc:	40010000 	.word	0x40010000

080034e0 <TIM_OC2_SetConfig>:
 80034e0:	b480      	push	{r7}
 80034e2:	b087      	sub	sp, #28
 80034e4:	af00      	add	r7, sp, #0
 80034e6:	6078      	str	r0, [r7, #4]
 80034e8:	6039      	str	r1, [r7, #0]
 80034ea:	687b      	ldr	r3, [r7, #4]
 80034ec:	6a1b      	ldr	r3, [r3, #32]
 80034ee:	f023 0210 	bic.w	r2, r3, #16
 80034f2:	687b      	ldr	r3, [r7, #4]
 80034f4:	621a      	str	r2, [r3, #32]
 80034f6:	687b      	ldr	r3, [r7, #4]
 80034f8:	6a1b      	ldr	r3, [r3, #32]
 80034fa:	617b      	str	r3, [r7, #20]
 80034fc:	687b      	ldr	r3, [r7, #4]
 80034fe:	685b      	ldr	r3, [r3, #4]
 8003500:	613b      	str	r3, [r7, #16]
 8003502:	687b      	ldr	r3, [r7, #4]
 8003504:	699b      	ldr	r3, [r3, #24]
 8003506:	60fb      	str	r3, [r7, #12]
 8003508:	68fb      	ldr	r3, [r7, #12]
 800350a:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 800350e:	60fb      	str	r3, [r7, #12]
 8003510:	68fb      	ldr	r3, [r7, #12]
 8003512:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8003516:	60fb      	str	r3, [r7, #12]
 8003518:	683b      	ldr	r3, [r7, #0]
 800351a:	681b      	ldr	r3, [r3, #0]
 800351c:	021b      	lsls	r3, r3, #8
 800351e:	68fa      	ldr	r2, [r7, #12]
 8003520:	4313      	orrs	r3, r2
 8003522:	60fb      	str	r3, [r7, #12]
 8003524:	697b      	ldr	r3, [r7, #20]
 8003526:	f023 0320 	bic.w	r3, r3, #32
 800352a:	617b      	str	r3, [r7, #20]
 800352c:	683b      	ldr	r3, [r7, #0]
 800352e:	689b      	ldr	r3, [r3, #8]
 8003530:	011b      	lsls	r3, r3, #4
 8003532:	697a      	ldr	r2, [r7, #20]
 8003534:	4313      	orrs	r3, r2
 8003536:	617b      	str	r3, [r7, #20]
 8003538:	687b      	ldr	r3, [r7, #4]
 800353a:	4a1e      	ldr	r2, [pc, #120]	; (80035b4 <TIM_OC2_SetConfig+0xd4>)
 800353c:	4293      	cmp	r3, r2
 800353e:	d10d      	bne.n	800355c <TIM_OC2_SetConfig+0x7c>
 8003540:	697b      	ldr	r3, [r7, #20]
 8003542:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8003546:	617b      	str	r3, [r7, #20]
 8003548:	683b      	ldr	r3, [r7, #0]
 800354a:	68db      	ldr	r3, [r3, #12]
 800354c:	011b      	lsls	r3, r3, #4
 800354e:	697a      	ldr	r2, [r7, #20]
 8003550:	4313      	orrs	r3, r2
 8003552:	617b      	str	r3, [r7, #20]
 8003554:	697b      	ldr	r3, [r7, #20]
 8003556:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800355a:	617b      	str	r3, [r7, #20]
 800355c:	687b      	ldr	r3, [r7, #4]
 800355e:	4a15      	ldr	r2, [pc, #84]	; (80035b4 <TIM_OC2_SetConfig+0xd4>)
 8003560:	4293      	cmp	r3, r2
 8003562:	d113      	bne.n	800358c <TIM_OC2_SetConfig+0xac>
 8003564:	693b      	ldr	r3, [r7, #16]
 8003566:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800356a:	613b      	str	r3, [r7, #16]
 800356c:	693b      	ldr	r3, [r7, #16]
 800356e:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8003572:	613b      	str	r3, [r7, #16]
 8003574:	683b      	ldr	r3, [r7, #0]
 8003576:	695b      	ldr	r3, [r3, #20]
 8003578:	009b      	lsls	r3, r3, #2
 800357a:	693a      	ldr	r2, [r7, #16]
 800357c:	4313      	orrs	r3, r2
 800357e:	613b      	str	r3, [r7, #16]
 8003580:	683b      	ldr	r3, [r7, #0]
 8003582:	699b      	ldr	r3, [r3, #24]
 8003584:	009b      	lsls	r3, r3, #2
 8003586:	693a      	ldr	r2, [r7, #16]
 8003588:	4313      	orrs	r3, r2
 800358a:	613b      	str	r3, [r7, #16]
 800358c:	687b      	ldr	r3, [r7, #4]
 800358e:	693a      	ldr	r2, [r7, #16]
 8003590:	605a      	str	r2, [r3, #4]
 8003592:	687b      	ldr	r3, [r7, #4]
 8003594:	68fa      	ldr	r2, [r7, #12]
 8003596:	619a      	str	r2, [r3, #24]
 8003598:	683b      	ldr	r3, [r7, #0]
 800359a:	685a      	ldr	r2, [r3, #4]
 800359c:	687b      	ldr	r3, [r7, #4]
 800359e:	639a      	str	r2, [r3, #56]	; 0x38
 80035a0:	687b      	ldr	r3, [r7, #4]
 80035a2:	697a      	ldr	r2, [r7, #20]
 80035a4:	621a      	str	r2, [r3, #32]
 80035a6:	bf00      	nop
 80035a8:	371c      	adds	r7, #28
 80035aa:	46bd      	mov	sp, r7
 80035ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 80035b0:	4770      	bx	lr
 80035b2:	bf00      	nop
 80035b4:	40010000 	.word	0x40010000

080035b8 <TIM_OC3_SetConfig>:
 80035b8:	b480      	push	{r7}
 80035ba:	b087      	sub	sp, #28
 80035bc:	af00      	add	r7, sp, #0
 80035be:	6078      	str	r0, [r7, #4]
 80035c0:	6039      	str	r1, [r7, #0]
 80035c2:	687b      	ldr	r3, [r7, #4]
 80035c4:	6a1b      	ldr	r3, [r3, #32]
 80035c6:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 80035ca:	687b      	ldr	r3, [r7, #4]
 80035cc:	621a      	str	r2, [r3, #32]
 80035ce:	687b      	ldr	r3, [r7, #4]
 80035d0:	6a1b      	ldr	r3, [r3, #32]
 80035d2:	617b      	str	r3, [r7, #20]
 80035d4:	687b      	ldr	r3, [r7, #4]
 80035d6:	685b      	ldr	r3, [r3, #4]
 80035d8:	613b      	str	r3, [r7, #16]
 80035da:	687b      	ldr	r3, [r7, #4]
 80035dc:	69db      	ldr	r3, [r3, #28]
 80035de:	60fb      	str	r3, [r7, #12]
 80035e0:	68fb      	ldr	r3, [r7, #12]
 80035e2:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80035e6:	60fb      	str	r3, [r7, #12]
 80035e8:	68fb      	ldr	r3, [r7, #12]
 80035ea:	f023 0303 	bic.w	r3, r3, #3
 80035ee:	60fb      	str	r3, [r7, #12]
 80035f0:	683b      	ldr	r3, [r7, #0]
 80035f2:	681b      	ldr	r3, [r3, #0]
 80035f4:	68fa      	ldr	r2, [r7, #12]
 80035f6:	4313      	orrs	r3, r2
 80035f8:	60fb      	str	r3, [r7, #12]
 80035fa:	697b      	ldr	r3, [r7, #20]
 80035fc:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8003600:	617b      	str	r3, [r7, #20]
 8003602:	683b      	ldr	r3, [r7, #0]
 8003604:	689b      	ldr	r3, [r3, #8]
 8003606:	021b      	lsls	r3, r3, #8
 8003608:	697a      	ldr	r2, [r7, #20]
 800360a:	4313      	orrs	r3, r2
 800360c:	617b      	str	r3, [r7, #20]
 800360e:	687b      	ldr	r3, [r7, #4]
 8003610:	4a1d      	ldr	r2, [pc, #116]	; (8003688 <TIM_OC3_SetConfig+0xd0>)
 8003612:	4293      	cmp	r3, r2
 8003614:	d10d      	bne.n	8003632 <TIM_OC3_SetConfig+0x7a>
 8003616:	697b      	ldr	r3, [r7, #20]
 8003618:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800361c:	617b      	str	r3, [r7, #20]
 800361e:	683b      	ldr	r3, [r7, #0]
 8003620:	68db      	ldr	r3, [r3, #12]
 8003622:	021b      	lsls	r3, r3, #8
 8003624:	697a      	ldr	r2, [r7, #20]
 8003626:	4313      	orrs	r3, r2
 8003628:	617b      	str	r3, [r7, #20]
 800362a:	697b      	ldr	r3, [r7, #20]
 800362c:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8003630:	617b      	str	r3, [r7, #20]
 8003632:	687b      	ldr	r3, [r7, #4]
 8003634:	4a14      	ldr	r2, [pc, #80]	; (8003688 <TIM_OC3_SetConfig+0xd0>)
 8003636:	4293      	cmp	r3, r2
 8003638:	d113      	bne.n	8003662 <TIM_OC3_SetConfig+0xaa>
 800363a:	693b      	ldr	r3, [r7, #16]
 800363c:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8003640:	613b      	str	r3, [r7, #16]
 8003642:	693b      	ldr	r3, [r7, #16]
 8003644:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8003648:	613b      	str	r3, [r7, #16]
 800364a:	683b      	ldr	r3, [r7, #0]
 800364c:	695b      	ldr	r3, [r3, #20]
 800364e:	011b      	lsls	r3, r3, #4
 8003650:	693a      	ldr	r2, [r7, #16]
 8003652:	4313      	orrs	r3, r2
 8003654:	613b      	str	r3, [r7, #16]
 8003656:	683b      	ldr	r3, [r7, #0]
 8003658:	699b      	ldr	r3, [r3, #24]
 800365a:	011b      	lsls	r3, r3, #4
 800365c:	693a      	ldr	r2, [r7, #16]
 800365e:	4313      	orrs	r3, r2
 8003660:	613b      	str	r3, [r7, #16]
 8003662:	687b      	ldr	r3, [r7, #4]
 8003664:	693a      	ldr	r2, [r7, #16]
 8003666:	605a      	str	r2, [r3, #4]
 8003668:	687b      	ldr	r3, [r7, #4]
 800366a:	68fa      	ldr	r2, [r7, #12]
 800366c:	61da      	str	r2, [r3, #28]
 800366e:	683b      	ldr	r3, [r7, #0]
 8003670:	685a      	ldr	r2, [r3, #4]
 8003672:	687b      	ldr	r3, [r7, #4]
 8003674:	63da      	str	r2, [r3, #60]	; 0x3c
 8003676:	687b      	ldr	r3, [r7, #4]
 8003678:	697a      	ldr	r2, [r7, #20]
 800367a:	621a      	str	r2, [r3, #32]
 800367c:	bf00      	nop
 800367e:	371c      	adds	r7, #28
 8003680:	46bd      	mov	sp, r7
 8003682:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003686:	4770      	bx	lr
 8003688:	40010000 	.word	0x40010000

0800368c <TIM_OC4_SetConfig>:
 800368c:	b480      	push	{r7}
 800368e:	b087      	sub	sp, #28
 8003690:	af00      	add	r7, sp, #0
 8003692:	6078      	str	r0, [r7, #4]
 8003694:	6039      	str	r1, [r7, #0]
 8003696:	687b      	ldr	r3, [r7, #4]
 8003698:	6a1b      	ldr	r3, [r3, #32]
 800369a:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 800369e:	687b      	ldr	r3, [r7, #4]
 80036a0:	621a      	str	r2, [r3, #32]
 80036a2:	687b      	ldr	r3, [r7, #4]
 80036a4:	6a1b      	ldr	r3, [r3, #32]
 80036a6:	613b      	str	r3, [r7, #16]
 80036a8:	687b      	ldr	r3, [r7, #4]
 80036aa:	685b      	ldr	r3, [r3, #4]
 80036ac:	617b      	str	r3, [r7, #20]
 80036ae:	687b      	ldr	r3, [r7, #4]
 80036b0:	69db      	ldr	r3, [r3, #28]
 80036b2:	60fb      	str	r3, [r7, #12]
 80036b4:	68fb      	ldr	r3, [r7, #12]
 80036b6:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 80036ba:	60fb      	str	r3, [r7, #12]
 80036bc:	68fb      	ldr	r3, [r7, #12]
 80036be:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80036c2:	60fb      	str	r3, [r7, #12]
 80036c4:	683b      	ldr	r3, [r7, #0]
 80036c6:	681b      	ldr	r3, [r3, #0]
 80036c8:	021b      	lsls	r3, r3, #8
 80036ca:	68fa      	ldr	r2, [r7, #12]
 80036cc:	4313      	orrs	r3, r2
 80036ce:	60fb      	str	r3, [r7, #12]
 80036d0:	693b      	ldr	r3, [r7, #16]
 80036d2:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 80036d6:	613b      	str	r3, [r7, #16]
 80036d8:	683b      	ldr	r3, [r7, #0]
 80036da:	689b      	ldr	r3, [r3, #8]
 80036dc:	031b      	lsls	r3, r3, #12
 80036de:	693a      	ldr	r2, [r7, #16]
 80036e0:	4313      	orrs	r3, r2
 80036e2:	613b      	str	r3, [r7, #16]
 80036e4:	687b      	ldr	r3, [r7, #4]
 80036e6:	4a10      	ldr	r2, [pc, #64]	; (8003728 <TIM_OC4_SetConfig+0x9c>)
 80036e8:	4293      	cmp	r3, r2
 80036ea:	d109      	bne.n	8003700 <TIM_OC4_SetConfig+0x74>
 80036ec:	697b      	ldr	r3, [r7, #20]
 80036ee:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 80036f2:	617b      	str	r3, [r7, #20]
 80036f4:	683b      	ldr	r3, [r7, #0]
 80036f6:	695b      	ldr	r3, [r3, #20]
 80036f8:	019b      	lsls	r3, r3, #6
 80036fa:	697a      	ldr	r2, [r7, #20]
 80036fc:	4313      	orrs	r3, r2
 80036fe:	617b      	str	r3, [r7, #20]
 8003700:	687b      	ldr	r3, [r7, #4]
 8003702:	697a      	ldr	r2, [r7, #20]
 8003704:	605a      	str	r2, [r3, #4]
 8003706:	687b      	ldr	r3, [r7, #4]
 8003708:	68fa      	ldr	r2, [r7, #12]
 800370a:	61da      	str	r2, [r3, #28]
 800370c:	683b      	ldr	r3, [r7, #0]
 800370e:	685a      	ldr	r2, [r3, #4]
 8003710:	687b      	ldr	r3, [r7, #4]
 8003712:	641a      	str	r2, [r3, #64]	; 0x40
 8003714:	687b      	ldr	r3, [r7, #4]
 8003716:	693a      	ldr	r2, [r7, #16]
 8003718:	621a      	str	r2, [r3, #32]
 800371a:	bf00      	nop
 800371c:	371c      	adds	r7, #28
 800371e:	46bd      	mov	sp, r7
 8003720:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003724:	4770      	bx	lr
 8003726:	bf00      	nop
 8003728:	40010000 	.word	0x40010000

0800372c <TIM_CCxChannelCmd>:
 800372c:	b480      	push	{r7}
 800372e:	b087      	sub	sp, #28
 8003730:	af00      	add	r7, sp, #0
 8003732:	60f8      	str	r0, [r7, #12]
 8003734:	60b9      	str	r1, [r7, #8]
 8003736:	607a      	str	r2, [r7, #4]
 8003738:	68bb      	ldr	r3, [r7, #8]
 800373a:	f003 031f 	and.w	r3, r3, #31
 800373e:	2201      	movs	r2, #1
 8003740:	fa02 f303 	lsl.w	r3, r2, r3
 8003744:	617b      	str	r3, [r7, #20]
 8003746:	68fb      	ldr	r3, [r7, #12]
 8003748:	6a1a      	ldr	r2, [r3, #32]
 800374a:	697b      	ldr	r3, [r7, #20]
 800374c:	43db      	mvns	r3, r3
 800374e:	401a      	ands	r2, r3
 8003750:	68fb      	ldr	r3, [r7, #12]
 8003752:	621a      	str	r2, [r3, #32]
 8003754:	68fb      	ldr	r3, [r7, #12]
 8003756:	6a1a      	ldr	r2, [r3, #32]
 8003758:	68bb      	ldr	r3, [r7, #8]
 800375a:	f003 031f 	and.w	r3, r3, #31
 800375e:	6879      	ldr	r1, [r7, #4]
 8003760:	fa01 f303 	lsl.w	r3, r1, r3
 8003764:	431a      	orrs	r2, r3
 8003766:	68fb      	ldr	r3, [r7, #12]
 8003768:	621a      	str	r2, [r3, #32]
 800376a:	bf00      	nop
 800376c:	371c      	adds	r7, #28
 800376e:	46bd      	mov	sp, r7
 8003770:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003774:	4770      	bx	lr
	...

08003778 <HAL_TIMEx_MasterConfigSynchronization>:
 8003778:	b480      	push	{r7}
 800377a:	b085      	sub	sp, #20
 800377c:	af00      	add	r7, sp, #0
 800377e:	6078      	str	r0, [r7, #4]
 8003780:	6039      	str	r1, [r7, #0]
 8003782:	687b      	ldr	r3, [r7, #4]
 8003784:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8003788:	2b01      	cmp	r3, #1
 800378a:	d101      	bne.n	8003790 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 800378c:	2302      	movs	r3, #2
 800378e:	e050      	b.n	8003832 <HAL_TIMEx_MasterConfigSynchronization+0xba>
 8003790:	687b      	ldr	r3, [r7, #4]
 8003792:	2201      	movs	r2, #1
 8003794:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003798:	687b      	ldr	r3, [r7, #4]
 800379a:	2202      	movs	r2, #2
 800379c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80037a0:	687b      	ldr	r3, [r7, #4]
 80037a2:	681b      	ldr	r3, [r3, #0]
 80037a4:	685b      	ldr	r3, [r3, #4]
 80037a6:	60fb      	str	r3, [r7, #12]
 80037a8:	687b      	ldr	r3, [r7, #4]
 80037aa:	681b      	ldr	r3, [r3, #0]
 80037ac:	689b      	ldr	r3, [r3, #8]
 80037ae:	60bb      	str	r3, [r7, #8]
 80037b0:	68fb      	ldr	r3, [r7, #12]
 80037b2:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80037b6:	60fb      	str	r3, [r7, #12]
 80037b8:	683b      	ldr	r3, [r7, #0]
 80037ba:	681b      	ldr	r3, [r3, #0]
 80037bc:	68fa      	ldr	r2, [r7, #12]
 80037be:	4313      	orrs	r3, r2
 80037c0:	60fb      	str	r3, [r7, #12]
 80037c2:	687b      	ldr	r3, [r7, #4]
 80037c4:	681b      	ldr	r3, [r3, #0]
 80037c6:	68fa      	ldr	r2, [r7, #12]
 80037c8:	605a      	str	r2, [r3, #4]
 80037ca:	687b      	ldr	r3, [r7, #4]
 80037cc:	681b      	ldr	r3, [r3, #0]
 80037ce:	4a1c      	ldr	r2, [pc, #112]	; (8003840 <HAL_TIMEx_MasterConfigSynchronization+0xc8>)
 80037d0:	4293      	cmp	r3, r2
 80037d2:	d018      	beq.n	8003806 <HAL_TIMEx_MasterConfigSynchronization+0x8e>
 80037d4:	687b      	ldr	r3, [r7, #4]
 80037d6:	681b      	ldr	r3, [r3, #0]
 80037d8:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80037dc:	d013      	beq.n	8003806 <HAL_TIMEx_MasterConfigSynchronization+0x8e>
 80037de:	687b      	ldr	r3, [r7, #4]
 80037e0:	681b      	ldr	r3, [r3, #0]
 80037e2:	4a18      	ldr	r2, [pc, #96]	; (8003844 <HAL_TIMEx_MasterConfigSynchronization+0xcc>)
 80037e4:	4293      	cmp	r3, r2
 80037e6:	d00e      	beq.n	8003806 <HAL_TIMEx_MasterConfigSynchronization+0x8e>
 80037e8:	687b      	ldr	r3, [r7, #4]
 80037ea:	681b      	ldr	r3, [r3, #0]
 80037ec:	4a16      	ldr	r2, [pc, #88]	; (8003848 <HAL_TIMEx_MasterConfigSynchronization+0xd0>)
 80037ee:	4293      	cmp	r3, r2
 80037f0:	d009      	beq.n	8003806 <HAL_TIMEx_MasterConfigSynchronization+0x8e>
 80037f2:	687b      	ldr	r3, [r7, #4]
 80037f4:	681b      	ldr	r3, [r3, #0]
 80037f6:	4a15      	ldr	r2, [pc, #84]	; (800384c <HAL_TIMEx_MasterConfigSynchronization+0xd4>)
 80037f8:	4293      	cmp	r3, r2
 80037fa:	d004      	beq.n	8003806 <HAL_TIMEx_MasterConfigSynchronization+0x8e>
 80037fc:	687b      	ldr	r3, [r7, #4]
 80037fe:	681b      	ldr	r3, [r3, #0]
 8003800:	4a13      	ldr	r2, [pc, #76]	; (8003850 <HAL_TIMEx_MasterConfigSynchronization+0xd8>)
 8003802:	4293      	cmp	r3, r2
 8003804:	d10c      	bne.n	8003820 <HAL_TIMEx_MasterConfigSynchronization+0xa8>
 8003806:	68bb      	ldr	r3, [r7, #8]
 8003808:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800380c:	60bb      	str	r3, [r7, #8]
 800380e:	683b      	ldr	r3, [r7, #0]
 8003810:	685b      	ldr	r3, [r3, #4]
 8003812:	68ba      	ldr	r2, [r7, #8]
 8003814:	4313      	orrs	r3, r2
 8003816:	60bb      	str	r3, [r7, #8]
 8003818:	687b      	ldr	r3, [r7, #4]
 800381a:	681b      	ldr	r3, [r3, #0]
 800381c:	68ba      	ldr	r2, [r7, #8]
 800381e:	609a      	str	r2, [r3, #8]
 8003820:	687b      	ldr	r3, [r7, #4]
 8003822:	2201      	movs	r2, #1
 8003824:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003828:	687b      	ldr	r3, [r7, #4]
 800382a:	2200      	movs	r2, #0
 800382c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003830:	2300      	movs	r3, #0
 8003832:	4618      	mov	r0, r3
 8003834:	3714      	adds	r7, #20
 8003836:	46bd      	mov	sp, r7
 8003838:	f85d 7b04 	ldr.w	r7, [sp], #4
 800383c:	4770      	bx	lr
 800383e:	bf00      	nop
 8003840:	40010000 	.word	0x40010000
 8003844:	40000400 	.word	0x40000400
 8003848:	40000800 	.word	0x40000800
 800384c:	40000c00 	.word	0x40000c00
 8003850:	40014000 	.word	0x40014000

08003854 <HAL_TIMEx_ConfigBreakDeadTime>:
 8003854:	b480      	push	{r7}
 8003856:	b085      	sub	sp, #20
 8003858:	af00      	add	r7, sp, #0
 800385a:	6078      	str	r0, [r7, #4]
 800385c:	6039      	str	r1, [r7, #0]
 800385e:	2300      	movs	r3, #0
 8003860:	60fb      	str	r3, [r7, #12]
 8003862:	687b      	ldr	r3, [r7, #4]
 8003864:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8003868:	2b01      	cmp	r3, #1
 800386a:	d101      	bne.n	8003870 <HAL_TIMEx_ConfigBreakDeadTime+0x1c>
 800386c:	2302      	movs	r3, #2
 800386e:	e03d      	b.n	80038ec <HAL_TIMEx_ConfigBreakDeadTime+0x98>
 8003870:	687b      	ldr	r3, [r7, #4]
 8003872:	2201      	movs	r2, #1
 8003874:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003878:	68fb      	ldr	r3, [r7, #12]
 800387a:	f023 02ff 	bic.w	r2, r3, #255	; 0xff
 800387e:	683b      	ldr	r3, [r7, #0]
 8003880:	68db      	ldr	r3, [r3, #12]
 8003882:	4313      	orrs	r3, r2
 8003884:	60fb      	str	r3, [r7, #12]
 8003886:	68fb      	ldr	r3, [r7, #12]
 8003888:	f423 7240 	bic.w	r2, r3, #768	; 0x300
 800388c:	683b      	ldr	r3, [r7, #0]
 800388e:	689b      	ldr	r3, [r3, #8]
 8003890:	4313      	orrs	r3, r2
 8003892:	60fb      	str	r3, [r7, #12]
 8003894:	68fb      	ldr	r3, [r7, #12]
 8003896:	f423 6280 	bic.w	r2, r3, #1024	; 0x400
 800389a:	683b      	ldr	r3, [r7, #0]
 800389c:	685b      	ldr	r3, [r3, #4]
 800389e:	4313      	orrs	r3, r2
 80038a0:	60fb      	str	r3, [r7, #12]
 80038a2:	68fb      	ldr	r3, [r7, #12]
 80038a4:	f423 6200 	bic.w	r2, r3, #2048	; 0x800
 80038a8:	683b      	ldr	r3, [r7, #0]
 80038aa:	681b      	ldr	r3, [r3, #0]
 80038ac:	4313      	orrs	r3, r2
 80038ae:	60fb      	str	r3, [r7, #12]
 80038b0:	68fb      	ldr	r3, [r7, #12]
 80038b2:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 80038b6:	683b      	ldr	r3, [r7, #0]
 80038b8:	691b      	ldr	r3, [r3, #16]
 80038ba:	4313      	orrs	r3, r2
 80038bc:	60fb      	str	r3, [r7, #12]
 80038be:	68fb      	ldr	r3, [r7, #12]
 80038c0:	f423 5200 	bic.w	r2, r3, #8192	; 0x2000
 80038c4:	683b      	ldr	r3, [r7, #0]
 80038c6:	695b      	ldr	r3, [r3, #20]
 80038c8:	4313      	orrs	r3, r2
 80038ca:	60fb      	str	r3, [r7, #12]
 80038cc:	68fb      	ldr	r3, [r7, #12]
 80038ce:	f423 4280 	bic.w	r2, r3, #16384	; 0x4000
 80038d2:	683b      	ldr	r3, [r7, #0]
 80038d4:	69db      	ldr	r3, [r3, #28]
 80038d6:	4313      	orrs	r3, r2
 80038d8:	60fb      	str	r3, [r7, #12]
 80038da:	687b      	ldr	r3, [r7, #4]
 80038dc:	681b      	ldr	r3, [r3, #0]
 80038de:	68fa      	ldr	r2, [r7, #12]
 80038e0:	645a      	str	r2, [r3, #68]	; 0x44
 80038e2:	687b      	ldr	r3, [r7, #4]
 80038e4:	2200      	movs	r2, #0
 80038e6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80038ea:	2300      	movs	r3, #0
 80038ec:	4618      	mov	r0, r3
 80038ee:	3714      	adds	r7, #20
 80038f0:	46bd      	mov	sp, r7
 80038f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80038f6:	4770      	bx	lr

080038f8 <siprintf>:
 80038f8:	b40e      	push	{r1, r2, r3}
 80038fa:	b500      	push	{lr}
 80038fc:	b09c      	sub	sp, #112	; 0x70
 80038fe:	ab1d      	add	r3, sp, #116	; 0x74
 8003900:	9002      	str	r0, [sp, #8]
 8003902:	9006      	str	r0, [sp, #24]
 8003904:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 8003908:	4809      	ldr	r0, [pc, #36]	; (8003930 <siprintf+0x38>)
 800390a:	9107      	str	r1, [sp, #28]
 800390c:	9104      	str	r1, [sp, #16]
 800390e:	4909      	ldr	r1, [pc, #36]	; (8003934 <siprintf+0x3c>)
 8003910:	f853 2b04 	ldr.w	r2, [r3], #4
 8003914:	9105      	str	r1, [sp, #20]
 8003916:	6800      	ldr	r0, [r0, #0]
 8003918:	9301      	str	r3, [sp, #4]
 800391a:	a902      	add	r1, sp, #8
 800391c:	f000 f992 	bl	8003c44 <_svfiprintf_r>
 8003920:	9b02      	ldr	r3, [sp, #8]
 8003922:	2200      	movs	r2, #0
 8003924:	701a      	strb	r2, [r3, #0]
 8003926:	b01c      	add	sp, #112	; 0x70
 8003928:	f85d eb04 	ldr.w	lr, [sp], #4
 800392c:	b003      	add	sp, #12
 800392e:	4770      	bx	lr
 8003930:	20000084 	.word	0x20000084
 8003934:	ffff0208 	.word	0xffff0208

08003938 <memset>:
 8003938:	4402      	add	r2, r0
 800393a:	4603      	mov	r3, r0
 800393c:	4293      	cmp	r3, r2
 800393e:	d100      	bne.n	8003942 <memset+0xa>
 8003940:	4770      	bx	lr
 8003942:	f803 1b01 	strb.w	r1, [r3], #1
 8003946:	e7f9      	b.n	800393c <memset+0x4>

08003948 <__errno>:
 8003948:	4b01      	ldr	r3, [pc, #4]	; (8003950 <__errno+0x8>)
 800394a:	6818      	ldr	r0, [r3, #0]
 800394c:	4770      	bx	lr
 800394e:	bf00      	nop
 8003950:	20000084 	.word	0x20000084

08003954 <__libc_init_array>:
 8003954:	b570      	push	{r4, r5, r6, lr}
 8003956:	4d0d      	ldr	r5, [pc, #52]	; (800398c <__libc_init_array+0x38>)
 8003958:	4c0d      	ldr	r4, [pc, #52]	; (8003990 <__libc_init_array+0x3c>)
 800395a:	1b64      	subs	r4, r4, r5
 800395c:	10a4      	asrs	r4, r4, #2
 800395e:	2600      	movs	r6, #0
 8003960:	42a6      	cmp	r6, r4
 8003962:	d109      	bne.n	8003978 <__libc_init_array+0x24>
 8003964:	4d0b      	ldr	r5, [pc, #44]	; (8003994 <__libc_init_array+0x40>)
 8003966:	4c0c      	ldr	r4, [pc, #48]	; (8003998 <__libc_init_array+0x44>)
 8003968:	f000 fc6a 	bl	8004240 <_init>
 800396c:	1b64      	subs	r4, r4, r5
 800396e:	10a4      	asrs	r4, r4, #2
 8003970:	2600      	movs	r6, #0
 8003972:	42a6      	cmp	r6, r4
 8003974:	d105      	bne.n	8003982 <__libc_init_array+0x2e>
 8003976:	bd70      	pop	{r4, r5, r6, pc}
 8003978:	f855 3b04 	ldr.w	r3, [r5], #4
 800397c:	4798      	blx	r3
 800397e:	3601      	adds	r6, #1
 8003980:	e7ee      	b.n	8003960 <__libc_init_array+0xc>
 8003982:	f855 3b04 	ldr.w	r3, [r5], #4
 8003986:	4798      	blx	r3
 8003988:	3601      	adds	r6, #1
 800398a:	e7f2      	b.n	8003972 <__libc_init_array+0x1e>
 800398c:	08004534 	.word	0x08004534
 8003990:	08004534 	.word	0x08004534
 8003994:	08004534 	.word	0x08004534
 8003998:	08004538 	.word	0x08004538

0800399c <__retarget_lock_acquire_recursive>:
 800399c:	4770      	bx	lr

0800399e <__retarget_lock_release_recursive>:
 800399e:	4770      	bx	lr

080039a0 <_free_r>:
 80039a0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80039a2:	2900      	cmp	r1, #0
 80039a4:	d044      	beq.n	8003a30 <_free_r+0x90>
 80039a6:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80039aa:	9001      	str	r0, [sp, #4]
 80039ac:	2b00      	cmp	r3, #0
 80039ae:	f1a1 0404 	sub.w	r4, r1, #4
 80039b2:	bfb8      	it	lt
 80039b4:	18e4      	addlt	r4, r4, r3
 80039b6:	f000 f8df 	bl	8003b78 <__malloc_lock>
 80039ba:	4a1e      	ldr	r2, [pc, #120]	; (8003a34 <_free_r+0x94>)
 80039bc:	9801      	ldr	r0, [sp, #4]
 80039be:	6813      	ldr	r3, [r2, #0]
 80039c0:	b933      	cbnz	r3, 80039d0 <_free_r+0x30>
 80039c2:	6063      	str	r3, [r4, #4]
 80039c4:	6014      	str	r4, [r2, #0]
 80039c6:	b003      	add	sp, #12
 80039c8:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80039cc:	f000 b8da 	b.w	8003b84 <__malloc_unlock>
 80039d0:	42a3      	cmp	r3, r4
 80039d2:	d908      	bls.n	80039e6 <_free_r+0x46>
 80039d4:	6825      	ldr	r5, [r4, #0]
 80039d6:	1961      	adds	r1, r4, r5
 80039d8:	428b      	cmp	r3, r1
 80039da:	bf01      	itttt	eq
 80039dc:	6819      	ldreq	r1, [r3, #0]
 80039de:	685b      	ldreq	r3, [r3, #4]
 80039e0:	1949      	addeq	r1, r1, r5
 80039e2:	6021      	streq	r1, [r4, #0]
 80039e4:	e7ed      	b.n	80039c2 <_free_r+0x22>
 80039e6:	461a      	mov	r2, r3
 80039e8:	685b      	ldr	r3, [r3, #4]
 80039ea:	b10b      	cbz	r3, 80039f0 <_free_r+0x50>
 80039ec:	42a3      	cmp	r3, r4
 80039ee:	d9fa      	bls.n	80039e6 <_free_r+0x46>
 80039f0:	6811      	ldr	r1, [r2, #0]
 80039f2:	1855      	adds	r5, r2, r1
 80039f4:	42a5      	cmp	r5, r4
 80039f6:	d10b      	bne.n	8003a10 <_free_r+0x70>
 80039f8:	6824      	ldr	r4, [r4, #0]
 80039fa:	4421      	add	r1, r4
 80039fc:	1854      	adds	r4, r2, r1
 80039fe:	42a3      	cmp	r3, r4
 8003a00:	6011      	str	r1, [r2, #0]
 8003a02:	d1e0      	bne.n	80039c6 <_free_r+0x26>
 8003a04:	681c      	ldr	r4, [r3, #0]
 8003a06:	685b      	ldr	r3, [r3, #4]
 8003a08:	6053      	str	r3, [r2, #4]
 8003a0a:	440c      	add	r4, r1
 8003a0c:	6014      	str	r4, [r2, #0]
 8003a0e:	e7da      	b.n	80039c6 <_free_r+0x26>
 8003a10:	d902      	bls.n	8003a18 <_free_r+0x78>
 8003a12:	230c      	movs	r3, #12
 8003a14:	6003      	str	r3, [r0, #0]
 8003a16:	e7d6      	b.n	80039c6 <_free_r+0x26>
 8003a18:	6825      	ldr	r5, [r4, #0]
 8003a1a:	1961      	adds	r1, r4, r5
 8003a1c:	428b      	cmp	r3, r1
 8003a1e:	bf04      	itt	eq
 8003a20:	6819      	ldreq	r1, [r3, #0]
 8003a22:	685b      	ldreq	r3, [r3, #4]
 8003a24:	6063      	str	r3, [r4, #4]
 8003a26:	bf04      	itt	eq
 8003a28:	1949      	addeq	r1, r1, r5
 8003a2a:	6021      	streq	r1, [r4, #0]
 8003a2c:	6054      	str	r4, [r2, #4]
 8003a2e:	e7ca      	b.n	80039c6 <_free_r+0x26>
 8003a30:	b003      	add	sp, #12
 8003a32:	bd30      	pop	{r4, r5, pc}
 8003a34:	200005e0 	.word	0x200005e0

08003a38 <sbrk_aligned>:
 8003a38:	b570      	push	{r4, r5, r6, lr}
 8003a3a:	4e0e      	ldr	r6, [pc, #56]	; (8003a74 <sbrk_aligned+0x3c>)
 8003a3c:	460c      	mov	r4, r1
 8003a3e:	6831      	ldr	r1, [r6, #0]
 8003a40:	4605      	mov	r5, r0
 8003a42:	b911      	cbnz	r1, 8003a4a <sbrk_aligned+0x12>
 8003a44:	f000 fba6 	bl	8004194 <_sbrk_r>
 8003a48:	6030      	str	r0, [r6, #0]
 8003a4a:	4621      	mov	r1, r4
 8003a4c:	4628      	mov	r0, r5
 8003a4e:	f000 fba1 	bl	8004194 <_sbrk_r>
 8003a52:	1c43      	adds	r3, r0, #1
 8003a54:	d00a      	beq.n	8003a6c <sbrk_aligned+0x34>
 8003a56:	1cc4      	adds	r4, r0, #3
 8003a58:	f024 0403 	bic.w	r4, r4, #3
 8003a5c:	42a0      	cmp	r0, r4
 8003a5e:	d007      	beq.n	8003a70 <sbrk_aligned+0x38>
 8003a60:	1a21      	subs	r1, r4, r0
 8003a62:	4628      	mov	r0, r5
 8003a64:	f000 fb96 	bl	8004194 <_sbrk_r>
 8003a68:	3001      	adds	r0, #1
 8003a6a:	d101      	bne.n	8003a70 <sbrk_aligned+0x38>
 8003a6c:	f04f 34ff 	mov.w	r4, #4294967295
 8003a70:	4620      	mov	r0, r4
 8003a72:	bd70      	pop	{r4, r5, r6, pc}
 8003a74:	200005e4 	.word	0x200005e4

08003a78 <_malloc_r>:
 8003a78:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8003a7c:	1ccd      	adds	r5, r1, #3
 8003a7e:	f025 0503 	bic.w	r5, r5, #3
 8003a82:	3508      	adds	r5, #8
 8003a84:	2d0c      	cmp	r5, #12
 8003a86:	bf38      	it	cc
 8003a88:	250c      	movcc	r5, #12
 8003a8a:	2d00      	cmp	r5, #0
 8003a8c:	4607      	mov	r7, r0
 8003a8e:	db01      	blt.n	8003a94 <_malloc_r+0x1c>
 8003a90:	42a9      	cmp	r1, r5
 8003a92:	d905      	bls.n	8003aa0 <_malloc_r+0x28>
 8003a94:	230c      	movs	r3, #12
 8003a96:	603b      	str	r3, [r7, #0]
 8003a98:	2600      	movs	r6, #0
 8003a9a:	4630      	mov	r0, r6
 8003a9c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8003aa0:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 8003b74 <_malloc_r+0xfc>
 8003aa4:	f000 f868 	bl	8003b78 <__malloc_lock>
 8003aa8:	f8d8 3000 	ldr.w	r3, [r8]
 8003aac:	461c      	mov	r4, r3
 8003aae:	bb5c      	cbnz	r4, 8003b08 <_malloc_r+0x90>
 8003ab0:	4629      	mov	r1, r5
 8003ab2:	4638      	mov	r0, r7
 8003ab4:	f7ff ffc0 	bl	8003a38 <sbrk_aligned>
 8003ab8:	1c43      	adds	r3, r0, #1
 8003aba:	4604      	mov	r4, r0
 8003abc:	d155      	bne.n	8003b6a <_malloc_r+0xf2>
 8003abe:	f8d8 4000 	ldr.w	r4, [r8]
 8003ac2:	4626      	mov	r6, r4
 8003ac4:	2e00      	cmp	r6, #0
 8003ac6:	d145      	bne.n	8003b54 <_malloc_r+0xdc>
 8003ac8:	2c00      	cmp	r4, #0
 8003aca:	d048      	beq.n	8003b5e <_malloc_r+0xe6>
 8003acc:	6823      	ldr	r3, [r4, #0]
 8003ace:	4631      	mov	r1, r6
 8003ad0:	4638      	mov	r0, r7
 8003ad2:	eb04 0903 	add.w	r9, r4, r3
 8003ad6:	f000 fb5d 	bl	8004194 <_sbrk_r>
 8003ada:	4581      	cmp	r9, r0
 8003adc:	d13f      	bne.n	8003b5e <_malloc_r+0xe6>
 8003ade:	6821      	ldr	r1, [r4, #0]
 8003ae0:	1a6d      	subs	r5, r5, r1
 8003ae2:	4629      	mov	r1, r5
 8003ae4:	4638      	mov	r0, r7
 8003ae6:	f7ff ffa7 	bl	8003a38 <sbrk_aligned>
 8003aea:	3001      	adds	r0, #1
 8003aec:	d037      	beq.n	8003b5e <_malloc_r+0xe6>
 8003aee:	6823      	ldr	r3, [r4, #0]
 8003af0:	442b      	add	r3, r5
 8003af2:	6023      	str	r3, [r4, #0]
 8003af4:	f8d8 3000 	ldr.w	r3, [r8]
 8003af8:	2b00      	cmp	r3, #0
 8003afa:	d038      	beq.n	8003b6e <_malloc_r+0xf6>
 8003afc:	685a      	ldr	r2, [r3, #4]
 8003afe:	42a2      	cmp	r2, r4
 8003b00:	d12b      	bne.n	8003b5a <_malloc_r+0xe2>
 8003b02:	2200      	movs	r2, #0
 8003b04:	605a      	str	r2, [r3, #4]
 8003b06:	e00f      	b.n	8003b28 <_malloc_r+0xb0>
 8003b08:	6822      	ldr	r2, [r4, #0]
 8003b0a:	1b52      	subs	r2, r2, r5
 8003b0c:	d41f      	bmi.n	8003b4e <_malloc_r+0xd6>
 8003b0e:	2a0b      	cmp	r2, #11
 8003b10:	d917      	bls.n	8003b42 <_malloc_r+0xca>
 8003b12:	1961      	adds	r1, r4, r5
 8003b14:	42a3      	cmp	r3, r4
 8003b16:	6025      	str	r5, [r4, #0]
 8003b18:	bf18      	it	ne
 8003b1a:	6059      	strne	r1, [r3, #4]
 8003b1c:	6863      	ldr	r3, [r4, #4]
 8003b1e:	bf08      	it	eq
 8003b20:	f8c8 1000 	streq.w	r1, [r8]
 8003b24:	5162      	str	r2, [r4, r5]
 8003b26:	604b      	str	r3, [r1, #4]
 8003b28:	4638      	mov	r0, r7
 8003b2a:	f104 060b 	add.w	r6, r4, #11
 8003b2e:	f000 f829 	bl	8003b84 <__malloc_unlock>
 8003b32:	f026 0607 	bic.w	r6, r6, #7
 8003b36:	1d23      	adds	r3, r4, #4
 8003b38:	1af2      	subs	r2, r6, r3
 8003b3a:	d0ae      	beq.n	8003a9a <_malloc_r+0x22>
 8003b3c:	1b9b      	subs	r3, r3, r6
 8003b3e:	50a3      	str	r3, [r4, r2]
 8003b40:	e7ab      	b.n	8003a9a <_malloc_r+0x22>
 8003b42:	42a3      	cmp	r3, r4
 8003b44:	6862      	ldr	r2, [r4, #4]
 8003b46:	d1dd      	bne.n	8003b04 <_malloc_r+0x8c>
 8003b48:	f8c8 2000 	str.w	r2, [r8]
 8003b4c:	e7ec      	b.n	8003b28 <_malloc_r+0xb0>
 8003b4e:	4623      	mov	r3, r4
 8003b50:	6864      	ldr	r4, [r4, #4]
 8003b52:	e7ac      	b.n	8003aae <_malloc_r+0x36>
 8003b54:	4634      	mov	r4, r6
 8003b56:	6876      	ldr	r6, [r6, #4]
 8003b58:	e7b4      	b.n	8003ac4 <_malloc_r+0x4c>
 8003b5a:	4613      	mov	r3, r2
 8003b5c:	e7cc      	b.n	8003af8 <_malloc_r+0x80>
 8003b5e:	230c      	movs	r3, #12
 8003b60:	603b      	str	r3, [r7, #0]
 8003b62:	4638      	mov	r0, r7
 8003b64:	f000 f80e 	bl	8003b84 <__malloc_unlock>
 8003b68:	e797      	b.n	8003a9a <_malloc_r+0x22>
 8003b6a:	6025      	str	r5, [r4, #0]
 8003b6c:	e7dc      	b.n	8003b28 <_malloc_r+0xb0>
 8003b6e:	605b      	str	r3, [r3, #4]
 8003b70:	deff      	udf	#255	; 0xff
 8003b72:	bf00      	nop
 8003b74:	200005e0 	.word	0x200005e0

08003b78 <__malloc_lock>:
 8003b78:	4801      	ldr	r0, [pc, #4]	; (8003b80 <__malloc_lock+0x8>)
 8003b7a:	f7ff bf0f 	b.w	800399c <__retarget_lock_acquire_recursive>
 8003b7e:	bf00      	nop
 8003b80:	200005dc 	.word	0x200005dc

08003b84 <__malloc_unlock>:
 8003b84:	4801      	ldr	r0, [pc, #4]	; (8003b8c <__malloc_unlock+0x8>)
 8003b86:	f7ff bf0a 	b.w	800399e <__retarget_lock_release_recursive>
 8003b8a:	bf00      	nop
 8003b8c:	200005dc 	.word	0x200005dc

08003b90 <__ssputs_r>:
 8003b90:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003b94:	688e      	ldr	r6, [r1, #8]
 8003b96:	461f      	mov	r7, r3
 8003b98:	42be      	cmp	r6, r7
 8003b9a:	680b      	ldr	r3, [r1, #0]
 8003b9c:	4682      	mov	sl, r0
 8003b9e:	460c      	mov	r4, r1
 8003ba0:	4690      	mov	r8, r2
 8003ba2:	d82c      	bhi.n	8003bfe <__ssputs_r+0x6e>
 8003ba4:	898a      	ldrh	r2, [r1, #12]
 8003ba6:	f412 6f90 	tst.w	r2, #1152	; 0x480
 8003baa:	d026      	beq.n	8003bfa <__ssputs_r+0x6a>
 8003bac:	6965      	ldr	r5, [r4, #20]
 8003bae:	6909      	ldr	r1, [r1, #16]
 8003bb0:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8003bb4:	eba3 0901 	sub.w	r9, r3, r1
 8003bb8:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8003bbc:	1c7b      	adds	r3, r7, #1
 8003bbe:	444b      	add	r3, r9
 8003bc0:	106d      	asrs	r5, r5, #1
 8003bc2:	429d      	cmp	r5, r3
 8003bc4:	bf38      	it	cc
 8003bc6:	461d      	movcc	r5, r3
 8003bc8:	0553      	lsls	r3, r2, #21
 8003bca:	d527      	bpl.n	8003c1c <__ssputs_r+0x8c>
 8003bcc:	4629      	mov	r1, r5
 8003bce:	f7ff ff53 	bl	8003a78 <_malloc_r>
 8003bd2:	4606      	mov	r6, r0
 8003bd4:	b360      	cbz	r0, 8003c30 <__ssputs_r+0xa0>
 8003bd6:	6921      	ldr	r1, [r4, #16]
 8003bd8:	464a      	mov	r2, r9
 8003bda:	f000 faeb 	bl	80041b4 <memcpy>
 8003bde:	89a3      	ldrh	r3, [r4, #12]
 8003be0:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 8003be4:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8003be8:	81a3      	strh	r3, [r4, #12]
 8003bea:	6126      	str	r6, [r4, #16]
 8003bec:	6165      	str	r5, [r4, #20]
 8003bee:	444e      	add	r6, r9
 8003bf0:	eba5 0509 	sub.w	r5, r5, r9
 8003bf4:	6026      	str	r6, [r4, #0]
 8003bf6:	60a5      	str	r5, [r4, #8]
 8003bf8:	463e      	mov	r6, r7
 8003bfa:	42be      	cmp	r6, r7
 8003bfc:	d900      	bls.n	8003c00 <__ssputs_r+0x70>
 8003bfe:	463e      	mov	r6, r7
 8003c00:	6820      	ldr	r0, [r4, #0]
 8003c02:	4632      	mov	r2, r6
 8003c04:	4641      	mov	r1, r8
 8003c06:	f000 faab 	bl	8004160 <memmove>
 8003c0a:	68a3      	ldr	r3, [r4, #8]
 8003c0c:	1b9b      	subs	r3, r3, r6
 8003c0e:	60a3      	str	r3, [r4, #8]
 8003c10:	6823      	ldr	r3, [r4, #0]
 8003c12:	4433      	add	r3, r6
 8003c14:	6023      	str	r3, [r4, #0]
 8003c16:	2000      	movs	r0, #0
 8003c18:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003c1c:	462a      	mov	r2, r5
 8003c1e:	f000 fad7 	bl	80041d0 <_realloc_r>
 8003c22:	4606      	mov	r6, r0
 8003c24:	2800      	cmp	r0, #0
 8003c26:	d1e0      	bne.n	8003bea <__ssputs_r+0x5a>
 8003c28:	6921      	ldr	r1, [r4, #16]
 8003c2a:	4650      	mov	r0, sl
 8003c2c:	f7ff feb8 	bl	80039a0 <_free_r>
 8003c30:	230c      	movs	r3, #12
 8003c32:	f8ca 3000 	str.w	r3, [sl]
 8003c36:	89a3      	ldrh	r3, [r4, #12]
 8003c38:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8003c3c:	81a3      	strh	r3, [r4, #12]
 8003c3e:	f04f 30ff 	mov.w	r0, #4294967295
 8003c42:	e7e9      	b.n	8003c18 <__ssputs_r+0x88>

08003c44 <_svfiprintf_r>:
 8003c44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003c48:	4698      	mov	r8, r3
 8003c4a:	898b      	ldrh	r3, [r1, #12]
 8003c4c:	061b      	lsls	r3, r3, #24
 8003c4e:	b09d      	sub	sp, #116	; 0x74
 8003c50:	4607      	mov	r7, r0
 8003c52:	460d      	mov	r5, r1
 8003c54:	4614      	mov	r4, r2
 8003c56:	d50e      	bpl.n	8003c76 <_svfiprintf_r+0x32>
 8003c58:	690b      	ldr	r3, [r1, #16]
 8003c5a:	b963      	cbnz	r3, 8003c76 <_svfiprintf_r+0x32>
 8003c5c:	2140      	movs	r1, #64	; 0x40
 8003c5e:	f7ff ff0b 	bl	8003a78 <_malloc_r>
 8003c62:	6028      	str	r0, [r5, #0]
 8003c64:	6128      	str	r0, [r5, #16]
 8003c66:	b920      	cbnz	r0, 8003c72 <_svfiprintf_r+0x2e>
 8003c68:	230c      	movs	r3, #12
 8003c6a:	603b      	str	r3, [r7, #0]
 8003c6c:	f04f 30ff 	mov.w	r0, #4294967295
 8003c70:	e0d0      	b.n	8003e14 <_svfiprintf_r+0x1d0>
 8003c72:	2340      	movs	r3, #64	; 0x40
 8003c74:	616b      	str	r3, [r5, #20]
 8003c76:	2300      	movs	r3, #0
 8003c78:	9309      	str	r3, [sp, #36]	; 0x24
 8003c7a:	2320      	movs	r3, #32
 8003c7c:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8003c80:	f8cd 800c 	str.w	r8, [sp, #12]
 8003c84:	2330      	movs	r3, #48	; 0x30
 8003c86:	f8df 81a4 	ldr.w	r8, [pc, #420]	; 8003e2c <_svfiprintf_r+0x1e8>
 8003c8a:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8003c8e:	f04f 0901 	mov.w	r9, #1
 8003c92:	4623      	mov	r3, r4
 8003c94:	469a      	mov	sl, r3
 8003c96:	f813 2b01 	ldrb.w	r2, [r3], #1
 8003c9a:	b10a      	cbz	r2, 8003ca0 <_svfiprintf_r+0x5c>
 8003c9c:	2a25      	cmp	r2, #37	; 0x25
 8003c9e:	d1f9      	bne.n	8003c94 <_svfiprintf_r+0x50>
 8003ca0:	ebba 0b04 	subs.w	fp, sl, r4
 8003ca4:	d00b      	beq.n	8003cbe <_svfiprintf_r+0x7a>
 8003ca6:	465b      	mov	r3, fp
 8003ca8:	4622      	mov	r2, r4
 8003caa:	4629      	mov	r1, r5
 8003cac:	4638      	mov	r0, r7
 8003cae:	f7ff ff6f 	bl	8003b90 <__ssputs_r>
 8003cb2:	3001      	adds	r0, #1
 8003cb4:	f000 80a9 	beq.w	8003e0a <_svfiprintf_r+0x1c6>
 8003cb8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8003cba:	445a      	add	r2, fp
 8003cbc:	9209      	str	r2, [sp, #36]	; 0x24
 8003cbe:	f89a 3000 	ldrb.w	r3, [sl]
 8003cc2:	2b00      	cmp	r3, #0
 8003cc4:	f000 80a1 	beq.w	8003e0a <_svfiprintf_r+0x1c6>
 8003cc8:	2300      	movs	r3, #0
 8003cca:	f04f 32ff 	mov.w	r2, #4294967295
 8003cce:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8003cd2:	f10a 0a01 	add.w	sl, sl, #1
 8003cd6:	9304      	str	r3, [sp, #16]
 8003cd8:	9307      	str	r3, [sp, #28]
 8003cda:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8003cde:	931a      	str	r3, [sp, #104]	; 0x68
 8003ce0:	4654      	mov	r4, sl
 8003ce2:	2205      	movs	r2, #5
 8003ce4:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003ce8:	4850      	ldr	r0, [pc, #320]	; (8003e2c <_svfiprintf_r+0x1e8>)
 8003cea:	f7fc fa79 	bl	80001e0 <memchr>
 8003cee:	9a04      	ldr	r2, [sp, #16]
 8003cf0:	b9d8      	cbnz	r0, 8003d2a <_svfiprintf_r+0xe6>
 8003cf2:	06d0      	lsls	r0, r2, #27
 8003cf4:	bf44      	itt	mi
 8003cf6:	2320      	movmi	r3, #32
 8003cf8:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8003cfc:	0711      	lsls	r1, r2, #28
 8003cfe:	bf44      	itt	mi
 8003d00:	232b      	movmi	r3, #43	; 0x2b
 8003d02:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8003d06:	f89a 3000 	ldrb.w	r3, [sl]
 8003d0a:	2b2a      	cmp	r3, #42	; 0x2a
 8003d0c:	d015      	beq.n	8003d3a <_svfiprintf_r+0xf6>
 8003d0e:	9a07      	ldr	r2, [sp, #28]
 8003d10:	4654      	mov	r4, sl
 8003d12:	2000      	movs	r0, #0
 8003d14:	f04f 0c0a 	mov.w	ip, #10
 8003d18:	4621      	mov	r1, r4
 8003d1a:	f811 3b01 	ldrb.w	r3, [r1], #1
 8003d1e:	3b30      	subs	r3, #48	; 0x30
 8003d20:	2b09      	cmp	r3, #9
 8003d22:	d94d      	bls.n	8003dc0 <_svfiprintf_r+0x17c>
 8003d24:	b1b0      	cbz	r0, 8003d54 <_svfiprintf_r+0x110>
 8003d26:	9207      	str	r2, [sp, #28]
 8003d28:	e014      	b.n	8003d54 <_svfiprintf_r+0x110>
 8003d2a:	eba0 0308 	sub.w	r3, r0, r8
 8003d2e:	fa09 f303 	lsl.w	r3, r9, r3
 8003d32:	4313      	orrs	r3, r2
 8003d34:	9304      	str	r3, [sp, #16]
 8003d36:	46a2      	mov	sl, r4
 8003d38:	e7d2      	b.n	8003ce0 <_svfiprintf_r+0x9c>
 8003d3a:	9b03      	ldr	r3, [sp, #12]
 8003d3c:	1d19      	adds	r1, r3, #4
 8003d3e:	681b      	ldr	r3, [r3, #0]
 8003d40:	9103      	str	r1, [sp, #12]
 8003d42:	2b00      	cmp	r3, #0
 8003d44:	bfbb      	ittet	lt
 8003d46:	425b      	neglt	r3, r3
 8003d48:	f042 0202 	orrlt.w	r2, r2, #2
 8003d4c:	9307      	strge	r3, [sp, #28]
 8003d4e:	9307      	strlt	r3, [sp, #28]
 8003d50:	bfb8      	it	lt
 8003d52:	9204      	strlt	r2, [sp, #16]
 8003d54:	7823      	ldrb	r3, [r4, #0]
 8003d56:	2b2e      	cmp	r3, #46	; 0x2e
 8003d58:	d10c      	bne.n	8003d74 <_svfiprintf_r+0x130>
 8003d5a:	7863      	ldrb	r3, [r4, #1]
 8003d5c:	2b2a      	cmp	r3, #42	; 0x2a
 8003d5e:	d134      	bne.n	8003dca <_svfiprintf_r+0x186>
 8003d60:	9b03      	ldr	r3, [sp, #12]
 8003d62:	1d1a      	adds	r2, r3, #4
 8003d64:	681b      	ldr	r3, [r3, #0]
 8003d66:	9203      	str	r2, [sp, #12]
 8003d68:	2b00      	cmp	r3, #0
 8003d6a:	bfb8      	it	lt
 8003d6c:	f04f 33ff 	movlt.w	r3, #4294967295
 8003d70:	3402      	adds	r4, #2
 8003d72:	9305      	str	r3, [sp, #20]
 8003d74:	f8df a0c4 	ldr.w	sl, [pc, #196]	; 8003e3c <_svfiprintf_r+0x1f8>
 8003d78:	7821      	ldrb	r1, [r4, #0]
 8003d7a:	2203      	movs	r2, #3
 8003d7c:	4650      	mov	r0, sl
 8003d7e:	f7fc fa2f 	bl	80001e0 <memchr>
 8003d82:	b138      	cbz	r0, 8003d94 <_svfiprintf_r+0x150>
 8003d84:	9b04      	ldr	r3, [sp, #16]
 8003d86:	eba0 000a 	sub.w	r0, r0, sl
 8003d8a:	2240      	movs	r2, #64	; 0x40
 8003d8c:	4082      	lsls	r2, r0
 8003d8e:	4313      	orrs	r3, r2
 8003d90:	3401      	adds	r4, #1
 8003d92:	9304      	str	r3, [sp, #16]
 8003d94:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003d98:	4825      	ldr	r0, [pc, #148]	; (8003e30 <_svfiprintf_r+0x1ec>)
 8003d9a:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8003d9e:	2206      	movs	r2, #6
 8003da0:	f7fc fa1e 	bl	80001e0 <memchr>
 8003da4:	2800      	cmp	r0, #0
 8003da6:	d038      	beq.n	8003e1a <_svfiprintf_r+0x1d6>
 8003da8:	4b22      	ldr	r3, [pc, #136]	; (8003e34 <_svfiprintf_r+0x1f0>)
 8003daa:	bb1b      	cbnz	r3, 8003df4 <_svfiprintf_r+0x1b0>
 8003dac:	9b03      	ldr	r3, [sp, #12]
 8003dae:	3307      	adds	r3, #7
 8003db0:	f023 0307 	bic.w	r3, r3, #7
 8003db4:	3308      	adds	r3, #8
 8003db6:	9303      	str	r3, [sp, #12]
 8003db8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003dba:	4433      	add	r3, r6
 8003dbc:	9309      	str	r3, [sp, #36]	; 0x24
 8003dbe:	e768      	b.n	8003c92 <_svfiprintf_r+0x4e>
 8003dc0:	fb0c 3202 	mla	r2, ip, r2, r3
 8003dc4:	460c      	mov	r4, r1
 8003dc6:	2001      	movs	r0, #1
 8003dc8:	e7a6      	b.n	8003d18 <_svfiprintf_r+0xd4>
 8003dca:	2300      	movs	r3, #0
 8003dcc:	3401      	adds	r4, #1
 8003dce:	9305      	str	r3, [sp, #20]
 8003dd0:	4619      	mov	r1, r3
 8003dd2:	f04f 0c0a 	mov.w	ip, #10
 8003dd6:	4620      	mov	r0, r4
 8003dd8:	f810 2b01 	ldrb.w	r2, [r0], #1
 8003ddc:	3a30      	subs	r2, #48	; 0x30
 8003dde:	2a09      	cmp	r2, #9
 8003de0:	d903      	bls.n	8003dea <_svfiprintf_r+0x1a6>
 8003de2:	2b00      	cmp	r3, #0
 8003de4:	d0c6      	beq.n	8003d74 <_svfiprintf_r+0x130>
 8003de6:	9105      	str	r1, [sp, #20]
 8003de8:	e7c4      	b.n	8003d74 <_svfiprintf_r+0x130>
 8003dea:	fb0c 2101 	mla	r1, ip, r1, r2
 8003dee:	4604      	mov	r4, r0
 8003df0:	2301      	movs	r3, #1
 8003df2:	e7f0      	b.n	8003dd6 <_svfiprintf_r+0x192>
 8003df4:	ab03      	add	r3, sp, #12
 8003df6:	9300      	str	r3, [sp, #0]
 8003df8:	462a      	mov	r2, r5
 8003dfa:	4b0f      	ldr	r3, [pc, #60]	; (8003e38 <_svfiprintf_r+0x1f4>)
 8003dfc:	a904      	add	r1, sp, #16
 8003dfe:	4638      	mov	r0, r7
 8003e00:	f3af 8000 	nop.w
 8003e04:	1c42      	adds	r2, r0, #1
 8003e06:	4606      	mov	r6, r0
 8003e08:	d1d6      	bne.n	8003db8 <_svfiprintf_r+0x174>
 8003e0a:	89ab      	ldrh	r3, [r5, #12]
 8003e0c:	065b      	lsls	r3, r3, #25
 8003e0e:	f53f af2d 	bmi.w	8003c6c <_svfiprintf_r+0x28>
 8003e12:	9809      	ldr	r0, [sp, #36]	; 0x24
 8003e14:	b01d      	add	sp, #116	; 0x74
 8003e16:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003e1a:	ab03      	add	r3, sp, #12
 8003e1c:	9300      	str	r3, [sp, #0]
 8003e1e:	462a      	mov	r2, r5
 8003e20:	4b05      	ldr	r3, [pc, #20]	; (8003e38 <_svfiprintf_r+0x1f4>)
 8003e22:	a904      	add	r1, sp, #16
 8003e24:	4638      	mov	r0, r7
 8003e26:	f000 f879 	bl	8003f1c <_printf_i>
 8003e2a:	e7eb      	b.n	8003e04 <_svfiprintf_r+0x1c0>
 8003e2c:	080044f8 	.word	0x080044f8
 8003e30:	08004502 	.word	0x08004502
 8003e34:	00000000 	.word	0x00000000
 8003e38:	08003b91 	.word	0x08003b91
 8003e3c:	080044fe 	.word	0x080044fe

08003e40 <_printf_common>:
 8003e40:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003e44:	4616      	mov	r6, r2
 8003e46:	4699      	mov	r9, r3
 8003e48:	688a      	ldr	r2, [r1, #8]
 8003e4a:	690b      	ldr	r3, [r1, #16]
 8003e4c:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8003e50:	4293      	cmp	r3, r2
 8003e52:	bfb8      	it	lt
 8003e54:	4613      	movlt	r3, r2
 8003e56:	6033      	str	r3, [r6, #0]
 8003e58:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8003e5c:	4607      	mov	r7, r0
 8003e5e:	460c      	mov	r4, r1
 8003e60:	b10a      	cbz	r2, 8003e66 <_printf_common+0x26>
 8003e62:	3301      	adds	r3, #1
 8003e64:	6033      	str	r3, [r6, #0]
 8003e66:	6823      	ldr	r3, [r4, #0]
 8003e68:	0699      	lsls	r1, r3, #26
 8003e6a:	bf42      	ittt	mi
 8003e6c:	6833      	ldrmi	r3, [r6, #0]
 8003e6e:	3302      	addmi	r3, #2
 8003e70:	6033      	strmi	r3, [r6, #0]
 8003e72:	6825      	ldr	r5, [r4, #0]
 8003e74:	f015 0506 	ands.w	r5, r5, #6
 8003e78:	d106      	bne.n	8003e88 <_printf_common+0x48>
 8003e7a:	f104 0a19 	add.w	sl, r4, #25
 8003e7e:	68e3      	ldr	r3, [r4, #12]
 8003e80:	6832      	ldr	r2, [r6, #0]
 8003e82:	1a9b      	subs	r3, r3, r2
 8003e84:	42ab      	cmp	r3, r5
 8003e86:	dc26      	bgt.n	8003ed6 <_printf_common+0x96>
 8003e88:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8003e8c:	1e13      	subs	r3, r2, #0
 8003e8e:	6822      	ldr	r2, [r4, #0]
 8003e90:	bf18      	it	ne
 8003e92:	2301      	movne	r3, #1
 8003e94:	0692      	lsls	r2, r2, #26
 8003e96:	d42b      	bmi.n	8003ef0 <_printf_common+0xb0>
 8003e98:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8003e9c:	4649      	mov	r1, r9
 8003e9e:	4638      	mov	r0, r7
 8003ea0:	47c0      	blx	r8
 8003ea2:	3001      	adds	r0, #1
 8003ea4:	d01e      	beq.n	8003ee4 <_printf_common+0xa4>
 8003ea6:	6823      	ldr	r3, [r4, #0]
 8003ea8:	6922      	ldr	r2, [r4, #16]
 8003eaa:	f003 0306 	and.w	r3, r3, #6
 8003eae:	2b04      	cmp	r3, #4
 8003eb0:	bf02      	ittt	eq
 8003eb2:	68e5      	ldreq	r5, [r4, #12]
 8003eb4:	6833      	ldreq	r3, [r6, #0]
 8003eb6:	1aed      	subeq	r5, r5, r3
 8003eb8:	68a3      	ldr	r3, [r4, #8]
 8003eba:	bf0c      	ite	eq
 8003ebc:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8003ec0:	2500      	movne	r5, #0
 8003ec2:	4293      	cmp	r3, r2
 8003ec4:	bfc4      	itt	gt
 8003ec6:	1a9b      	subgt	r3, r3, r2
 8003ec8:	18ed      	addgt	r5, r5, r3
 8003eca:	2600      	movs	r6, #0
 8003ecc:	341a      	adds	r4, #26
 8003ece:	42b5      	cmp	r5, r6
 8003ed0:	d11a      	bne.n	8003f08 <_printf_common+0xc8>
 8003ed2:	2000      	movs	r0, #0
 8003ed4:	e008      	b.n	8003ee8 <_printf_common+0xa8>
 8003ed6:	2301      	movs	r3, #1
 8003ed8:	4652      	mov	r2, sl
 8003eda:	4649      	mov	r1, r9
 8003edc:	4638      	mov	r0, r7
 8003ede:	47c0      	blx	r8
 8003ee0:	3001      	adds	r0, #1
 8003ee2:	d103      	bne.n	8003eec <_printf_common+0xac>
 8003ee4:	f04f 30ff 	mov.w	r0, #4294967295
 8003ee8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003eec:	3501      	adds	r5, #1
 8003eee:	e7c6      	b.n	8003e7e <_printf_common+0x3e>
 8003ef0:	18e1      	adds	r1, r4, r3
 8003ef2:	1c5a      	adds	r2, r3, #1
 8003ef4:	2030      	movs	r0, #48	; 0x30
 8003ef6:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8003efa:	4422      	add	r2, r4
 8003efc:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8003f00:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8003f04:	3302      	adds	r3, #2
 8003f06:	e7c7      	b.n	8003e98 <_printf_common+0x58>
 8003f08:	2301      	movs	r3, #1
 8003f0a:	4622      	mov	r2, r4
 8003f0c:	4649      	mov	r1, r9
 8003f0e:	4638      	mov	r0, r7
 8003f10:	47c0      	blx	r8
 8003f12:	3001      	adds	r0, #1
 8003f14:	d0e6      	beq.n	8003ee4 <_printf_common+0xa4>
 8003f16:	3601      	adds	r6, #1
 8003f18:	e7d9      	b.n	8003ece <_printf_common+0x8e>
	...

08003f1c <_printf_i>:
 8003f1c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8003f20:	7e0f      	ldrb	r7, [r1, #24]
 8003f22:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8003f24:	2f78      	cmp	r7, #120	; 0x78
 8003f26:	4691      	mov	r9, r2
 8003f28:	4680      	mov	r8, r0
 8003f2a:	460c      	mov	r4, r1
 8003f2c:	469a      	mov	sl, r3
 8003f2e:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8003f32:	d807      	bhi.n	8003f44 <_printf_i+0x28>
 8003f34:	2f62      	cmp	r7, #98	; 0x62
 8003f36:	d80a      	bhi.n	8003f4e <_printf_i+0x32>
 8003f38:	2f00      	cmp	r7, #0
 8003f3a:	f000 80d4 	beq.w	80040e6 <_printf_i+0x1ca>
 8003f3e:	2f58      	cmp	r7, #88	; 0x58
 8003f40:	f000 80c0 	beq.w	80040c4 <_printf_i+0x1a8>
 8003f44:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8003f48:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8003f4c:	e03a      	b.n	8003fc4 <_printf_i+0xa8>
 8003f4e:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8003f52:	2b15      	cmp	r3, #21
 8003f54:	d8f6      	bhi.n	8003f44 <_printf_i+0x28>
 8003f56:	a101      	add	r1, pc, #4	; (adr r1, 8003f5c <_printf_i+0x40>)
 8003f58:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8003f5c:	08003fb5 	.word	0x08003fb5
 8003f60:	08003fc9 	.word	0x08003fc9
 8003f64:	08003f45 	.word	0x08003f45
 8003f68:	08003f45 	.word	0x08003f45
 8003f6c:	08003f45 	.word	0x08003f45
 8003f70:	08003f45 	.word	0x08003f45
 8003f74:	08003fc9 	.word	0x08003fc9
 8003f78:	08003f45 	.word	0x08003f45
 8003f7c:	08003f45 	.word	0x08003f45
 8003f80:	08003f45 	.word	0x08003f45
 8003f84:	08003f45 	.word	0x08003f45
 8003f88:	080040cd 	.word	0x080040cd
 8003f8c:	08003ff5 	.word	0x08003ff5
 8003f90:	08004087 	.word	0x08004087
 8003f94:	08003f45 	.word	0x08003f45
 8003f98:	08003f45 	.word	0x08003f45
 8003f9c:	080040ef 	.word	0x080040ef
 8003fa0:	08003f45 	.word	0x08003f45
 8003fa4:	08003ff5 	.word	0x08003ff5
 8003fa8:	08003f45 	.word	0x08003f45
 8003fac:	08003f45 	.word	0x08003f45
 8003fb0:	0800408f 	.word	0x0800408f
 8003fb4:	682b      	ldr	r3, [r5, #0]
 8003fb6:	1d1a      	adds	r2, r3, #4
 8003fb8:	681b      	ldr	r3, [r3, #0]
 8003fba:	602a      	str	r2, [r5, #0]
 8003fbc:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8003fc0:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8003fc4:	2301      	movs	r3, #1
 8003fc6:	e09f      	b.n	8004108 <_printf_i+0x1ec>
 8003fc8:	6820      	ldr	r0, [r4, #0]
 8003fca:	682b      	ldr	r3, [r5, #0]
 8003fcc:	0607      	lsls	r7, r0, #24
 8003fce:	f103 0104 	add.w	r1, r3, #4
 8003fd2:	6029      	str	r1, [r5, #0]
 8003fd4:	d501      	bpl.n	8003fda <_printf_i+0xbe>
 8003fd6:	681e      	ldr	r6, [r3, #0]
 8003fd8:	e003      	b.n	8003fe2 <_printf_i+0xc6>
 8003fda:	0646      	lsls	r6, r0, #25
 8003fdc:	d5fb      	bpl.n	8003fd6 <_printf_i+0xba>
 8003fde:	f9b3 6000 	ldrsh.w	r6, [r3]
 8003fe2:	2e00      	cmp	r6, #0
 8003fe4:	da03      	bge.n	8003fee <_printf_i+0xd2>
 8003fe6:	232d      	movs	r3, #45	; 0x2d
 8003fe8:	4276      	negs	r6, r6
 8003fea:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8003fee:	485a      	ldr	r0, [pc, #360]	; (8004158 <_printf_i+0x23c>)
 8003ff0:	230a      	movs	r3, #10
 8003ff2:	e012      	b.n	800401a <_printf_i+0xfe>
 8003ff4:	682b      	ldr	r3, [r5, #0]
 8003ff6:	6820      	ldr	r0, [r4, #0]
 8003ff8:	1d19      	adds	r1, r3, #4
 8003ffa:	6029      	str	r1, [r5, #0]
 8003ffc:	0605      	lsls	r5, r0, #24
 8003ffe:	d501      	bpl.n	8004004 <_printf_i+0xe8>
 8004000:	681e      	ldr	r6, [r3, #0]
 8004002:	e002      	b.n	800400a <_printf_i+0xee>
 8004004:	0641      	lsls	r1, r0, #25
 8004006:	d5fb      	bpl.n	8004000 <_printf_i+0xe4>
 8004008:	881e      	ldrh	r6, [r3, #0]
 800400a:	4853      	ldr	r0, [pc, #332]	; (8004158 <_printf_i+0x23c>)
 800400c:	2f6f      	cmp	r7, #111	; 0x6f
 800400e:	bf0c      	ite	eq
 8004010:	2308      	moveq	r3, #8
 8004012:	230a      	movne	r3, #10
 8004014:	2100      	movs	r1, #0
 8004016:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 800401a:	6865      	ldr	r5, [r4, #4]
 800401c:	60a5      	str	r5, [r4, #8]
 800401e:	2d00      	cmp	r5, #0
 8004020:	bfa2      	ittt	ge
 8004022:	6821      	ldrge	r1, [r4, #0]
 8004024:	f021 0104 	bicge.w	r1, r1, #4
 8004028:	6021      	strge	r1, [r4, #0]
 800402a:	b90e      	cbnz	r6, 8004030 <_printf_i+0x114>
 800402c:	2d00      	cmp	r5, #0
 800402e:	d04b      	beq.n	80040c8 <_printf_i+0x1ac>
 8004030:	4615      	mov	r5, r2
 8004032:	fbb6 f1f3 	udiv	r1, r6, r3
 8004036:	fb03 6711 	mls	r7, r3, r1, r6
 800403a:	5dc7      	ldrb	r7, [r0, r7]
 800403c:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8004040:	4637      	mov	r7, r6
 8004042:	42bb      	cmp	r3, r7
 8004044:	460e      	mov	r6, r1
 8004046:	d9f4      	bls.n	8004032 <_printf_i+0x116>
 8004048:	2b08      	cmp	r3, #8
 800404a:	d10b      	bne.n	8004064 <_printf_i+0x148>
 800404c:	6823      	ldr	r3, [r4, #0]
 800404e:	07de      	lsls	r6, r3, #31
 8004050:	d508      	bpl.n	8004064 <_printf_i+0x148>
 8004052:	6923      	ldr	r3, [r4, #16]
 8004054:	6861      	ldr	r1, [r4, #4]
 8004056:	4299      	cmp	r1, r3
 8004058:	bfde      	ittt	le
 800405a:	2330      	movle	r3, #48	; 0x30
 800405c:	f805 3c01 	strble.w	r3, [r5, #-1]
 8004060:	f105 35ff 	addle.w	r5, r5, #4294967295
 8004064:	1b52      	subs	r2, r2, r5
 8004066:	6122      	str	r2, [r4, #16]
 8004068:	f8cd a000 	str.w	sl, [sp]
 800406c:	464b      	mov	r3, r9
 800406e:	aa03      	add	r2, sp, #12
 8004070:	4621      	mov	r1, r4
 8004072:	4640      	mov	r0, r8
 8004074:	f7ff fee4 	bl	8003e40 <_printf_common>
 8004078:	3001      	adds	r0, #1
 800407a:	d14a      	bne.n	8004112 <_printf_i+0x1f6>
 800407c:	f04f 30ff 	mov.w	r0, #4294967295
 8004080:	b004      	add	sp, #16
 8004082:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8004086:	6823      	ldr	r3, [r4, #0]
 8004088:	f043 0320 	orr.w	r3, r3, #32
 800408c:	6023      	str	r3, [r4, #0]
 800408e:	4833      	ldr	r0, [pc, #204]	; (800415c <_printf_i+0x240>)
 8004090:	2778      	movs	r7, #120	; 0x78
 8004092:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8004096:	6823      	ldr	r3, [r4, #0]
 8004098:	6829      	ldr	r1, [r5, #0]
 800409a:	061f      	lsls	r7, r3, #24
 800409c:	f851 6b04 	ldr.w	r6, [r1], #4
 80040a0:	d402      	bmi.n	80040a8 <_printf_i+0x18c>
 80040a2:	065f      	lsls	r7, r3, #25
 80040a4:	bf48      	it	mi
 80040a6:	b2b6      	uxthmi	r6, r6
 80040a8:	07df      	lsls	r7, r3, #31
 80040aa:	bf48      	it	mi
 80040ac:	f043 0320 	orrmi.w	r3, r3, #32
 80040b0:	6029      	str	r1, [r5, #0]
 80040b2:	bf48      	it	mi
 80040b4:	6023      	strmi	r3, [r4, #0]
 80040b6:	b91e      	cbnz	r6, 80040c0 <_printf_i+0x1a4>
 80040b8:	6823      	ldr	r3, [r4, #0]
 80040ba:	f023 0320 	bic.w	r3, r3, #32
 80040be:	6023      	str	r3, [r4, #0]
 80040c0:	2310      	movs	r3, #16
 80040c2:	e7a7      	b.n	8004014 <_printf_i+0xf8>
 80040c4:	4824      	ldr	r0, [pc, #144]	; (8004158 <_printf_i+0x23c>)
 80040c6:	e7e4      	b.n	8004092 <_printf_i+0x176>
 80040c8:	4615      	mov	r5, r2
 80040ca:	e7bd      	b.n	8004048 <_printf_i+0x12c>
 80040cc:	682b      	ldr	r3, [r5, #0]
 80040ce:	6826      	ldr	r6, [r4, #0]
 80040d0:	6961      	ldr	r1, [r4, #20]
 80040d2:	1d18      	adds	r0, r3, #4
 80040d4:	6028      	str	r0, [r5, #0]
 80040d6:	0635      	lsls	r5, r6, #24
 80040d8:	681b      	ldr	r3, [r3, #0]
 80040da:	d501      	bpl.n	80040e0 <_printf_i+0x1c4>
 80040dc:	6019      	str	r1, [r3, #0]
 80040de:	e002      	b.n	80040e6 <_printf_i+0x1ca>
 80040e0:	0670      	lsls	r0, r6, #25
 80040e2:	d5fb      	bpl.n	80040dc <_printf_i+0x1c0>
 80040e4:	8019      	strh	r1, [r3, #0]
 80040e6:	2300      	movs	r3, #0
 80040e8:	6123      	str	r3, [r4, #16]
 80040ea:	4615      	mov	r5, r2
 80040ec:	e7bc      	b.n	8004068 <_printf_i+0x14c>
 80040ee:	682b      	ldr	r3, [r5, #0]
 80040f0:	1d1a      	adds	r2, r3, #4
 80040f2:	602a      	str	r2, [r5, #0]
 80040f4:	681d      	ldr	r5, [r3, #0]
 80040f6:	6862      	ldr	r2, [r4, #4]
 80040f8:	2100      	movs	r1, #0
 80040fa:	4628      	mov	r0, r5
 80040fc:	f7fc f870 	bl	80001e0 <memchr>
 8004100:	b108      	cbz	r0, 8004106 <_printf_i+0x1ea>
 8004102:	1b40      	subs	r0, r0, r5
 8004104:	6060      	str	r0, [r4, #4]
 8004106:	6863      	ldr	r3, [r4, #4]
 8004108:	6123      	str	r3, [r4, #16]
 800410a:	2300      	movs	r3, #0
 800410c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8004110:	e7aa      	b.n	8004068 <_printf_i+0x14c>
 8004112:	6923      	ldr	r3, [r4, #16]
 8004114:	462a      	mov	r2, r5
 8004116:	4649      	mov	r1, r9
 8004118:	4640      	mov	r0, r8
 800411a:	47d0      	blx	sl
 800411c:	3001      	adds	r0, #1
 800411e:	d0ad      	beq.n	800407c <_printf_i+0x160>
 8004120:	6823      	ldr	r3, [r4, #0]
 8004122:	079b      	lsls	r3, r3, #30
 8004124:	d413      	bmi.n	800414e <_printf_i+0x232>
 8004126:	68e0      	ldr	r0, [r4, #12]
 8004128:	9b03      	ldr	r3, [sp, #12]
 800412a:	4298      	cmp	r0, r3
 800412c:	bfb8      	it	lt
 800412e:	4618      	movlt	r0, r3
 8004130:	e7a6      	b.n	8004080 <_printf_i+0x164>
 8004132:	2301      	movs	r3, #1
 8004134:	4632      	mov	r2, r6
 8004136:	4649      	mov	r1, r9
 8004138:	4640      	mov	r0, r8
 800413a:	47d0      	blx	sl
 800413c:	3001      	adds	r0, #1
 800413e:	d09d      	beq.n	800407c <_printf_i+0x160>
 8004140:	3501      	adds	r5, #1
 8004142:	68e3      	ldr	r3, [r4, #12]
 8004144:	9903      	ldr	r1, [sp, #12]
 8004146:	1a5b      	subs	r3, r3, r1
 8004148:	42ab      	cmp	r3, r5
 800414a:	dcf2      	bgt.n	8004132 <_printf_i+0x216>
 800414c:	e7eb      	b.n	8004126 <_printf_i+0x20a>
 800414e:	2500      	movs	r5, #0
 8004150:	f104 0619 	add.w	r6, r4, #25
 8004154:	e7f5      	b.n	8004142 <_printf_i+0x226>
 8004156:	bf00      	nop
 8004158:	08004509 	.word	0x08004509
 800415c:	0800451a 	.word	0x0800451a

08004160 <memmove>:
 8004160:	4288      	cmp	r0, r1
 8004162:	b510      	push	{r4, lr}
 8004164:	eb01 0402 	add.w	r4, r1, r2
 8004168:	d902      	bls.n	8004170 <memmove+0x10>
 800416a:	4284      	cmp	r4, r0
 800416c:	4623      	mov	r3, r4
 800416e:	d807      	bhi.n	8004180 <memmove+0x20>
 8004170:	1e43      	subs	r3, r0, #1
 8004172:	42a1      	cmp	r1, r4
 8004174:	d008      	beq.n	8004188 <memmove+0x28>
 8004176:	f811 2b01 	ldrb.w	r2, [r1], #1
 800417a:	f803 2f01 	strb.w	r2, [r3, #1]!
 800417e:	e7f8      	b.n	8004172 <memmove+0x12>
 8004180:	4402      	add	r2, r0
 8004182:	4601      	mov	r1, r0
 8004184:	428a      	cmp	r2, r1
 8004186:	d100      	bne.n	800418a <memmove+0x2a>
 8004188:	bd10      	pop	{r4, pc}
 800418a:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 800418e:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8004192:	e7f7      	b.n	8004184 <memmove+0x24>

08004194 <_sbrk_r>:
 8004194:	b538      	push	{r3, r4, r5, lr}
 8004196:	4d06      	ldr	r5, [pc, #24]	; (80041b0 <_sbrk_r+0x1c>)
 8004198:	2300      	movs	r3, #0
 800419a:	4604      	mov	r4, r0
 800419c:	4608      	mov	r0, r1
 800419e:	602b      	str	r3, [r5, #0]
 80041a0:	f7fd fb44 	bl	800182c <_sbrk>
 80041a4:	1c43      	adds	r3, r0, #1
 80041a6:	d102      	bne.n	80041ae <_sbrk_r+0x1a>
 80041a8:	682b      	ldr	r3, [r5, #0]
 80041aa:	b103      	cbz	r3, 80041ae <_sbrk_r+0x1a>
 80041ac:	6023      	str	r3, [r4, #0]
 80041ae:	bd38      	pop	{r3, r4, r5, pc}
 80041b0:	200005d8 	.word	0x200005d8

080041b4 <memcpy>:
 80041b4:	440a      	add	r2, r1
 80041b6:	4291      	cmp	r1, r2
 80041b8:	f100 33ff 	add.w	r3, r0, #4294967295
 80041bc:	d100      	bne.n	80041c0 <memcpy+0xc>
 80041be:	4770      	bx	lr
 80041c0:	b510      	push	{r4, lr}
 80041c2:	f811 4b01 	ldrb.w	r4, [r1], #1
 80041c6:	f803 4f01 	strb.w	r4, [r3, #1]!
 80041ca:	4291      	cmp	r1, r2
 80041cc:	d1f9      	bne.n	80041c2 <memcpy+0xe>
 80041ce:	bd10      	pop	{r4, pc}

080041d0 <_realloc_r>:
 80041d0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80041d4:	4680      	mov	r8, r0
 80041d6:	4614      	mov	r4, r2
 80041d8:	460e      	mov	r6, r1
 80041da:	b921      	cbnz	r1, 80041e6 <_realloc_r+0x16>
 80041dc:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80041e0:	4611      	mov	r1, r2
 80041e2:	f7ff bc49 	b.w	8003a78 <_malloc_r>
 80041e6:	b92a      	cbnz	r2, 80041f4 <_realloc_r+0x24>
 80041e8:	f7ff fbda 	bl	80039a0 <_free_r>
 80041ec:	4625      	mov	r5, r4
 80041ee:	4628      	mov	r0, r5
 80041f0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80041f4:	f000 f81b 	bl	800422e <_malloc_usable_size_r>
 80041f8:	4284      	cmp	r4, r0
 80041fa:	4607      	mov	r7, r0
 80041fc:	d802      	bhi.n	8004204 <_realloc_r+0x34>
 80041fe:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 8004202:	d812      	bhi.n	800422a <_realloc_r+0x5a>
 8004204:	4621      	mov	r1, r4
 8004206:	4640      	mov	r0, r8
 8004208:	f7ff fc36 	bl	8003a78 <_malloc_r>
 800420c:	4605      	mov	r5, r0
 800420e:	2800      	cmp	r0, #0
 8004210:	d0ed      	beq.n	80041ee <_realloc_r+0x1e>
 8004212:	42bc      	cmp	r4, r7
 8004214:	4622      	mov	r2, r4
 8004216:	4631      	mov	r1, r6
 8004218:	bf28      	it	cs
 800421a:	463a      	movcs	r2, r7
 800421c:	f7ff ffca 	bl	80041b4 <memcpy>
 8004220:	4631      	mov	r1, r6
 8004222:	4640      	mov	r0, r8
 8004224:	f7ff fbbc 	bl	80039a0 <_free_r>
 8004228:	e7e1      	b.n	80041ee <_realloc_r+0x1e>
 800422a:	4635      	mov	r5, r6
 800422c:	e7df      	b.n	80041ee <_realloc_r+0x1e>

0800422e <_malloc_usable_size_r>:
 800422e:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8004232:	1f18      	subs	r0, r3, #4
 8004234:	2b00      	cmp	r3, #0
 8004236:	bfbc      	itt	lt
 8004238:	580b      	ldrlt	r3, [r1, r0]
 800423a:	18c0      	addlt	r0, r0, r3
 800423c:	4770      	bx	lr
	...

08004240 <_init>:
 8004240:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004242:	bf00      	nop
 8004244:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8004246:	bc08      	pop	{r3}
 8004248:	469e      	mov	lr, r3
 800424a:	4770      	bx	lr

0800424c <_fini>:
 800424c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800424e:	bf00      	nop
 8004250:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8004252:	bc08      	pop	{r3}
 8004254:	469e      	mov	lr, r3
 8004256:	4770      	bx	lr
