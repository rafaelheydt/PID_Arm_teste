
PID_Arm_teste.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000424c  080001a0  080001a0  000101a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000002d4  080043ec  080043ec  000143ec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080046c0  080046c0  00020094  2**0
                  CONTENTS
  4 .ARM          00000008  080046c0  080046c0  000146c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  080046c8  080046c8  00020094  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080046c8  080046c8  000146c8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080046cc  080046cc  000146cc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000094  20000000  080046d0  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000594  20000094  08004764  00020094  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000628  08004764  00020628  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020094  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  000200c4  2**0
                  CONTENTS, READONLY
 13 .debug_info   0000a891  00000000  00000000  00020107  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00001bc1  00000000  00000000  0002a998  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000b98  00000000  00000000  0002c560  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 000008ff  00000000  00000000  0002d0f8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00017577  00000000  00000000  0002d9f7  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   0000cdaa  00000000  00000000  00044f6e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000979b1  00000000  00000000  00051d18  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  00003584  00000000  00000000  000e96cc  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000043  00000000  00000000  000ecc50  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	; (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	; (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	; (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	20000094 	.word	0x20000094
 80001bc:	00000000 	.word	0x00000000
 80001c0:	080043d4 	.word	0x080043d4

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	; (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	; (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	; (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	20000098 	.word	0x20000098
 80001dc:	080043d4 	.word	0x080043d4

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <__aeabi_uldivmod>:
 8000280:	b953      	cbnz	r3, 8000298 <__aeabi_uldivmod+0x18>
 8000282:	b94a      	cbnz	r2, 8000298 <__aeabi_uldivmod+0x18>
 8000284:	2900      	cmp	r1, #0
 8000286:	bf08      	it	eq
 8000288:	2800      	cmpeq	r0, #0
 800028a:	bf1c      	itt	ne
 800028c:	f04f 31ff 	movne.w	r1, #4294967295
 8000290:	f04f 30ff 	movne.w	r0, #4294967295
 8000294:	f000 b970 	b.w	8000578 <__aeabi_idiv0>
 8000298:	f1ad 0c08 	sub.w	ip, sp, #8
 800029c:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002a0:	f000 f806 	bl	80002b0 <__udivmoddi4>
 80002a4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002a8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002ac:	b004      	add	sp, #16
 80002ae:	4770      	bx	lr

080002b0 <__udivmoddi4>:
 80002b0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002b4:	9e08      	ldr	r6, [sp, #32]
 80002b6:	460d      	mov	r5, r1
 80002b8:	4604      	mov	r4, r0
 80002ba:	460f      	mov	r7, r1
 80002bc:	2b00      	cmp	r3, #0
 80002be:	d14a      	bne.n	8000356 <__udivmoddi4+0xa6>
 80002c0:	428a      	cmp	r2, r1
 80002c2:	4694      	mov	ip, r2
 80002c4:	d965      	bls.n	8000392 <__udivmoddi4+0xe2>
 80002c6:	fab2 f382 	clz	r3, r2
 80002ca:	b143      	cbz	r3, 80002de <__udivmoddi4+0x2e>
 80002cc:	fa02 fc03 	lsl.w	ip, r2, r3
 80002d0:	f1c3 0220 	rsb	r2, r3, #32
 80002d4:	409f      	lsls	r7, r3
 80002d6:	fa20 f202 	lsr.w	r2, r0, r2
 80002da:	4317      	orrs	r7, r2
 80002dc:	409c      	lsls	r4, r3
 80002de:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
 80002e2:	fa1f f58c 	uxth.w	r5, ip
 80002e6:	fbb7 f1fe 	udiv	r1, r7, lr
 80002ea:	0c22      	lsrs	r2, r4, #16
 80002ec:	fb0e 7711 	mls	r7, lr, r1, r7
 80002f0:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
 80002f4:	fb01 f005 	mul.w	r0, r1, r5
 80002f8:	4290      	cmp	r0, r2
 80002fa:	d90a      	bls.n	8000312 <__udivmoddi4+0x62>
 80002fc:	eb1c 0202 	adds.w	r2, ip, r2
 8000300:	f101 37ff 	add.w	r7, r1, #4294967295
 8000304:	f080 811c 	bcs.w	8000540 <__udivmoddi4+0x290>
 8000308:	4290      	cmp	r0, r2
 800030a:	f240 8119 	bls.w	8000540 <__udivmoddi4+0x290>
 800030e:	3902      	subs	r1, #2
 8000310:	4462      	add	r2, ip
 8000312:	1a12      	subs	r2, r2, r0
 8000314:	b2a4      	uxth	r4, r4
 8000316:	fbb2 f0fe 	udiv	r0, r2, lr
 800031a:	fb0e 2210 	mls	r2, lr, r0, r2
 800031e:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8000322:	fb00 f505 	mul.w	r5, r0, r5
 8000326:	42a5      	cmp	r5, r4
 8000328:	d90a      	bls.n	8000340 <__udivmoddi4+0x90>
 800032a:	eb1c 0404 	adds.w	r4, ip, r4
 800032e:	f100 32ff 	add.w	r2, r0, #4294967295
 8000332:	f080 8107 	bcs.w	8000544 <__udivmoddi4+0x294>
 8000336:	42a5      	cmp	r5, r4
 8000338:	f240 8104 	bls.w	8000544 <__udivmoddi4+0x294>
 800033c:	4464      	add	r4, ip
 800033e:	3802      	subs	r0, #2
 8000340:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000344:	1b64      	subs	r4, r4, r5
 8000346:	2100      	movs	r1, #0
 8000348:	b11e      	cbz	r6, 8000352 <__udivmoddi4+0xa2>
 800034a:	40dc      	lsrs	r4, r3
 800034c:	2300      	movs	r3, #0
 800034e:	e9c6 4300 	strd	r4, r3, [r6]
 8000352:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000356:	428b      	cmp	r3, r1
 8000358:	d908      	bls.n	800036c <__udivmoddi4+0xbc>
 800035a:	2e00      	cmp	r6, #0
 800035c:	f000 80ed 	beq.w	800053a <__udivmoddi4+0x28a>
 8000360:	2100      	movs	r1, #0
 8000362:	e9c6 0500 	strd	r0, r5, [r6]
 8000366:	4608      	mov	r0, r1
 8000368:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800036c:	fab3 f183 	clz	r1, r3
 8000370:	2900      	cmp	r1, #0
 8000372:	d149      	bne.n	8000408 <__udivmoddi4+0x158>
 8000374:	42ab      	cmp	r3, r5
 8000376:	d302      	bcc.n	800037e <__udivmoddi4+0xce>
 8000378:	4282      	cmp	r2, r0
 800037a:	f200 80f8 	bhi.w	800056e <__udivmoddi4+0x2be>
 800037e:	1a84      	subs	r4, r0, r2
 8000380:	eb65 0203 	sbc.w	r2, r5, r3
 8000384:	2001      	movs	r0, #1
 8000386:	4617      	mov	r7, r2
 8000388:	2e00      	cmp	r6, #0
 800038a:	d0e2      	beq.n	8000352 <__udivmoddi4+0xa2>
 800038c:	e9c6 4700 	strd	r4, r7, [r6]
 8000390:	e7df      	b.n	8000352 <__udivmoddi4+0xa2>
 8000392:	b902      	cbnz	r2, 8000396 <__udivmoddi4+0xe6>
 8000394:	deff      	udf	#255	; 0xff
 8000396:	fab2 f382 	clz	r3, r2
 800039a:	2b00      	cmp	r3, #0
 800039c:	f040 8090 	bne.w	80004c0 <__udivmoddi4+0x210>
 80003a0:	1a8a      	subs	r2, r1, r2
 80003a2:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80003a6:	fa1f fe8c 	uxth.w	lr, ip
 80003aa:	2101      	movs	r1, #1
 80003ac:	fbb2 f5f7 	udiv	r5, r2, r7
 80003b0:	fb07 2015 	mls	r0, r7, r5, r2
 80003b4:	0c22      	lsrs	r2, r4, #16
 80003b6:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 80003ba:	fb0e f005 	mul.w	r0, lr, r5
 80003be:	4290      	cmp	r0, r2
 80003c0:	d908      	bls.n	80003d4 <__udivmoddi4+0x124>
 80003c2:	eb1c 0202 	adds.w	r2, ip, r2
 80003c6:	f105 38ff 	add.w	r8, r5, #4294967295
 80003ca:	d202      	bcs.n	80003d2 <__udivmoddi4+0x122>
 80003cc:	4290      	cmp	r0, r2
 80003ce:	f200 80cb 	bhi.w	8000568 <__udivmoddi4+0x2b8>
 80003d2:	4645      	mov	r5, r8
 80003d4:	1a12      	subs	r2, r2, r0
 80003d6:	b2a4      	uxth	r4, r4
 80003d8:	fbb2 f0f7 	udiv	r0, r2, r7
 80003dc:	fb07 2210 	mls	r2, r7, r0, r2
 80003e0:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 80003e4:	fb0e fe00 	mul.w	lr, lr, r0
 80003e8:	45a6      	cmp	lr, r4
 80003ea:	d908      	bls.n	80003fe <__udivmoddi4+0x14e>
 80003ec:	eb1c 0404 	adds.w	r4, ip, r4
 80003f0:	f100 32ff 	add.w	r2, r0, #4294967295
 80003f4:	d202      	bcs.n	80003fc <__udivmoddi4+0x14c>
 80003f6:	45a6      	cmp	lr, r4
 80003f8:	f200 80bb 	bhi.w	8000572 <__udivmoddi4+0x2c2>
 80003fc:	4610      	mov	r0, r2
 80003fe:	eba4 040e 	sub.w	r4, r4, lr
 8000402:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 8000406:	e79f      	b.n	8000348 <__udivmoddi4+0x98>
 8000408:	f1c1 0720 	rsb	r7, r1, #32
 800040c:	408b      	lsls	r3, r1
 800040e:	fa22 fc07 	lsr.w	ip, r2, r7
 8000412:	ea4c 0c03 	orr.w	ip, ip, r3
 8000416:	fa05 f401 	lsl.w	r4, r5, r1
 800041a:	fa20 f307 	lsr.w	r3, r0, r7
 800041e:	40fd      	lsrs	r5, r7
 8000420:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8000424:	4323      	orrs	r3, r4
 8000426:	fbb5 f8f9 	udiv	r8, r5, r9
 800042a:	fa1f fe8c 	uxth.w	lr, ip
 800042e:	fb09 5518 	mls	r5, r9, r8, r5
 8000432:	0c1c      	lsrs	r4, r3, #16
 8000434:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 8000438:	fb08 f50e 	mul.w	r5, r8, lr
 800043c:	42a5      	cmp	r5, r4
 800043e:	fa02 f201 	lsl.w	r2, r2, r1
 8000442:	fa00 f001 	lsl.w	r0, r0, r1
 8000446:	d90b      	bls.n	8000460 <__udivmoddi4+0x1b0>
 8000448:	eb1c 0404 	adds.w	r4, ip, r4
 800044c:	f108 3aff 	add.w	sl, r8, #4294967295
 8000450:	f080 8088 	bcs.w	8000564 <__udivmoddi4+0x2b4>
 8000454:	42a5      	cmp	r5, r4
 8000456:	f240 8085 	bls.w	8000564 <__udivmoddi4+0x2b4>
 800045a:	f1a8 0802 	sub.w	r8, r8, #2
 800045e:	4464      	add	r4, ip
 8000460:	1b64      	subs	r4, r4, r5
 8000462:	b29d      	uxth	r5, r3
 8000464:	fbb4 f3f9 	udiv	r3, r4, r9
 8000468:	fb09 4413 	mls	r4, r9, r3, r4
 800046c:	ea45 4404 	orr.w	r4, r5, r4, lsl #16
 8000470:	fb03 fe0e 	mul.w	lr, r3, lr
 8000474:	45a6      	cmp	lr, r4
 8000476:	d908      	bls.n	800048a <__udivmoddi4+0x1da>
 8000478:	eb1c 0404 	adds.w	r4, ip, r4
 800047c:	f103 35ff 	add.w	r5, r3, #4294967295
 8000480:	d26c      	bcs.n	800055c <__udivmoddi4+0x2ac>
 8000482:	45a6      	cmp	lr, r4
 8000484:	d96a      	bls.n	800055c <__udivmoddi4+0x2ac>
 8000486:	3b02      	subs	r3, #2
 8000488:	4464      	add	r4, ip
 800048a:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 800048e:	fba3 9502 	umull	r9, r5, r3, r2
 8000492:	eba4 040e 	sub.w	r4, r4, lr
 8000496:	42ac      	cmp	r4, r5
 8000498:	46c8      	mov	r8, r9
 800049a:	46ae      	mov	lr, r5
 800049c:	d356      	bcc.n	800054c <__udivmoddi4+0x29c>
 800049e:	d053      	beq.n	8000548 <__udivmoddi4+0x298>
 80004a0:	b156      	cbz	r6, 80004b8 <__udivmoddi4+0x208>
 80004a2:	ebb0 0208 	subs.w	r2, r0, r8
 80004a6:	eb64 040e 	sbc.w	r4, r4, lr
 80004aa:	fa04 f707 	lsl.w	r7, r4, r7
 80004ae:	40ca      	lsrs	r2, r1
 80004b0:	40cc      	lsrs	r4, r1
 80004b2:	4317      	orrs	r7, r2
 80004b4:	e9c6 7400 	strd	r7, r4, [r6]
 80004b8:	4618      	mov	r0, r3
 80004ba:	2100      	movs	r1, #0
 80004bc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80004c0:	f1c3 0120 	rsb	r1, r3, #32
 80004c4:	fa02 fc03 	lsl.w	ip, r2, r3
 80004c8:	fa20 f201 	lsr.w	r2, r0, r1
 80004cc:	fa25 f101 	lsr.w	r1, r5, r1
 80004d0:	409d      	lsls	r5, r3
 80004d2:	432a      	orrs	r2, r5
 80004d4:	ea4f 471c 	mov.w	r7, ip, lsr #16
 80004d8:	fa1f fe8c 	uxth.w	lr, ip
 80004dc:	fbb1 f0f7 	udiv	r0, r1, r7
 80004e0:	fb07 1510 	mls	r5, r7, r0, r1
 80004e4:	0c11      	lsrs	r1, r2, #16
 80004e6:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 80004ea:	fb00 f50e 	mul.w	r5, r0, lr
 80004ee:	428d      	cmp	r5, r1
 80004f0:	fa04 f403 	lsl.w	r4, r4, r3
 80004f4:	d908      	bls.n	8000508 <__udivmoddi4+0x258>
 80004f6:	eb1c 0101 	adds.w	r1, ip, r1
 80004fa:	f100 38ff 	add.w	r8, r0, #4294967295
 80004fe:	d22f      	bcs.n	8000560 <__udivmoddi4+0x2b0>
 8000500:	428d      	cmp	r5, r1
 8000502:	d92d      	bls.n	8000560 <__udivmoddi4+0x2b0>
 8000504:	3802      	subs	r0, #2
 8000506:	4461      	add	r1, ip
 8000508:	1b49      	subs	r1, r1, r5
 800050a:	b292      	uxth	r2, r2
 800050c:	fbb1 f5f7 	udiv	r5, r1, r7
 8000510:	fb07 1115 	mls	r1, r7, r5, r1
 8000514:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000518:	fb05 f10e 	mul.w	r1, r5, lr
 800051c:	4291      	cmp	r1, r2
 800051e:	d908      	bls.n	8000532 <__udivmoddi4+0x282>
 8000520:	eb1c 0202 	adds.w	r2, ip, r2
 8000524:	f105 38ff 	add.w	r8, r5, #4294967295
 8000528:	d216      	bcs.n	8000558 <__udivmoddi4+0x2a8>
 800052a:	4291      	cmp	r1, r2
 800052c:	d914      	bls.n	8000558 <__udivmoddi4+0x2a8>
 800052e:	3d02      	subs	r5, #2
 8000530:	4462      	add	r2, ip
 8000532:	1a52      	subs	r2, r2, r1
 8000534:	ea45 4100 	orr.w	r1, r5, r0, lsl #16
 8000538:	e738      	b.n	80003ac <__udivmoddi4+0xfc>
 800053a:	4631      	mov	r1, r6
 800053c:	4630      	mov	r0, r6
 800053e:	e708      	b.n	8000352 <__udivmoddi4+0xa2>
 8000540:	4639      	mov	r1, r7
 8000542:	e6e6      	b.n	8000312 <__udivmoddi4+0x62>
 8000544:	4610      	mov	r0, r2
 8000546:	e6fb      	b.n	8000340 <__udivmoddi4+0x90>
 8000548:	4548      	cmp	r0, r9
 800054a:	d2a9      	bcs.n	80004a0 <__udivmoddi4+0x1f0>
 800054c:	ebb9 0802 	subs.w	r8, r9, r2
 8000550:	eb65 0e0c 	sbc.w	lr, r5, ip
 8000554:	3b01      	subs	r3, #1
 8000556:	e7a3      	b.n	80004a0 <__udivmoddi4+0x1f0>
 8000558:	4645      	mov	r5, r8
 800055a:	e7ea      	b.n	8000532 <__udivmoddi4+0x282>
 800055c:	462b      	mov	r3, r5
 800055e:	e794      	b.n	800048a <__udivmoddi4+0x1da>
 8000560:	4640      	mov	r0, r8
 8000562:	e7d1      	b.n	8000508 <__udivmoddi4+0x258>
 8000564:	46d0      	mov	r8, sl
 8000566:	e77b      	b.n	8000460 <__udivmoddi4+0x1b0>
 8000568:	3d02      	subs	r5, #2
 800056a:	4462      	add	r2, ip
 800056c:	e732      	b.n	80003d4 <__udivmoddi4+0x124>
 800056e:	4608      	mov	r0, r1
 8000570:	e70a      	b.n	8000388 <__udivmoddi4+0xd8>
 8000572:	4464      	add	r4, ip
 8000574:	3802      	subs	r0, #2
 8000576:	e742      	b.n	80003fe <__udivmoddi4+0x14e>

08000578 <__aeabi_idiv0>:
 8000578:	4770      	bx	lr
 800057a:	bf00      	nop

0800057c <LCD_setRST>:
 800057c:	b480      	push	{r7}
 800057e:	b083      	sub	sp, #12
 8000580:	af00      	add	r7, sp, #0
 8000582:	6078      	str	r0, [r7, #4]
 8000584:	460b      	mov	r3, r1
 8000586:	807b      	strh	r3, [r7, #2]
 8000588:	4a05      	ldr	r2, [pc, #20]	; (80005a0 <LCD_setRST+0x24>)
 800058a:	687b      	ldr	r3, [r7, #4]
 800058c:	6013      	str	r3, [r2, #0]
 800058e:	4a04      	ldr	r2, [pc, #16]	; (80005a0 <LCD_setRST+0x24>)
 8000590:	887b      	ldrh	r3, [r7, #2]
 8000592:	8093      	strh	r3, [r2, #4]
 8000594:	bf00      	nop
 8000596:	370c      	adds	r7, #12
 8000598:	46bd      	mov	sp, r7
 800059a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800059e:	4770      	bx	lr
 80005a0:	200002ac 	.word	0x200002ac

080005a4 <LCD_setCE>:
 80005a4:	b480      	push	{r7}
 80005a6:	b083      	sub	sp, #12
 80005a8:	af00      	add	r7, sp, #0
 80005aa:	6078      	str	r0, [r7, #4]
 80005ac:	460b      	mov	r3, r1
 80005ae:	807b      	strh	r3, [r7, #2]
 80005b0:	4a05      	ldr	r2, [pc, #20]	; (80005c8 <LCD_setCE+0x24>)
 80005b2:	687b      	ldr	r3, [r7, #4]
 80005b4:	6093      	str	r3, [r2, #8]
 80005b6:	4a04      	ldr	r2, [pc, #16]	; (80005c8 <LCD_setCE+0x24>)
 80005b8:	887b      	ldrh	r3, [r7, #2]
 80005ba:	8193      	strh	r3, [r2, #12]
 80005bc:	bf00      	nop
 80005be:	370c      	adds	r7, #12
 80005c0:	46bd      	mov	sp, r7
 80005c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005c6:	4770      	bx	lr
 80005c8:	200002ac 	.word	0x200002ac

080005cc <LCD_setDC>:
 80005cc:	b480      	push	{r7}
 80005ce:	b083      	sub	sp, #12
 80005d0:	af00      	add	r7, sp, #0
 80005d2:	6078      	str	r0, [r7, #4]
 80005d4:	460b      	mov	r3, r1
 80005d6:	807b      	strh	r3, [r7, #2]
 80005d8:	4a05      	ldr	r2, [pc, #20]	; (80005f0 <LCD_setDC+0x24>)
 80005da:	687b      	ldr	r3, [r7, #4]
 80005dc:	6113      	str	r3, [r2, #16]
 80005de:	4a04      	ldr	r2, [pc, #16]	; (80005f0 <LCD_setDC+0x24>)
 80005e0:	887b      	ldrh	r3, [r7, #2]
 80005e2:	8293      	strh	r3, [r2, #20]
 80005e4:	bf00      	nop
 80005e6:	370c      	adds	r7, #12
 80005e8:	46bd      	mov	sp, r7
 80005ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005ee:	4770      	bx	lr
 80005f0:	200002ac 	.word	0x200002ac

080005f4 <LCD_setDIN>:
 80005f4:	b480      	push	{r7}
 80005f6:	b083      	sub	sp, #12
 80005f8:	af00      	add	r7, sp, #0
 80005fa:	6078      	str	r0, [r7, #4]
 80005fc:	460b      	mov	r3, r1
 80005fe:	807b      	strh	r3, [r7, #2]
 8000600:	4a05      	ldr	r2, [pc, #20]	; (8000618 <LCD_setDIN+0x24>)
 8000602:	687b      	ldr	r3, [r7, #4]
 8000604:	6193      	str	r3, [r2, #24]
 8000606:	4a04      	ldr	r2, [pc, #16]	; (8000618 <LCD_setDIN+0x24>)
 8000608:	887b      	ldrh	r3, [r7, #2]
 800060a:	8393      	strh	r3, [r2, #28]
 800060c:	bf00      	nop
 800060e:	370c      	adds	r7, #12
 8000610:	46bd      	mov	sp, r7
 8000612:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000616:	4770      	bx	lr
 8000618:	200002ac 	.word	0x200002ac

0800061c <LCD_setCLK>:
 800061c:	b480      	push	{r7}
 800061e:	b083      	sub	sp, #12
 8000620:	af00      	add	r7, sp, #0
 8000622:	6078      	str	r0, [r7, #4]
 8000624:	460b      	mov	r3, r1
 8000626:	807b      	strh	r3, [r7, #2]
 8000628:	4a05      	ldr	r2, [pc, #20]	; (8000640 <LCD_setCLK+0x24>)
 800062a:	687b      	ldr	r3, [r7, #4]
 800062c:	6213      	str	r3, [r2, #32]
 800062e:	4a04      	ldr	r2, [pc, #16]	; (8000640 <LCD_setCLK+0x24>)
 8000630:	887b      	ldrh	r3, [r7, #2]
 8000632:	8493      	strh	r3, [r2, #36]	; 0x24
 8000634:	bf00      	nop
 8000636:	370c      	adds	r7, #12
 8000638:	46bd      	mov	sp, r7
 800063a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800063e:	4770      	bx	lr
 8000640:	200002ac 	.word	0x200002ac

08000644 <LCD_send>:
 8000644:	b580      	push	{r7, lr}
 8000646:	b084      	sub	sp, #16
 8000648:	af00      	add	r7, sp, #0
 800064a:	4603      	mov	r3, r0
 800064c:	71fb      	strb	r3, [r7, #7]
 800064e:	2300      	movs	r3, #0
 8000650:	73fb      	strb	r3, [r7, #15]
 8000652:	e026      	b.n	80006a2 <LCD_send+0x5e>
 8000654:	4b17      	ldr	r3, [pc, #92]	; (80006b4 <LCD_send+0x70>)
 8000656:	6998      	ldr	r0, [r3, #24]
 8000658:	4b16      	ldr	r3, [pc, #88]	; (80006b4 <LCD_send+0x70>)
 800065a:	8b99      	ldrh	r1, [r3, #28]
 800065c:	79fa      	ldrb	r2, [r7, #7]
 800065e:	7bfb      	ldrb	r3, [r7, #15]
 8000660:	f1c3 0307 	rsb	r3, r3, #7
 8000664:	fa42 f303 	asr.w	r3, r2, r3
 8000668:	f003 0301 	and.w	r3, r3, #1
 800066c:	2b00      	cmp	r3, #0
 800066e:	bf14      	ite	ne
 8000670:	2301      	movne	r3, #1
 8000672:	2300      	moveq	r3, #0
 8000674:	b2db      	uxtb	r3, r3
 8000676:	461a      	mov	r2, r3
 8000678:	f002 f8fe 	bl	8002878 <HAL_GPIO_WritePin>
 800067c:	4b0d      	ldr	r3, [pc, #52]	; (80006b4 <LCD_send+0x70>)
 800067e:	6a1b      	ldr	r3, [r3, #32]
 8000680:	4a0c      	ldr	r2, [pc, #48]	; (80006b4 <LCD_send+0x70>)
 8000682:	8c91      	ldrh	r1, [r2, #36]	; 0x24
 8000684:	2201      	movs	r2, #1
 8000686:	4618      	mov	r0, r3
 8000688:	f002 f8f6 	bl	8002878 <HAL_GPIO_WritePin>
 800068c:	4b09      	ldr	r3, [pc, #36]	; (80006b4 <LCD_send+0x70>)
 800068e:	6a1b      	ldr	r3, [r3, #32]
 8000690:	4a08      	ldr	r2, [pc, #32]	; (80006b4 <LCD_send+0x70>)
 8000692:	8c91      	ldrh	r1, [r2, #36]	; 0x24
 8000694:	2200      	movs	r2, #0
 8000696:	4618      	mov	r0, r3
 8000698:	f002 f8ee 	bl	8002878 <HAL_GPIO_WritePin>
 800069c:	7bfb      	ldrb	r3, [r7, #15]
 800069e:	3301      	adds	r3, #1
 80006a0:	73fb      	strb	r3, [r7, #15]
 80006a2:	7bfb      	ldrb	r3, [r7, #15]
 80006a4:	2b07      	cmp	r3, #7
 80006a6:	d9d5      	bls.n	8000654 <LCD_send+0x10>
 80006a8:	bf00      	nop
 80006aa:	bf00      	nop
 80006ac:	3710      	adds	r7, #16
 80006ae:	46bd      	mov	sp, r7
 80006b0:	bd80      	pop	{r7, pc}
 80006b2:	bf00      	nop
 80006b4:	200002ac 	.word	0x200002ac

080006b8 <LCD_write>:
 80006b8:	b580      	push	{r7, lr}
 80006ba:	b082      	sub	sp, #8
 80006bc:	af00      	add	r7, sp, #0
 80006be:	4603      	mov	r3, r0
 80006c0:	460a      	mov	r2, r1
 80006c2:	71fb      	strb	r3, [r7, #7]
 80006c4:	4613      	mov	r3, r2
 80006c6:	71bb      	strb	r3, [r7, #6]
 80006c8:	79bb      	ldrb	r3, [r7, #6]
 80006ca:	2b00      	cmp	r3, #0
 80006cc:	d11c      	bne.n	8000708 <LCD_write+0x50>
 80006ce:	4b1e      	ldr	r3, [pc, #120]	; (8000748 <LCD_write+0x90>)
 80006d0:	691b      	ldr	r3, [r3, #16]
 80006d2:	4a1d      	ldr	r2, [pc, #116]	; (8000748 <LCD_write+0x90>)
 80006d4:	8a91      	ldrh	r1, [r2, #20]
 80006d6:	2200      	movs	r2, #0
 80006d8:	4618      	mov	r0, r3
 80006da:	f002 f8cd 	bl	8002878 <HAL_GPIO_WritePin>
 80006de:	4b1a      	ldr	r3, [pc, #104]	; (8000748 <LCD_write+0x90>)
 80006e0:	689b      	ldr	r3, [r3, #8]
 80006e2:	4a19      	ldr	r2, [pc, #100]	; (8000748 <LCD_write+0x90>)
 80006e4:	8991      	ldrh	r1, [r2, #12]
 80006e6:	2200      	movs	r2, #0
 80006e8:	4618      	mov	r0, r3
 80006ea:	f002 f8c5 	bl	8002878 <HAL_GPIO_WritePin>
 80006ee:	79fb      	ldrb	r3, [r7, #7]
 80006f0:	4618      	mov	r0, r3
 80006f2:	f7ff ffa7 	bl	8000644 <LCD_send>
 80006f6:	4b14      	ldr	r3, [pc, #80]	; (8000748 <LCD_write+0x90>)
 80006f8:	689b      	ldr	r3, [r3, #8]
 80006fa:	4a13      	ldr	r2, [pc, #76]	; (8000748 <LCD_write+0x90>)
 80006fc:	8991      	ldrh	r1, [r2, #12]
 80006fe:	2201      	movs	r2, #1
 8000700:	4618      	mov	r0, r3
 8000702:	f002 f8b9 	bl	8002878 <HAL_GPIO_WritePin>
 8000706:	e01b      	b.n	8000740 <LCD_write+0x88>
 8000708:	4b0f      	ldr	r3, [pc, #60]	; (8000748 <LCD_write+0x90>)
 800070a:	691b      	ldr	r3, [r3, #16]
 800070c:	4a0e      	ldr	r2, [pc, #56]	; (8000748 <LCD_write+0x90>)
 800070e:	8a91      	ldrh	r1, [r2, #20]
 8000710:	2201      	movs	r2, #1
 8000712:	4618      	mov	r0, r3
 8000714:	f002 f8b0 	bl	8002878 <HAL_GPIO_WritePin>
 8000718:	4b0b      	ldr	r3, [pc, #44]	; (8000748 <LCD_write+0x90>)
 800071a:	689b      	ldr	r3, [r3, #8]
 800071c:	4a0a      	ldr	r2, [pc, #40]	; (8000748 <LCD_write+0x90>)
 800071e:	8991      	ldrh	r1, [r2, #12]
 8000720:	2200      	movs	r2, #0
 8000722:	4618      	mov	r0, r3
 8000724:	f002 f8a8 	bl	8002878 <HAL_GPIO_WritePin>
 8000728:	79fb      	ldrb	r3, [r7, #7]
 800072a:	4618      	mov	r0, r3
 800072c:	f7ff ff8a 	bl	8000644 <LCD_send>
 8000730:	4b05      	ldr	r3, [pc, #20]	; (8000748 <LCD_write+0x90>)
 8000732:	689b      	ldr	r3, [r3, #8]
 8000734:	4a04      	ldr	r2, [pc, #16]	; (8000748 <LCD_write+0x90>)
 8000736:	8991      	ldrh	r1, [r2, #12]
 8000738:	2201      	movs	r2, #1
 800073a:	4618      	mov	r0, r3
 800073c:	f002 f89c 	bl	8002878 <HAL_GPIO_WritePin>
 8000740:	bf00      	nop
 8000742:	3708      	adds	r7, #8
 8000744:	46bd      	mov	sp, r7
 8000746:	bd80      	pop	{r7, pc}
 8000748:	200002ac 	.word	0x200002ac

0800074c <LCD_init>:
 800074c:	b580      	push	{r7, lr}
 800074e:	af00      	add	r7, sp, #0
 8000750:	4b17      	ldr	r3, [pc, #92]	; (80007b0 <LCD_init+0x64>)
 8000752:	681b      	ldr	r3, [r3, #0]
 8000754:	4a16      	ldr	r2, [pc, #88]	; (80007b0 <LCD_init+0x64>)
 8000756:	8891      	ldrh	r1, [r2, #4]
 8000758:	2200      	movs	r2, #0
 800075a:	4618      	mov	r0, r3
 800075c:	f002 f88c 	bl	8002878 <HAL_GPIO_WritePin>
 8000760:	4b13      	ldr	r3, [pc, #76]	; (80007b0 <LCD_init+0x64>)
 8000762:	681b      	ldr	r3, [r3, #0]
 8000764:	4a12      	ldr	r2, [pc, #72]	; (80007b0 <LCD_init+0x64>)
 8000766:	8891      	ldrh	r1, [r2, #4]
 8000768:	2201      	movs	r2, #1
 800076a:	4618      	mov	r0, r3
 800076c:	f002 f884 	bl	8002878 <HAL_GPIO_WritePin>
 8000770:	2100      	movs	r1, #0
 8000772:	2021      	movs	r0, #33	; 0x21
 8000774:	f7ff ffa0 	bl	80006b8 <LCD_write>
 8000778:	2100      	movs	r1, #0
 800077a:	20b8      	movs	r0, #184	; 0xb8
 800077c:	f7ff ff9c 	bl	80006b8 <LCD_write>
 8000780:	2100      	movs	r1, #0
 8000782:	2004      	movs	r0, #4
 8000784:	f7ff ff98 	bl	80006b8 <LCD_write>
 8000788:	2100      	movs	r1, #0
 800078a:	2014      	movs	r0, #20
 800078c:	f7ff ff94 	bl	80006b8 <LCD_write>
 8000790:	2100      	movs	r1, #0
 8000792:	2020      	movs	r0, #32
 8000794:	f7ff ff90 	bl	80006b8 <LCD_write>
 8000798:	2100      	movs	r1, #0
 800079a:	200c      	movs	r0, #12
 800079c:	f7ff ff8c 	bl	80006b8 <LCD_write>
 80007a0:	f000 f86c 	bl	800087c <LCD_clrScr>
 80007a4:	4b03      	ldr	r3, [pc, #12]	; (80007b4 <LCD_init+0x68>)
 80007a6:	2200      	movs	r2, #0
 80007a8:	f883 21f8 	strb.w	r2, [r3, #504]	; 0x1f8
 80007ac:	bf00      	nop
 80007ae:	bd80      	pop	{r7, pc}
 80007b0:	200002ac 	.word	0x200002ac
 80007b4:	200000b0 	.word	0x200000b0

080007b8 <LCD_putChar>:
 80007b8:	b580      	push	{r7, lr}
 80007ba:	b084      	sub	sp, #16
 80007bc:	af00      	add	r7, sp, #0
 80007be:	4603      	mov	r3, r0
 80007c0:	71fb      	strb	r3, [r7, #7]
 80007c2:	2300      	movs	r3, #0
 80007c4:	60fb      	str	r3, [r7, #12]
 80007c6:	e02d      	b.n	8000824 <LCD_putChar+0x6c>
 80007c8:	4b1a      	ldr	r3, [pc, #104]	; (8000834 <LCD_putChar+0x7c>)
 80007ca:	f893 31f8 	ldrb.w	r3, [r3, #504]	; 0x1f8
 80007ce:	f083 0301 	eor.w	r3, r3, #1
 80007d2:	b2db      	uxtb	r3, r3
 80007d4:	2b00      	cmp	r3, #0
 80007d6:	d010      	beq.n	80007fa <LCD_putChar+0x42>
 80007d8:	79fb      	ldrb	r3, [r7, #7]
 80007da:	f1a3 0220 	sub.w	r2, r3, #32
 80007de:	4916      	ldr	r1, [pc, #88]	; (8000838 <LCD_putChar+0x80>)
 80007e0:	4613      	mov	r3, r2
 80007e2:	005b      	lsls	r3, r3, #1
 80007e4:	4413      	add	r3, r2
 80007e6:	005b      	lsls	r3, r3, #1
 80007e8:	18ca      	adds	r2, r1, r3
 80007ea:	68fb      	ldr	r3, [r7, #12]
 80007ec:	4413      	add	r3, r2
 80007ee:	781b      	ldrb	r3, [r3, #0]
 80007f0:	2101      	movs	r1, #1
 80007f2:	4618      	mov	r0, r3
 80007f4:	f7ff ff60 	bl	80006b8 <LCD_write>
 80007f8:	e011      	b.n	800081e <LCD_putChar+0x66>
 80007fa:	79fb      	ldrb	r3, [r7, #7]
 80007fc:	f1a3 0220 	sub.w	r2, r3, #32
 8000800:	490d      	ldr	r1, [pc, #52]	; (8000838 <LCD_putChar+0x80>)
 8000802:	4613      	mov	r3, r2
 8000804:	005b      	lsls	r3, r3, #1
 8000806:	4413      	add	r3, r2
 8000808:	005b      	lsls	r3, r3, #1
 800080a:	18ca      	adds	r2, r1, r3
 800080c:	68fb      	ldr	r3, [r7, #12]
 800080e:	4413      	add	r3, r2
 8000810:	781b      	ldrb	r3, [r3, #0]
 8000812:	43db      	mvns	r3, r3
 8000814:	b2db      	uxtb	r3, r3
 8000816:	2101      	movs	r1, #1
 8000818:	4618      	mov	r0, r3
 800081a:	f7ff ff4d 	bl	80006b8 <LCD_write>
 800081e:	68fb      	ldr	r3, [r7, #12]
 8000820:	3301      	adds	r3, #1
 8000822:	60fb      	str	r3, [r7, #12]
 8000824:	68fb      	ldr	r3, [r7, #12]
 8000826:	2b05      	cmp	r3, #5
 8000828:	ddce      	ble.n	80007c8 <LCD_putChar+0x10>
 800082a:	bf00      	nop
 800082c:	bf00      	nop
 800082e:	3710      	adds	r7, #16
 8000830:	46bd      	mov	sp, r7
 8000832:	bd80      	pop	{r7, pc}
 8000834:	200000b0 	.word	0x200000b0
 8000838:	0800442c 	.word	0x0800442c

0800083c <LCD_print>:
 800083c:	b580      	push	{r7, lr}
 800083e:	b082      	sub	sp, #8
 8000840:	af00      	add	r7, sp, #0
 8000842:	6078      	str	r0, [r7, #4]
 8000844:	460b      	mov	r3, r1
 8000846:	70fb      	strb	r3, [r7, #3]
 8000848:	4613      	mov	r3, r2
 800084a:	70bb      	strb	r3, [r7, #2]
 800084c:	78ba      	ldrb	r2, [r7, #2]
 800084e:	78fb      	ldrb	r3, [r7, #3]
 8000850:	4611      	mov	r1, r2
 8000852:	4618      	mov	r0, r3
 8000854:	f000 f830 	bl	80008b8 <LCD_goXY>
 8000858:	e006      	b.n	8000868 <LCD_print+0x2c>
 800085a:	687b      	ldr	r3, [r7, #4]
 800085c:	1c5a      	adds	r2, r3, #1
 800085e:	607a      	str	r2, [r7, #4]
 8000860:	781b      	ldrb	r3, [r3, #0]
 8000862:	4618      	mov	r0, r3
 8000864:	f7ff ffa8 	bl	80007b8 <LCD_putChar>
 8000868:	687b      	ldr	r3, [r7, #4]
 800086a:	781b      	ldrb	r3, [r3, #0]
 800086c:	2b00      	cmp	r3, #0
 800086e:	d1f4      	bne.n	800085a <LCD_print+0x1e>
 8000870:	bf00      	nop
 8000872:	bf00      	nop
 8000874:	3708      	adds	r7, #8
 8000876:	46bd      	mov	sp, r7
 8000878:	bd80      	pop	{r7, pc}
	...

0800087c <LCD_clrScr>:
 800087c:	b580      	push	{r7, lr}
 800087e:	b082      	sub	sp, #8
 8000880:	af00      	add	r7, sp, #0
 8000882:	2300      	movs	r3, #0
 8000884:	607b      	str	r3, [r7, #4]
 8000886:	e00b      	b.n	80008a0 <LCD_clrScr+0x24>
 8000888:	2101      	movs	r1, #1
 800088a:	2000      	movs	r0, #0
 800088c:	f7ff ff14 	bl	80006b8 <LCD_write>
 8000890:	4a08      	ldr	r2, [pc, #32]	; (80008b4 <LCD_clrScr+0x38>)
 8000892:	687b      	ldr	r3, [r7, #4]
 8000894:	4413      	add	r3, r2
 8000896:	2200      	movs	r2, #0
 8000898:	701a      	strb	r2, [r3, #0]
 800089a:	687b      	ldr	r3, [r7, #4]
 800089c:	3301      	adds	r3, #1
 800089e:	607b      	str	r3, [r7, #4]
 80008a0:	687b      	ldr	r3, [r7, #4]
 80008a2:	f5b3 7ffc 	cmp.w	r3, #504	; 0x1f8
 80008a6:	dbef      	blt.n	8000888 <LCD_clrScr+0xc>
 80008a8:	bf00      	nop
 80008aa:	bf00      	nop
 80008ac:	3708      	adds	r7, #8
 80008ae:	46bd      	mov	sp, r7
 80008b0:	bd80      	pop	{r7, pc}
 80008b2:	bf00      	nop
 80008b4:	200000b0 	.word	0x200000b0

080008b8 <LCD_goXY>:
 80008b8:	b580      	push	{r7, lr}
 80008ba:	b082      	sub	sp, #8
 80008bc:	af00      	add	r7, sp, #0
 80008be:	4603      	mov	r3, r0
 80008c0:	460a      	mov	r2, r1
 80008c2:	71fb      	strb	r3, [r7, #7]
 80008c4:	4613      	mov	r3, r2
 80008c6:	71bb      	strb	r3, [r7, #6]
 80008c8:	79fb      	ldrb	r3, [r7, #7]
 80008ca:	f063 037f 	orn	r3, r3, #127	; 0x7f
 80008ce:	b2db      	uxtb	r3, r3
 80008d0:	2100      	movs	r1, #0
 80008d2:	4618      	mov	r0, r3
 80008d4:	f7ff fef0 	bl	80006b8 <LCD_write>
 80008d8:	79bb      	ldrb	r3, [r7, #6]
 80008da:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80008de:	b2db      	uxtb	r3, r3
 80008e0:	2100      	movs	r1, #0
 80008e2:	4618      	mov	r0, r3
 80008e4:	f7ff fee8 	bl	80006b8 <LCD_write>
 80008e8:	bf00      	nop
 80008ea:	3708      	adds	r7, #8
 80008ec:	46bd      	mov	sp, r7
 80008ee:	bd80      	pop	{r7, pc}

080008f0 <HAL_GPIO_EXTI_Callback>:

uint8_t estado = 0;


void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
{
 80008f0:	b580      	push	{r7, lr}
 80008f2:	b082      	sub	sp, #8
 80008f4:	af00      	add	r7, sp, #0
 80008f6:	4603      	mov	r3, r0
 80008f8:	80fb      	strh	r3, [r7, #6]
	if(GPIO_Pin == BOT1_Pin) // Ações ao apertar o botão 1
 80008fa:	88fb      	ldrh	r3, [r7, #6]
 80008fc:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8000900:	d104      	bne.n	800090c <HAL_GPIO_EXTI_Callback+0x1c>
	{
		LCD_clrScr();
 8000902:	f7ff ffbb 	bl	800087c <LCD_clrScr>
		estado = 1;
 8000906:	4b07      	ldr	r3, [pc, #28]	; (8000924 <HAL_GPIO_EXTI_Callback+0x34>)
 8000908:	2201      	movs	r2, #1
 800090a:	701a      	strb	r2, [r3, #0]


	}
	if(GPIO_Pin == BOT2_Pin) // Ações ao apertar botão 2
 800090c:	88fb      	ldrh	r3, [r7, #6]
 800090e:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8000912:	d102      	bne.n	800091a <HAL_GPIO_EXTI_Callback+0x2a>
	{
		estado = 2;
 8000914:	4b03      	ldr	r3, [pc, #12]	; (8000924 <HAL_GPIO_EXTI_Callback+0x34>)
 8000916:	2202      	movs	r2, #2
 8000918:	701a      	strb	r2, [r3, #0]
	}
}
 800091a:	bf00      	nop
 800091c:	3708      	adds	r7, #8
 800091e:	46bd      	mov	sp, r7
 8000920:	bd80      	pop	{r7, pc}
 8000922:	bf00      	nop
 8000924:	200004d4 	.word	0x200004d4

08000928 <selecionarPinoMux>:

void selecionarPinoMux(int pino)
{
 8000928:	b580      	push	{r7, lr}
 800092a:	b084      	sub	sp, #16
 800092c:	af00      	add	r7, sp, #0
 800092e:	6078      	str	r0, [r7, #4]
	for(int i =0;i<4;i++)
 8000930:	2300      	movs	r3, #0
 8000932:	60fb      	str	r3, [r7, #12]
 8000934:	e040      	b.n	80009b8 <selecionarPinoMux+0x90>
	{
		if(i == 0)
 8000936:	68fb      	ldr	r3, [r7, #12]
 8000938:	2b00      	cmp	r3, #0
 800093a:	d11d      	bne.n	8000978 <selecionarPinoMux+0x50>
		{
			if(pino & (1<<i))
 800093c:	687a      	ldr	r2, [r7, #4]
 800093e:	68fb      	ldr	r3, [r7, #12]
 8000940:	fa42 f303 	asr.w	r3, r2, r3
 8000944:	f003 0301 	and.w	r3, r3, #1
 8000948:	2b00      	cmp	r3, #0
 800094a:	d00a      	beq.n	8000962 <selecionarPinoMux+0x3a>
			{
				HAL_GPIO_WritePin(GPIOC, selecionarPino[i], GPIO_PIN_SET);
 800094c:	4a1e      	ldr	r2, [pc, #120]	; (80009c8 <selecionarPinoMux+0xa0>)
 800094e:	68fb      	ldr	r3, [r7, #12]
 8000950:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8000954:	b29b      	uxth	r3, r3
 8000956:	2201      	movs	r2, #1
 8000958:	4619      	mov	r1, r3
 800095a:	481c      	ldr	r0, [pc, #112]	; (80009cc <selecionarPinoMux+0xa4>)
 800095c:	f001 ff8c 	bl	8002878 <HAL_GPIO_WritePin>
 8000960:	e027      	b.n	80009b2 <selecionarPinoMux+0x8a>
			}
			else
			{
				HAL_GPIO_WritePin(GPIOC, selecionarPino[i], GPIO_PIN_RESET);
 8000962:	4a19      	ldr	r2, [pc, #100]	; (80009c8 <selecionarPinoMux+0xa0>)
 8000964:	68fb      	ldr	r3, [r7, #12]
 8000966:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800096a:	b29b      	uxth	r3, r3
 800096c:	2200      	movs	r2, #0
 800096e:	4619      	mov	r1, r3
 8000970:	4816      	ldr	r0, [pc, #88]	; (80009cc <selecionarPinoMux+0xa4>)
 8000972:	f001 ff81 	bl	8002878 <HAL_GPIO_WritePin>
 8000976:	e01c      	b.n	80009b2 <selecionarPinoMux+0x8a>
			}
		}
		else
		{
			if(pino & (1<<i))
 8000978:	687a      	ldr	r2, [r7, #4]
 800097a:	68fb      	ldr	r3, [r7, #12]
 800097c:	fa42 f303 	asr.w	r3, r2, r3
 8000980:	f003 0301 	and.w	r3, r3, #1
 8000984:	2b00      	cmp	r3, #0
 8000986:	d00a      	beq.n	800099e <selecionarPinoMux+0x76>
			{
				HAL_GPIO_WritePin(GPIOA, selecionarPino[i], GPIO_PIN_SET);
 8000988:	4a0f      	ldr	r2, [pc, #60]	; (80009c8 <selecionarPinoMux+0xa0>)
 800098a:	68fb      	ldr	r3, [r7, #12]
 800098c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8000990:	b29b      	uxth	r3, r3
 8000992:	2201      	movs	r2, #1
 8000994:	4619      	mov	r1, r3
 8000996:	480e      	ldr	r0, [pc, #56]	; (80009d0 <selecionarPinoMux+0xa8>)
 8000998:	f001 ff6e 	bl	8002878 <HAL_GPIO_WritePin>
 800099c:	e009      	b.n	80009b2 <selecionarPinoMux+0x8a>
			}
			else
			{
				HAL_GPIO_WritePin(GPIOA, selecionarPino[i], GPIO_PIN_RESET);
 800099e:	4a0a      	ldr	r2, [pc, #40]	; (80009c8 <selecionarPinoMux+0xa0>)
 80009a0:	68fb      	ldr	r3, [r7, #12]
 80009a2:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80009a6:	b29b      	uxth	r3, r3
 80009a8:	2200      	movs	r2, #0
 80009aa:	4619      	mov	r1, r3
 80009ac:	4808      	ldr	r0, [pc, #32]	; (80009d0 <selecionarPinoMux+0xa8>)
 80009ae:	f001 ff63 	bl	8002878 <HAL_GPIO_WritePin>
	for(int i =0;i<4;i++)
 80009b2:	68fb      	ldr	r3, [r7, #12]
 80009b4:	3301      	adds	r3, #1
 80009b6:	60fb      	str	r3, [r7, #12]
 80009b8:	68fb      	ldr	r3, [r7, #12]
 80009ba:	2b03      	cmp	r3, #3
 80009bc:	ddbb      	ble.n	8000936 <selecionarPinoMux+0xe>
			}
		}

	}
}
 80009be:	bf00      	nop
 80009c0:	bf00      	nop
 80009c2:	3710      	adds	r7, #16
 80009c4:	46bd      	mov	sp, r7
 80009c6:	bd80      	pop	{r7, pc}
 80009c8:	0800466c 	.word	0x0800466c
 80009cc:	40020800 	.word	0x40020800
 80009d0:	40020000 	.word	0x40020000

080009d4 <calibrarBranco>:

void calibrarBranco() // Função de Medir a cor Branca
{
 80009d4:	b580      	push	{r7, lr}
 80009d6:	b084      	sub	sp, #16
 80009d8:	af00      	add	r7, sp, #0
	for(int i = 0; i<6; i++)
 80009da:	2300      	movs	r3, #0
 80009dc:	60fb      	str	r3, [r7, #12]
 80009de:	e018      	b.n	8000a12 <calibrarBranco+0x3e>
	{
			selecionarPinoMux(i);
 80009e0:	68f8      	ldr	r0, [r7, #12]
 80009e2:	f7ff ffa1 	bl	8000928 <selecionarPinoMux>
			HAL_ADC_Start(&hadc1);
 80009e6:	482d      	ldr	r0, [pc, #180]	; (8000a9c <calibrarBranco+0xc8>)
 80009e8:	f001 f936 	bl	8001c58 <HAL_ADC_Start>
			HAL_ADC_PollForConversion(&hadc1, HAL_MAX_DELAY);
 80009ec:	f04f 31ff 	mov.w	r1, #4294967295
 80009f0:	482a      	ldr	r0, [pc, #168]	; (8000a9c <calibrarBranco+0xc8>)
 80009f2:	f001 f9e5 	bl	8001dc0 <HAL_ADC_PollForConversion>
			corBranco[5-i] = HAL_ADC_GetValue(&hadc1);
 80009f6:	4829      	ldr	r0, [pc, #164]	; (8000a9c <calibrarBranco+0xc8>)
 80009f8:	f001 fa6d 	bl	8001ed6 <HAL_ADC_GetValue>
 80009fc:	4602      	mov	r2, r0
 80009fe:	68fb      	ldr	r3, [r7, #12]
 8000a00:	f1c3 0305 	rsb	r3, r3, #5
 8000a04:	b291      	uxth	r1, r2
 8000a06:	4a26      	ldr	r2, [pc, #152]	; (8000aa0 <calibrarBranco+0xcc>)
 8000a08:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
	for(int i = 0; i<6; i++)
 8000a0c:	68fb      	ldr	r3, [r7, #12]
 8000a0e:	3301      	adds	r3, #1
 8000a10:	60fb      	str	r3, [r7, #12]
 8000a12:	68fb      	ldr	r3, [r7, #12]
 8000a14:	2b05      	cmp	r3, #5
 8000a16:	dde3      	ble.n	80009e0 <calibrarBranco+0xc>
	}
	for(int j = 10; j<16; j++ )
 8000a18:	230a      	movs	r3, #10
 8000a1a:	60bb      	str	r3, [r7, #8]
 8000a1c:	e018      	b.n	8000a50 <calibrarBranco+0x7c>
	{
		selecionarPinoMux(j);
 8000a1e:	68b8      	ldr	r0, [r7, #8]
 8000a20:	f7ff ff82 	bl	8000928 <selecionarPinoMux>
		HAL_ADC_Start(&hadc1);
 8000a24:	481d      	ldr	r0, [pc, #116]	; (8000a9c <calibrarBranco+0xc8>)
 8000a26:	f001 f917 	bl	8001c58 <HAL_ADC_Start>
		HAL_ADC_PollForConversion(&hadc1, HAL_MAX_DELAY);
 8000a2a:	f04f 31ff 	mov.w	r1, #4294967295
 8000a2e:	481b      	ldr	r0, [pc, #108]	; (8000a9c <calibrarBranco+0xc8>)
 8000a30:	f001 f9c6 	bl	8001dc0 <HAL_ADC_PollForConversion>
		corBranco[25-j] = HAL_ADC_GetValue(&hadc1);
 8000a34:	4819      	ldr	r0, [pc, #100]	; (8000a9c <calibrarBranco+0xc8>)
 8000a36:	f001 fa4e 	bl	8001ed6 <HAL_ADC_GetValue>
 8000a3a:	4602      	mov	r2, r0
 8000a3c:	68bb      	ldr	r3, [r7, #8]
 8000a3e:	f1c3 0319 	rsb	r3, r3, #25
 8000a42:	b291      	uxth	r1, r2
 8000a44:	4a16      	ldr	r2, [pc, #88]	; (8000aa0 <calibrarBranco+0xcc>)
 8000a46:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
	for(int j = 10; j<16; j++ )
 8000a4a:	68bb      	ldr	r3, [r7, #8]
 8000a4c:	3301      	adds	r3, #1
 8000a4e:	60bb      	str	r3, [r7, #8]
 8000a50:	68bb      	ldr	r3, [r7, #8]
 8000a52:	2b0f      	cmp	r3, #15
 8000a54:	dde3      	ble.n	8000a1e <calibrarBranco+0x4a>
	}
	for(int k = 6; k<10; k++)
 8000a56:	2306      	movs	r3, #6
 8000a58:	607b      	str	r3, [r7, #4]
 8000a5a:	e016      	b.n	8000a8a <calibrarBranco+0xb6>
	{
		selecionarPinoMux(k);
 8000a5c:	6878      	ldr	r0, [r7, #4]
 8000a5e:	f7ff ff63 	bl	8000928 <selecionarPinoMux>
		HAL_ADC_Start(&hadc1);
 8000a62:	480e      	ldr	r0, [pc, #56]	; (8000a9c <calibrarBranco+0xc8>)
 8000a64:	f001 f8f8 	bl	8001c58 <HAL_ADC_Start>
		HAL_ADC_PollForConversion(&hadc1, HAL_MAX_DELAY);
 8000a68:	f04f 31ff 	mov.w	r1, #4294967295
 8000a6c:	480b      	ldr	r0, [pc, #44]	; (8000a9c <calibrarBranco+0xc8>)
 8000a6e:	f001 f9a7 	bl	8001dc0 <HAL_ADC_PollForConversion>
		corBranco[k] = HAL_ADC_GetValue(&hadc1);
 8000a72:	480a      	ldr	r0, [pc, #40]	; (8000a9c <calibrarBranco+0xc8>)
 8000a74:	f001 fa2f 	bl	8001ed6 <HAL_ADC_GetValue>
 8000a78:	4603      	mov	r3, r0
 8000a7a:	b299      	uxth	r1, r3
 8000a7c:	4a08      	ldr	r2, [pc, #32]	; (8000aa0 <calibrarBranco+0xcc>)
 8000a7e:	687b      	ldr	r3, [r7, #4]
 8000a80:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
	for(int k = 6; k<10; k++)
 8000a84:	687b      	ldr	r3, [r7, #4]
 8000a86:	3301      	adds	r3, #1
 8000a88:	607b      	str	r3, [r7, #4]
 8000a8a:	687b      	ldr	r3, [r7, #4]
 8000a8c:	2b09      	cmp	r3, #9
 8000a8e:	dde5      	ble.n	8000a5c <calibrarBranco+0x88>
	}
}
 8000a90:	bf00      	nop
 8000a92:	bf00      	nop
 8000a94:	3710      	adds	r7, #16
 8000a96:	46bd      	mov	sp, r7
 8000a98:	bd80      	pop	{r7, pc}
 8000a9a:	bf00      	nop
 8000a9c:	200002d4 	.word	0x200002d4
 8000aa0:	2000040c 	.word	0x2000040c

08000aa4 <calibrarPreto>:

void calibrarPreto() // Função de medir a cor Preta
{
 8000aa4:	b580      	push	{r7, lr}
 8000aa6:	b084      	sub	sp, #16
 8000aa8:	af00      	add	r7, sp, #0
	for(int i = 0; i<6; i++)
 8000aaa:	2300      	movs	r3, #0
 8000aac:	60fb      	str	r3, [r7, #12]
 8000aae:	e018      	b.n	8000ae2 <calibrarPreto+0x3e>
	{
		selecionarPinoMux(i);
 8000ab0:	68f8      	ldr	r0, [r7, #12]
 8000ab2:	f7ff ff39 	bl	8000928 <selecionarPinoMux>
		HAL_ADC_Start(&hadc1);
 8000ab6:	482d      	ldr	r0, [pc, #180]	; (8000b6c <calibrarPreto+0xc8>)
 8000ab8:	f001 f8ce 	bl	8001c58 <HAL_ADC_Start>
		HAL_ADC_PollForConversion(&hadc1, HAL_MAX_DELAY);
 8000abc:	f04f 31ff 	mov.w	r1, #4294967295
 8000ac0:	482a      	ldr	r0, [pc, #168]	; (8000b6c <calibrarPreto+0xc8>)
 8000ac2:	f001 f97d 	bl	8001dc0 <HAL_ADC_PollForConversion>
		corPreto[5-i] = HAL_ADC_GetValue(&hadc1);
 8000ac6:	4829      	ldr	r0, [pc, #164]	; (8000b6c <calibrarPreto+0xc8>)
 8000ac8:	f001 fa05 	bl	8001ed6 <HAL_ADC_GetValue>
 8000acc:	4602      	mov	r2, r0
 8000ace:	68fb      	ldr	r3, [r7, #12]
 8000ad0:	f1c3 0305 	rsb	r3, r3, #5
 8000ad4:	b291      	uxth	r1, r2
 8000ad6:	4a26      	ldr	r2, [pc, #152]	; (8000b70 <calibrarPreto+0xcc>)
 8000ad8:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
	for(int i = 0; i<6; i++)
 8000adc:	68fb      	ldr	r3, [r7, #12]
 8000ade:	3301      	adds	r3, #1
 8000ae0:	60fb      	str	r3, [r7, #12]
 8000ae2:	68fb      	ldr	r3, [r7, #12]
 8000ae4:	2b05      	cmp	r3, #5
 8000ae6:	dde3      	ble.n	8000ab0 <calibrarPreto+0xc>
	}
	for(int j = 10; j<16; j++ )
 8000ae8:	230a      	movs	r3, #10
 8000aea:	60bb      	str	r3, [r7, #8]
 8000aec:	e018      	b.n	8000b20 <calibrarPreto+0x7c>
	{
		selecionarPinoMux(j);
 8000aee:	68b8      	ldr	r0, [r7, #8]
 8000af0:	f7ff ff1a 	bl	8000928 <selecionarPinoMux>
		HAL_ADC_Start(&hadc1);
 8000af4:	481d      	ldr	r0, [pc, #116]	; (8000b6c <calibrarPreto+0xc8>)
 8000af6:	f001 f8af 	bl	8001c58 <HAL_ADC_Start>
		HAL_ADC_PollForConversion(&hadc1, HAL_MAX_DELAY);
 8000afa:	f04f 31ff 	mov.w	r1, #4294967295
 8000afe:	481b      	ldr	r0, [pc, #108]	; (8000b6c <calibrarPreto+0xc8>)
 8000b00:	f001 f95e 	bl	8001dc0 <HAL_ADC_PollForConversion>
		corPreto[25-j] = HAL_ADC_GetValue(&hadc1);
 8000b04:	4819      	ldr	r0, [pc, #100]	; (8000b6c <calibrarPreto+0xc8>)
 8000b06:	f001 f9e6 	bl	8001ed6 <HAL_ADC_GetValue>
 8000b0a:	4602      	mov	r2, r0
 8000b0c:	68bb      	ldr	r3, [r7, #8]
 8000b0e:	f1c3 0319 	rsb	r3, r3, #25
 8000b12:	b291      	uxth	r1, r2
 8000b14:	4a16      	ldr	r2, [pc, #88]	; (8000b70 <calibrarPreto+0xcc>)
 8000b16:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
	for(int j = 10; j<16; j++ )
 8000b1a:	68bb      	ldr	r3, [r7, #8]
 8000b1c:	3301      	adds	r3, #1
 8000b1e:	60bb      	str	r3, [r7, #8]
 8000b20:	68bb      	ldr	r3, [r7, #8]
 8000b22:	2b0f      	cmp	r3, #15
 8000b24:	dde3      	ble.n	8000aee <calibrarPreto+0x4a>
	}
	for(int k = 6; k<10; k++)
 8000b26:	2306      	movs	r3, #6
 8000b28:	607b      	str	r3, [r7, #4]
 8000b2a:	e016      	b.n	8000b5a <calibrarPreto+0xb6>
	{
		selecionarPinoMux(k);
 8000b2c:	6878      	ldr	r0, [r7, #4]
 8000b2e:	f7ff fefb 	bl	8000928 <selecionarPinoMux>
		HAL_ADC_Start(&hadc1);
 8000b32:	480e      	ldr	r0, [pc, #56]	; (8000b6c <calibrarPreto+0xc8>)
 8000b34:	f001 f890 	bl	8001c58 <HAL_ADC_Start>
		HAL_ADC_PollForConversion(&hadc1, HAL_MAX_DELAY);
 8000b38:	f04f 31ff 	mov.w	r1, #4294967295
 8000b3c:	480b      	ldr	r0, [pc, #44]	; (8000b6c <calibrarPreto+0xc8>)
 8000b3e:	f001 f93f 	bl	8001dc0 <HAL_ADC_PollForConversion>
		corPreto[k] = HAL_ADC_GetValue(&hadc1);
 8000b42:	480a      	ldr	r0, [pc, #40]	; (8000b6c <calibrarPreto+0xc8>)
 8000b44:	f001 f9c7 	bl	8001ed6 <HAL_ADC_GetValue>
 8000b48:	4603      	mov	r3, r0
 8000b4a:	b299      	uxth	r1, r3
 8000b4c:	4a08      	ldr	r2, [pc, #32]	; (8000b70 <calibrarPreto+0xcc>)
 8000b4e:	687b      	ldr	r3, [r7, #4]
 8000b50:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
	for(int k = 6; k<10; k++)
 8000b54:	687b      	ldr	r3, [r7, #4]
 8000b56:	3301      	adds	r3, #1
 8000b58:	607b      	str	r3, [r7, #4]
 8000b5a:	687b      	ldr	r3, [r7, #4]
 8000b5c:	2b09      	cmp	r3, #9
 8000b5e:	dde5      	ble.n	8000b2c <calibrarPreto+0x88>
	}
}
 8000b60:	bf00      	nop
 8000b62:	bf00      	nop
 8000b64:	3710      	adds	r7, #16
 8000b66:	46bd      	mov	sp, r7
 8000b68:	bd80      	pop	{r7, pc}
 8000b6a:	bf00      	nop
 8000b6c:	200002d4 	.word	0x200002d4
 8000b70:	2000042c 	.word	0x2000042c

08000b74 <calcularMediaSensores>:

void calcularMediaSensores() // Calculo Média das cores para calibração dos sensores
{
 8000b74:	b480      	push	{r7}
 8000b76:	b083      	sub	sp, #12
 8000b78:	af00      	add	r7, sp, #0
	for(int i = 0;i<16;i++)
 8000b7a:	2300      	movs	r3, #0
 8000b7c:	607b      	str	r3, [r7, #4]
 8000b7e:	e014      	b.n	8000baa <calcularMediaSensores+0x36>
	{
		mediaPB[i] = (corPreto[i]+ corBranco[i])/2;
 8000b80:	4a0f      	ldr	r2, [pc, #60]	; (8000bc0 <calcularMediaSensores+0x4c>)
 8000b82:	687b      	ldr	r3, [r7, #4]
 8000b84:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8000b88:	4619      	mov	r1, r3
 8000b8a:	4a0e      	ldr	r2, [pc, #56]	; (8000bc4 <calcularMediaSensores+0x50>)
 8000b8c:	687b      	ldr	r3, [r7, #4]
 8000b8e:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 8000b92:	440b      	add	r3, r1
 8000b94:	0fda      	lsrs	r2, r3, #31
 8000b96:	4413      	add	r3, r2
 8000b98:	105b      	asrs	r3, r3, #1
 8000b9a:	b299      	uxth	r1, r3
 8000b9c:	4a0a      	ldr	r2, [pc, #40]	; (8000bc8 <calcularMediaSensores+0x54>)
 8000b9e:	687b      	ldr	r3, [r7, #4]
 8000ba0:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
	for(int i = 0;i<16;i++)
 8000ba4:	687b      	ldr	r3, [r7, #4]
 8000ba6:	3301      	adds	r3, #1
 8000ba8:	607b      	str	r3, [r7, #4]
 8000baa:	687b      	ldr	r3, [r7, #4]
 8000bac:	2b0f      	cmp	r3, #15
 8000bae:	dde7      	ble.n	8000b80 <calcularMediaSensores+0xc>
	}
}
 8000bb0:	bf00      	nop
 8000bb2:	bf00      	nop
 8000bb4:	370c      	adds	r7, #12
 8000bb6:	46bd      	mov	sp, r7
 8000bb8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000bbc:	4770      	bx	lr
 8000bbe:	bf00      	nop
 8000bc0:	2000042c 	.word	0x2000042c
 8000bc4:	2000040c 	.word	0x2000040c
 8000bc8:	2000044c 	.word	0x2000044c

08000bcc <aplicarCalibracao>:

void aplicarCalibracao() // Determina os valores digitais dos sensores apos calibração
{
 8000bcc:	b580      	push	{r7, lr}
 8000bce:	b084      	sub	sp, #16
 8000bd0:	af00      	add	r7, sp, #0
	for(int i = 0; i<6; i++)
 8000bd2:	2300      	movs	r3, #0
 8000bd4:	60fb      	str	r3, [r7, #12]
 8000bd6:	e05a      	b.n	8000c8e <aplicarCalibracao+0xc2>
	{
		selecionarPinoMux(i);
 8000bd8:	68f8      	ldr	r0, [r7, #12]
 8000bda:	f7ff fea5 	bl	8000928 <selecionarPinoMux>
		HAL_ADC_Start(&hadc1);
 8000bde:	4888      	ldr	r0, [pc, #544]	; (8000e00 <aplicarCalibracao+0x234>)
 8000be0:	f001 f83a 	bl	8001c58 <HAL_ADC_Start>
		HAL_ADC_PollForConversion(&hadc1, HAL_MAX_DELAY);
 8000be4:	f04f 31ff 	mov.w	r1, #4294967295
 8000be8:	4885      	ldr	r0, [pc, #532]	; (8000e00 <aplicarCalibracao+0x234>)
 8000bea:	f001 f8e9 	bl	8001dc0 <HAL_ADC_PollForConversion>
		valorSensor[5-i] = HAL_ADC_GetValue(&hadc1);
 8000bee:	4884      	ldr	r0, [pc, #528]	; (8000e00 <aplicarCalibracao+0x234>)
 8000bf0:	f001 f971 	bl	8001ed6 <HAL_ADC_GetValue>
 8000bf4:	4602      	mov	r2, r0
 8000bf6:	68fb      	ldr	r3, [r7, #12]
 8000bf8:	f1c3 0305 	rsb	r3, r3, #5
 8000bfc:	b291      	uxth	r1, r2
 8000bfe:	4a81      	ldr	r2, [pc, #516]	; (8000e04 <aplicarCalibracao+0x238>)
 8000c00:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
		if(linha == 0)
 8000c04:	4b80      	ldr	r3, [pc, #512]	; (8000e08 <aplicarCalibracao+0x23c>)
 8000c06:	681b      	ldr	r3, [r3, #0]
 8000c08:	2b00      	cmp	r3, #0
 8000c0a:	d11c      	bne.n	8000c46 <aplicarCalibracao+0x7a>
		{
			if(valorSensor[5-i] <= mediaPB[5-i])
 8000c0c:	68fb      	ldr	r3, [r7, #12]
 8000c0e:	f1c3 0305 	rsb	r3, r3, #5
 8000c12:	4a7c      	ldr	r2, [pc, #496]	; (8000e04 <aplicarCalibracao+0x238>)
 8000c14:	f832 2013 	ldrh.w	r2, [r2, r3, lsl #1]
 8000c18:	68fb      	ldr	r3, [r7, #12]
 8000c1a:	f1c3 0305 	rsb	r3, r3, #5
 8000c1e:	497b      	ldr	r1, [pc, #492]	; (8000e0c <aplicarCalibracao+0x240>)
 8000c20:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8000c24:	429a      	cmp	r2, r3
 8000c26:	d807      	bhi.n	8000c38 <aplicarCalibracao+0x6c>
			{
				sensorDigital[5-i] = 0;
 8000c28:	68fb      	ldr	r3, [r7, #12]
 8000c2a:	f1c3 0305 	rsb	r3, r3, #5
 8000c2e:	4a78      	ldr	r2, [pc, #480]	; (8000e10 <aplicarCalibracao+0x244>)
 8000c30:	2100      	movs	r1, #0
 8000c32:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
 8000c36:	e006      	b.n	8000c46 <aplicarCalibracao+0x7a>
			}
			else
			{
				sensorDigital[5-i] = 1;
 8000c38:	68fb      	ldr	r3, [r7, #12]
 8000c3a:	f1c3 0305 	rsb	r3, r3, #5
 8000c3e:	4a74      	ldr	r2, [pc, #464]	; (8000e10 <aplicarCalibracao+0x244>)
 8000c40:	2101      	movs	r1, #1
 8000c42:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
			}
		}
		if(linha == 1)
 8000c46:	4b70      	ldr	r3, [pc, #448]	; (8000e08 <aplicarCalibracao+0x23c>)
 8000c48:	681b      	ldr	r3, [r3, #0]
 8000c4a:	2b01      	cmp	r3, #1
 8000c4c:	d11c      	bne.n	8000c88 <aplicarCalibracao+0xbc>
		{
			if(valorSensor[5-i] <= mediaPB[5-i])
 8000c4e:	68fb      	ldr	r3, [r7, #12]
 8000c50:	f1c3 0305 	rsb	r3, r3, #5
 8000c54:	4a6b      	ldr	r2, [pc, #428]	; (8000e04 <aplicarCalibracao+0x238>)
 8000c56:	f832 2013 	ldrh.w	r2, [r2, r3, lsl #1]
 8000c5a:	68fb      	ldr	r3, [r7, #12]
 8000c5c:	f1c3 0305 	rsb	r3, r3, #5
 8000c60:	496a      	ldr	r1, [pc, #424]	; (8000e0c <aplicarCalibracao+0x240>)
 8000c62:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8000c66:	429a      	cmp	r2, r3
 8000c68:	d807      	bhi.n	8000c7a <aplicarCalibracao+0xae>
			{
				sensorDigital[5-i] = 1;
 8000c6a:	68fb      	ldr	r3, [r7, #12]
 8000c6c:	f1c3 0305 	rsb	r3, r3, #5
 8000c70:	4a67      	ldr	r2, [pc, #412]	; (8000e10 <aplicarCalibracao+0x244>)
 8000c72:	2101      	movs	r1, #1
 8000c74:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
 8000c78:	e006      	b.n	8000c88 <aplicarCalibracao+0xbc>
			}
			else
			{
				sensorDigital[5-i] = 0;
 8000c7a:	68fb      	ldr	r3, [r7, #12]
 8000c7c:	f1c3 0305 	rsb	r3, r3, #5
 8000c80:	4a63      	ldr	r2, [pc, #396]	; (8000e10 <aplicarCalibracao+0x244>)
 8000c82:	2100      	movs	r1, #0
 8000c84:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
	for(int i = 0; i<6; i++)
 8000c88:	68fb      	ldr	r3, [r7, #12]
 8000c8a:	3301      	adds	r3, #1
 8000c8c:	60fb      	str	r3, [r7, #12]
 8000c8e:	68fb      	ldr	r3, [r7, #12]
 8000c90:	2b05      	cmp	r3, #5
 8000c92:	dda1      	ble.n	8000bd8 <aplicarCalibracao+0xc>
			}
		}
	}
	for(int j = 10; j<16; j++ )
 8000c94:	230a      	movs	r3, #10
 8000c96:	60bb      	str	r3, [r7, #8]
 8000c98:	e05a      	b.n	8000d50 <aplicarCalibracao+0x184>
	{
		selecionarPinoMux(j);
 8000c9a:	68b8      	ldr	r0, [r7, #8]
 8000c9c:	f7ff fe44 	bl	8000928 <selecionarPinoMux>
		HAL_ADC_Start(&hadc1);
 8000ca0:	4857      	ldr	r0, [pc, #348]	; (8000e00 <aplicarCalibracao+0x234>)
 8000ca2:	f000 ffd9 	bl	8001c58 <HAL_ADC_Start>
		HAL_ADC_PollForConversion(&hadc1, HAL_MAX_DELAY);
 8000ca6:	f04f 31ff 	mov.w	r1, #4294967295
 8000caa:	4855      	ldr	r0, [pc, #340]	; (8000e00 <aplicarCalibracao+0x234>)
 8000cac:	f001 f888 	bl	8001dc0 <HAL_ADC_PollForConversion>
		valorSensor[25-j] = HAL_ADC_GetValue(&hadc1);
 8000cb0:	4853      	ldr	r0, [pc, #332]	; (8000e00 <aplicarCalibracao+0x234>)
 8000cb2:	f001 f910 	bl	8001ed6 <HAL_ADC_GetValue>
 8000cb6:	4602      	mov	r2, r0
 8000cb8:	68bb      	ldr	r3, [r7, #8]
 8000cba:	f1c3 0319 	rsb	r3, r3, #25
 8000cbe:	b291      	uxth	r1, r2
 8000cc0:	4a50      	ldr	r2, [pc, #320]	; (8000e04 <aplicarCalibracao+0x238>)
 8000cc2:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
		if(linha == 0)
 8000cc6:	4b50      	ldr	r3, [pc, #320]	; (8000e08 <aplicarCalibracao+0x23c>)
 8000cc8:	681b      	ldr	r3, [r3, #0]
 8000cca:	2b00      	cmp	r3, #0
 8000ccc:	d11c      	bne.n	8000d08 <aplicarCalibracao+0x13c>
		{
			if(valorSensor[25-j] <= mediaPB[25-j])
 8000cce:	68bb      	ldr	r3, [r7, #8]
 8000cd0:	f1c3 0319 	rsb	r3, r3, #25
 8000cd4:	4a4b      	ldr	r2, [pc, #300]	; (8000e04 <aplicarCalibracao+0x238>)
 8000cd6:	f832 2013 	ldrh.w	r2, [r2, r3, lsl #1]
 8000cda:	68bb      	ldr	r3, [r7, #8]
 8000cdc:	f1c3 0319 	rsb	r3, r3, #25
 8000ce0:	494a      	ldr	r1, [pc, #296]	; (8000e0c <aplicarCalibracao+0x240>)
 8000ce2:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8000ce6:	429a      	cmp	r2, r3
 8000ce8:	d807      	bhi.n	8000cfa <aplicarCalibracao+0x12e>
			{
				sensorDigital[25-j] = 0;
 8000cea:	68bb      	ldr	r3, [r7, #8]
 8000cec:	f1c3 0319 	rsb	r3, r3, #25
 8000cf0:	4a47      	ldr	r2, [pc, #284]	; (8000e10 <aplicarCalibracao+0x244>)
 8000cf2:	2100      	movs	r1, #0
 8000cf4:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
 8000cf8:	e006      	b.n	8000d08 <aplicarCalibracao+0x13c>
			}
			else
			{
				sensorDigital[25-j] = 1;
 8000cfa:	68bb      	ldr	r3, [r7, #8]
 8000cfc:	f1c3 0319 	rsb	r3, r3, #25
 8000d00:	4a43      	ldr	r2, [pc, #268]	; (8000e10 <aplicarCalibracao+0x244>)
 8000d02:	2101      	movs	r1, #1
 8000d04:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
			}
		}
		if(linha == 1)
 8000d08:	4b3f      	ldr	r3, [pc, #252]	; (8000e08 <aplicarCalibracao+0x23c>)
 8000d0a:	681b      	ldr	r3, [r3, #0]
 8000d0c:	2b01      	cmp	r3, #1
 8000d0e:	d11c      	bne.n	8000d4a <aplicarCalibracao+0x17e>
		{
			if(valorSensor[25-j] <= mediaPB[25-j])
 8000d10:	68bb      	ldr	r3, [r7, #8]
 8000d12:	f1c3 0319 	rsb	r3, r3, #25
 8000d16:	4a3b      	ldr	r2, [pc, #236]	; (8000e04 <aplicarCalibracao+0x238>)
 8000d18:	f832 2013 	ldrh.w	r2, [r2, r3, lsl #1]
 8000d1c:	68bb      	ldr	r3, [r7, #8]
 8000d1e:	f1c3 0319 	rsb	r3, r3, #25
 8000d22:	493a      	ldr	r1, [pc, #232]	; (8000e0c <aplicarCalibracao+0x240>)
 8000d24:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8000d28:	429a      	cmp	r2, r3
 8000d2a:	d807      	bhi.n	8000d3c <aplicarCalibracao+0x170>
			{
				sensorDigital[25-j] = 0;
 8000d2c:	68bb      	ldr	r3, [r7, #8]
 8000d2e:	f1c3 0319 	rsb	r3, r3, #25
 8000d32:	4a37      	ldr	r2, [pc, #220]	; (8000e10 <aplicarCalibracao+0x244>)
 8000d34:	2100      	movs	r1, #0
 8000d36:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
 8000d3a:	e006      	b.n	8000d4a <aplicarCalibracao+0x17e>
			}
			else
			{
				sensorDigital[25-j] = 1;
 8000d3c:	68bb      	ldr	r3, [r7, #8]
 8000d3e:	f1c3 0319 	rsb	r3, r3, #25
 8000d42:	4a33      	ldr	r2, [pc, #204]	; (8000e10 <aplicarCalibracao+0x244>)
 8000d44:	2101      	movs	r1, #1
 8000d46:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
	for(int j = 10; j<16; j++ )
 8000d4a:	68bb      	ldr	r3, [r7, #8]
 8000d4c:	3301      	adds	r3, #1
 8000d4e:	60bb      	str	r3, [r7, #8]
 8000d50:	68bb      	ldr	r3, [r7, #8]
 8000d52:	2b0f      	cmp	r3, #15
 8000d54:	dda1      	ble.n	8000c9a <aplicarCalibracao+0xce>
			}
		}
	}
	for(int k = 6; k<10; k++)
 8000d56:	2306      	movs	r3, #6
 8000d58:	607b      	str	r3, [r7, #4]
 8000d5a:	e048      	b.n	8000dee <aplicarCalibracao+0x222>
	{
		selecionarPinoMux(k);
 8000d5c:	6878      	ldr	r0, [r7, #4]
 8000d5e:	f7ff fde3 	bl	8000928 <selecionarPinoMux>
		HAL_ADC_Start(&hadc1);
 8000d62:	4827      	ldr	r0, [pc, #156]	; (8000e00 <aplicarCalibracao+0x234>)
 8000d64:	f000 ff78 	bl	8001c58 <HAL_ADC_Start>
		HAL_ADC_PollForConversion(&hadc1, HAL_MAX_DELAY);
 8000d68:	f04f 31ff 	mov.w	r1, #4294967295
 8000d6c:	4824      	ldr	r0, [pc, #144]	; (8000e00 <aplicarCalibracao+0x234>)
 8000d6e:	f001 f827 	bl	8001dc0 <HAL_ADC_PollForConversion>
		valorSensor[k] = HAL_ADC_GetValue(&hadc1);
 8000d72:	4823      	ldr	r0, [pc, #140]	; (8000e00 <aplicarCalibracao+0x234>)
 8000d74:	f001 f8af 	bl	8001ed6 <HAL_ADC_GetValue>
 8000d78:	4603      	mov	r3, r0
 8000d7a:	b299      	uxth	r1, r3
 8000d7c:	4a21      	ldr	r2, [pc, #132]	; (8000e04 <aplicarCalibracao+0x238>)
 8000d7e:	687b      	ldr	r3, [r7, #4]
 8000d80:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
		if(linha == 0)
 8000d84:	4b20      	ldr	r3, [pc, #128]	; (8000e08 <aplicarCalibracao+0x23c>)
 8000d86:	681b      	ldr	r3, [r3, #0]
 8000d88:	2b00      	cmp	r3, #0
 8000d8a:	d114      	bne.n	8000db6 <aplicarCalibracao+0x1ea>
		{
			if(valorSensor[k] <= mediaPB[k])
 8000d8c:	4a1d      	ldr	r2, [pc, #116]	; (8000e04 <aplicarCalibracao+0x238>)
 8000d8e:	687b      	ldr	r3, [r7, #4]
 8000d90:	f832 2013 	ldrh.w	r2, [r2, r3, lsl #1]
 8000d94:	491d      	ldr	r1, [pc, #116]	; (8000e0c <aplicarCalibracao+0x240>)
 8000d96:	687b      	ldr	r3, [r7, #4]
 8000d98:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8000d9c:	429a      	cmp	r2, r3
 8000d9e:	d805      	bhi.n	8000dac <aplicarCalibracao+0x1e0>
			{
				sensorDigital[k] = 0;
 8000da0:	4a1b      	ldr	r2, [pc, #108]	; (8000e10 <aplicarCalibracao+0x244>)
 8000da2:	687b      	ldr	r3, [r7, #4]
 8000da4:	2100      	movs	r1, #0
 8000da6:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
 8000daa:	e004      	b.n	8000db6 <aplicarCalibracao+0x1ea>
			}
			else
			{
				sensorDigital[k] = 1;
 8000dac:	4a18      	ldr	r2, [pc, #96]	; (8000e10 <aplicarCalibracao+0x244>)
 8000dae:	687b      	ldr	r3, [r7, #4]
 8000db0:	2101      	movs	r1, #1
 8000db2:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
			}
		}
		if(linha == 1)
 8000db6:	4b14      	ldr	r3, [pc, #80]	; (8000e08 <aplicarCalibracao+0x23c>)
 8000db8:	681b      	ldr	r3, [r3, #0]
 8000dba:	2b01      	cmp	r3, #1
 8000dbc:	d114      	bne.n	8000de8 <aplicarCalibracao+0x21c>
		{
			if(valorSensor[k] <= mediaPB[k])
 8000dbe:	4a11      	ldr	r2, [pc, #68]	; (8000e04 <aplicarCalibracao+0x238>)
 8000dc0:	687b      	ldr	r3, [r7, #4]
 8000dc2:	f832 2013 	ldrh.w	r2, [r2, r3, lsl #1]
 8000dc6:	4911      	ldr	r1, [pc, #68]	; (8000e0c <aplicarCalibracao+0x240>)
 8000dc8:	687b      	ldr	r3, [r7, #4]
 8000dca:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8000dce:	429a      	cmp	r2, r3
 8000dd0:	d805      	bhi.n	8000dde <aplicarCalibracao+0x212>
			{
				sensorDigital[k] = 1;
 8000dd2:	4a0f      	ldr	r2, [pc, #60]	; (8000e10 <aplicarCalibracao+0x244>)
 8000dd4:	687b      	ldr	r3, [r7, #4]
 8000dd6:	2101      	movs	r1, #1
 8000dd8:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
 8000ddc:	e004      	b.n	8000de8 <aplicarCalibracao+0x21c>
			}
			else
			{
				sensorDigital[k] = 0;
 8000dde:	4a0c      	ldr	r2, [pc, #48]	; (8000e10 <aplicarCalibracao+0x244>)
 8000de0:	687b      	ldr	r3, [r7, #4]
 8000de2:	2100      	movs	r1, #0
 8000de4:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
	for(int k = 6; k<10; k++)
 8000de8:	687b      	ldr	r3, [r7, #4]
 8000dea:	3301      	adds	r3, #1
 8000dec:	607b      	str	r3, [r7, #4]
 8000dee:	687b      	ldr	r3, [r7, #4]
 8000df0:	2b09      	cmp	r3, #9
 8000df2:	ddb3      	ble.n	8000d5c <aplicarCalibracao+0x190>
			}
		}
	}
}
 8000df4:	bf00      	nop
 8000df6:	bf00      	nop
 8000df8:	3710      	adds	r7, #16
 8000dfa:	46bd      	mov	sp, r7
 8000dfc:	bd80      	pop	{r7, pc}
 8000dfe:	bf00      	nop
 8000e00:	200002d4 	.word	0x200002d4
 8000e04:	200003ac 	.word	0x200003ac
 8000e08:	2000047c 	.word	0x2000047c
 8000e0c:	2000044c 	.word	0x2000044c
 8000e10:	200003cc 	.word	0x200003cc

08000e14 <leituraLinha>:

void leituraLinha() // Retorna Valor da média ponderada para utilizar no PID
{
 8000e14:	b480      	push	{r7}
 8000e16:	b085      	sub	sp, #20
 8000e18:	af00      	add	r7, sp, #0
	    /*Definindo e resetando variaveis*/

	    int num = 0; // numerador
 8000e1a:	2300      	movs	r3, #0
 8000e1c:	60fb      	str	r3, [r7, #12]
	    int den = 0; // denominador
 8000e1e:	2300      	movs	r3, #0
 8000e20:	60bb      	str	r3, [r7, #8]



	    for(int i = 0; i < 16; i++) {
 8000e22:	2300      	movs	r3, #0
 8000e24:	607b      	str	r3, [r7, #4]
 8000e26:	e016      	b.n	8000e56 <leituraLinha+0x42>
	        // soma ponderada
	        num += sensorDigital[i] * peso[i];
 8000e28:	4a15      	ldr	r2, [pc, #84]	; (8000e80 <leituraLinha+0x6c>)
 8000e2a:	687b      	ldr	r3, [r7, #4]
 8000e2c:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8000e30:	4914      	ldr	r1, [pc, #80]	; (8000e84 <leituraLinha+0x70>)
 8000e32:	687a      	ldr	r2, [r7, #4]
 8000e34:	f831 2012 	ldrh.w	r2, [r1, r2, lsl #1]
 8000e38:	fb02 f303 	mul.w	r3, r2, r3
 8000e3c:	68fa      	ldr	r2, [r7, #12]
 8000e3e:	4413      	add	r3, r2
 8000e40:	60fb      	str	r3, [r7, #12]
	        den += sensorDigital[i];
 8000e42:	4a0f      	ldr	r2, [pc, #60]	; (8000e80 <leituraLinha+0x6c>)
 8000e44:	687b      	ldr	r3, [r7, #4]
 8000e46:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8000e4a:	68ba      	ldr	r2, [r7, #8]
 8000e4c:	4413      	add	r3, r2
 8000e4e:	60bb      	str	r3, [r7, #8]
	    for(int i = 0; i < 16; i++) {
 8000e50:	687b      	ldr	r3, [r7, #4]
 8000e52:	3301      	adds	r3, #1
 8000e54:	607b      	str	r3, [r7, #4]
 8000e56:	687b      	ldr	r3, [r7, #4]
 8000e58:	2b0f      	cmp	r3, #15
 8000e5a:	dde5      	ble.n	8000e28 <leituraLinha+0x14>
	    }
	    pos = (num / den);
 8000e5c:	68fa      	ldr	r2, [r7, #12]
 8000e5e:	68bb      	ldr	r3, [r7, #8]
 8000e60:	fb92 f3f3 	sdiv	r3, r2, r3
 8000e64:	b29a      	uxth	r2, r3
 8000e66:	4b08      	ldr	r3, [pc, #32]	; (8000e88 <leituraLinha+0x74>)
 8000e68:	801a      	strh	r2, [r3, #0]
	      pos=0;
	    }
	    if(poslast>=1400 && pos==-1){
	      pos=1500;
	    }
	    poslast = pos;
 8000e6a:	4b07      	ldr	r3, [pc, #28]	; (8000e88 <leituraLinha+0x74>)
 8000e6c:	881b      	ldrh	r3, [r3, #0]
 8000e6e:	461a      	mov	r2, r3
 8000e70:	4b06      	ldr	r3, [pc, #24]	; (8000e8c <leituraLinha+0x78>)
 8000e72:	601a      	str	r2, [r3, #0]





}
 8000e74:	bf00      	nop
 8000e76:	3714      	adds	r7, #20
 8000e78:	46bd      	mov	sp, r7
 8000e7a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000e7e:	4770      	bx	lr
 8000e80:	200003cc 	.word	0x200003cc
 8000e84:	20000000 	.word	0x20000000
 8000e88:	20000470 	.word	0x20000470
 8000e8c:	20000478 	.word	0x20000478

08000e90 <PID>:

void PID(){
 8000e90:	b480      	push	{r7}
 8000e92:	af00      	add	r7, sp, #0
	/* Essa função atualiza os valores das variáveis PWMA e PWMB, as variáveis veloA e veloB forma a velocidade base

	 */
                         error = (pos - def_pos);
 8000e94:	4b78      	ldr	r3, [pc, #480]	; (8001078 <PID+0x1e8>)
 8000e96:	881b      	ldrh	r3, [r3, #0]
 8000e98:	461a      	mov	r2, r3
 8000e9a:	4b78      	ldr	r3, [pc, #480]	; (800107c <PID+0x1ec>)
 8000e9c:	681b      	ldr	r3, [r3, #0]
 8000e9e:	1ad3      	subs	r3, r2, r3
 8000ea0:	4a77      	ldr	r2, [pc, #476]	; (8001080 <PID+0x1f0>)
 8000ea2:	6013      	str	r3, [r2, #0]
                         propo= error;                         //função proporcional
 8000ea4:	4b76      	ldr	r3, [pc, #472]	; (8001080 <PID+0x1f0>)
 8000ea6:	681b      	ldr	r3, [r3, #0]
 8000ea8:	4a76      	ldr	r2, [pc, #472]	; (8001084 <PID+0x1f4>)
 8000eaa:	6013      	str	r3, [r2, #0]
                         deriv=propo-ultimopropo;             //função derivativo
 8000eac:	4b75      	ldr	r3, [pc, #468]	; (8001084 <PID+0x1f4>)
 8000eae:	681a      	ldr	r2, [r3, #0]
 8000eb0:	4b75      	ldr	r3, [pc, #468]	; (8001088 <PID+0x1f8>)
 8000eb2:	681b      	ldr	r3, [r3, #0]
 8000eb4:	1ad3      	subs	r3, r2, r3
 8000eb6:	4a75      	ldr	r2, [pc, #468]	; (800108c <PID+0x1fc>)
 8000eb8:	6013      	str	r3, [r2, #0]
                         integral=error0+error1 + error2 + error3+ error4+ error5+ error6+error7+error8+error9;                //função integral
 8000eba:	4b75      	ldr	r3, [pc, #468]	; (8001090 <PID+0x200>)
 8000ebc:	681a      	ldr	r2, [r3, #0]
 8000ebe:	4b75      	ldr	r3, [pc, #468]	; (8001094 <PID+0x204>)
 8000ec0:	681b      	ldr	r3, [r3, #0]
 8000ec2:	441a      	add	r2, r3
 8000ec4:	4b74      	ldr	r3, [pc, #464]	; (8001098 <PID+0x208>)
 8000ec6:	681b      	ldr	r3, [r3, #0]
 8000ec8:	441a      	add	r2, r3
 8000eca:	4b74      	ldr	r3, [pc, #464]	; (800109c <PID+0x20c>)
 8000ecc:	681b      	ldr	r3, [r3, #0]
 8000ece:	441a      	add	r2, r3
 8000ed0:	4b73      	ldr	r3, [pc, #460]	; (80010a0 <PID+0x210>)
 8000ed2:	681b      	ldr	r3, [r3, #0]
 8000ed4:	441a      	add	r2, r3
 8000ed6:	4b73      	ldr	r3, [pc, #460]	; (80010a4 <PID+0x214>)
 8000ed8:	681b      	ldr	r3, [r3, #0]
 8000eda:	441a      	add	r2, r3
 8000edc:	4b72      	ldr	r3, [pc, #456]	; (80010a8 <PID+0x218>)
 8000ede:	681b      	ldr	r3, [r3, #0]
 8000ee0:	441a      	add	r2, r3
 8000ee2:	4b72      	ldr	r3, [pc, #456]	; (80010ac <PID+0x21c>)
 8000ee4:	681b      	ldr	r3, [r3, #0]
 8000ee6:	441a      	add	r2, r3
 8000ee8:	4b71      	ldr	r3, [pc, #452]	; (80010b0 <PID+0x220>)
 8000eea:	681b      	ldr	r3, [r3, #0]
 8000eec:	441a      	add	r2, r3
 8000eee:	4b71      	ldr	r3, [pc, #452]	; (80010b4 <PID+0x224>)
 8000ef0:	681b      	ldr	r3, [r3, #0]
 8000ef2:	4413      	add	r3, r2
 8000ef4:	4a70      	ldr	r2, [pc, #448]	; (80010b8 <PID+0x228>)
 8000ef6:	6013      	str	r3, [r2, #0]
                         ultimopropo=propo;
 8000ef8:	4b62      	ldr	r3, [pc, #392]	; (8001084 <PID+0x1f4>)
 8000efa:	681b      	ldr	r3, [r3, #0]
 8000efc:	4a62      	ldr	r2, [pc, #392]	; (8001088 <PID+0x1f8>)
 8000efe:	6013      	str	r3, [r2, #0]
                         error9 = error8;
 8000f00:	4b6b      	ldr	r3, [pc, #428]	; (80010b0 <PID+0x220>)
 8000f02:	681b      	ldr	r3, [r3, #0]
 8000f04:	4a6b      	ldr	r2, [pc, #428]	; (80010b4 <PID+0x224>)
 8000f06:	6013      	str	r3, [r2, #0]
                         error8 = error7;
 8000f08:	4b68      	ldr	r3, [pc, #416]	; (80010ac <PID+0x21c>)
 8000f0a:	681b      	ldr	r3, [r3, #0]
 8000f0c:	4a68      	ldr	r2, [pc, #416]	; (80010b0 <PID+0x220>)
 8000f0e:	6013      	str	r3, [r2, #0]
                         error7 = error6;
 8000f10:	4b65      	ldr	r3, [pc, #404]	; (80010a8 <PID+0x218>)
 8000f12:	681b      	ldr	r3, [r3, #0]
 8000f14:	4a65      	ldr	r2, [pc, #404]	; (80010ac <PID+0x21c>)
 8000f16:	6013      	str	r3, [r2, #0]
                         error6=error5;
 8000f18:	4b62      	ldr	r3, [pc, #392]	; (80010a4 <PID+0x214>)
 8000f1a:	681b      	ldr	r3, [r3, #0]
 8000f1c:	4a62      	ldr	r2, [pc, #392]	; (80010a8 <PID+0x218>)
 8000f1e:	6013      	str	r3, [r2, #0]
                         error5=error4;
 8000f20:	4b5f      	ldr	r3, [pc, #380]	; (80010a0 <PID+0x210>)
 8000f22:	681b      	ldr	r3, [r3, #0]
 8000f24:	4a5f      	ldr	r2, [pc, #380]	; (80010a4 <PID+0x214>)
 8000f26:	6013      	str	r3, [r2, #0]
                         error4=error3;
 8000f28:	4b5c      	ldr	r3, [pc, #368]	; (800109c <PID+0x20c>)
 8000f2a:	681b      	ldr	r3, [r3, #0]
 8000f2c:	4a5c      	ldr	r2, [pc, #368]	; (80010a0 <PID+0x210>)
 8000f2e:	6013      	str	r3, [r2, #0]
                         error3=error2;
 8000f30:	4b59      	ldr	r3, [pc, #356]	; (8001098 <PID+0x208>)
 8000f32:	681b      	ldr	r3, [r3, #0]
 8000f34:	4a59      	ldr	r2, [pc, #356]	; (800109c <PID+0x20c>)
 8000f36:	6013      	str	r3, [r2, #0]
                         error2=error1;
 8000f38:	4b56      	ldr	r3, [pc, #344]	; (8001094 <PID+0x204>)
 8000f3a:	681b      	ldr	r3, [r3, #0]
 8000f3c:	4a56      	ldr	r2, [pc, #344]	; (8001098 <PID+0x208>)
 8000f3e:	6013      	str	r3, [r2, #0]
                         error1 = error0;
 8000f40:	4b53      	ldr	r3, [pc, #332]	; (8001090 <PID+0x200>)
 8000f42:	681b      	ldr	r3, [r3, #0]
 8000f44:	4a53      	ldr	r2, [pc, #332]	; (8001094 <PID+0x204>)
 8000f46:	6013      	str	r3, [r2, #0]
                         error0=propo;
 8000f48:	4b4e      	ldr	r3, [pc, #312]	; (8001084 <PID+0x1f4>)
 8000f4a:	681b      	ldr	r3, [r3, #0]
 8000f4c:	4a50      	ldr	r2, [pc, #320]	; (8001090 <PID+0x200>)
 8000f4e:	6013      	str	r3, [r2, #0]
                         Kpid = (Kp*propo)+(deriv*Kd)+(integral*Ki);
 8000f50:	4b4c      	ldr	r3, [pc, #304]	; (8001084 <PID+0x1f4>)
 8000f52:	681b      	ldr	r3, [r3, #0]
 8000f54:	ee07 3a90 	vmov	s15, r3
 8000f58:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8000f5c:	4b57      	ldr	r3, [pc, #348]	; (80010bc <PID+0x22c>)
 8000f5e:	edd3 7a00 	vldr	s15, [r3]
 8000f62:	ee27 7a27 	vmul.f32	s14, s14, s15
 8000f66:	4b49      	ldr	r3, [pc, #292]	; (800108c <PID+0x1fc>)
 8000f68:	681b      	ldr	r3, [r3, #0]
 8000f6a:	ee07 3a90 	vmov	s15, r3
 8000f6e:	eef8 6ae7 	vcvt.f32.s32	s13, s15
 8000f72:	4b53      	ldr	r3, [pc, #332]	; (80010c0 <PID+0x230>)
 8000f74:	edd3 7a00 	vldr	s15, [r3]
 8000f78:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8000f7c:	ee37 7a27 	vadd.f32	s14, s14, s15
 8000f80:	4b4d      	ldr	r3, [pc, #308]	; (80010b8 <PID+0x228>)
 8000f82:	681b      	ldr	r3, [r3, #0]
 8000f84:	ee07 3a90 	vmov	s15, r3
 8000f88:	eef8 6ae7 	vcvt.f32.s32	s13, s15
 8000f8c:	4b4d      	ldr	r3, [pc, #308]	; (80010c4 <PID+0x234>)
 8000f8e:	edd3 7a00 	vldr	s15, [r3]
 8000f92:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8000f96:	ee77 7a27 	vadd.f32	s15, s14, s15
 8000f9a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8000f9e:	ee17 2a90 	vmov	r2, s15
 8000fa2:	4b49      	ldr	r3, [pc, #292]	; (80010c8 <PID+0x238>)
 8000fa4:	601a      	str	r2, [r3, #0]
                         if(Kpid>velomax)
 8000fa6:	4b49      	ldr	r3, [pc, #292]	; (80010cc <PID+0x23c>)
 8000fa8:	f9b3 3000 	ldrsh.w	r3, [r3]
 8000fac:	461a      	mov	r2, r3
 8000fae:	4b46      	ldr	r3, [pc, #280]	; (80010c8 <PID+0x238>)
 8000fb0:	681b      	ldr	r3, [r3, #0]
 8000fb2:	429a      	cmp	r2, r3
 8000fb4:	da05      	bge.n	8000fc2 <PID+0x132>
                         {
							Kpid=velomax;
 8000fb6:	4b45      	ldr	r3, [pc, #276]	; (80010cc <PID+0x23c>)
 8000fb8:	f9b3 3000 	ldrsh.w	r3, [r3]
 8000fbc:	461a      	mov	r2, r3
 8000fbe:	4b42      	ldr	r3, [pc, #264]	; (80010c8 <PID+0x238>)
 8000fc0:	601a      	str	r2, [r3, #0]
                         }


                         somaA = Velo1 - Kpid;
 8000fc2:	4b43      	ldr	r3, [pc, #268]	; (80010d0 <PID+0x240>)
 8000fc4:	881a      	ldrh	r2, [r3, #0]
 8000fc6:	4b40      	ldr	r3, [pc, #256]	; (80010c8 <PID+0x238>)
 8000fc8:	681b      	ldr	r3, [r3, #0]
 8000fca:	b29b      	uxth	r3, r3
 8000fcc:	1ad3      	subs	r3, r2, r3
 8000fce:	b29b      	uxth	r3, r3
 8000fd0:	b21a      	sxth	r2, r3
 8000fd2:	4b40      	ldr	r3, [pc, #256]	; (80010d4 <PID+0x244>)
 8000fd4:	801a      	strh	r2, [r3, #0]
                         if(somaA>velomax)
 8000fd6:	4b3f      	ldr	r3, [pc, #252]	; (80010d4 <PID+0x244>)
 8000fd8:	f9b3 2000 	ldrsh.w	r2, [r3]
 8000fdc:	4b3b      	ldr	r3, [pc, #236]	; (80010cc <PID+0x23c>)
 8000fde:	f9b3 3000 	ldrsh.w	r3, [r3]
 8000fe2:	429a      	cmp	r2, r3
 8000fe4:	dd05      	ble.n	8000ff2 <PID+0x162>
                         {
                        	 somaA = velomax;
 8000fe6:	4b39      	ldr	r3, [pc, #228]	; (80010cc <PID+0x23c>)
 8000fe8:	f9b3 2000 	ldrsh.w	r2, [r3]
 8000fec:	4b39      	ldr	r3, [pc, #228]	; (80010d4 <PID+0x244>)
 8000fee:	801a      	strh	r2, [r3, #0]
 8000ff0:	e00d      	b.n	800100e <PID+0x17e>
                         }
                         else if (somaA <0)
 8000ff2:	4b38      	ldr	r3, [pc, #224]	; (80010d4 <PID+0x244>)
 8000ff4:	f9b3 3000 	ldrsh.w	r3, [r3]
 8000ff8:	2b00      	cmp	r3, #0
 8000ffa:	da08      	bge.n	800100e <PID+0x17e>
                         {
                        	 somaA = -somaA;
 8000ffc:	4b35      	ldr	r3, [pc, #212]	; (80010d4 <PID+0x244>)
 8000ffe:	f9b3 3000 	ldrsh.w	r3, [r3]
 8001002:	b29b      	uxth	r3, r3
 8001004:	425b      	negs	r3, r3
 8001006:	b29b      	uxth	r3, r3
 8001008:	b21a      	sxth	r2, r3
 800100a:	4b32      	ldr	r3, [pc, #200]	; (80010d4 <PID+0x244>)
 800100c:	801a      	strh	r2, [r3, #0]
                         }
                         somaB = Velo2 +Kpid;
 800100e:	4b2e      	ldr	r3, [pc, #184]	; (80010c8 <PID+0x238>)
 8001010:	681b      	ldr	r3, [r3, #0]
 8001012:	b29a      	uxth	r2, r3
 8001014:	4b30      	ldr	r3, [pc, #192]	; (80010d8 <PID+0x248>)
 8001016:	881b      	ldrh	r3, [r3, #0]
 8001018:	4413      	add	r3, r2
 800101a:	b29b      	uxth	r3, r3
 800101c:	b21a      	sxth	r2, r3
 800101e:	4b2f      	ldr	r3, [pc, #188]	; (80010dc <PID+0x24c>)
 8001020:	801a      	strh	r2, [r3, #0]

                         if(somaB >velomax)
 8001022:	4b2e      	ldr	r3, [pc, #184]	; (80010dc <PID+0x24c>)
 8001024:	f9b3 2000 	ldrsh.w	r2, [r3]
 8001028:	4b28      	ldr	r3, [pc, #160]	; (80010cc <PID+0x23c>)
 800102a:	f9b3 3000 	ldrsh.w	r3, [r3]
 800102e:	429a      	cmp	r2, r3
 8001030:	dd05      	ble.n	800103e <PID+0x1ae>
                         {
                        	 somaB = velomax;
 8001032:	4b26      	ldr	r3, [pc, #152]	; (80010cc <PID+0x23c>)
 8001034:	f9b3 2000 	ldrsh.w	r2, [r3]
 8001038:	4b28      	ldr	r3, [pc, #160]	; (80010dc <PID+0x24c>)
 800103a:	801a      	strh	r2, [r3, #0]
 800103c:	e00d      	b.n	800105a <PID+0x1ca>
                         }
                         else if (somaB <  0)
 800103e:	4b27      	ldr	r3, [pc, #156]	; (80010dc <PID+0x24c>)
 8001040:	f9b3 3000 	ldrsh.w	r3, [r3]
 8001044:	2b00      	cmp	r3, #0
 8001046:	da08      	bge.n	800105a <PID+0x1ca>
                         {
                        	 somaB = -somaB;
 8001048:	4b24      	ldr	r3, [pc, #144]	; (80010dc <PID+0x24c>)
 800104a:	f9b3 3000 	ldrsh.w	r3, [r3]
 800104e:	b29b      	uxth	r3, r3
 8001050:	425b      	negs	r3, r3
 8001052:	b29b      	uxth	r3, r3
 8001054:	b21a      	sxth	r2, r3
 8001056:	4b21      	ldr	r3, [pc, #132]	; (80010dc <PID+0x24c>)
 8001058:	801a      	strh	r2, [r3, #0]
                         }
                         PWMA =(somaA);
 800105a:	4b1e      	ldr	r3, [pc, #120]	; (80010d4 <PID+0x244>)
 800105c:	f9b3 2000 	ldrsh.w	r2, [r3]
 8001060:	4b1f      	ldr	r3, [pc, #124]	; (80010e0 <PID+0x250>)
 8001062:	801a      	strh	r2, [r3, #0]
                         PWMB = (somaB);
 8001064:	4b1d      	ldr	r3, [pc, #116]	; (80010dc <PID+0x24c>)
 8001066:	f9b3 2000 	ldrsh.w	r2, [r3]
 800106a:	4b1e      	ldr	r3, [pc, #120]	; (80010e4 <PID+0x254>)
 800106c:	801a      	strh	r2, [r3, #0]





}
 800106e:	bf00      	nop
 8001070:	46bd      	mov	sp, r7
 8001072:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001076:	4770      	bx	lr
 8001078:	20000470 	.word	0x20000470
 800107c:	2000002c 	.word	0x2000002c
 8001080:	20000494 	.word	0x20000494
 8001084:	20000498 	.word	0x20000498
 8001088:	200004a4 	.word	0x200004a4
 800108c:	2000049c 	.word	0x2000049c
 8001090:	200004a8 	.word	0x200004a8
 8001094:	200004ac 	.word	0x200004ac
 8001098:	200004b0 	.word	0x200004b0
 800109c:	200004b4 	.word	0x200004b4
 80010a0:	200004b8 	.word	0x200004b8
 80010a4:	200004bc 	.word	0x200004bc
 80010a8:	200004c0 	.word	0x200004c0
 80010ac:	200004c4 	.word	0x200004c4
 80010b0:	200004c8 	.word	0x200004c8
 80010b4:	200004cc 	.word	0x200004cc
 80010b8:	200004a0 	.word	0x200004a0
 80010bc:	20000020 	.word	0x20000020
 80010c0:	20000024 	.word	0x20000024
 80010c4:	20000028 	.word	0x20000028
 80010c8:	20000474 	.word	0x20000474
 80010cc:	20000034 	.word	0x20000034
 80010d0:	20000030 	.word	0x20000030
 80010d4:	200004d0 	.word	0x200004d0
 80010d8:	20000032 	.word	0x20000032
 80010dc:	200004d2 	.word	0x200004d2
 80010e0:	2000046c 	.word	0x2000046c
 80010e4:	2000046e 	.word	0x2000046e

080010e8 <setPWM>:
void setPWM()
{
 80010e8:	b480      	push	{r7}
 80010ea:	af00      	add	r7, sp, #0

	TIM2->CCR2=  PWMA;
 80010ec:	4b07      	ldr	r3, [pc, #28]	; (800110c <setPWM+0x24>)
 80010ee:	f9b3 2000 	ldrsh.w	r2, [r3]
 80010f2:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80010f6:	639a      	str	r2, [r3, #56]	; 0x38
	TIM1->CCR1 = PWMB;
 80010f8:	4b05      	ldr	r3, [pc, #20]	; (8001110 <setPWM+0x28>)
 80010fa:	f9b3 2000 	ldrsh.w	r2, [r3]
 80010fe:	4b05      	ldr	r3, [pc, #20]	; (8001114 <setPWM+0x2c>)
 8001100:	635a      	str	r2, [r3, #52]	; 0x34

}
 8001102:	bf00      	nop
 8001104:	46bd      	mov	sp, r7
 8001106:	f85d 7b04 	ldr.w	r7, [sp], #4
 800110a:	4770      	bx	lr
 800110c:	2000046c 	.word	0x2000046c
 8001110:	2000046e 	.word	0x2000046e
 8001114:	40010000 	.word	0x40010000

08001118 <ligarMotorA>:

void ligarMotorA() // Motor A-> Esquerda
{
 8001118:	b580      	push	{r7, lr}
 800111a:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(STBY_GPIO_Port,STBY_Pin, GPIO_PIN_SET);
 800111c:	2201      	movs	r2, #1
 800111e:	f44f 6100 	mov.w	r1, #2048	; 0x800
 8001122:	4808      	ldr	r0, [pc, #32]	; (8001144 <ligarMotorA+0x2c>)
 8001124:	f001 fba8 	bl	8002878 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(AI1_GPIO_Port,AI1_Pin, GPIO_PIN_SET);
 8001128:	2201      	movs	r2, #1
 800112a:	f44f 6180 	mov.w	r1, #1024	; 0x400
 800112e:	4805      	ldr	r0, [pc, #20]	; (8001144 <ligarMotorA+0x2c>)
 8001130:	f001 fba2 	bl	8002878 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(AI2_GPIO_Port,AI2_Pin, GPIO_PIN_RESET);
 8001134:	2200      	movs	r2, #0
 8001136:	f44f 7100 	mov.w	r1, #512	; 0x200
 800113a:	4802      	ldr	r0, [pc, #8]	; (8001144 <ligarMotorA+0x2c>)
 800113c:	f001 fb9c 	bl	8002878 <HAL_GPIO_WritePin>
}
 8001140:	bf00      	nop
 8001142:	bd80      	pop	{r7, pc}
 8001144:	40020000 	.word	0x40020000

08001148 <ligarMotorB>:

void ligarMotorB() // Motor B-> Direita
{
 8001148:	b580      	push	{r7, lr}
 800114a:	af00      	add	r7, sp, #0

	HAL_GPIO_WritePin(BI1_GPIO_Port,BI1_Pin, GPIO_PIN_SET);
 800114c:	2201      	movs	r2, #1
 800114e:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8001152:	4805      	ldr	r0, [pc, #20]	; (8001168 <ligarMotorB+0x20>)
 8001154:	f001 fb90 	bl	8002878 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(BI2_GPIO_Port,BI2_Pin, GPIO_PIN_RESET);
 8001158:	2200      	movs	r2, #0
 800115a:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 800115e:	4802      	ldr	r0, [pc, #8]	; (8001168 <ligarMotorB+0x20>)
 8001160:	f001 fb8a 	bl	8002878 <HAL_GPIO_WritePin>
}
 8001164:	bf00      	nop
 8001166:	bd80      	pop	{r7, pc}
 8001168:	40020000 	.word	0x40020000

0800116c <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 800116c:	b580      	push	{r7, lr}
 800116e:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8001170:	f000 fc98 	bl	8001aa4 <HAL_Init>

  /* USER CODE BEGIN Init */
  LCD_setRST(RST_GPIO_Port, RST_Pin);
 8001174:	2104      	movs	r1, #4
 8001176:	4854      	ldr	r0, [pc, #336]	; (80012c8 <main+0x15c>)
 8001178:	f7ff fa00 	bl	800057c <LCD_setRST>
  LCD_setCE(CE_GPIO_Port, CE_Pin);
 800117c:	2102      	movs	r1, #2
 800117e:	4852      	ldr	r0, [pc, #328]	; (80012c8 <main+0x15c>)
 8001180:	f7ff fa10 	bl	80005a4 <LCD_setCE>
  LCD_setDC(DC_GPIO_Port, DC_Pin);
 8001184:	2101      	movs	r1, #1
 8001186:	4850      	ldr	r0, [pc, #320]	; (80012c8 <main+0x15c>)
 8001188:	f7ff fa20 	bl	80005cc <LCD_setDC>
  LCD_setDIN(DIN_GPIO_Port, DIN_Pin);
 800118c:	2180      	movs	r1, #128	; 0x80
 800118e:	484f      	ldr	r0, [pc, #316]	; (80012cc <main+0x160>)
 8001190:	f7ff fa30 	bl	80005f4 <LCD_setDIN>
  LCD_setCLK(CLK_GPIO_Port, CLK_Pin);
 8001194:	2120      	movs	r1, #32
 8001196:	484d      	ldr	r0, [pc, #308]	; (80012cc <main+0x160>)
 8001198:	f7ff fa40 	bl	800061c <LCD_setCLK>

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 800119c:	f000 f8b2 	bl	8001304 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 80011a0:	f000 fa3c 	bl	800161c <MX_GPIO_Init>
  MX_ADC1_Init();
 80011a4:	f000 f90c 	bl	80013c0 <MX_ADC1_Init>
  MX_TIM1_Init();
 80011a8:	f000 f95c 	bl	8001464 <MX_TIM1_Init>
  MX_TIM2_Init();
 80011ac:	f000 f9de 	bl	800156c <MX_TIM2_Init>
  /* USER CODE BEGIN 2 */
  LCD_init();
 80011b0:	f7ff facc 	bl	800074c <LCD_init>

 // HAL_ADC_Start_DMA(&hadc1, &readValue, 1);
  HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_2);
 80011b4:	2104      	movs	r1, #4
 80011b6:	4846      	ldr	r0, [pc, #280]	; (80012d0 <main+0x164>)
 80011b8:	f002 f804 	bl	80031c4 <HAL_TIM_PWM_Start>
  HAL_TIM_PWM_Start(&htim1, TIM_CHANNEL_1);
 80011bc:	2100      	movs	r1, #0
 80011be:	4845      	ldr	r0, [pc, #276]	; (80012d4 <main+0x168>)
 80011c0:	f002 f800 	bl	80031c4 <HAL_TIM_PWM_Start>
  HAL_GPIO_WritePin(EN_GPIO_Port,EN_Pin, GPIO_PIN_RESET); // EN do MUX como 0
 80011c4:	2200      	movs	r2, #0
 80011c6:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 80011ca:	4843      	ldr	r0, [pc, #268]	; (80012d8 <main+0x16c>)
 80011cc:	f001 fb54 	bl	8002878 <HAL_GPIO_WritePin>
  while (1)
  {
    /* USER CODE END WHILE */

    /* USER CODE BEGIN 3 */
	  switch(estado)
 80011d0:	4b42      	ldr	r3, [pc, #264]	; (80012dc <main+0x170>)
 80011d2:	781b      	ldrb	r3, [r3, #0]
 80011d4:	2b02      	cmp	r3, #2
 80011d6:	d062      	beq.n	800129e <main+0x132>
 80011d8:	2b02      	cmp	r3, #2
 80011da:	dcf9      	bgt.n	80011d0 <main+0x64>
 80011dc:	2b00      	cmp	r3, #0
 80011de:	d002      	beq.n	80011e6 <main+0x7a>
 80011e0:	2b01      	cmp	r3, #1
 80011e2:	d02f      	beq.n	8001244 <main+0xd8>
 80011e4:	e7f4      	b.n	80011d0 <main+0x64>
	  {
	  	 case 0:
	  		 LCD_clrScr();
 80011e6:	f7ff fb49 	bl	800087c <LCD_clrScr>
	  		aplicarCalibracao();
 80011ea:	f7ff fcef 	bl	8000bcc <aplicarCalibracao>
	  		leituraLinha();
 80011ee:	f7ff fe11 	bl	8000e14 <leituraLinha>
	  		PID();
 80011f2:	f7ff fe4d 	bl	8000e90 <PID>
			sprintf(Buffer, "%d", pos);
 80011f6:	4b3a      	ldr	r3, [pc, #232]	; (80012e0 <main+0x174>)
 80011f8:	881b      	ldrh	r3, [r3, #0]
 80011fa:	461a      	mov	r2, r3
 80011fc:	4939      	ldr	r1, [pc, #228]	; (80012e4 <main+0x178>)
 80011fe:	483a      	ldr	r0, [pc, #232]	; (80012e8 <main+0x17c>)
 8001200:	f002 fc44 	bl	8003a8c <siprintf>
			LCD_print(Buffer, 3, 3);
 8001204:	2203      	movs	r2, #3
 8001206:	2103      	movs	r1, #3
 8001208:	4837      	ldr	r0, [pc, #220]	; (80012e8 <main+0x17c>)
 800120a:	f7ff fb17 	bl	800083c <LCD_print>
			sprintf(Buffer, "%d", PWMA);
 800120e:	4b37      	ldr	r3, [pc, #220]	; (80012ec <main+0x180>)
 8001210:	f9b3 3000 	ldrsh.w	r3, [r3]
 8001214:	461a      	mov	r2, r3
 8001216:	4933      	ldr	r1, [pc, #204]	; (80012e4 <main+0x178>)
 8001218:	4833      	ldr	r0, [pc, #204]	; (80012e8 <main+0x17c>)
 800121a:	f002 fc37 	bl	8003a8c <siprintf>
			LCD_print(Buffer, 0, 0);
 800121e:	2200      	movs	r2, #0
 8001220:	2100      	movs	r1, #0
 8001222:	4831      	ldr	r0, [pc, #196]	; (80012e8 <main+0x17c>)
 8001224:	f7ff fb0a 	bl	800083c <LCD_print>
			sprintf(Buffer, "%d", PWMB);
 8001228:	4b31      	ldr	r3, [pc, #196]	; (80012f0 <main+0x184>)
 800122a:	f9b3 3000 	ldrsh.w	r3, [r3]
 800122e:	461a      	mov	r2, r3
 8001230:	492c      	ldr	r1, [pc, #176]	; (80012e4 <main+0x178>)
 8001232:	482d      	ldr	r0, [pc, #180]	; (80012e8 <main+0x17c>)
 8001234:	f002 fc2a 	bl	8003a8c <siprintf>
			LCD_print(Buffer, 1, 1);
 8001238:	2201      	movs	r2, #1
 800123a:	2101      	movs	r1, #1
 800123c:	482a      	ldr	r0, [pc, #168]	; (80012e8 <main+0x17c>)
 800123e:	f7ff fafd 	bl	800083c <LCD_print>

		 break;
 8001242:	e03f      	b.n	80012c4 <main+0x158>

	  	 case 1:
	  		LCD_clrScr();
 8001244:	f7ff fb1a 	bl	800087c <LCD_clrScr>

	  		LCD_print("Calibrar Preto", 0, 0);
 8001248:	2200      	movs	r2, #0
 800124a:	2100      	movs	r1, #0
 800124c:	4829      	ldr	r0, [pc, #164]	; (80012f4 <main+0x188>)
 800124e:	f7ff faf5 	bl	800083c <LCD_print>
	  		HAL_Delay(5000);
 8001252:	f241 3088 	movw	r0, #5000	; 0x1388
 8001256:	f000 fc97 	bl	8001b88 <HAL_Delay>
	  		calibrarPreto();
 800125a:	f7ff fc23 	bl	8000aa4 <calibrarPreto>
	  		LCD_clrScr();
 800125e:	f7ff fb0d 	bl	800087c <LCD_clrScr>
	  		LCD_print("Calibrar Branco", 0, 0);
 8001262:	2200      	movs	r2, #0
 8001264:	2100      	movs	r1, #0
 8001266:	4824      	ldr	r0, [pc, #144]	; (80012f8 <main+0x18c>)
 8001268:	f7ff fae8 	bl	800083c <LCD_print>
	  		HAL_Delay(5000);
 800126c:	f241 3088 	movw	r0, #5000	; 0x1388
 8001270:	f000 fc8a 	bl	8001b88 <HAL_Delay>
	  		calibrarBranco();
 8001274:	f7ff fbae 	bl	80009d4 <calibrarBranco>
	  		calcularMediaSensores();
 8001278:	f7ff fc7c 	bl	8000b74 <calcularMediaSensores>
  		    ligarMotorA();
 800127c:	f7ff ff4c 	bl	8001118 <ligarMotorA>
  		    ligarMotorB();
 8001280:	f7ff ff62 	bl	8001148 <ligarMotorB>
	  		LCD_clrScr();
 8001284:	f7ff fafa 	bl	800087c <LCD_clrScr>
	  		LCD_print("Calibrado", 0, 0);
 8001288:	2200      	movs	r2, #0
 800128a:	2100      	movs	r1, #0
 800128c:	481b      	ldr	r0, [pc, #108]	; (80012fc <main+0x190>)
 800128e:	f7ff fad5 	bl	800083c <LCD_print>
	  		aplicarCalibracao();
 8001292:	f7ff fc9b 	bl	8000bcc <aplicarCalibracao>
	  		estado = 0;
 8001296:	4b11      	ldr	r3, [pc, #68]	; (80012dc <main+0x170>)
 8001298:	2200      	movs	r2, #0
 800129a:	701a      	strb	r2, [r3, #0]


	  	break;
 800129c:	e012      	b.n	80012c4 <main+0x158>

	  	case 2:
	  			LCD_clrScr();
 800129e:	f7ff faed 	bl	800087c <LCD_clrScr>
	  			LCD_print("Começar andar", 0, 0);
 80012a2:	2200      	movs	r2, #0
 80012a4:	2100      	movs	r1, #0
 80012a6:	4816      	ldr	r0, [pc, #88]	; (8001300 <main+0x194>)
 80012a8:	f7ff fac8 	bl	800083c <LCD_print>
	  			aplicarCalibracao();
 80012ac:	f7ff fc8e 	bl	8000bcc <aplicarCalibracao>
	  		    leituraLinha();
 80012b0:	f7ff fdb0 	bl	8000e14 <leituraLinha>
	  		    PID();
 80012b4:	f7ff fdec 	bl	8000e90 <PID>

	  		    setPWM();
 80012b8:	f7ff ff16 	bl	80010e8 <setPWM>
	  		    estado = 2;
 80012bc:	4b07      	ldr	r3, [pc, #28]	; (80012dc <main+0x170>)
 80012be:	2202      	movs	r2, #2
 80012c0:	701a      	strb	r2, [r3, #0]


	  	break;
 80012c2:	bf00      	nop
	  switch(estado)
 80012c4:	e784      	b.n	80011d0 <main+0x64>
 80012c6:	bf00      	nop
 80012c8:	40020400 	.word	0x40020400
 80012cc:	40020000 	.word	0x40020000
 80012d0:	20000364 	.word	0x20000364
 80012d4:	2000031c 	.word	0x2000031c
 80012d8:	40020800 	.word	0x40020800
 80012dc:	200004d4 	.word	0x200004d4
 80012e0:	20000470 	.word	0x20000470
 80012e4:	080043ec 	.word	0x080043ec
 80012e8:	20000480 	.word	0x20000480
 80012ec:	2000046c 	.word	0x2000046c
 80012f0:	2000046e 	.word	0x2000046e
 80012f4:	080043f0 	.word	0x080043f0
 80012f8:	08004400 	.word	0x08004400
 80012fc:	08004410 	.word	0x08004410
 8001300:	0800441c 	.word	0x0800441c

08001304 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8001304:	b580      	push	{r7, lr}
 8001306:	b094      	sub	sp, #80	; 0x50
 8001308:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 800130a:	f107 0320 	add.w	r3, r7, #32
 800130e:	2230      	movs	r2, #48	; 0x30
 8001310:	2100      	movs	r1, #0
 8001312:	4618      	mov	r0, r3
 8001314:	f002 fbda 	bl	8003acc <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001318:	f107 030c 	add.w	r3, r7, #12
 800131c:	2200      	movs	r2, #0
 800131e:	601a      	str	r2, [r3, #0]
 8001320:	605a      	str	r2, [r3, #4]
 8001322:	609a      	str	r2, [r3, #8]
 8001324:	60da      	str	r2, [r3, #12]
 8001326:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 8001328:	2300      	movs	r3, #0
 800132a:	60bb      	str	r3, [r7, #8]
 800132c:	4b22      	ldr	r3, [pc, #136]	; (80013b8 <SystemClock_Config+0xb4>)
 800132e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001330:	4a21      	ldr	r2, [pc, #132]	; (80013b8 <SystemClock_Config+0xb4>)
 8001332:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8001336:	6413      	str	r3, [r2, #64]	; 0x40
 8001338:	4b1f      	ldr	r3, [pc, #124]	; (80013b8 <SystemClock_Config+0xb4>)
 800133a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800133c:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001340:	60bb      	str	r3, [r7, #8]
 8001342:	68bb      	ldr	r3, [r7, #8]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001344:	2300      	movs	r3, #0
 8001346:	607b      	str	r3, [r7, #4]
 8001348:	4b1c      	ldr	r3, [pc, #112]	; (80013bc <SystemClock_Config+0xb8>)
 800134a:	681b      	ldr	r3, [r3, #0]
 800134c:	4a1b      	ldr	r2, [pc, #108]	; (80013bc <SystemClock_Config+0xb8>)
 800134e:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8001352:	6013      	str	r3, [r2, #0]
 8001354:	4b19      	ldr	r3, [pc, #100]	; (80013bc <SystemClock_Config+0xb8>)
 8001356:	681b      	ldr	r3, [r3, #0]
 8001358:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 800135c:	607b      	str	r3, [r7, #4]
 800135e:	687b      	ldr	r3, [r7, #4]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 8001360:	2302      	movs	r3, #2
 8001362:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8001364:	2301      	movs	r3, #1
 8001366:	62fb      	str	r3, [r7, #44]	; 0x2c
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8001368:	2310      	movs	r3, #16
 800136a:	633b      	str	r3, [r7, #48]	; 0x30
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 800136c:	2300      	movs	r3, #0
 800136e:	63bb      	str	r3, [r7, #56]	; 0x38
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001370:	f107 0320 	add.w	r3, r7, #32
 8001374:	4618      	mov	r0, r3
 8001376:	f001 fab1 	bl	80028dc <HAL_RCC_OscConfig>
 800137a:	4603      	mov	r3, r0
 800137c:	2b00      	cmp	r3, #0
 800137e:	d001      	beq.n	8001384 <SystemClock_Config+0x80>
  {
    Error_Handler();
 8001380:	f000 f9e0 	bl	8001744 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001384:	230f      	movs	r3, #15
 8001386:	60fb      	str	r3, [r7, #12]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 8001388:	2300      	movs	r3, #0
 800138a:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 800138c:	2300      	movs	r3, #0
 800138e:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 8001390:	2300      	movs	r3, #0
 8001392:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8001394:	2300      	movs	r3, #0
 8001396:	61fb      	str	r3, [r7, #28]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 8001398:	f107 030c 	add.w	r3, r7, #12
 800139c:	2100      	movs	r1, #0
 800139e:	4618      	mov	r0, r3
 80013a0:	f001 fd14 	bl	8002dcc <HAL_RCC_ClockConfig>
 80013a4:	4603      	mov	r3, r0
 80013a6:	2b00      	cmp	r3, #0
 80013a8:	d001      	beq.n	80013ae <SystemClock_Config+0xaa>
  {
    Error_Handler();
 80013aa:	f000 f9cb 	bl	8001744 <Error_Handler>
  }
}
 80013ae:	bf00      	nop
 80013b0:	3750      	adds	r7, #80	; 0x50
 80013b2:	46bd      	mov	sp, r7
 80013b4:	bd80      	pop	{r7, pc}
 80013b6:	bf00      	nop
 80013b8:	40023800 	.word	0x40023800
 80013bc:	40007000 	.word	0x40007000

080013c0 <MX_ADC1_Init>:
  * @brief ADC1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_ADC1_Init(void)
{
 80013c0:	b580      	push	{r7, lr}
 80013c2:	b084      	sub	sp, #16
 80013c4:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC1_Init 0 */

  /* USER CODE END ADC1_Init 0 */

  ADC_ChannelConfTypeDef sConfig = {0};
 80013c6:	463b      	mov	r3, r7
 80013c8:	2200      	movs	r2, #0
 80013ca:	601a      	str	r2, [r3, #0]
 80013cc:	605a      	str	r2, [r3, #4]
 80013ce:	609a      	str	r2, [r3, #8]
 80013d0:	60da      	str	r2, [r3, #12]

  /* USER CODE END ADC1_Init 1 */

  /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of conversion)
  */
  hadc1.Instance = ADC1;
 80013d2:	4b21      	ldr	r3, [pc, #132]	; (8001458 <MX_ADC1_Init+0x98>)
 80013d4:	4a21      	ldr	r2, [pc, #132]	; (800145c <MX_ADC1_Init+0x9c>)
 80013d6:	601a      	str	r2, [r3, #0]
  hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV2;
 80013d8:	4b1f      	ldr	r3, [pc, #124]	; (8001458 <MX_ADC1_Init+0x98>)
 80013da:	2200      	movs	r2, #0
 80013dc:	605a      	str	r2, [r3, #4]
  hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 80013de:	4b1e      	ldr	r3, [pc, #120]	; (8001458 <MX_ADC1_Init+0x98>)
 80013e0:	2200      	movs	r2, #0
 80013e2:	609a      	str	r2, [r3, #8]
  hadc1.Init.ScanConvMode = DISABLE;
 80013e4:	4b1c      	ldr	r3, [pc, #112]	; (8001458 <MX_ADC1_Init+0x98>)
 80013e6:	2200      	movs	r2, #0
 80013e8:	611a      	str	r2, [r3, #16]
  hadc1.Init.ContinuousConvMode = DISABLE;
 80013ea:	4b1b      	ldr	r3, [pc, #108]	; (8001458 <MX_ADC1_Init+0x98>)
 80013ec:	2200      	movs	r2, #0
 80013ee:	761a      	strb	r2, [r3, #24]
  hadc1.Init.DiscontinuousConvMode = DISABLE;
 80013f0:	4b19      	ldr	r3, [pc, #100]	; (8001458 <MX_ADC1_Init+0x98>)
 80013f2:	2200      	movs	r2, #0
 80013f4:	f883 2020 	strb.w	r2, [r3, #32]
  hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 80013f8:	4b17      	ldr	r3, [pc, #92]	; (8001458 <MX_ADC1_Init+0x98>)
 80013fa:	2200      	movs	r2, #0
 80013fc:	62da      	str	r2, [r3, #44]	; 0x2c
  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 80013fe:	4b16      	ldr	r3, [pc, #88]	; (8001458 <MX_ADC1_Init+0x98>)
 8001400:	4a17      	ldr	r2, [pc, #92]	; (8001460 <MX_ADC1_Init+0xa0>)
 8001402:	629a      	str	r2, [r3, #40]	; 0x28
  hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 8001404:	4b14      	ldr	r3, [pc, #80]	; (8001458 <MX_ADC1_Init+0x98>)
 8001406:	2200      	movs	r2, #0
 8001408:	60da      	str	r2, [r3, #12]
  hadc1.Init.NbrOfConversion = 1;
 800140a:	4b13      	ldr	r3, [pc, #76]	; (8001458 <MX_ADC1_Init+0x98>)
 800140c:	2201      	movs	r2, #1
 800140e:	61da      	str	r2, [r3, #28]
  hadc1.Init.DMAContinuousRequests = DISABLE;
 8001410:	4b11      	ldr	r3, [pc, #68]	; (8001458 <MX_ADC1_Init+0x98>)
 8001412:	2200      	movs	r2, #0
 8001414:	f883 2030 	strb.w	r2, [r3, #48]	; 0x30
  hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 8001418:	4b0f      	ldr	r3, [pc, #60]	; (8001458 <MX_ADC1_Init+0x98>)
 800141a:	2201      	movs	r2, #1
 800141c:	615a      	str	r2, [r3, #20]
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 800141e:	480e      	ldr	r0, [pc, #56]	; (8001458 <MX_ADC1_Init+0x98>)
 8001420:	f000 fbd6 	bl	8001bd0 <HAL_ADC_Init>
 8001424:	4603      	mov	r3, r0
 8001426:	2b00      	cmp	r3, #0
 8001428:	d001      	beq.n	800142e <MX_ADC1_Init+0x6e>
  {
    Error_Handler();
 800142a:	f000 f98b 	bl	8001744 <Error_Handler>
  }

  /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and its sample time.
  */
  sConfig.Channel = ADC_CHANNEL_3;
 800142e:	2303      	movs	r3, #3
 8001430:	603b      	str	r3, [r7, #0]
  sConfig.Rank = 1;
 8001432:	2301      	movs	r3, #1
 8001434:	607b      	str	r3, [r7, #4]
  sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 8001436:	2300      	movs	r3, #0
 8001438:	60bb      	str	r3, [r7, #8]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 800143a:	463b      	mov	r3, r7
 800143c:	4619      	mov	r1, r3
 800143e:	4806      	ldr	r0, [pc, #24]	; (8001458 <MX_ADC1_Init+0x98>)
 8001440:	f000 fd56 	bl	8001ef0 <HAL_ADC_ConfigChannel>
 8001444:	4603      	mov	r3, r0
 8001446:	2b00      	cmp	r3, #0
 8001448:	d001      	beq.n	800144e <MX_ADC1_Init+0x8e>
  {
    Error_Handler();
 800144a:	f000 f97b 	bl	8001744 <Error_Handler>
  }
  /* USER CODE BEGIN ADC1_Init 2 */

  /* USER CODE END ADC1_Init 2 */

}
 800144e:	bf00      	nop
 8001450:	3710      	adds	r7, #16
 8001452:	46bd      	mov	sp, r7
 8001454:	bd80      	pop	{r7, pc}
 8001456:	bf00      	nop
 8001458:	200002d4 	.word	0x200002d4
 800145c:	40012000 	.word	0x40012000
 8001460:	0f000001 	.word	0x0f000001

08001464 <MX_TIM1_Init>:
  * @brief TIM1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM1_Init(void)
{
 8001464:	b580      	push	{r7, lr}
 8001466:	b092      	sub	sp, #72	; 0x48
 8001468:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM1_Init 0 */

  /* USER CODE END TIM1_Init 0 */

  TIM_MasterConfigTypeDef sMasterConfig = {0};
 800146a:	f107 0340 	add.w	r3, r7, #64	; 0x40
 800146e:	2200      	movs	r2, #0
 8001470:	601a      	str	r2, [r3, #0]
 8001472:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8001474:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8001478:	2200      	movs	r2, #0
 800147a:	601a      	str	r2, [r3, #0]
 800147c:	605a      	str	r2, [r3, #4]
 800147e:	609a      	str	r2, [r3, #8]
 8001480:	60da      	str	r2, [r3, #12]
 8001482:	611a      	str	r2, [r3, #16]
 8001484:	615a      	str	r2, [r3, #20]
 8001486:	619a      	str	r2, [r3, #24]
  TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 8001488:	1d3b      	adds	r3, r7, #4
 800148a:	2220      	movs	r2, #32
 800148c:	2100      	movs	r1, #0
 800148e:	4618      	mov	r0, r3
 8001490:	f002 fb1c 	bl	8003acc <memset>

  /* USER CODE BEGIN TIM1_Init 1 */

  /* USER CODE END TIM1_Init 1 */
  htim1.Instance = TIM1;
 8001494:	4b33      	ldr	r3, [pc, #204]	; (8001564 <MX_TIM1_Init+0x100>)
 8001496:	4a34      	ldr	r2, [pc, #208]	; (8001568 <MX_TIM1_Init+0x104>)
 8001498:	601a      	str	r2, [r3, #0]
  htim1.Init.Prescaler = 0;
 800149a:	4b32      	ldr	r3, [pc, #200]	; (8001564 <MX_TIM1_Init+0x100>)
 800149c:	2200      	movs	r2, #0
 800149e:	605a      	str	r2, [r3, #4]
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 80014a0:	4b30      	ldr	r3, [pc, #192]	; (8001564 <MX_TIM1_Init+0x100>)
 80014a2:	2200      	movs	r2, #0
 80014a4:	609a      	str	r2, [r3, #8]
  htim1.Init.Period = 4570;
 80014a6:	4b2f      	ldr	r3, [pc, #188]	; (8001564 <MX_TIM1_Init+0x100>)
 80014a8:	f241 12da 	movw	r2, #4570	; 0x11da
 80014ac:	60da      	str	r2, [r3, #12]
  htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80014ae:	4b2d      	ldr	r3, [pc, #180]	; (8001564 <MX_TIM1_Init+0x100>)
 80014b0:	2200      	movs	r2, #0
 80014b2:	611a      	str	r2, [r3, #16]
  htim1.Init.RepetitionCounter = 0;
 80014b4:	4b2b      	ldr	r3, [pc, #172]	; (8001564 <MX_TIM1_Init+0x100>)
 80014b6:	2200      	movs	r2, #0
 80014b8:	615a      	str	r2, [r3, #20]
  htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80014ba:	4b2a      	ldr	r3, [pc, #168]	; (8001564 <MX_TIM1_Init+0x100>)
 80014bc:	2200      	movs	r2, #0
 80014be:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
 80014c0:	4828      	ldr	r0, [pc, #160]	; (8001564 <MX_TIM1_Init+0x100>)
 80014c2:	f001 fe2f 	bl	8003124 <HAL_TIM_PWM_Init>
 80014c6:	4603      	mov	r3, r0
 80014c8:	2b00      	cmp	r3, #0
 80014ca:	d001      	beq.n	80014d0 <MX_TIM1_Init+0x6c>
  {
    Error_Handler();
 80014cc:	f000 f93a 	bl	8001744 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80014d0:	2300      	movs	r3, #0
 80014d2:	643b      	str	r3, [r7, #64]	; 0x40
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80014d4:	2300      	movs	r3, #0
 80014d6:	647b      	str	r3, [r7, #68]	; 0x44
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 80014d8:	f107 0340 	add.w	r3, r7, #64	; 0x40
 80014dc:	4619      	mov	r1, r3
 80014de:	4821      	ldr	r0, [pc, #132]	; (8001564 <MX_TIM1_Init+0x100>)
 80014e0:	f002 fa14 	bl	800390c <HAL_TIMEx_MasterConfigSynchronization>
 80014e4:	4603      	mov	r3, r0
 80014e6:	2b00      	cmp	r3, #0
 80014e8:	d001      	beq.n	80014ee <MX_TIM1_Init+0x8a>
  {
    Error_Handler();
 80014ea:	f000 f92b 	bl	8001744 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 80014ee:	2360      	movs	r3, #96	; 0x60
 80014f0:	627b      	str	r3, [r7, #36]	; 0x24
  sConfigOC.Pulse = 0;
 80014f2:	2300      	movs	r3, #0
 80014f4:	62bb      	str	r3, [r7, #40]	; 0x28
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 80014f6:	2300      	movs	r3, #0
 80014f8:	62fb      	str	r3, [r7, #44]	; 0x2c
  sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 80014fa:	2300      	movs	r3, #0
 80014fc:	633b      	str	r3, [r7, #48]	; 0x30
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 80014fe:	2300      	movs	r3, #0
 8001500:	637b      	str	r3, [r7, #52]	; 0x34
  sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 8001502:	2300      	movs	r3, #0
 8001504:	63bb      	str	r3, [r7, #56]	; 0x38
  sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 8001506:	2300      	movs	r3, #0
 8001508:	63fb      	str	r3, [r7, #60]	; 0x3c
  if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 800150a:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800150e:	2200      	movs	r2, #0
 8001510:	4619      	mov	r1, r3
 8001512:	4814      	ldr	r0, [pc, #80]	; (8001564 <MX_TIM1_Init+0x100>)
 8001514:	f001 ff06 	bl	8003324 <HAL_TIM_PWM_ConfigChannel>
 8001518:	4603      	mov	r3, r0
 800151a:	2b00      	cmp	r3, #0
 800151c:	d001      	beq.n	8001522 <MX_TIM1_Init+0xbe>
  {
    Error_Handler();
 800151e:	f000 f911 	bl	8001744 <Error_Handler>
  }
  sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 8001522:	2300      	movs	r3, #0
 8001524:	607b      	str	r3, [r7, #4]
  sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 8001526:	2300      	movs	r3, #0
 8001528:	60bb      	str	r3, [r7, #8]
  sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 800152a:	2300      	movs	r3, #0
 800152c:	60fb      	str	r3, [r7, #12]
  sBreakDeadTimeConfig.DeadTime = 0;
 800152e:	2300      	movs	r3, #0
 8001530:	613b      	str	r3, [r7, #16]
  sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 8001532:	2300      	movs	r3, #0
 8001534:	617b      	str	r3, [r7, #20]
  sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 8001536:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 800153a:	61bb      	str	r3, [r7, #24]
  sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 800153c:	2300      	movs	r3, #0
 800153e:	623b      	str	r3, [r7, #32]
  if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 8001540:	1d3b      	adds	r3, r7, #4
 8001542:	4619      	mov	r1, r3
 8001544:	4807      	ldr	r0, [pc, #28]	; (8001564 <MX_TIM1_Init+0x100>)
 8001546:	f002 fa4f 	bl	80039e8 <HAL_TIMEx_ConfigBreakDeadTime>
 800154a:	4603      	mov	r3, r0
 800154c:	2b00      	cmp	r3, #0
 800154e:	d001      	beq.n	8001554 <MX_TIM1_Init+0xf0>
  {
    Error_Handler();
 8001550:	f000 f8f8 	bl	8001744 <Error_Handler>
  }
  /* USER CODE BEGIN TIM1_Init 2 */

  /* USER CODE END TIM1_Init 2 */
  HAL_TIM_MspPostInit(&htim1);
 8001554:	4803      	ldr	r0, [pc, #12]	; (8001564 <MX_TIM1_Init+0x100>)
 8001556:	f000 f99d 	bl	8001894 <HAL_TIM_MspPostInit>

}
 800155a:	bf00      	nop
 800155c:	3748      	adds	r7, #72	; 0x48
 800155e:	46bd      	mov	sp, r7
 8001560:	bd80      	pop	{r7, pc}
 8001562:	bf00      	nop
 8001564:	2000031c 	.word	0x2000031c
 8001568:	40010000 	.word	0x40010000

0800156c <MX_TIM2_Init>:
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM2_Init(void)
{
 800156c:	b580      	push	{r7, lr}
 800156e:	b08a      	sub	sp, #40	; 0x28
 8001570:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001572:	f107 0320 	add.w	r3, r7, #32
 8001576:	2200      	movs	r2, #0
 8001578:	601a      	str	r2, [r3, #0]
 800157a:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 800157c:	1d3b      	adds	r3, r7, #4
 800157e:	2200      	movs	r2, #0
 8001580:	601a      	str	r2, [r3, #0]
 8001582:	605a      	str	r2, [r3, #4]
 8001584:	609a      	str	r2, [r3, #8]
 8001586:	60da      	str	r2, [r3, #12]
 8001588:	611a      	str	r2, [r3, #16]
 800158a:	615a      	str	r2, [r3, #20]
 800158c:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 800158e:	4b22      	ldr	r3, [pc, #136]	; (8001618 <MX_TIM2_Init+0xac>)
 8001590:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8001594:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 0;
 8001596:	4b20      	ldr	r3, [pc, #128]	; (8001618 <MX_TIM2_Init+0xac>)
 8001598:	2200      	movs	r2, #0
 800159a:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 800159c:	4b1e      	ldr	r3, [pc, #120]	; (8001618 <MX_TIM2_Init+0xac>)
 800159e:	2200      	movs	r2, #0
 80015a0:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 4570;
 80015a2:	4b1d      	ldr	r3, [pc, #116]	; (8001618 <MX_TIM2_Init+0xac>)
 80015a4:	f241 12da 	movw	r2, #4570	; 0x11da
 80015a8:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80015aa:	4b1b      	ldr	r3, [pc, #108]	; (8001618 <MX_TIM2_Init+0xac>)
 80015ac:	2200      	movs	r2, #0
 80015ae:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80015b0:	4b19      	ldr	r3, [pc, #100]	; (8001618 <MX_TIM2_Init+0xac>)
 80015b2:	2200      	movs	r2, #0
 80015b4:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 80015b6:	4818      	ldr	r0, [pc, #96]	; (8001618 <MX_TIM2_Init+0xac>)
 80015b8:	f001 fdb4 	bl	8003124 <HAL_TIM_PWM_Init>
 80015bc:	4603      	mov	r3, r0
 80015be:	2b00      	cmp	r3, #0
 80015c0:	d001      	beq.n	80015c6 <MX_TIM2_Init+0x5a>
  {
    Error_Handler();
 80015c2:	f000 f8bf 	bl	8001744 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80015c6:	2300      	movs	r3, #0
 80015c8:	623b      	str	r3, [r7, #32]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80015ca:	2300      	movs	r3, #0
 80015cc:	627b      	str	r3, [r7, #36]	; 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 80015ce:	f107 0320 	add.w	r3, r7, #32
 80015d2:	4619      	mov	r1, r3
 80015d4:	4810      	ldr	r0, [pc, #64]	; (8001618 <MX_TIM2_Init+0xac>)
 80015d6:	f002 f999 	bl	800390c <HAL_TIMEx_MasterConfigSynchronization>
 80015da:	4603      	mov	r3, r0
 80015dc:	2b00      	cmp	r3, #0
 80015de:	d001      	beq.n	80015e4 <MX_TIM2_Init+0x78>
  {
    Error_Handler();
 80015e0:	f000 f8b0 	bl	8001744 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 80015e4:	2360      	movs	r3, #96	; 0x60
 80015e6:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 0;
 80015e8:	2300      	movs	r3, #0
 80015ea:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 80015ec:	2300      	movs	r3, #0
 80015ee:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 80015f0:	2300      	movs	r3, #0
 80015f2:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 80015f4:	1d3b      	adds	r3, r7, #4
 80015f6:	2204      	movs	r2, #4
 80015f8:	4619      	mov	r1, r3
 80015fa:	4807      	ldr	r0, [pc, #28]	; (8001618 <MX_TIM2_Init+0xac>)
 80015fc:	f001 fe92 	bl	8003324 <HAL_TIM_PWM_ConfigChannel>
 8001600:	4603      	mov	r3, r0
 8001602:	2b00      	cmp	r3, #0
 8001604:	d001      	beq.n	800160a <MX_TIM2_Init+0x9e>
  {
    Error_Handler();
 8001606:	f000 f89d 	bl	8001744 <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */
  HAL_TIM_MspPostInit(&htim2);
 800160a:	4803      	ldr	r0, [pc, #12]	; (8001618 <MX_TIM2_Init+0xac>)
 800160c:	f000 f942 	bl	8001894 <HAL_TIM_MspPostInit>

}
 8001610:	bf00      	nop
 8001612:	3728      	adds	r7, #40	; 0x28
 8001614:	46bd      	mov	sp, r7
 8001616:	bd80      	pop	{r7, pc}
 8001618:	20000364 	.word	0x20000364

0800161c <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 800161c:	b580      	push	{r7, lr}
 800161e:	b088      	sub	sp, #32
 8001620:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001622:	f107 030c 	add.w	r3, r7, #12
 8001626:	2200      	movs	r2, #0
 8001628:	601a      	str	r2, [r3, #0]
 800162a:	605a      	str	r2, [r3, #4]
 800162c:	609a      	str	r2, [r3, #8]
 800162e:	60da      	str	r2, [r3, #12]
 8001630:	611a      	str	r2, [r3, #16]
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8001632:	2300      	movs	r3, #0
 8001634:	60bb      	str	r3, [r7, #8]
 8001636:	4b3f      	ldr	r3, [pc, #252]	; (8001734 <MX_GPIO_Init+0x118>)
 8001638:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800163a:	4a3e      	ldr	r2, [pc, #248]	; (8001734 <MX_GPIO_Init+0x118>)
 800163c:	f043 0304 	orr.w	r3, r3, #4
 8001640:	6313      	str	r3, [r2, #48]	; 0x30
 8001642:	4b3c      	ldr	r3, [pc, #240]	; (8001734 <MX_GPIO_Init+0x118>)
 8001644:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001646:	f003 0304 	and.w	r3, r3, #4
 800164a:	60bb      	str	r3, [r7, #8]
 800164c:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 800164e:	2300      	movs	r3, #0
 8001650:	607b      	str	r3, [r7, #4]
 8001652:	4b38      	ldr	r3, [pc, #224]	; (8001734 <MX_GPIO_Init+0x118>)
 8001654:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001656:	4a37      	ldr	r2, [pc, #220]	; (8001734 <MX_GPIO_Init+0x118>)
 8001658:	f043 0301 	orr.w	r3, r3, #1
 800165c:	6313      	str	r3, [r2, #48]	; 0x30
 800165e:	4b35      	ldr	r3, [pc, #212]	; (8001734 <MX_GPIO_Init+0x118>)
 8001660:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001662:	f003 0301 	and.w	r3, r3, #1
 8001666:	607b      	str	r3, [r7, #4]
 8001668:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 800166a:	2300      	movs	r3, #0
 800166c:	603b      	str	r3, [r7, #0]
 800166e:	4b31      	ldr	r3, [pc, #196]	; (8001734 <MX_GPIO_Init+0x118>)
 8001670:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001672:	4a30      	ldr	r2, [pc, #192]	; (8001734 <MX_GPIO_Init+0x118>)
 8001674:	f043 0302 	orr.w	r3, r3, #2
 8001678:	6313      	str	r3, [r2, #48]	; 0x30
 800167a:	4b2e      	ldr	r3, [pc, #184]	; (8001734 <MX_GPIO_Init+0x118>)
 800167c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800167e:	f003 0302 	and.w	r3, r3, #2
 8001682:	603b      	str	r3, [r7, #0]
 8001684:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOC, EN_Pin|S0_Pin, GPIO_PIN_RESET);
 8001686:	2200      	movs	r2, #0
 8001688:	f44f 4140 	mov.w	r1, #49152	; 0xc000
 800168c:	482a      	ldr	r0, [pc, #168]	; (8001738 <MX_GPIO_Init+0x11c>)
 800168e:	f001 f8f3 	bl	8002878 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, S1_Pin|S2_Pin|S3_Pin|BL_Pin
 8001692:	2200      	movs	r2, #0
 8001694:	f649 61b7 	movw	r1, #40631	; 0x9eb7
 8001698:	4828      	ldr	r0, [pc, #160]	; (800173c <MX_GPIO_Init+0x120>)
 800169a:	f001 f8ed 	bl	8002878 <HAL_GPIO_WritePin>
                          |CLK_Pin|DIN_Pin|AI2_Pin|AI1_Pin
                          |STBY_Pin|BI1_Pin|BI2_Pin, GPIO_PIN_RESET);

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, DC_Pin|CE_Pin|RST_Pin, GPIO_PIN_RESET);
 800169e:	2200      	movs	r2, #0
 80016a0:	2107      	movs	r1, #7
 80016a2:	4827      	ldr	r0, [pc, #156]	; (8001740 <MX_GPIO_Init+0x124>)
 80016a4:	f001 f8e8 	bl	8002878 <HAL_GPIO_WritePin>

  /*Configure GPIO pins : EN_Pin S0_Pin */
  GPIO_InitStruct.Pin = EN_Pin|S0_Pin;
 80016a8:	f44f 4340 	mov.w	r3, #49152	; 0xc000
 80016ac:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80016ae:	2301      	movs	r3, #1
 80016b0:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80016b2:	2300      	movs	r3, #0
 80016b4:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80016b6:	2300      	movs	r3, #0
 80016b8:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80016ba:	f107 030c 	add.w	r3, r7, #12
 80016be:	4619      	mov	r1, r3
 80016c0:	481d      	ldr	r0, [pc, #116]	; (8001738 <MX_GPIO_Init+0x11c>)
 80016c2:	f000 ff55 	bl	8002570 <HAL_GPIO_Init>

  /*Configure GPIO pins : S1_Pin S2_Pin S3_Pin BL_Pin
                           CLK_Pin DIN_Pin AI2_Pin AI1_Pin
                           STBY_Pin BI1_Pin BI2_Pin */
  GPIO_InitStruct.Pin = S1_Pin|S2_Pin|S3_Pin|BL_Pin
 80016c6:	f649 63b7 	movw	r3, #40631	; 0x9eb7
 80016ca:	60fb      	str	r3, [r7, #12]
                          |CLK_Pin|DIN_Pin|AI2_Pin|AI1_Pin
                          |STBY_Pin|BI1_Pin|BI2_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80016cc:	2301      	movs	r3, #1
 80016ce:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80016d0:	2300      	movs	r3, #0
 80016d2:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80016d4:	2300      	movs	r3, #0
 80016d6:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80016d8:	f107 030c 	add.w	r3, r7, #12
 80016dc:	4619      	mov	r1, r3
 80016de:	4817      	ldr	r0, [pc, #92]	; (800173c <MX_GPIO_Init+0x120>)
 80016e0:	f000 ff46 	bl	8002570 <HAL_GPIO_Init>

  /*Configure GPIO pins : DC_Pin CE_Pin RST_Pin */
  GPIO_InitStruct.Pin = DC_Pin|CE_Pin|RST_Pin;
 80016e4:	2307      	movs	r3, #7
 80016e6:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80016e8:	2301      	movs	r3, #1
 80016ea:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80016ec:	2300      	movs	r3, #0
 80016ee:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80016f0:	2300      	movs	r3, #0
 80016f2:	61bb      	str	r3, [r7, #24]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80016f4:	f107 030c 	add.w	r3, r7, #12
 80016f8:	4619      	mov	r1, r3
 80016fa:	4811      	ldr	r0, [pc, #68]	; (8001740 <MX_GPIO_Init+0x124>)
 80016fc:	f000 ff38 	bl	8002570 <HAL_GPIO_Init>

  /*Configure GPIO pins : BOT2_Pin BOT1_Pin */
  GPIO_InitStruct.Pin = BOT2_Pin|BOT1_Pin;
 8001700:	f44f 7340 	mov.w	r3, #768	; 0x300
 8001704:	60fb      	str	r3, [r7, #12]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8001706:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
 800170a:	613b      	str	r3, [r7, #16]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800170c:	2300      	movs	r3, #0
 800170e:	617b      	str	r3, [r7, #20]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001710:	f107 030c 	add.w	r3, r7, #12
 8001714:	4619      	mov	r1, r3
 8001716:	480a      	ldr	r0, [pc, #40]	; (8001740 <MX_GPIO_Init+0x124>)
 8001718:	f000 ff2a 	bl	8002570 <HAL_GPIO_Init>

  /* EXTI interrupt init*/
  HAL_NVIC_SetPriority(EXTI9_5_IRQn, 0, 0);
 800171c:	2200      	movs	r2, #0
 800171e:	2100      	movs	r1, #0
 8001720:	2017      	movs	r0, #23
 8001722:	f000 feee 	bl	8002502 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI9_5_IRQn);
 8001726:	2017      	movs	r0, #23
 8001728:	f000 ff07 	bl	800253a <HAL_NVIC_EnableIRQ>

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}
 800172c:	bf00      	nop
 800172e:	3720      	adds	r7, #32
 8001730:	46bd      	mov	sp, r7
 8001732:	bd80      	pop	{r7, pc}
 8001734:	40023800 	.word	0x40023800
 8001738:	40020800 	.word	0x40020800
 800173c:	40020000 	.word	0x40020000
 8001740:	40020400 	.word	0x40020400

08001744 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8001744:	b480      	push	{r7}
 8001746:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8001748:	b672      	cpsid	i
}
 800174a:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 800174c:	e7fe      	b.n	800174c <Error_Handler+0x8>
	...

08001750 <HAL_MspInit>:
void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);
                                        /**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001750:	b480      	push	{r7}
 8001752:	b083      	sub	sp, #12
 8001754:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001756:	2300      	movs	r3, #0
 8001758:	607b      	str	r3, [r7, #4]
 800175a:	4b10      	ldr	r3, [pc, #64]	; (800179c <HAL_MspInit+0x4c>)
 800175c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800175e:	4a0f      	ldr	r2, [pc, #60]	; (800179c <HAL_MspInit+0x4c>)
 8001760:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8001764:	6453      	str	r3, [r2, #68]	; 0x44
 8001766:	4b0d      	ldr	r3, [pc, #52]	; (800179c <HAL_MspInit+0x4c>)
 8001768:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800176a:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 800176e:	607b      	str	r3, [r7, #4]
 8001770:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 8001772:	2300      	movs	r3, #0
 8001774:	603b      	str	r3, [r7, #0]
 8001776:	4b09      	ldr	r3, [pc, #36]	; (800179c <HAL_MspInit+0x4c>)
 8001778:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800177a:	4a08      	ldr	r2, [pc, #32]	; (800179c <HAL_MspInit+0x4c>)
 800177c:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8001780:	6413      	str	r3, [r2, #64]	; 0x40
 8001782:	4b06      	ldr	r3, [pc, #24]	; (800179c <HAL_MspInit+0x4c>)
 8001784:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001786:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800178a:	603b      	str	r3, [r7, #0]
 800178c:	683b      	ldr	r3, [r7, #0]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 800178e:	bf00      	nop
 8001790:	370c      	adds	r7, #12
 8001792:	46bd      	mov	sp, r7
 8001794:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001798:	4770      	bx	lr
 800179a:	bf00      	nop
 800179c:	40023800 	.word	0x40023800

080017a0 <HAL_ADC_MspInit>:
* This function configures the hardware resources used in this example
* @param hadc: ADC handle pointer
* @retval None
*/
void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
{
 80017a0:	b580      	push	{r7, lr}
 80017a2:	b08a      	sub	sp, #40	; 0x28
 80017a4:	af00      	add	r7, sp, #0
 80017a6:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80017a8:	f107 0314 	add.w	r3, r7, #20
 80017ac:	2200      	movs	r2, #0
 80017ae:	601a      	str	r2, [r3, #0]
 80017b0:	605a      	str	r2, [r3, #4]
 80017b2:	609a      	str	r2, [r3, #8]
 80017b4:	60da      	str	r2, [r3, #12]
 80017b6:	611a      	str	r2, [r3, #16]
  if(hadc->Instance==ADC1)
 80017b8:	687b      	ldr	r3, [r7, #4]
 80017ba:	681b      	ldr	r3, [r3, #0]
 80017bc:	4a17      	ldr	r2, [pc, #92]	; (800181c <HAL_ADC_MspInit+0x7c>)
 80017be:	4293      	cmp	r3, r2
 80017c0:	d127      	bne.n	8001812 <HAL_ADC_MspInit+0x72>
  {
  /* USER CODE BEGIN ADC1_MspInit 0 */

  /* USER CODE END ADC1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_ADC1_CLK_ENABLE();
 80017c2:	2300      	movs	r3, #0
 80017c4:	613b      	str	r3, [r7, #16]
 80017c6:	4b16      	ldr	r3, [pc, #88]	; (8001820 <HAL_ADC_MspInit+0x80>)
 80017c8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80017ca:	4a15      	ldr	r2, [pc, #84]	; (8001820 <HAL_ADC_MspInit+0x80>)
 80017cc:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80017d0:	6453      	str	r3, [r2, #68]	; 0x44
 80017d2:	4b13      	ldr	r3, [pc, #76]	; (8001820 <HAL_ADC_MspInit+0x80>)
 80017d4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80017d6:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80017da:	613b      	str	r3, [r7, #16]
 80017dc:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 80017de:	2300      	movs	r3, #0
 80017e0:	60fb      	str	r3, [r7, #12]
 80017e2:	4b0f      	ldr	r3, [pc, #60]	; (8001820 <HAL_ADC_MspInit+0x80>)
 80017e4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80017e6:	4a0e      	ldr	r2, [pc, #56]	; (8001820 <HAL_ADC_MspInit+0x80>)
 80017e8:	f043 0301 	orr.w	r3, r3, #1
 80017ec:	6313      	str	r3, [r2, #48]	; 0x30
 80017ee:	4b0c      	ldr	r3, [pc, #48]	; (8001820 <HAL_ADC_MspInit+0x80>)
 80017f0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80017f2:	f003 0301 	and.w	r3, r3, #1
 80017f6:	60fb      	str	r3, [r7, #12]
 80017f8:	68fb      	ldr	r3, [r7, #12]
    /**ADC1 GPIO Configuration
    PA3     ------> ADC1_IN3
    */
    GPIO_InitStruct.Pin = SIG_Pin;
 80017fa:	2308      	movs	r3, #8
 80017fc:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 80017fe:	2303      	movs	r3, #3
 8001800:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001802:	2300      	movs	r3, #0
 8001804:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(SIG_GPIO_Port, &GPIO_InitStruct);
 8001806:	f107 0314 	add.w	r3, r7, #20
 800180a:	4619      	mov	r1, r3
 800180c:	4805      	ldr	r0, [pc, #20]	; (8001824 <HAL_ADC_MspInit+0x84>)
 800180e:	f000 feaf 	bl	8002570 <HAL_GPIO_Init>
  /* USER CODE BEGIN ADC1_MspInit 1 */

  /* USER CODE END ADC1_MspInit 1 */
  }

}
 8001812:	bf00      	nop
 8001814:	3728      	adds	r7, #40	; 0x28
 8001816:	46bd      	mov	sp, r7
 8001818:	bd80      	pop	{r7, pc}
 800181a:	bf00      	nop
 800181c:	40012000 	.word	0x40012000
 8001820:	40023800 	.word	0x40023800
 8001824:	40020000 	.word	0x40020000

08001828 <HAL_TIM_PWM_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_pwm: TIM_PWM handle pointer
* @retval None
*/
void HAL_TIM_PWM_MspInit(TIM_HandleTypeDef* htim_pwm)
{
 8001828:	b480      	push	{r7}
 800182a:	b085      	sub	sp, #20
 800182c:	af00      	add	r7, sp, #0
 800182e:	6078      	str	r0, [r7, #4]
  if(htim_pwm->Instance==TIM1)
 8001830:	687b      	ldr	r3, [r7, #4]
 8001832:	681b      	ldr	r3, [r3, #0]
 8001834:	4a15      	ldr	r2, [pc, #84]	; (800188c <HAL_TIM_PWM_MspInit+0x64>)
 8001836:	4293      	cmp	r3, r2
 8001838:	d10e      	bne.n	8001858 <HAL_TIM_PWM_MspInit+0x30>
  {
  /* USER CODE BEGIN TIM1_MspInit 0 */

  /* USER CODE END TIM1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM1_CLK_ENABLE();
 800183a:	2300      	movs	r3, #0
 800183c:	60fb      	str	r3, [r7, #12]
 800183e:	4b14      	ldr	r3, [pc, #80]	; (8001890 <HAL_TIM_PWM_MspInit+0x68>)
 8001840:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001842:	4a13      	ldr	r2, [pc, #76]	; (8001890 <HAL_TIM_PWM_MspInit+0x68>)
 8001844:	f043 0301 	orr.w	r3, r3, #1
 8001848:	6453      	str	r3, [r2, #68]	; 0x44
 800184a:	4b11      	ldr	r3, [pc, #68]	; (8001890 <HAL_TIM_PWM_MspInit+0x68>)
 800184c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800184e:	f003 0301 	and.w	r3, r3, #1
 8001852:	60fb      	str	r3, [r7, #12]
 8001854:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN TIM2_MspInit 1 */

  /* USER CODE END TIM2_MspInit 1 */
  }

}
 8001856:	e012      	b.n	800187e <HAL_TIM_PWM_MspInit+0x56>
  else if(htim_pwm->Instance==TIM2)
 8001858:	687b      	ldr	r3, [r7, #4]
 800185a:	681b      	ldr	r3, [r3, #0]
 800185c:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8001860:	d10d      	bne.n	800187e <HAL_TIM_PWM_MspInit+0x56>
    __HAL_RCC_TIM2_CLK_ENABLE();
 8001862:	2300      	movs	r3, #0
 8001864:	60bb      	str	r3, [r7, #8]
 8001866:	4b0a      	ldr	r3, [pc, #40]	; (8001890 <HAL_TIM_PWM_MspInit+0x68>)
 8001868:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800186a:	4a09      	ldr	r2, [pc, #36]	; (8001890 <HAL_TIM_PWM_MspInit+0x68>)
 800186c:	f043 0301 	orr.w	r3, r3, #1
 8001870:	6413      	str	r3, [r2, #64]	; 0x40
 8001872:	4b07      	ldr	r3, [pc, #28]	; (8001890 <HAL_TIM_PWM_MspInit+0x68>)
 8001874:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001876:	f003 0301 	and.w	r3, r3, #1
 800187a:	60bb      	str	r3, [r7, #8]
 800187c:	68bb      	ldr	r3, [r7, #8]
}
 800187e:	bf00      	nop
 8001880:	3714      	adds	r7, #20
 8001882:	46bd      	mov	sp, r7
 8001884:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001888:	4770      	bx	lr
 800188a:	bf00      	nop
 800188c:	40010000 	.word	0x40010000
 8001890:	40023800 	.word	0x40023800

08001894 <HAL_TIM_MspPostInit>:

void HAL_TIM_MspPostInit(TIM_HandleTypeDef* htim)
{
 8001894:	b580      	push	{r7, lr}
 8001896:	b08a      	sub	sp, #40	; 0x28
 8001898:	af00      	add	r7, sp, #0
 800189a:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800189c:	f107 0314 	add.w	r3, r7, #20
 80018a0:	2200      	movs	r2, #0
 80018a2:	601a      	str	r2, [r3, #0]
 80018a4:	605a      	str	r2, [r3, #4]
 80018a6:	609a      	str	r2, [r3, #8]
 80018a8:	60da      	str	r2, [r3, #12]
 80018aa:	611a      	str	r2, [r3, #16]
  if(htim->Instance==TIM1)
 80018ac:	687b      	ldr	r3, [r7, #4]
 80018ae:	681b      	ldr	r3, [r3, #0]
 80018b0:	4a24      	ldr	r2, [pc, #144]	; (8001944 <HAL_TIM_MspPostInit+0xb0>)
 80018b2:	4293      	cmp	r3, r2
 80018b4:	d11f      	bne.n	80018f6 <HAL_TIM_MspPostInit+0x62>
  {
  /* USER CODE BEGIN TIM1_MspPostInit 0 */

  /* USER CODE END TIM1_MspPostInit 0 */
    __HAL_RCC_GPIOA_CLK_ENABLE();
 80018b6:	2300      	movs	r3, #0
 80018b8:	613b      	str	r3, [r7, #16]
 80018ba:	4b23      	ldr	r3, [pc, #140]	; (8001948 <HAL_TIM_MspPostInit+0xb4>)
 80018bc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80018be:	4a22      	ldr	r2, [pc, #136]	; (8001948 <HAL_TIM_MspPostInit+0xb4>)
 80018c0:	f043 0301 	orr.w	r3, r3, #1
 80018c4:	6313      	str	r3, [r2, #48]	; 0x30
 80018c6:	4b20      	ldr	r3, [pc, #128]	; (8001948 <HAL_TIM_MspPostInit+0xb4>)
 80018c8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80018ca:	f003 0301 	and.w	r3, r3, #1
 80018ce:	613b      	str	r3, [r7, #16]
 80018d0:	693b      	ldr	r3, [r7, #16]
    /**TIM1 GPIO Configuration
    PA8     ------> TIM1_CH1
    */
    GPIO_InitStruct.Pin = PWM_A_Pin;
 80018d2:	f44f 7380 	mov.w	r3, #256	; 0x100
 80018d6:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80018d8:	2302      	movs	r3, #2
 80018da:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80018dc:	2300      	movs	r3, #0
 80018de:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80018e0:	2300      	movs	r3, #0
 80018e2:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF1_TIM1;
 80018e4:	2301      	movs	r3, #1
 80018e6:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(PWM_A_GPIO_Port, &GPIO_InitStruct);
 80018e8:	f107 0314 	add.w	r3, r7, #20
 80018ec:	4619      	mov	r1, r3
 80018ee:	4817      	ldr	r0, [pc, #92]	; (800194c <HAL_TIM_MspPostInit+0xb8>)
 80018f0:	f000 fe3e 	bl	8002570 <HAL_GPIO_Init>
  /* USER CODE BEGIN TIM2_MspPostInit 1 */

  /* USER CODE END TIM2_MspPostInit 1 */
  }

}
 80018f4:	e022      	b.n	800193c <HAL_TIM_MspPostInit+0xa8>
  else if(htim->Instance==TIM2)
 80018f6:	687b      	ldr	r3, [r7, #4]
 80018f8:	681b      	ldr	r3, [r3, #0]
 80018fa:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80018fe:	d11d      	bne.n	800193c <HAL_TIM_MspPostInit+0xa8>
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001900:	2300      	movs	r3, #0
 8001902:	60fb      	str	r3, [r7, #12]
 8001904:	4b10      	ldr	r3, [pc, #64]	; (8001948 <HAL_TIM_MspPostInit+0xb4>)
 8001906:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001908:	4a0f      	ldr	r2, [pc, #60]	; (8001948 <HAL_TIM_MspPostInit+0xb4>)
 800190a:	f043 0302 	orr.w	r3, r3, #2
 800190e:	6313      	str	r3, [r2, #48]	; 0x30
 8001910:	4b0d      	ldr	r3, [pc, #52]	; (8001948 <HAL_TIM_MspPostInit+0xb4>)
 8001912:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001914:	f003 0302 	and.w	r3, r3, #2
 8001918:	60fb      	str	r3, [r7, #12]
 800191a:	68fb      	ldr	r3, [r7, #12]
    GPIO_InitStruct.Pin = PWM_B_Pin;
 800191c:	2308      	movs	r3, #8
 800191e:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001920:	2302      	movs	r3, #2
 8001922:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001924:	2300      	movs	r3, #0
 8001926:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001928:	2300      	movs	r3, #0
 800192a:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF1_TIM2;
 800192c:	2301      	movs	r3, #1
 800192e:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(PWM_B_GPIO_Port, &GPIO_InitStruct);
 8001930:	f107 0314 	add.w	r3, r7, #20
 8001934:	4619      	mov	r1, r3
 8001936:	4806      	ldr	r0, [pc, #24]	; (8001950 <HAL_TIM_MspPostInit+0xbc>)
 8001938:	f000 fe1a 	bl	8002570 <HAL_GPIO_Init>
}
 800193c:	bf00      	nop
 800193e:	3728      	adds	r7, #40	; 0x28
 8001940:	46bd      	mov	sp, r7
 8001942:	bd80      	pop	{r7, pc}
 8001944:	40010000 	.word	0x40010000
 8001948:	40023800 	.word	0x40023800
 800194c:	40020000 	.word	0x40020000
 8001950:	40020400 	.word	0x40020400

08001954 <NMI_Handler>:
 8001954:	b480      	push	{r7}
 8001956:	af00      	add	r7, sp, #0
 8001958:	e7fe      	b.n	8001958 <NMI_Handler+0x4>

0800195a <HardFault_Handler>:
 800195a:	b480      	push	{r7}
 800195c:	af00      	add	r7, sp, #0
 800195e:	e7fe      	b.n	800195e <HardFault_Handler+0x4>

08001960 <MemManage_Handler>:
 8001960:	b480      	push	{r7}
 8001962:	af00      	add	r7, sp, #0
 8001964:	e7fe      	b.n	8001964 <MemManage_Handler+0x4>

08001966 <BusFault_Handler>:
 8001966:	b480      	push	{r7}
 8001968:	af00      	add	r7, sp, #0
 800196a:	e7fe      	b.n	800196a <BusFault_Handler+0x4>

0800196c <UsageFault_Handler>:
 800196c:	b480      	push	{r7}
 800196e:	af00      	add	r7, sp, #0
 8001970:	e7fe      	b.n	8001970 <UsageFault_Handler+0x4>

08001972 <SVC_Handler>:
 8001972:	b480      	push	{r7}
 8001974:	af00      	add	r7, sp, #0
 8001976:	bf00      	nop
 8001978:	46bd      	mov	sp, r7
 800197a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800197e:	4770      	bx	lr

08001980 <DebugMon_Handler>:
 8001980:	b480      	push	{r7}
 8001982:	af00      	add	r7, sp, #0
 8001984:	bf00      	nop
 8001986:	46bd      	mov	sp, r7
 8001988:	f85d 7b04 	ldr.w	r7, [sp], #4
 800198c:	4770      	bx	lr

0800198e <PendSV_Handler>:
 800198e:	b480      	push	{r7}
 8001990:	af00      	add	r7, sp, #0
 8001992:	bf00      	nop
 8001994:	46bd      	mov	sp, r7
 8001996:	f85d 7b04 	ldr.w	r7, [sp], #4
 800199a:	4770      	bx	lr

0800199c <SysTick_Handler>:
 800199c:	b580      	push	{r7, lr}
 800199e:	af00      	add	r7, sp, #0
 80019a0:	f000 f8d2 	bl	8001b48 <HAL_IncTick>
 80019a4:	bf00      	nop
 80019a6:	bd80      	pop	{r7, pc}

080019a8 <EXTI9_5_IRQHandler>:
 80019a8:	b580      	push	{r7, lr}
 80019aa:	af00      	add	r7, sp, #0
 80019ac:	f44f 7080 	mov.w	r0, #256	; 0x100
 80019b0:	f000 ff7c 	bl	80028ac <HAL_GPIO_EXTI_IRQHandler>
 80019b4:	f44f 7000 	mov.w	r0, #512	; 0x200
 80019b8:	f000 ff78 	bl	80028ac <HAL_GPIO_EXTI_IRQHandler>
 80019bc:	bf00      	nop
 80019be:	bd80      	pop	{r7, pc}

080019c0 <_sbrk>:
 80019c0:	b580      	push	{r7, lr}
 80019c2:	b086      	sub	sp, #24
 80019c4:	af00      	add	r7, sp, #0
 80019c6:	6078      	str	r0, [r7, #4]
 80019c8:	4a14      	ldr	r2, [pc, #80]	; (8001a1c <_sbrk+0x5c>)
 80019ca:	4b15      	ldr	r3, [pc, #84]	; (8001a20 <_sbrk+0x60>)
 80019cc:	1ad3      	subs	r3, r2, r3
 80019ce:	617b      	str	r3, [r7, #20]
 80019d0:	697b      	ldr	r3, [r7, #20]
 80019d2:	613b      	str	r3, [r7, #16]
 80019d4:	4b13      	ldr	r3, [pc, #76]	; (8001a24 <_sbrk+0x64>)
 80019d6:	681b      	ldr	r3, [r3, #0]
 80019d8:	2b00      	cmp	r3, #0
 80019da:	d102      	bne.n	80019e2 <_sbrk+0x22>
 80019dc:	4b11      	ldr	r3, [pc, #68]	; (8001a24 <_sbrk+0x64>)
 80019de:	4a12      	ldr	r2, [pc, #72]	; (8001a28 <_sbrk+0x68>)
 80019e0:	601a      	str	r2, [r3, #0]
 80019e2:	4b10      	ldr	r3, [pc, #64]	; (8001a24 <_sbrk+0x64>)
 80019e4:	681a      	ldr	r2, [r3, #0]
 80019e6:	687b      	ldr	r3, [r7, #4]
 80019e8:	4413      	add	r3, r2
 80019ea:	693a      	ldr	r2, [r7, #16]
 80019ec:	429a      	cmp	r2, r3
 80019ee:	d207      	bcs.n	8001a00 <_sbrk+0x40>
 80019f0:	f002 f874 	bl	8003adc <__errno>
 80019f4:	4603      	mov	r3, r0
 80019f6:	220c      	movs	r2, #12
 80019f8:	601a      	str	r2, [r3, #0]
 80019fa:	f04f 33ff 	mov.w	r3, #4294967295
 80019fe:	e009      	b.n	8001a14 <_sbrk+0x54>
 8001a00:	4b08      	ldr	r3, [pc, #32]	; (8001a24 <_sbrk+0x64>)
 8001a02:	681b      	ldr	r3, [r3, #0]
 8001a04:	60fb      	str	r3, [r7, #12]
 8001a06:	4b07      	ldr	r3, [pc, #28]	; (8001a24 <_sbrk+0x64>)
 8001a08:	681a      	ldr	r2, [r3, #0]
 8001a0a:	687b      	ldr	r3, [r7, #4]
 8001a0c:	4413      	add	r3, r2
 8001a0e:	4a05      	ldr	r2, [pc, #20]	; (8001a24 <_sbrk+0x64>)
 8001a10:	6013      	str	r3, [r2, #0]
 8001a12:	68fb      	ldr	r3, [r7, #12]
 8001a14:	4618      	mov	r0, r3
 8001a16:	3718      	adds	r7, #24
 8001a18:	46bd      	mov	sp, r7
 8001a1a:	bd80      	pop	{r7, pc}
 8001a1c:	20020000 	.word	0x20020000
 8001a20:	00000400 	.word	0x00000400
 8001a24:	200004d8 	.word	0x200004d8
 8001a28:	20000628 	.word	0x20000628

08001a2c <SystemInit>:
 8001a2c:	b480      	push	{r7}
 8001a2e:	af00      	add	r7, sp, #0
 8001a30:	4b06      	ldr	r3, [pc, #24]	; (8001a4c <SystemInit+0x20>)
 8001a32:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8001a36:	4a05      	ldr	r2, [pc, #20]	; (8001a4c <SystemInit+0x20>)
 8001a38:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8001a3c:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 8001a40:	bf00      	nop
 8001a42:	46bd      	mov	sp, r7
 8001a44:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a48:	4770      	bx	lr
 8001a4a:	bf00      	nop
 8001a4c:	e000ed00 	.word	0xe000ed00

08001a50 <Reset_Handler>:
 8001a50:	f8df d034 	ldr.w	sp, [pc, #52]	; 8001a88 <LoopFillZerobss+0x12>
 8001a54:	480d      	ldr	r0, [pc, #52]	; (8001a8c <LoopFillZerobss+0x16>)
 8001a56:	490e      	ldr	r1, [pc, #56]	; (8001a90 <LoopFillZerobss+0x1a>)
 8001a58:	4a0e      	ldr	r2, [pc, #56]	; (8001a94 <LoopFillZerobss+0x1e>)
 8001a5a:	2300      	movs	r3, #0
 8001a5c:	e002      	b.n	8001a64 <LoopCopyDataInit>

08001a5e <CopyDataInit>:
 8001a5e:	58d4      	ldr	r4, [r2, r3]
 8001a60:	50c4      	str	r4, [r0, r3]
 8001a62:	3304      	adds	r3, #4

08001a64 <LoopCopyDataInit>:
 8001a64:	18c4      	adds	r4, r0, r3
 8001a66:	428c      	cmp	r4, r1
 8001a68:	d3f9      	bcc.n	8001a5e <CopyDataInit>
 8001a6a:	4a0b      	ldr	r2, [pc, #44]	; (8001a98 <LoopFillZerobss+0x22>)
 8001a6c:	4c0b      	ldr	r4, [pc, #44]	; (8001a9c <LoopFillZerobss+0x26>)
 8001a6e:	2300      	movs	r3, #0
 8001a70:	e001      	b.n	8001a76 <LoopFillZerobss>

08001a72 <FillZerobss>:
 8001a72:	6013      	str	r3, [r2, #0]
 8001a74:	3204      	adds	r2, #4

08001a76 <LoopFillZerobss>:
 8001a76:	42a2      	cmp	r2, r4
 8001a78:	d3fb      	bcc.n	8001a72 <FillZerobss>
 8001a7a:	f7ff ffd7 	bl	8001a2c <SystemInit>
 8001a7e:	f002 f833 	bl	8003ae8 <__libc_init_array>
 8001a82:	f7ff fb73 	bl	800116c <main>
 8001a86:	4770      	bx	lr
 8001a88:	20020000 	.word	0x20020000
 8001a8c:	20000000 	.word	0x20000000
 8001a90:	20000094 	.word	0x20000094
 8001a94:	080046d0 	.word	0x080046d0
 8001a98:	20000094 	.word	0x20000094
 8001a9c:	20000628 	.word	0x20000628

08001aa0 <ADC_IRQHandler>:
 8001aa0:	e7fe      	b.n	8001aa0 <ADC_IRQHandler>
	...

08001aa4 <HAL_Init>:
 8001aa4:	b580      	push	{r7, lr}
 8001aa6:	af00      	add	r7, sp, #0
 8001aa8:	4b0e      	ldr	r3, [pc, #56]	; (8001ae4 <HAL_Init+0x40>)
 8001aaa:	681b      	ldr	r3, [r3, #0]
 8001aac:	4a0d      	ldr	r2, [pc, #52]	; (8001ae4 <HAL_Init+0x40>)
 8001aae:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8001ab2:	6013      	str	r3, [r2, #0]
 8001ab4:	4b0b      	ldr	r3, [pc, #44]	; (8001ae4 <HAL_Init+0x40>)
 8001ab6:	681b      	ldr	r3, [r3, #0]
 8001ab8:	4a0a      	ldr	r2, [pc, #40]	; (8001ae4 <HAL_Init+0x40>)
 8001aba:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8001abe:	6013      	str	r3, [r2, #0]
 8001ac0:	4b08      	ldr	r3, [pc, #32]	; (8001ae4 <HAL_Init+0x40>)
 8001ac2:	681b      	ldr	r3, [r3, #0]
 8001ac4:	4a07      	ldr	r2, [pc, #28]	; (8001ae4 <HAL_Init+0x40>)
 8001ac6:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8001aca:	6013      	str	r3, [r2, #0]
 8001acc:	2003      	movs	r0, #3
 8001ace:	f000 fd0d 	bl	80024ec <HAL_NVIC_SetPriorityGrouping>
 8001ad2:	200f      	movs	r0, #15
 8001ad4:	f000 f808 	bl	8001ae8 <HAL_InitTick>
 8001ad8:	f7ff fe3a 	bl	8001750 <HAL_MspInit>
 8001adc:	2300      	movs	r3, #0
 8001ade:	4618      	mov	r0, r3
 8001ae0:	bd80      	pop	{r7, pc}
 8001ae2:	bf00      	nop
 8001ae4:	40023c00 	.word	0x40023c00

08001ae8 <HAL_InitTick>:
 8001ae8:	b580      	push	{r7, lr}
 8001aea:	b082      	sub	sp, #8
 8001aec:	af00      	add	r7, sp, #0
 8001aee:	6078      	str	r0, [r7, #4]
 8001af0:	4b12      	ldr	r3, [pc, #72]	; (8001b3c <HAL_InitTick+0x54>)
 8001af2:	681a      	ldr	r2, [r3, #0]
 8001af4:	4b12      	ldr	r3, [pc, #72]	; (8001b40 <HAL_InitTick+0x58>)
 8001af6:	781b      	ldrb	r3, [r3, #0]
 8001af8:	4619      	mov	r1, r3
 8001afa:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8001afe:	fbb3 f3f1 	udiv	r3, r3, r1
 8001b02:	fbb2 f3f3 	udiv	r3, r2, r3
 8001b06:	4618      	mov	r0, r3
 8001b08:	f000 fd25 	bl	8002556 <HAL_SYSTICK_Config>
 8001b0c:	4603      	mov	r3, r0
 8001b0e:	2b00      	cmp	r3, #0
 8001b10:	d001      	beq.n	8001b16 <HAL_InitTick+0x2e>
 8001b12:	2301      	movs	r3, #1
 8001b14:	e00e      	b.n	8001b34 <HAL_InitTick+0x4c>
 8001b16:	687b      	ldr	r3, [r7, #4]
 8001b18:	2b0f      	cmp	r3, #15
 8001b1a:	d80a      	bhi.n	8001b32 <HAL_InitTick+0x4a>
 8001b1c:	2200      	movs	r2, #0
 8001b1e:	6879      	ldr	r1, [r7, #4]
 8001b20:	f04f 30ff 	mov.w	r0, #4294967295
 8001b24:	f000 fced 	bl	8002502 <HAL_NVIC_SetPriority>
 8001b28:	4a06      	ldr	r2, [pc, #24]	; (8001b44 <HAL_InitTick+0x5c>)
 8001b2a:	687b      	ldr	r3, [r7, #4]
 8001b2c:	6013      	str	r3, [r2, #0]
 8001b2e:	2300      	movs	r3, #0
 8001b30:	e000      	b.n	8001b34 <HAL_InitTick+0x4c>
 8001b32:	2301      	movs	r3, #1
 8001b34:	4618      	mov	r0, r3
 8001b36:	3708      	adds	r7, #8
 8001b38:	46bd      	mov	sp, r7
 8001b3a:	bd80      	pop	{r7, pc}
 8001b3c:	20000038 	.word	0x20000038
 8001b40:	20000040 	.word	0x20000040
 8001b44:	2000003c 	.word	0x2000003c

08001b48 <HAL_IncTick>:
 8001b48:	b480      	push	{r7}
 8001b4a:	af00      	add	r7, sp, #0
 8001b4c:	4b06      	ldr	r3, [pc, #24]	; (8001b68 <HAL_IncTick+0x20>)
 8001b4e:	781b      	ldrb	r3, [r3, #0]
 8001b50:	461a      	mov	r2, r3
 8001b52:	4b06      	ldr	r3, [pc, #24]	; (8001b6c <HAL_IncTick+0x24>)
 8001b54:	681b      	ldr	r3, [r3, #0]
 8001b56:	4413      	add	r3, r2
 8001b58:	4a04      	ldr	r2, [pc, #16]	; (8001b6c <HAL_IncTick+0x24>)
 8001b5a:	6013      	str	r3, [r2, #0]
 8001b5c:	bf00      	nop
 8001b5e:	46bd      	mov	sp, r7
 8001b60:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b64:	4770      	bx	lr
 8001b66:	bf00      	nop
 8001b68:	20000040 	.word	0x20000040
 8001b6c:	200004dc 	.word	0x200004dc

08001b70 <HAL_GetTick>:
 8001b70:	b480      	push	{r7}
 8001b72:	af00      	add	r7, sp, #0
 8001b74:	4b03      	ldr	r3, [pc, #12]	; (8001b84 <HAL_GetTick+0x14>)
 8001b76:	681b      	ldr	r3, [r3, #0]
 8001b78:	4618      	mov	r0, r3
 8001b7a:	46bd      	mov	sp, r7
 8001b7c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b80:	4770      	bx	lr
 8001b82:	bf00      	nop
 8001b84:	200004dc 	.word	0x200004dc

08001b88 <HAL_Delay>:
 8001b88:	b580      	push	{r7, lr}
 8001b8a:	b084      	sub	sp, #16
 8001b8c:	af00      	add	r7, sp, #0
 8001b8e:	6078      	str	r0, [r7, #4]
 8001b90:	f7ff ffee 	bl	8001b70 <HAL_GetTick>
 8001b94:	60b8      	str	r0, [r7, #8]
 8001b96:	687b      	ldr	r3, [r7, #4]
 8001b98:	60fb      	str	r3, [r7, #12]
 8001b9a:	68fb      	ldr	r3, [r7, #12]
 8001b9c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8001ba0:	d005      	beq.n	8001bae <HAL_Delay+0x26>
 8001ba2:	4b0a      	ldr	r3, [pc, #40]	; (8001bcc <HAL_Delay+0x44>)
 8001ba4:	781b      	ldrb	r3, [r3, #0]
 8001ba6:	461a      	mov	r2, r3
 8001ba8:	68fb      	ldr	r3, [r7, #12]
 8001baa:	4413      	add	r3, r2
 8001bac:	60fb      	str	r3, [r7, #12]
 8001bae:	bf00      	nop
 8001bb0:	f7ff ffde 	bl	8001b70 <HAL_GetTick>
 8001bb4:	4602      	mov	r2, r0
 8001bb6:	68bb      	ldr	r3, [r7, #8]
 8001bb8:	1ad3      	subs	r3, r2, r3
 8001bba:	68fa      	ldr	r2, [r7, #12]
 8001bbc:	429a      	cmp	r2, r3
 8001bbe:	d8f7      	bhi.n	8001bb0 <HAL_Delay+0x28>
 8001bc0:	bf00      	nop
 8001bc2:	bf00      	nop
 8001bc4:	3710      	adds	r7, #16
 8001bc6:	46bd      	mov	sp, r7
 8001bc8:	bd80      	pop	{r7, pc}
 8001bca:	bf00      	nop
 8001bcc:	20000040 	.word	0x20000040

08001bd0 <HAL_ADC_Init>:
 8001bd0:	b580      	push	{r7, lr}
 8001bd2:	b084      	sub	sp, #16
 8001bd4:	af00      	add	r7, sp, #0
 8001bd6:	6078      	str	r0, [r7, #4]
 8001bd8:	2300      	movs	r3, #0
 8001bda:	73fb      	strb	r3, [r7, #15]
 8001bdc:	687b      	ldr	r3, [r7, #4]
 8001bde:	2b00      	cmp	r3, #0
 8001be0:	d101      	bne.n	8001be6 <HAL_ADC_Init+0x16>
 8001be2:	2301      	movs	r3, #1
 8001be4:	e033      	b.n	8001c4e <HAL_ADC_Init+0x7e>
 8001be6:	687b      	ldr	r3, [r7, #4]
 8001be8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001bea:	2b00      	cmp	r3, #0
 8001bec:	d109      	bne.n	8001c02 <HAL_ADC_Init+0x32>
 8001bee:	6878      	ldr	r0, [r7, #4]
 8001bf0:	f7ff fdd6 	bl	80017a0 <HAL_ADC_MspInit>
 8001bf4:	687b      	ldr	r3, [r7, #4]
 8001bf6:	2200      	movs	r2, #0
 8001bf8:	645a      	str	r2, [r3, #68]	; 0x44
 8001bfa:	687b      	ldr	r3, [r7, #4]
 8001bfc:	2200      	movs	r2, #0
 8001bfe:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8001c02:	687b      	ldr	r3, [r7, #4]
 8001c04:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001c06:	f003 0310 	and.w	r3, r3, #16
 8001c0a:	2b00      	cmp	r3, #0
 8001c0c:	d118      	bne.n	8001c40 <HAL_ADC_Init+0x70>
 8001c0e:	687b      	ldr	r3, [r7, #4]
 8001c10:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001c12:	f423 5388 	bic.w	r3, r3, #4352	; 0x1100
 8001c16:	f023 0302 	bic.w	r3, r3, #2
 8001c1a:	f043 0202 	orr.w	r2, r3, #2
 8001c1e:	687b      	ldr	r3, [r7, #4]
 8001c20:	641a      	str	r2, [r3, #64]	; 0x40
 8001c22:	6878      	ldr	r0, [r7, #4]
 8001c24:	f000 fa96 	bl	8002154 <ADC_Init>
 8001c28:	687b      	ldr	r3, [r7, #4]
 8001c2a:	2200      	movs	r2, #0
 8001c2c:	645a      	str	r2, [r3, #68]	; 0x44
 8001c2e:	687b      	ldr	r3, [r7, #4]
 8001c30:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001c32:	f023 0303 	bic.w	r3, r3, #3
 8001c36:	f043 0201 	orr.w	r2, r3, #1
 8001c3a:	687b      	ldr	r3, [r7, #4]
 8001c3c:	641a      	str	r2, [r3, #64]	; 0x40
 8001c3e:	e001      	b.n	8001c44 <HAL_ADC_Init+0x74>
 8001c40:	2301      	movs	r3, #1
 8001c42:	73fb      	strb	r3, [r7, #15]
 8001c44:	687b      	ldr	r3, [r7, #4]
 8001c46:	2200      	movs	r2, #0
 8001c48:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8001c4c:	7bfb      	ldrb	r3, [r7, #15]
 8001c4e:	4618      	mov	r0, r3
 8001c50:	3710      	adds	r7, #16
 8001c52:	46bd      	mov	sp, r7
 8001c54:	bd80      	pop	{r7, pc}
	...

08001c58 <HAL_ADC_Start>:
 8001c58:	b480      	push	{r7}
 8001c5a:	b085      	sub	sp, #20
 8001c5c:	af00      	add	r7, sp, #0
 8001c5e:	6078      	str	r0, [r7, #4]
 8001c60:	2300      	movs	r3, #0
 8001c62:	60bb      	str	r3, [r7, #8]
 8001c64:	687b      	ldr	r3, [r7, #4]
 8001c66:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8001c6a:	2b01      	cmp	r3, #1
 8001c6c:	d101      	bne.n	8001c72 <HAL_ADC_Start+0x1a>
 8001c6e:	2302      	movs	r3, #2
 8001c70:	e097      	b.n	8001da2 <HAL_ADC_Start+0x14a>
 8001c72:	687b      	ldr	r3, [r7, #4]
 8001c74:	2201      	movs	r2, #1
 8001c76:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8001c7a:	687b      	ldr	r3, [r7, #4]
 8001c7c:	681b      	ldr	r3, [r3, #0]
 8001c7e:	689b      	ldr	r3, [r3, #8]
 8001c80:	f003 0301 	and.w	r3, r3, #1
 8001c84:	2b01      	cmp	r3, #1
 8001c86:	d018      	beq.n	8001cba <HAL_ADC_Start+0x62>
 8001c88:	687b      	ldr	r3, [r7, #4]
 8001c8a:	681b      	ldr	r3, [r3, #0]
 8001c8c:	689a      	ldr	r2, [r3, #8]
 8001c8e:	687b      	ldr	r3, [r7, #4]
 8001c90:	681b      	ldr	r3, [r3, #0]
 8001c92:	f042 0201 	orr.w	r2, r2, #1
 8001c96:	609a      	str	r2, [r3, #8]
 8001c98:	4b45      	ldr	r3, [pc, #276]	; (8001db0 <HAL_ADC_Start+0x158>)
 8001c9a:	681b      	ldr	r3, [r3, #0]
 8001c9c:	4a45      	ldr	r2, [pc, #276]	; (8001db4 <HAL_ADC_Start+0x15c>)
 8001c9e:	fba2 2303 	umull	r2, r3, r2, r3
 8001ca2:	0c9a      	lsrs	r2, r3, #18
 8001ca4:	4613      	mov	r3, r2
 8001ca6:	005b      	lsls	r3, r3, #1
 8001ca8:	4413      	add	r3, r2
 8001caa:	60bb      	str	r3, [r7, #8]
 8001cac:	e002      	b.n	8001cb4 <HAL_ADC_Start+0x5c>
 8001cae:	68bb      	ldr	r3, [r7, #8]
 8001cb0:	3b01      	subs	r3, #1
 8001cb2:	60bb      	str	r3, [r7, #8]
 8001cb4:	68bb      	ldr	r3, [r7, #8]
 8001cb6:	2b00      	cmp	r3, #0
 8001cb8:	d1f9      	bne.n	8001cae <HAL_ADC_Start+0x56>
 8001cba:	687b      	ldr	r3, [r7, #4]
 8001cbc:	681b      	ldr	r3, [r3, #0]
 8001cbe:	689b      	ldr	r3, [r3, #8]
 8001cc0:	f003 0301 	and.w	r3, r3, #1
 8001cc4:	2b01      	cmp	r3, #1
 8001cc6:	d15f      	bne.n	8001d88 <HAL_ADC_Start+0x130>
 8001cc8:	687b      	ldr	r3, [r7, #4]
 8001cca:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001ccc:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 8001cd0:	f023 0301 	bic.w	r3, r3, #1
 8001cd4:	f443 7280 	orr.w	r2, r3, #256	; 0x100
 8001cd8:	687b      	ldr	r3, [r7, #4]
 8001cda:	641a      	str	r2, [r3, #64]	; 0x40
 8001cdc:	687b      	ldr	r3, [r7, #4]
 8001cde:	681b      	ldr	r3, [r3, #0]
 8001ce0:	685b      	ldr	r3, [r3, #4]
 8001ce2:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8001ce6:	2b00      	cmp	r3, #0
 8001ce8:	d007      	beq.n	8001cfa <HAL_ADC_Start+0xa2>
 8001cea:	687b      	ldr	r3, [r7, #4]
 8001cec:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001cee:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 8001cf2:	f443 5280 	orr.w	r2, r3, #4096	; 0x1000
 8001cf6:	687b      	ldr	r3, [r7, #4]
 8001cf8:	641a      	str	r2, [r3, #64]	; 0x40
 8001cfa:	687b      	ldr	r3, [r7, #4]
 8001cfc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001cfe:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8001d02:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8001d06:	d106      	bne.n	8001d16 <HAL_ADC_Start+0xbe>
 8001d08:	687b      	ldr	r3, [r7, #4]
 8001d0a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001d0c:	f023 0206 	bic.w	r2, r3, #6
 8001d10:	687b      	ldr	r3, [r7, #4]
 8001d12:	645a      	str	r2, [r3, #68]	; 0x44
 8001d14:	e002      	b.n	8001d1c <HAL_ADC_Start+0xc4>
 8001d16:	687b      	ldr	r3, [r7, #4]
 8001d18:	2200      	movs	r2, #0
 8001d1a:	645a      	str	r2, [r3, #68]	; 0x44
 8001d1c:	687b      	ldr	r3, [r7, #4]
 8001d1e:	2200      	movs	r2, #0
 8001d20:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8001d24:	4b24      	ldr	r3, [pc, #144]	; (8001db8 <HAL_ADC_Start+0x160>)
 8001d26:	60fb      	str	r3, [r7, #12]
 8001d28:	687b      	ldr	r3, [r7, #4]
 8001d2a:	681b      	ldr	r3, [r3, #0]
 8001d2c:	f06f 0222 	mvn.w	r2, #34	; 0x22
 8001d30:	601a      	str	r2, [r3, #0]
 8001d32:	68fb      	ldr	r3, [r7, #12]
 8001d34:	685b      	ldr	r3, [r3, #4]
 8001d36:	f003 031f 	and.w	r3, r3, #31
 8001d3a:	2b00      	cmp	r3, #0
 8001d3c:	d10f      	bne.n	8001d5e <HAL_ADC_Start+0x106>
 8001d3e:	687b      	ldr	r3, [r7, #4]
 8001d40:	681b      	ldr	r3, [r3, #0]
 8001d42:	689b      	ldr	r3, [r3, #8]
 8001d44:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 8001d48:	2b00      	cmp	r3, #0
 8001d4a:	d129      	bne.n	8001da0 <HAL_ADC_Start+0x148>
 8001d4c:	687b      	ldr	r3, [r7, #4]
 8001d4e:	681b      	ldr	r3, [r3, #0]
 8001d50:	689a      	ldr	r2, [r3, #8]
 8001d52:	687b      	ldr	r3, [r7, #4]
 8001d54:	681b      	ldr	r3, [r3, #0]
 8001d56:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 8001d5a:	609a      	str	r2, [r3, #8]
 8001d5c:	e020      	b.n	8001da0 <HAL_ADC_Start+0x148>
 8001d5e:	687b      	ldr	r3, [r7, #4]
 8001d60:	681b      	ldr	r3, [r3, #0]
 8001d62:	4a16      	ldr	r2, [pc, #88]	; (8001dbc <HAL_ADC_Start+0x164>)
 8001d64:	4293      	cmp	r3, r2
 8001d66:	d11b      	bne.n	8001da0 <HAL_ADC_Start+0x148>
 8001d68:	687b      	ldr	r3, [r7, #4]
 8001d6a:	681b      	ldr	r3, [r3, #0]
 8001d6c:	689b      	ldr	r3, [r3, #8]
 8001d6e:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 8001d72:	2b00      	cmp	r3, #0
 8001d74:	d114      	bne.n	8001da0 <HAL_ADC_Start+0x148>
 8001d76:	687b      	ldr	r3, [r7, #4]
 8001d78:	681b      	ldr	r3, [r3, #0]
 8001d7a:	689a      	ldr	r2, [r3, #8]
 8001d7c:	687b      	ldr	r3, [r7, #4]
 8001d7e:	681b      	ldr	r3, [r3, #0]
 8001d80:	f042 4280 	orr.w	r2, r2, #1073741824	; 0x40000000
 8001d84:	609a      	str	r2, [r3, #8]
 8001d86:	e00b      	b.n	8001da0 <HAL_ADC_Start+0x148>
 8001d88:	687b      	ldr	r3, [r7, #4]
 8001d8a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001d8c:	f043 0210 	orr.w	r2, r3, #16
 8001d90:	687b      	ldr	r3, [r7, #4]
 8001d92:	641a      	str	r2, [r3, #64]	; 0x40
 8001d94:	687b      	ldr	r3, [r7, #4]
 8001d96:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001d98:	f043 0201 	orr.w	r2, r3, #1
 8001d9c:	687b      	ldr	r3, [r7, #4]
 8001d9e:	645a      	str	r2, [r3, #68]	; 0x44
 8001da0:	2300      	movs	r3, #0
 8001da2:	4618      	mov	r0, r3
 8001da4:	3714      	adds	r7, #20
 8001da6:	46bd      	mov	sp, r7
 8001da8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001dac:	4770      	bx	lr
 8001dae:	bf00      	nop
 8001db0:	20000038 	.word	0x20000038
 8001db4:	431bde83 	.word	0x431bde83
 8001db8:	40012300 	.word	0x40012300
 8001dbc:	40012000 	.word	0x40012000

08001dc0 <HAL_ADC_PollForConversion>:
 8001dc0:	b580      	push	{r7, lr}
 8001dc2:	b084      	sub	sp, #16
 8001dc4:	af00      	add	r7, sp, #0
 8001dc6:	6078      	str	r0, [r7, #4]
 8001dc8:	6039      	str	r1, [r7, #0]
 8001dca:	2300      	movs	r3, #0
 8001dcc:	60fb      	str	r3, [r7, #12]
 8001dce:	687b      	ldr	r3, [r7, #4]
 8001dd0:	681b      	ldr	r3, [r3, #0]
 8001dd2:	689b      	ldr	r3, [r3, #8]
 8001dd4:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8001dd8:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8001ddc:	d113      	bne.n	8001e06 <HAL_ADC_PollForConversion+0x46>
 8001dde:	687b      	ldr	r3, [r7, #4]
 8001de0:	681b      	ldr	r3, [r3, #0]
 8001de2:	689b      	ldr	r3, [r3, #8]
 8001de4:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8001de8:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8001dec:	d10b      	bne.n	8001e06 <HAL_ADC_PollForConversion+0x46>
 8001dee:	687b      	ldr	r3, [r7, #4]
 8001df0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001df2:	f043 0220 	orr.w	r2, r3, #32
 8001df6:	687b      	ldr	r3, [r7, #4]
 8001df8:	641a      	str	r2, [r3, #64]	; 0x40
 8001dfa:	687b      	ldr	r3, [r7, #4]
 8001dfc:	2200      	movs	r2, #0
 8001dfe:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8001e02:	2301      	movs	r3, #1
 8001e04:	e063      	b.n	8001ece <HAL_ADC_PollForConversion+0x10e>
 8001e06:	f7ff feb3 	bl	8001b70 <HAL_GetTick>
 8001e0a:	60f8      	str	r0, [r7, #12]
 8001e0c:	e021      	b.n	8001e52 <HAL_ADC_PollForConversion+0x92>
 8001e0e:	683b      	ldr	r3, [r7, #0]
 8001e10:	f1b3 3fff 	cmp.w	r3, #4294967295
 8001e14:	d01d      	beq.n	8001e52 <HAL_ADC_PollForConversion+0x92>
 8001e16:	683b      	ldr	r3, [r7, #0]
 8001e18:	2b00      	cmp	r3, #0
 8001e1a:	d007      	beq.n	8001e2c <HAL_ADC_PollForConversion+0x6c>
 8001e1c:	f7ff fea8 	bl	8001b70 <HAL_GetTick>
 8001e20:	4602      	mov	r2, r0
 8001e22:	68fb      	ldr	r3, [r7, #12]
 8001e24:	1ad3      	subs	r3, r2, r3
 8001e26:	683a      	ldr	r2, [r7, #0]
 8001e28:	429a      	cmp	r2, r3
 8001e2a:	d212      	bcs.n	8001e52 <HAL_ADC_PollForConversion+0x92>
 8001e2c:	687b      	ldr	r3, [r7, #4]
 8001e2e:	681b      	ldr	r3, [r3, #0]
 8001e30:	681b      	ldr	r3, [r3, #0]
 8001e32:	f003 0302 	and.w	r3, r3, #2
 8001e36:	2b02      	cmp	r3, #2
 8001e38:	d00b      	beq.n	8001e52 <HAL_ADC_PollForConversion+0x92>
 8001e3a:	687b      	ldr	r3, [r7, #4]
 8001e3c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001e3e:	f043 0204 	orr.w	r2, r3, #4
 8001e42:	687b      	ldr	r3, [r7, #4]
 8001e44:	641a      	str	r2, [r3, #64]	; 0x40
 8001e46:	687b      	ldr	r3, [r7, #4]
 8001e48:	2200      	movs	r2, #0
 8001e4a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8001e4e:	2303      	movs	r3, #3
 8001e50:	e03d      	b.n	8001ece <HAL_ADC_PollForConversion+0x10e>
 8001e52:	687b      	ldr	r3, [r7, #4]
 8001e54:	681b      	ldr	r3, [r3, #0]
 8001e56:	681b      	ldr	r3, [r3, #0]
 8001e58:	f003 0302 	and.w	r3, r3, #2
 8001e5c:	2b02      	cmp	r3, #2
 8001e5e:	d1d6      	bne.n	8001e0e <HAL_ADC_PollForConversion+0x4e>
 8001e60:	687b      	ldr	r3, [r7, #4]
 8001e62:	681b      	ldr	r3, [r3, #0]
 8001e64:	f06f 0212 	mvn.w	r2, #18
 8001e68:	601a      	str	r2, [r3, #0]
 8001e6a:	687b      	ldr	r3, [r7, #4]
 8001e6c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001e6e:	f443 7200 	orr.w	r2, r3, #512	; 0x200
 8001e72:	687b      	ldr	r3, [r7, #4]
 8001e74:	641a      	str	r2, [r3, #64]	; 0x40
 8001e76:	687b      	ldr	r3, [r7, #4]
 8001e78:	681b      	ldr	r3, [r3, #0]
 8001e7a:	689b      	ldr	r3, [r3, #8]
 8001e7c:	f003 5340 	and.w	r3, r3, #805306368	; 0x30000000
 8001e80:	2b00      	cmp	r3, #0
 8001e82:	d123      	bne.n	8001ecc <HAL_ADC_PollForConversion+0x10c>
 8001e84:	687b      	ldr	r3, [r7, #4]
 8001e86:	7e1b      	ldrb	r3, [r3, #24]
 8001e88:	2b00      	cmp	r3, #0
 8001e8a:	d11f      	bne.n	8001ecc <HAL_ADC_PollForConversion+0x10c>
 8001e8c:	687b      	ldr	r3, [r7, #4]
 8001e8e:	681b      	ldr	r3, [r3, #0]
 8001e90:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8001e92:	f403 0370 	and.w	r3, r3, #15728640	; 0xf00000
 8001e96:	2b00      	cmp	r3, #0
 8001e98:	d006      	beq.n	8001ea8 <HAL_ADC_PollForConversion+0xe8>
 8001e9a:	687b      	ldr	r3, [r7, #4]
 8001e9c:	681b      	ldr	r3, [r3, #0]
 8001e9e:	689b      	ldr	r3, [r3, #8]
 8001ea0:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8001ea4:	2b00      	cmp	r3, #0
 8001ea6:	d111      	bne.n	8001ecc <HAL_ADC_PollForConversion+0x10c>
 8001ea8:	687b      	ldr	r3, [r7, #4]
 8001eaa:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001eac:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 8001eb0:	687b      	ldr	r3, [r7, #4]
 8001eb2:	641a      	str	r2, [r3, #64]	; 0x40
 8001eb4:	687b      	ldr	r3, [r7, #4]
 8001eb6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001eb8:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8001ebc:	2b00      	cmp	r3, #0
 8001ebe:	d105      	bne.n	8001ecc <HAL_ADC_PollForConversion+0x10c>
 8001ec0:	687b      	ldr	r3, [r7, #4]
 8001ec2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001ec4:	f043 0201 	orr.w	r2, r3, #1
 8001ec8:	687b      	ldr	r3, [r7, #4]
 8001eca:	641a      	str	r2, [r3, #64]	; 0x40
 8001ecc:	2300      	movs	r3, #0
 8001ece:	4618      	mov	r0, r3
 8001ed0:	3710      	adds	r7, #16
 8001ed2:	46bd      	mov	sp, r7
 8001ed4:	bd80      	pop	{r7, pc}

08001ed6 <HAL_ADC_GetValue>:
 8001ed6:	b480      	push	{r7}
 8001ed8:	b083      	sub	sp, #12
 8001eda:	af00      	add	r7, sp, #0
 8001edc:	6078      	str	r0, [r7, #4]
 8001ede:	687b      	ldr	r3, [r7, #4]
 8001ee0:	681b      	ldr	r3, [r3, #0]
 8001ee2:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8001ee4:	4618      	mov	r0, r3
 8001ee6:	370c      	adds	r7, #12
 8001ee8:	46bd      	mov	sp, r7
 8001eea:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001eee:	4770      	bx	lr

08001ef0 <HAL_ADC_ConfigChannel>:
 8001ef0:	b480      	push	{r7}
 8001ef2:	b085      	sub	sp, #20
 8001ef4:	af00      	add	r7, sp, #0
 8001ef6:	6078      	str	r0, [r7, #4]
 8001ef8:	6039      	str	r1, [r7, #0]
 8001efa:	2300      	movs	r3, #0
 8001efc:	60bb      	str	r3, [r7, #8]
 8001efe:	687b      	ldr	r3, [r7, #4]
 8001f00:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8001f04:	2b01      	cmp	r3, #1
 8001f06:	d101      	bne.n	8001f0c <HAL_ADC_ConfigChannel+0x1c>
 8001f08:	2302      	movs	r3, #2
 8001f0a:	e113      	b.n	8002134 <HAL_ADC_ConfigChannel+0x244>
 8001f0c:	687b      	ldr	r3, [r7, #4]
 8001f0e:	2201      	movs	r2, #1
 8001f10:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8001f14:	683b      	ldr	r3, [r7, #0]
 8001f16:	681b      	ldr	r3, [r3, #0]
 8001f18:	2b09      	cmp	r3, #9
 8001f1a:	d925      	bls.n	8001f68 <HAL_ADC_ConfigChannel+0x78>
 8001f1c:	687b      	ldr	r3, [r7, #4]
 8001f1e:	681b      	ldr	r3, [r3, #0]
 8001f20:	68d9      	ldr	r1, [r3, #12]
 8001f22:	683b      	ldr	r3, [r7, #0]
 8001f24:	681b      	ldr	r3, [r3, #0]
 8001f26:	b29b      	uxth	r3, r3
 8001f28:	461a      	mov	r2, r3
 8001f2a:	4613      	mov	r3, r2
 8001f2c:	005b      	lsls	r3, r3, #1
 8001f2e:	4413      	add	r3, r2
 8001f30:	3b1e      	subs	r3, #30
 8001f32:	2207      	movs	r2, #7
 8001f34:	fa02 f303 	lsl.w	r3, r2, r3
 8001f38:	43da      	mvns	r2, r3
 8001f3a:	687b      	ldr	r3, [r7, #4]
 8001f3c:	681b      	ldr	r3, [r3, #0]
 8001f3e:	400a      	ands	r2, r1
 8001f40:	60da      	str	r2, [r3, #12]
 8001f42:	687b      	ldr	r3, [r7, #4]
 8001f44:	681b      	ldr	r3, [r3, #0]
 8001f46:	68d9      	ldr	r1, [r3, #12]
 8001f48:	683b      	ldr	r3, [r7, #0]
 8001f4a:	689a      	ldr	r2, [r3, #8]
 8001f4c:	683b      	ldr	r3, [r7, #0]
 8001f4e:	681b      	ldr	r3, [r3, #0]
 8001f50:	b29b      	uxth	r3, r3
 8001f52:	4618      	mov	r0, r3
 8001f54:	4603      	mov	r3, r0
 8001f56:	005b      	lsls	r3, r3, #1
 8001f58:	4403      	add	r3, r0
 8001f5a:	3b1e      	subs	r3, #30
 8001f5c:	409a      	lsls	r2, r3
 8001f5e:	687b      	ldr	r3, [r7, #4]
 8001f60:	681b      	ldr	r3, [r3, #0]
 8001f62:	430a      	orrs	r2, r1
 8001f64:	60da      	str	r2, [r3, #12]
 8001f66:	e022      	b.n	8001fae <HAL_ADC_ConfigChannel+0xbe>
 8001f68:	687b      	ldr	r3, [r7, #4]
 8001f6a:	681b      	ldr	r3, [r3, #0]
 8001f6c:	6919      	ldr	r1, [r3, #16]
 8001f6e:	683b      	ldr	r3, [r7, #0]
 8001f70:	681b      	ldr	r3, [r3, #0]
 8001f72:	b29b      	uxth	r3, r3
 8001f74:	461a      	mov	r2, r3
 8001f76:	4613      	mov	r3, r2
 8001f78:	005b      	lsls	r3, r3, #1
 8001f7a:	4413      	add	r3, r2
 8001f7c:	2207      	movs	r2, #7
 8001f7e:	fa02 f303 	lsl.w	r3, r2, r3
 8001f82:	43da      	mvns	r2, r3
 8001f84:	687b      	ldr	r3, [r7, #4]
 8001f86:	681b      	ldr	r3, [r3, #0]
 8001f88:	400a      	ands	r2, r1
 8001f8a:	611a      	str	r2, [r3, #16]
 8001f8c:	687b      	ldr	r3, [r7, #4]
 8001f8e:	681b      	ldr	r3, [r3, #0]
 8001f90:	6919      	ldr	r1, [r3, #16]
 8001f92:	683b      	ldr	r3, [r7, #0]
 8001f94:	689a      	ldr	r2, [r3, #8]
 8001f96:	683b      	ldr	r3, [r7, #0]
 8001f98:	681b      	ldr	r3, [r3, #0]
 8001f9a:	b29b      	uxth	r3, r3
 8001f9c:	4618      	mov	r0, r3
 8001f9e:	4603      	mov	r3, r0
 8001fa0:	005b      	lsls	r3, r3, #1
 8001fa2:	4403      	add	r3, r0
 8001fa4:	409a      	lsls	r2, r3
 8001fa6:	687b      	ldr	r3, [r7, #4]
 8001fa8:	681b      	ldr	r3, [r3, #0]
 8001faa:	430a      	orrs	r2, r1
 8001fac:	611a      	str	r2, [r3, #16]
 8001fae:	683b      	ldr	r3, [r7, #0]
 8001fb0:	685b      	ldr	r3, [r3, #4]
 8001fb2:	2b06      	cmp	r3, #6
 8001fb4:	d824      	bhi.n	8002000 <HAL_ADC_ConfigChannel+0x110>
 8001fb6:	687b      	ldr	r3, [r7, #4]
 8001fb8:	681b      	ldr	r3, [r3, #0]
 8001fba:	6b59      	ldr	r1, [r3, #52]	; 0x34
 8001fbc:	683b      	ldr	r3, [r7, #0]
 8001fbe:	685a      	ldr	r2, [r3, #4]
 8001fc0:	4613      	mov	r3, r2
 8001fc2:	009b      	lsls	r3, r3, #2
 8001fc4:	4413      	add	r3, r2
 8001fc6:	3b05      	subs	r3, #5
 8001fc8:	221f      	movs	r2, #31
 8001fca:	fa02 f303 	lsl.w	r3, r2, r3
 8001fce:	43da      	mvns	r2, r3
 8001fd0:	687b      	ldr	r3, [r7, #4]
 8001fd2:	681b      	ldr	r3, [r3, #0]
 8001fd4:	400a      	ands	r2, r1
 8001fd6:	635a      	str	r2, [r3, #52]	; 0x34
 8001fd8:	687b      	ldr	r3, [r7, #4]
 8001fda:	681b      	ldr	r3, [r3, #0]
 8001fdc:	6b59      	ldr	r1, [r3, #52]	; 0x34
 8001fde:	683b      	ldr	r3, [r7, #0]
 8001fe0:	681b      	ldr	r3, [r3, #0]
 8001fe2:	b29b      	uxth	r3, r3
 8001fe4:	4618      	mov	r0, r3
 8001fe6:	683b      	ldr	r3, [r7, #0]
 8001fe8:	685a      	ldr	r2, [r3, #4]
 8001fea:	4613      	mov	r3, r2
 8001fec:	009b      	lsls	r3, r3, #2
 8001fee:	4413      	add	r3, r2
 8001ff0:	3b05      	subs	r3, #5
 8001ff2:	fa00 f203 	lsl.w	r2, r0, r3
 8001ff6:	687b      	ldr	r3, [r7, #4]
 8001ff8:	681b      	ldr	r3, [r3, #0]
 8001ffa:	430a      	orrs	r2, r1
 8001ffc:	635a      	str	r2, [r3, #52]	; 0x34
 8001ffe:	e04c      	b.n	800209a <HAL_ADC_ConfigChannel+0x1aa>
 8002000:	683b      	ldr	r3, [r7, #0]
 8002002:	685b      	ldr	r3, [r3, #4]
 8002004:	2b0c      	cmp	r3, #12
 8002006:	d824      	bhi.n	8002052 <HAL_ADC_ConfigChannel+0x162>
 8002008:	687b      	ldr	r3, [r7, #4]
 800200a:	681b      	ldr	r3, [r3, #0]
 800200c:	6b19      	ldr	r1, [r3, #48]	; 0x30
 800200e:	683b      	ldr	r3, [r7, #0]
 8002010:	685a      	ldr	r2, [r3, #4]
 8002012:	4613      	mov	r3, r2
 8002014:	009b      	lsls	r3, r3, #2
 8002016:	4413      	add	r3, r2
 8002018:	3b23      	subs	r3, #35	; 0x23
 800201a:	221f      	movs	r2, #31
 800201c:	fa02 f303 	lsl.w	r3, r2, r3
 8002020:	43da      	mvns	r2, r3
 8002022:	687b      	ldr	r3, [r7, #4]
 8002024:	681b      	ldr	r3, [r3, #0]
 8002026:	400a      	ands	r2, r1
 8002028:	631a      	str	r2, [r3, #48]	; 0x30
 800202a:	687b      	ldr	r3, [r7, #4]
 800202c:	681b      	ldr	r3, [r3, #0]
 800202e:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8002030:	683b      	ldr	r3, [r7, #0]
 8002032:	681b      	ldr	r3, [r3, #0]
 8002034:	b29b      	uxth	r3, r3
 8002036:	4618      	mov	r0, r3
 8002038:	683b      	ldr	r3, [r7, #0]
 800203a:	685a      	ldr	r2, [r3, #4]
 800203c:	4613      	mov	r3, r2
 800203e:	009b      	lsls	r3, r3, #2
 8002040:	4413      	add	r3, r2
 8002042:	3b23      	subs	r3, #35	; 0x23
 8002044:	fa00 f203 	lsl.w	r2, r0, r3
 8002048:	687b      	ldr	r3, [r7, #4]
 800204a:	681b      	ldr	r3, [r3, #0]
 800204c:	430a      	orrs	r2, r1
 800204e:	631a      	str	r2, [r3, #48]	; 0x30
 8002050:	e023      	b.n	800209a <HAL_ADC_ConfigChannel+0x1aa>
 8002052:	687b      	ldr	r3, [r7, #4]
 8002054:	681b      	ldr	r3, [r3, #0]
 8002056:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8002058:	683b      	ldr	r3, [r7, #0]
 800205a:	685a      	ldr	r2, [r3, #4]
 800205c:	4613      	mov	r3, r2
 800205e:	009b      	lsls	r3, r3, #2
 8002060:	4413      	add	r3, r2
 8002062:	3b41      	subs	r3, #65	; 0x41
 8002064:	221f      	movs	r2, #31
 8002066:	fa02 f303 	lsl.w	r3, r2, r3
 800206a:	43da      	mvns	r2, r3
 800206c:	687b      	ldr	r3, [r7, #4]
 800206e:	681b      	ldr	r3, [r3, #0]
 8002070:	400a      	ands	r2, r1
 8002072:	62da      	str	r2, [r3, #44]	; 0x2c
 8002074:	687b      	ldr	r3, [r7, #4]
 8002076:	681b      	ldr	r3, [r3, #0]
 8002078:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 800207a:	683b      	ldr	r3, [r7, #0]
 800207c:	681b      	ldr	r3, [r3, #0]
 800207e:	b29b      	uxth	r3, r3
 8002080:	4618      	mov	r0, r3
 8002082:	683b      	ldr	r3, [r7, #0]
 8002084:	685a      	ldr	r2, [r3, #4]
 8002086:	4613      	mov	r3, r2
 8002088:	009b      	lsls	r3, r3, #2
 800208a:	4413      	add	r3, r2
 800208c:	3b41      	subs	r3, #65	; 0x41
 800208e:	fa00 f203 	lsl.w	r2, r0, r3
 8002092:	687b      	ldr	r3, [r7, #4]
 8002094:	681b      	ldr	r3, [r3, #0]
 8002096:	430a      	orrs	r2, r1
 8002098:	62da      	str	r2, [r3, #44]	; 0x2c
 800209a:	4b29      	ldr	r3, [pc, #164]	; (8002140 <HAL_ADC_ConfigChannel+0x250>)
 800209c:	60fb      	str	r3, [r7, #12]
 800209e:	687b      	ldr	r3, [r7, #4]
 80020a0:	681b      	ldr	r3, [r3, #0]
 80020a2:	4a28      	ldr	r2, [pc, #160]	; (8002144 <HAL_ADC_ConfigChannel+0x254>)
 80020a4:	4293      	cmp	r3, r2
 80020a6:	d10f      	bne.n	80020c8 <HAL_ADC_ConfigChannel+0x1d8>
 80020a8:	683b      	ldr	r3, [r7, #0]
 80020aa:	681b      	ldr	r3, [r3, #0]
 80020ac:	2b12      	cmp	r3, #18
 80020ae:	d10b      	bne.n	80020c8 <HAL_ADC_ConfigChannel+0x1d8>
 80020b0:	68fb      	ldr	r3, [r7, #12]
 80020b2:	685b      	ldr	r3, [r3, #4]
 80020b4:	f423 0200 	bic.w	r2, r3, #8388608	; 0x800000
 80020b8:	68fb      	ldr	r3, [r7, #12]
 80020ba:	605a      	str	r2, [r3, #4]
 80020bc:	68fb      	ldr	r3, [r7, #12]
 80020be:	685b      	ldr	r3, [r3, #4]
 80020c0:	f443 0280 	orr.w	r2, r3, #4194304	; 0x400000
 80020c4:	68fb      	ldr	r3, [r7, #12]
 80020c6:	605a      	str	r2, [r3, #4]
 80020c8:	687b      	ldr	r3, [r7, #4]
 80020ca:	681b      	ldr	r3, [r3, #0]
 80020cc:	4a1d      	ldr	r2, [pc, #116]	; (8002144 <HAL_ADC_ConfigChannel+0x254>)
 80020ce:	4293      	cmp	r3, r2
 80020d0:	d12b      	bne.n	800212a <HAL_ADC_ConfigChannel+0x23a>
 80020d2:	683b      	ldr	r3, [r7, #0]
 80020d4:	681b      	ldr	r3, [r3, #0]
 80020d6:	4a1c      	ldr	r2, [pc, #112]	; (8002148 <HAL_ADC_ConfigChannel+0x258>)
 80020d8:	4293      	cmp	r3, r2
 80020da:	d003      	beq.n	80020e4 <HAL_ADC_ConfigChannel+0x1f4>
 80020dc:	683b      	ldr	r3, [r7, #0]
 80020de:	681b      	ldr	r3, [r3, #0]
 80020e0:	2b11      	cmp	r3, #17
 80020e2:	d122      	bne.n	800212a <HAL_ADC_ConfigChannel+0x23a>
 80020e4:	68fb      	ldr	r3, [r7, #12]
 80020e6:	685b      	ldr	r3, [r3, #4]
 80020e8:	f423 0280 	bic.w	r2, r3, #4194304	; 0x400000
 80020ec:	68fb      	ldr	r3, [r7, #12]
 80020ee:	605a      	str	r2, [r3, #4]
 80020f0:	68fb      	ldr	r3, [r7, #12]
 80020f2:	685b      	ldr	r3, [r3, #4]
 80020f4:	f443 0200 	orr.w	r2, r3, #8388608	; 0x800000
 80020f8:	68fb      	ldr	r3, [r7, #12]
 80020fa:	605a      	str	r2, [r3, #4]
 80020fc:	683b      	ldr	r3, [r7, #0]
 80020fe:	681b      	ldr	r3, [r3, #0]
 8002100:	4a11      	ldr	r2, [pc, #68]	; (8002148 <HAL_ADC_ConfigChannel+0x258>)
 8002102:	4293      	cmp	r3, r2
 8002104:	d111      	bne.n	800212a <HAL_ADC_ConfigChannel+0x23a>
 8002106:	4b11      	ldr	r3, [pc, #68]	; (800214c <HAL_ADC_ConfigChannel+0x25c>)
 8002108:	681b      	ldr	r3, [r3, #0]
 800210a:	4a11      	ldr	r2, [pc, #68]	; (8002150 <HAL_ADC_ConfigChannel+0x260>)
 800210c:	fba2 2303 	umull	r2, r3, r2, r3
 8002110:	0c9a      	lsrs	r2, r3, #18
 8002112:	4613      	mov	r3, r2
 8002114:	009b      	lsls	r3, r3, #2
 8002116:	4413      	add	r3, r2
 8002118:	005b      	lsls	r3, r3, #1
 800211a:	60bb      	str	r3, [r7, #8]
 800211c:	e002      	b.n	8002124 <HAL_ADC_ConfigChannel+0x234>
 800211e:	68bb      	ldr	r3, [r7, #8]
 8002120:	3b01      	subs	r3, #1
 8002122:	60bb      	str	r3, [r7, #8]
 8002124:	68bb      	ldr	r3, [r7, #8]
 8002126:	2b00      	cmp	r3, #0
 8002128:	d1f9      	bne.n	800211e <HAL_ADC_ConfigChannel+0x22e>
 800212a:	687b      	ldr	r3, [r7, #4]
 800212c:	2200      	movs	r2, #0
 800212e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8002132:	2300      	movs	r3, #0
 8002134:	4618      	mov	r0, r3
 8002136:	3714      	adds	r7, #20
 8002138:	46bd      	mov	sp, r7
 800213a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800213e:	4770      	bx	lr
 8002140:	40012300 	.word	0x40012300
 8002144:	40012000 	.word	0x40012000
 8002148:	10000012 	.word	0x10000012
 800214c:	20000038 	.word	0x20000038
 8002150:	431bde83 	.word	0x431bde83

08002154 <ADC_Init>:
 8002154:	b480      	push	{r7}
 8002156:	b085      	sub	sp, #20
 8002158:	af00      	add	r7, sp, #0
 800215a:	6078      	str	r0, [r7, #4]
 800215c:	4b79      	ldr	r3, [pc, #484]	; (8002344 <ADC_Init+0x1f0>)
 800215e:	60fb      	str	r3, [r7, #12]
 8002160:	68fb      	ldr	r3, [r7, #12]
 8002162:	685b      	ldr	r3, [r3, #4]
 8002164:	f423 3240 	bic.w	r2, r3, #196608	; 0x30000
 8002168:	68fb      	ldr	r3, [r7, #12]
 800216a:	605a      	str	r2, [r3, #4]
 800216c:	68fb      	ldr	r3, [r7, #12]
 800216e:	685a      	ldr	r2, [r3, #4]
 8002170:	687b      	ldr	r3, [r7, #4]
 8002172:	685b      	ldr	r3, [r3, #4]
 8002174:	431a      	orrs	r2, r3
 8002176:	68fb      	ldr	r3, [r7, #12]
 8002178:	605a      	str	r2, [r3, #4]
 800217a:	687b      	ldr	r3, [r7, #4]
 800217c:	681b      	ldr	r3, [r3, #0]
 800217e:	685a      	ldr	r2, [r3, #4]
 8002180:	687b      	ldr	r3, [r7, #4]
 8002182:	681b      	ldr	r3, [r3, #0]
 8002184:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8002188:	605a      	str	r2, [r3, #4]
 800218a:	687b      	ldr	r3, [r7, #4]
 800218c:	681b      	ldr	r3, [r3, #0]
 800218e:	6859      	ldr	r1, [r3, #4]
 8002190:	687b      	ldr	r3, [r7, #4]
 8002192:	691b      	ldr	r3, [r3, #16]
 8002194:	021a      	lsls	r2, r3, #8
 8002196:	687b      	ldr	r3, [r7, #4]
 8002198:	681b      	ldr	r3, [r3, #0]
 800219a:	430a      	orrs	r2, r1
 800219c:	605a      	str	r2, [r3, #4]
 800219e:	687b      	ldr	r3, [r7, #4]
 80021a0:	681b      	ldr	r3, [r3, #0]
 80021a2:	685a      	ldr	r2, [r3, #4]
 80021a4:	687b      	ldr	r3, [r7, #4]
 80021a6:	681b      	ldr	r3, [r3, #0]
 80021a8:	f022 7240 	bic.w	r2, r2, #50331648	; 0x3000000
 80021ac:	605a      	str	r2, [r3, #4]
 80021ae:	687b      	ldr	r3, [r7, #4]
 80021b0:	681b      	ldr	r3, [r3, #0]
 80021b2:	6859      	ldr	r1, [r3, #4]
 80021b4:	687b      	ldr	r3, [r7, #4]
 80021b6:	689a      	ldr	r2, [r3, #8]
 80021b8:	687b      	ldr	r3, [r7, #4]
 80021ba:	681b      	ldr	r3, [r3, #0]
 80021bc:	430a      	orrs	r2, r1
 80021be:	605a      	str	r2, [r3, #4]
 80021c0:	687b      	ldr	r3, [r7, #4]
 80021c2:	681b      	ldr	r3, [r3, #0]
 80021c4:	689a      	ldr	r2, [r3, #8]
 80021c6:	687b      	ldr	r3, [r7, #4]
 80021c8:	681b      	ldr	r3, [r3, #0]
 80021ca:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 80021ce:	609a      	str	r2, [r3, #8]
 80021d0:	687b      	ldr	r3, [r7, #4]
 80021d2:	681b      	ldr	r3, [r3, #0]
 80021d4:	6899      	ldr	r1, [r3, #8]
 80021d6:	687b      	ldr	r3, [r7, #4]
 80021d8:	68da      	ldr	r2, [r3, #12]
 80021da:	687b      	ldr	r3, [r7, #4]
 80021dc:	681b      	ldr	r3, [r3, #0]
 80021de:	430a      	orrs	r2, r1
 80021e0:	609a      	str	r2, [r3, #8]
 80021e2:	687b      	ldr	r3, [r7, #4]
 80021e4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80021e6:	4a58      	ldr	r2, [pc, #352]	; (8002348 <ADC_Init+0x1f4>)
 80021e8:	4293      	cmp	r3, r2
 80021ea:	d022      	beq.n	8002232 <ADC_Init+0xde>
 80021ec:	687b      	ldr	r3, [r7, #4]
 80021ee:	681b      	ldr	r3, [r3, #0]
 80021f0:	689a      	ldr	r2, [r3, #8]
 80021f2:	687b      	ldr	r3, [r7, #4]
 80021f4:	681b      	ldr	r3, [r3, #0]
 80021f6:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 80021fa:	609a      	str	r2, [r3, #8]
 80021fc:	687b      	ldr	r3, [r7, #4]
 80021fe:	681b      	ldr	r3, [r3, #0]
 8002200:	6899      	ldr	r1, [r3, #8]
 8002202:	687b      	ldr	r3, [r7, #4]
 8002204:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8002206:	687b      	ldr	r3, [r7, #4]
 8002208:	681b      	ldr	r3, [r3, #0]
 800220a:	430a      	orrs	r2, r1
 800220c:	609a      	str	r2, [r3, #8]
 800220e:	687b      	ldr	r3, [r7, #4]
 8002210:	681b      	ldr	r3, [r3, #0]
 8002212:	689a      	ldr	r2, [r3, #8]
 8002214:	687b      	ldr	r3, [r7, #4]
 8002216:	681b      	ldr	r3, [r3, #0]
 8002218:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 800221c:	609a      	str	r2, [r3, #8]
 800221e:	687b      	ldr	r3, [r7, #4]
 8002220:	681b      	ldr	r3, [r3, #0]
 8002222:	6899      	ldr	r1, [r3, #8]
 8002224:	687b      	ldr	r3, [r7, #4]
 8002226:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8002228:	687b      	ldr	r3, [r7, #4]
 800222a:	681b      	ldr	r3, [r3, #0]
 800222c:	430a      	orrs	r2, r1
 800222e:	609a      	str	r2, [r3, #8]
 8002230:	e00f      	b.n	8002252 <ADC_Init+0xfe>
 8002232:	687b      	ldr	r3, [r7, #4]
 8002234:	681b      	ldr	r3, [r3, #0]
 8002236:	689a      	ldr	r2, [r3, #8]
 8002238:	687b      	ldr	r3, [r7, #4]
 800223a:	681b      	ldr	r3, [r3, #0]
 800223c:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 8002240:	609a      	str	r2, [r3, #8]
 8002242:	687b      	ldr	r3, [r7, #4]
 8002244:	681b      	ldr	r3, [r3, #0]
 8002246:	689a      	ldr	r2, [r3, #8]
 8002248:	687b      	ldr	r3, [r7, #4]
 800224a:	681b      	ldr	r3, [r3, #0]
 800224c:	f022 5240 	bic.w	r2, r2, #805306368	; 0x30000000
 8002250:	609a      	str	r2, [r3, #8]
 8002252:	687b      	ldr	r3, [r7, #4]
 8002254:	681b      	ldr	r3, [r3, #0]
 8002256:	689a      	ldr	r2, [r3, #8]
 8002258:	687b      	ldr	r3, [r7, #4]
 800225a:	681b      	ldr	r3, [r3, #0]
 800225c:	f022 0202 	bic.w	r2, r2, #2
 8002260:	609a      	str	r2, [r3, #8]
 8002262:	687b      	ldr	r3, [r7, #4]
 8002264:	681b      	ldr	r3, [r3, #0]
 8002266:	6899      	ldr	r1, [r3, #8]
 8002268:	687b      	ldr	r3, [r7, #4]
 800226a:	7e1b      	ldrb	r3, [r3, #24]
 800226c:	005a      	lsls	r2, r3, #1
 800226e:	687b      	ldr	r3, [r7, #4]
 8002270:	681b      	ldr	r3, [r3, #0]
 8002272:	430a      	orrs	r2, r1
 8002274:	609a      	str	r2, [r3, #8]
 8002276:	687b      	ldr	r3, [r7, #4]
 8002278:	f893 3020 	ldrb.w	r3, [r3, #32]
 800227c:	2b00      	cmp	r3, #0
 800227e:	d01b      	beq.n	80022b8 <ADC_Init+0x164>
 8002280:	687b      	ldr	r3, [r7, #4]
 8002282:	681b      	ldr	r3, [r3, #0]
 8002284:	685a      	ldr	r2, [r3, #4]
 8002286:	687b      	ldr	r3, [r7, #4]
 8002288:	681b      	ldr	r3, [r3, #0]
 800228a:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800228e:	605a      	str	r2, [r3, #4]
 8002290:	687b      	ldr	r3, [r7, #4]
 8002292:	681b      	ldr	r3, [r3, #0]
 8002294:	685a      	ldr	r2, [r3, #4]
 8002296:	687b      	ldr	r3, [r7, #4]
 8002298:	681b      	ldr	r3, [r3, #0]
 800229a:	f422 4260 	bic.w	r2, r2, #57344	; 0xe000
 800229e:	605a      	str	r2, [r3, #4]
 80022a0:	687b      	ldr	r3, [r7, #4]
 80022a2:	681b      	ldr	r3, [r3, #0]
 80022a4:	6859      	ldr	r1, [r3, #4]
 80022a6:	687b      	ldr	r3, [r7, #4]
 80022a8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80022aa:	3b01      	subs	r3, #1
 80022ac:	035a      	lsls	r2, r3, #13
 80022ae:	687b      	ldr	r3, [r7, #4]
 80022b0:	681b      	ldr	r3, [r3, #0]
 80022b2:	430a      	orrs	r2, r1
 80022b4:	605a      	str	r2, [r3, #4]
 80022b6:	e007      	b.n	80022c8 <ADC_Init+0x174>
 80022b8:	687b      	ldr	r3, [r7, #4]
 80022ba:	681b      	ldr	r3, [r3, #0]
 80022bc:	685a      	ldr	r2, [r3, #4]
 80022be:	687b      	ldr	r3, [r7, #4]
 80022c0:	681b      	ldr	r3, [r3, #0]
 80022c2:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 80022c6:	605a      	str	r2, [r3, #4]
 80022c8:	687b      	ldr	r3, [r7, #4]
 80022ca:	681b      	ldr	r3, [r3, #0]
 80022cc:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 80022ce:	687b      	ldr	r3, [r7, #4]
 80022d0:	681b      	ldr	r3, [r3, #0]
 80022d2:	f422 0270 	bic.w	r2, r2, #15728640	; 0xf00000
 80022d6:	62da      	str	r2, [r3, #44]	; 0x2c
 80022d8:	687b      	ldr	r3, [r7, #4]
 80022da:	681b      	ldr	r3, [r3, #0]
 80022dc:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 80022de:	687b      	ldr	r3, [r7, #4]
 80022e0:	69db      	ldr	r3, [r3, #28]
 80022e2:	3b01      	subs	r3, #1
 80022e4:	051a      	lsls	r2, r3, #20
 80022e6:	687b      	ldr	r3, [r7, #4]
 80022e8:	681b      	ldr	r3, [r3, #0]
 80022ea:	430a      	orrs	r2, r1
 80022ec:	62da      	str	r2, [r3, #44]	; 0x2c
 80022ee:	687b      	ldr	r3, [r7, #4]
 80022f0:	681b      	ldr	r3, [r3, #0]
 80022f2:	689a      	ldr	r2, [r3, #8]
 80022f4:	687b      	ldr	r3, [r7, #4]
 80022f6:	681b      	ldr	r3, [r3, #0]
 80022f8:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 80022fc:	609a      	str	r2, [r3, #8]
 80022fe:	687b      	ldr	r3, [r7, #4]
 8002300:	681b      	ldr	r3, [r3, #0]
 8002302:	6899      	ldr	r1, [r3, #8]
 8002304:	687b      	ldr	r3, [r7, #4]
 8002306:	f893 3030 	ldrb.w	r3, [r3, #48]	; 0x30
 800230a:	025a      	lsls	r2, r3, #9
 800230c:	687b      	ldr	r3, [r7, #4]
 800230e:	681b      	ldr	r3, [r3, #0]
 8002310:	430a      	orrs	r2, r1
 8002312:	609a      	str	r2, [r3, #8]
 8002314:	687b      	ldr	r3, [r7, #4]
 8002316:	681b      	ldr	r3, [r3, #0]
 8002318:	689a      	ldr	r2, [r3, #8]
 800231a:	687b      	ldr	r3, [r7, #4]
 800231c:	681b      	ldr	r3, [r3, #0]
 800231e:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8002322:	609a      	str	r2, [r3, #8]
 8002324:	687b      	ldr	r3, [r7, #4]
 8002326:	681b      	ldr	r3, [r3, #0]
 8002328:	6899      	ldr	r1, [r3, #8]
 800232a:	687b      	ldr	r3, [r7, #4]
 800232c:	695b      	ldr	r3, [r3, #20]
 800232e:	029a      	lsls	r2, r3, #10
 8002330:	687b      	ldr	r3, [r7, #4]
 8002332:	681b      	ldr	r3, [r3, #0]
 8002334:	430a      	orrs	r2, r1
 8002336:	609a      	str	r2, [r3, #8]
 8002338:	bf00      	nop
 800233a:	3714      	adds	r7, #20
 800233c:	46bd      	mov	sp, r7
 800233e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002342:	4770      	bx	lr
 8002344:	40012300 	.word	0x40012300
 8002348:	0f000001 	.word	0x0f000001

0800234c <__NVIC_SetPriorityGrouping>:
 800234c:	b480      	push	{r7}
 800234e:	b085      	sub	sp, #20
 8002350:	af00      	add	r7, sp, #0
 8002352:	6078      	str	r0, [r7, #4]
 8002354:	687b      	ldr	r3, [r7, #4]
 8002356:	f003 0307 	and.w	r3, r3, #7
 800235a:	60fb      	str	r3, [r7, #12]
 800235c:	4b0c      	ldr	r3, [pc, #48]	; (8002390 <__NVIC_SetPriorityGrouping+0x44>)
 800235e:	68db      	ldr	r3, [r3, #12]
 8002360:	60bb      	str	r3, [r7, #8]
 8002362:	68ba      	ldr	r2, [r7, #8]
 8002364:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8002368:	4013      	ands	r3, r2
 800236a:	60bb      	str	r3, [r7, #8]
 800236c:	68fb      	ldr	r3, [r7, #12]
 800236e:	021a      	lsls	r2, r3, #8
 8002370:	68bb      	ldr	r3, [r7, #8]
 8002372:	4313      	orrs	r3, r2
 8002374:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8002378:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 800237c:	60bb      	str	r3, [r7, #8]
 800237e:	4a04      	ldr	r2, [pc, #16]	; (8002390 <__NVIC_SetPriorityGrouping+0x44>)
 8002380:	68bb      	ldr	r3, [r7, #8]
 8002382:	60d3      	str	r3, [r2, #12]
 8002384:	bf00      	nop
 8002386:	3714      	adds	r7, #20
 8002388:	46bd      	mov	sp, r7
 800238a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800238e:	4770      	bx	lr
 8002390:	e000ed00 	.word	0xe000ed00

08002394 <__NVIC_GetPriorityGrouping>:
 8002394:	b480      	push	{r7}
 8002396:	af00      	add	r7, sp, #0
 8002398:	4b04      	ldr	r3, [pc, #16]	; (80023ac <__NVIC_GetPriorityGrouping+0x18>)
 800239a:	68db      	ldr	r3, [r3, #12]
 800239c:	0a1b      	lsrs	r3, r3, #8
 800239e:	f003 0307 	and.w	r3, r3, #7
 80023a2:	4618      	mov	r0, r3
 80023a4:	46bd      	mov	sp, r7
 80023a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80023aa:	4770      	bx	lr
 80023ac:	e000ed00 	.word	0xe000ed00

080023b0 <__NVIC_EnableIRQ>:
 80023b0:	b480      	push	{r7}
 80023b2:	b083      	sub	sp, #12
 80023b4:	af00      	add	r7, sp, #0
 80023b6:	4603      	mov	r3, r0
 80023b8:	71fb      	strb	r3, [r7, #7]
 80023ba:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80023be:	2b00      	cmp	r3, #0
 80023c0:	db0b      	blt.n	80023da <__NVIC_EnableIRQ+0x2a>
 80023c2:	79fb      	ldrb	r3, [r7, #7]
 80023c4:	f003 021f 	and.w	r2, r3, #31
 80023c8:	4907      	ldr	r1, [pc, #28]	; (80023e8 <__NVIC_EnableIRQ+0x38>)
 80023ca:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80023ce:	095b      	lsrs	r3, r3, #5
 80023d0:	2001      	movs	r0, #1
 80023d2:	fa00 f202 	lsl.w	r2, r0, r2
 80023d6:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80023da:	bf00      	nop
 80023dc:	370c      	adds	r7, #12
 80023de:	46bd      	mov	sp, r7
 80023e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80023e4:	4770      	bx	lr
 80023e6:	bf00      	nop
 80023e8:	e000e100 	.word	0xe000e100

080023ec <__NVIC_SetPriority>:
 80023ec:	b480      	push	{r7}
 80023ee:	b083      	sub	sp, #12
 80023f0:	af00      	add	r7, sp, #0
 80023f2:	4603      	mov	r3, r0
 80023f4:	6039      	str	r1, [r7, #0]
 80023f6:	71fb      	strb	r3, [r7, #7]
 80023f8:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80023fc:	2b00      	cmp	r3, #0
 80023fe:	db0a      	blt.n	8002416 <__NVIC_SetPriority+0x2a>
 8002400:	683b      	ldr	r3, [r7, #0]
 8002402:	b2da      	uxtb	r2, r3
 8002404:	490c      	ldr	r1, [pc, #48]	; (8002438 <__NVIC_SetPriority+0x4c>)
 8002406:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800240a:	0112      	lsls	r2, r2, #4
 800240c:	b2d2      	uxtb	r2, r2
 800240e:	440b      	add	r3, r1
 8002410:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8002414:	e00a      	b.n	800242c <__NVIC_SetPriority+0x40>
 8002416:	683b      	ldr	r3, [r7, #0]
 8002418:	b2da      	uxtb	r2, r3
 800241a:	4908      	ldr	r1, [pc, #32]	; (800243c <__NVIC_SetPriority+0x50>)
 800241c:	79fb      	ldrb	r3, [r7, #7]
 800241e:	f003 030f 	and.w	r3, r3, #15
 8002422:	3b04      	subs	r3, #4
 8002424:	0112      	lsls	r2, r2, #4
 8002426:	b2d2      	uxtb	r2, r2
 8002428:	440b      	add	r3, r1
 800242a:	761a      	strb	r2, [r3, #24]
 800242c:	bf00      	nop
 800242e:	370c      	adds	r7, #12
 8002430:	46bd      	mov	sp, r7
 8002432:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002436:	4770      	bx	lr
 8002438:	e000e100 	.word	0xe000e100
 800243c:	e000ed00 	.word	0xe000ed00

08002440 <NVIC_EncodePriority>:
 8002440:	b480      	push	{r7}
 8002442:	b089      	sub	sp, #36	; 0x24
 8002444:	af00      	add	r7, sp, #0
 8002446:	60f8      	str	r0, [r7, #12]
 8002448:	60b9      	str	r1, [r7, #8]
 800244a:	607a      	str	r2, [r7, #4]
 800244c:	68fb      	ldr	r3, [r7, #12]
 800244e:	f003 0307 	and.w	r3, r3, #7
 8002452:	61fb      	str	r3, [r7, #28]
 8002454:	69fb      	ldr	r3, [r7, #28]
 8002456:	f1c3 0307 	rsb	r3, r3, #7
 800245a:	2b04      	cmp	r3, #4
 800245c:	bf28      	it	cs
 800245e:	2304      	movcs	r3, #4
 8002460:	61bb      	str	r3, [r7, #24]
 8002462:	69fb      	ldr	r3, [r7, #28]
 8002464:	3304      	adds	r3, #4
 8002466:	2b06      	cmp	r3, #6
 8002468:	d902      	bls.n	8002470 <NVIC_EncodePriority+0x30>
 800246a:	69fb      	ldr	r3, [r7, #28]
 800246c:	3b03      	subs	r3, #3
 800246e:	e000      	b.n	8002472 <NVIC_EncodePriority+0x32>
 8002470:	2300      	movs	r3, #0
 8002472:	617b      	str	r3, [r7, #20]
 8002474:	f04f 32ff 	mov.w	r2, #4294967295
 8002478:	69bb      	ldr	r3, [r7, #24]
 800247a:	fa02 f303 	lsl.w	r3, r2, r3
 800247e:	43da      	mvns	r2, r3
 8002480:	68bb      	ldr	r3, [r7, #8]
 8002482:	401a      	ands	r2, r3
 8002484:	697b      	ldr	r3, [r7, #20]
 8002486:	409a      	lsls	r2, r3
 8002488:	f04f 31ff 	mov.w	r1, #4294967295
 800248c:	697b      	ldr	r3, [r7, #20]
 800248e:	fa01 f303 	lsl.w	r3, r1, r3
 8002492:	43d9      	mvns	r1, r3
 8002494:	687b      	ldr	r3, [r7, #4]
 8002496:	400b      	ands	r3, r1
 8002498:	4313      	orrs	r3, r2
 800249a:	4618      	mov	r0, r3
 800249c:	3724      	adds	r7, #36	; 0x24
 800249e:	46bd      	mov	sp, r7
 80024a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80024a4:	4770      	bx	lr
	...

080024a8 <SysTick_Config>:
 80024a8:	b580      	push	{r7, lr}
 80024aa:	b082      	sub	sp, #8
 80024ac:	af00      	add	r7, sp, #0
 80024ae:	6078      	str	r0, [r7, #4]
 80024b0:	687b      	ldr	r3, [r7, #4]
 80024b2:	3b01      	subs	r3, #1
 80024b4:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 80024b8:	d301      	bcc.n	80024be <SysTick_Config+0x16>
 80024ba:	2301      	movs	r3, #1
 80024bc:	e00f      	b.n	80024de <SysTick_Config+0x36>
 80024be:	4a0a      	ldr	r2, [pc, #40]	; (80024e8 <SysTick_Config+0x40>)
 80024c0:	687b      	ldr	r3, [r7, #4]
 80024c2:	3b01      	subs	r3, #1
 80024c4:	6053      	str	r3, [r2, #4]
 80024c6:	210f      	movs	r1, #15
 80024c8:	f04f 30ff 	mov.w	r0, #4294967295
 80024cc:	f7ff ff8e 	bl	80023ec <__NVIC_SetPriority>
 80024d0:	4b05      	ldr	r3, [pc, #20]	; (80024e8 <SysTick_Config+0x40>)
 80024d2:	2200      	movs	r2, #0
 80024d4:	609a      	str	r2, [r3, #8]
 80024d6:	4b04      	ldr	r3, [pc, #16]	; (80024e8 <SysTick_Config+0x40>)
 80024d8:	2207      	movs	r2, #7
 80024da:	601a      	str	r2, [r3, #0]
 80024dc:	2300      	movs	r3, #0
 80024de:	4618      	mov	r0, r3
 80024e0:	3708      	adds	r7, #8
 80024e2:	46bd      	mov	sp, r7
 80024e4:	bd80      	pop	{r7, pc}
 80024e6:	bf00      	nop
 80024e8:	e000e010 	.word	0xe000e010

080024ec <HAL_NVIC_SetPriorityGrouping>:
 80024ec:	b580      	push	{r7, lr}
 80024ee:	b082      	sub	sp, #8
 80024f0:	af00      	add	r7, sp, #0
 80024f2:	6078      	str	r0, [r7, #4]
 80024f4:	6878      	ldr	r0, [r7, #4]
 80024f6:	f7ff ff29 	bl	800234c <__NVIC_SetPriorityGrouping>
 80024fa:	bf00      	nop
 80024fc:	3708      	adds	r7, #8
 80024fe:	46bd      	mov	sp, r7
 8002500:	bd80      	pop	{r7, pc}

08002502 <HAL_NVIC_SetPriority>:
 8002502:	b580      	push	{r7, lr}
 8002504:	b086      	sub	sp, #24
 8002506:	af00      	add	r7, sp, #0
 8002508:	4603      	mov	r3, r0
 800250a:	60b9      	str	r1, [r7, #8]
 800250c:	607a      	str	r2, [r7, #4]
 800250e:	73fb      	strb	r3, [r7, #15]
 8002510:	2300      	movs	r3, #0
 8002512:	617b      	str	r3, [r7, #20]
 8002514:	f7ff ff3e 	bl	8002394 <__NVIC_GetPriorityGrouping>
 8002518:	6178      	str	r0, [r7, #20]
 800251a:	687a      	ldr	r2, [r7, #4]
 800251c:	68b9      	ldr	r1, [r7, #8]
 800251e:	6978      	ldr	r0, [r7, #20]
 8002520:	f7ff ff8e 	bl	8002440 <NVIC_EncodePriority>
 8002524:	4602      	mov	r2, r0
 8002526:	f997 300f 	ldrsb.w	r3, [r7, #15]
 800252a:	4611      	mov	r1, r2
 800252c:	4618      	mov	r0, r3
 800252e:	f7ff ff5d 	bl	80023ec <__NVIC_SetPriority>
 8002532:	bf00      	nop
 8002534:	3718      	adds	r7, #24
 8002536:	46bd      	mov	sp, r7
 8002538:	bd80      	pop	{r7, pc}

0800253a <HAL_NVIC_EnableIRQ>:
 800253a:	b580      	push	{r7, lr}
 800253c:	b082      	sub	sp, #8
 800253e:	af00      	add	r7, sp, #0
 8002540:	4603      	mov	r3, r0
 8002542:	71fb      	strb	r3, [r7, #7]
 8002544:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002548:	4618      	mov	r0, r3
 800254a:	f7ff ff31 	bl	80023b0 <__NVIC_EnableIRQ>
 800254e:	bf00      	nop
 8002550:	3708      	adds	r7, #8
 8002552:	46bd      	mov	sp, r7
 8002554:	bd80      	pop	{r7, pc}

08002556 <HAL_SYSTICK_Config>:
 8002556:	b580      	push	{r7, lr}
 8002558:	b082      	sub	sp, #8
 800255a:	af00      	add	r7, sp, #0
 800255c:	6078      	str	r0, [r7, #4]
 800255e:	6878      	ldr	r0, [r7, #4]
 8002560:	f7ff ffa2 	bl	80024a8 <SysTick_Config>
 8002564:	4603      	mov	r3, r0
 8002566:	4618      	mov	r0, r3
 8002568:	3708      	adds	r7, #8
 800256a:	46bd      	mov	sp, r7
 800256c:	bd80      	pop	{r7, pc}
	...

08002570 <HAL_GPIO_Init>:
 8002570:	b480      	push	{r7}
 8002572:	b089      	sub	sp, #36	; 0x24
 8002574:	af00      	add	r7, sp, #0
 8002576:	6078      	str	r0, [r7, #4]
 8002578:	6039      	str	r1, [r7, #0]
 800257a:	2300      	movs	r3, #0
 800257c:	617b      	str	r3, [r7, #20]
 800257e:	2300      	movs	r3, #0
 8002580:	613b      	str	r3, [r7, #16]
 8002582:	2300      	movs	r3, #0
 8002584:	61bb      	str	r3, [r7, #24]
 8002586:	2300      	movs	r3, #0
 8002588:	61fb      	str	r3, [r7, #28]
 800258a:	e159      	b.n	8002840 <HAL_GPIO_Init+0x2d0>
 800258c:	2201      	movs	r2, #1
 800258e:	69fb      	ldr	r3, [r7, #28]
 8002590:	fa02 f303 	lsl.w	r3, r2, r3
 8002594:	617b      	str	r3, [r7, #20]
 8002596:	683b      	ldr	r3, [r7, #0]
 8002598:	681b      	ldr	r3, [r3, #0]
 800259a:	697a      	ldr	r2, [r7, #20]
 800259c:	4013      	ands	r3, r2
 800259e:	613b      	str	r3, [r7, #16]
 80025a0:	693a      	ldr	r2, [r7, #16]
 80025a2:	697b      	ldr	r3, [r7, #20]
 80025a4:	429a      	cmp	r2, r3
 80025a6:	f040 8148 	bne.w	800283a <HAL_GPIO_Init+0x2ca>
 80025aa:	683b      	ldr	r3, [r7, #0]
 80025ac:	685b      	ldr	r3, [r3, #4]
 80025ae:	f003 0303 	and.w	r3, r3, #3
 80025b2:	2b01      	cmp	r3, #1
 80025b4:	d005      	beq.n	80025c2 <HAL_GPIO_Init+0x52>
 80025b6:	683b      	ldr	r3, [r7, #0]
 80025b8:	685b      	ldr	r3, [r3, #4]
 80025ba:	f003 0303 	and.w	r3, r3, #3
 80025be:	2b02      	cmp	r3, #2
 80025c0:	d130      	bne.n	8002624 <HAL_GPIO_Init+0xb4>
 80025c2:	687b      	ldr	r3, [r7, #4]
 80025c4:	689b      	ldr	r3, [r3, #8]
 80025c6:	61bb      	str	r3, [r7, #24]
 80025c8:	69fb      	ldr	r3, [r7, #28]
 80025ca:	005b      	lsls	r3, r3, #1
 80025cc:	2203      	movs	r2, #3
 80025ce:	fa02 f303 	lsl.w	r3, r2, r3
 80025d2:	43db      	mvns	r3, r3
 80025d4:	69ba      	ldr	r2, [r7, #24]
 80025d6:	4013      	ands	r3, r2
 80025d8:	61bb      	str	r3, [r7, #24]
 80025da:	683b      	ldr	r3, [r7, #0]
 80025dc:	68da      	ldr	r2, [r3, #12]
 80025de:	69fb      	ldr	r3, [r7, #28]
 80025e0:	005b      	lsls	r3, r3, #1
 80025e2:	fa02 f303 	lsl.w	r3, r2, r3
 80025e6:	69ba      	ldr	r2, [r7, #24]
 80025e8:	4313      	orrs	r3, r2
 80025ea:	61bb      	str	r3, [r7, #24]
 80025ec:	687b      	ldr	r3, [r7, #4]
 80025ee:	69ba      	ldr	r2, [r7, #24]
 80025f0:	609a      	str	r2, [r3, #8]
 80025f2:	687b      	ldr	r3, [r7, #4]
 80025f4:	685b      	ldr	r3, [r3, #4]
 80025f6:	61bb      	str	r3, [r7, #24]
 80025f8:	2201      	movs	r2, #1
 80025fa:	69fb      	ldr	r3, [r7, #28]
 80025fc:	fa02 f303 	lsl.w	r3, r2, r3
 8002600:	43db      	mvns	r3, r3
 8002602:	69ba      	ldr	r2, [r7, #24]
 8002604:	4013      	ands	r3, r2
 8002606:	61bb      	str	r3, [r7, #24]
 8002608:	683b      	ldr	r3, [r7, #0]
 800260a:	685b      	ldr	r3, [r3, #4]
 800260c:	091b      	lsrs	r3, r3, #4
 800260e:	f003 0201 	and.w	r2, r3, #1
 8002612:	69fb      	ldr	r3, [r7, #28]
 8002614:	fa02 f303 	lsl.w	r3, r2, r3
 8002618:	69ba      	ldr	r2, [r7, #24]
 800261a:	4313      	orrs	r3, r2
 800261c:	61bb      	str	r3, [r7, #24]
 800261e:	687b      	ldr	r3, [r7, #4]
 8002620:	69ba      	ldr	r2, [r7, #24]
 8002622:	605a      	str	r2, [r3, #4]
 8002624:	683b      	ldr	r3, [r7, #0]
 8002626:	685b      	ldr	r3, [r3, #4]
 8002628:	f003 0303 	and.w	r3, r3, #3
 800262c:	2b03      	cmp	r3, #3
 800262e:	d017      	beq.n	8002660 <HAL_GPIO_Init+0xf0>
 8002630:	687b      	ldr	r3, [r7, #4]
 8002632:	68db      	ldr	r3, [r3, #12]
 8002634:	61bb      	str	r3, [r7, #24]
 8002636:	69fb      	ldr	r3, [r7, #28]
 8002638:	005b      	lsls	r3, r3, #1
 800263a:	2203      	movs	r2, #3
 800263c:	fa02 f303 	lsl.w	r3, r2, r3
 8002640:	43db      	mvns	r3, r3
 8002642:	69ba      	ldr	r2, [r7, #24]
 8002644:	4013      	ands	r3, r2
 8002646:	61bb      	str	r3, [r7, #24]
 8002648:	683b      	ldr	r3, [r7, #0]
 800264a:	689a      	ldr	r2, [r3, #8]
 800264c:	69fb      	ldr	r3, [r7, #28]
 800264e:	005b      	lsls	r3, r3, #1
 8002650:	fa02 f303 	lsl.w	r3, r2, r3
 8002654:	69ba      	ldr	r2, [r7, #24]
 8002656:	4313      	orrs	r3, r2
 8002658:	61bb      	str	r3, [r7, #24]
 800265a:	687b      	ldr	r3, [r7, #4]
 800265c:	69ba      	ldr	r2, [r7, #24]
 800265e:	60da      	str	r2, [r3, #12]
 8002660:	683b      	ldr	r3, [r7, #0]
 8002662:	685b      	ldr	r3, [r3, #4]
 8002664:	f003 0303 	and.w	r3, r3, #3
 8002668:	2b02      	cmp	r3, #2
 800266a:	d123      	bne.n	80026b4 <HAL_GPIO_Init+0x144>
 800266c:	69fb      	ldr	r3, [r7, #28]
 800266e:	08da      	lsrs	r2, r3, #3
 8002670:	687b      	ldr	r3, [r7, #4]
 8002672:	3208      	adds	r2, #8
 8002674:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8002678:	61bb      	str	r3, [r7, #24]
 800267a:	69fb      	ldr	r3, [r7, #28]
 800267c:	f003 0307 	and.w	r3, r3, #7
 8002680:	009b      	lsls	r3, r3, #2
 8002682:	220f      	movs	r2, #15
 8002684:	fa02 f303 	lsl.w	r3, r2, r3
 8002688:	43db      	mvns	r3, r3
 800268a:	69ba      	ldr	r2, [r7, #24]
 800268c:	4013      	ands	r3, r2
 800268e:	61bb      	str	r3, [r7, #24]
 8002690:	683b      	ldr	r3, [r7, #0]
 8002692:	691a      	ldr	r2, [r3, #16]
 8002694:	69fb      	ldr	r3, [r7, #28]
 8002696:	f003 0307 	and.w	r3, r3, #7
 800269a:	009b      	lsls	r3, r3, #2
 800269c:	fa02 f303 	lsl.w	r3, r2, r3
 80026a0:	69ba      	ldr	r2, [r7, #24]
 80026a2:	4313      	orrs	r3, r2
 80026a4:	61bb      	str	r3, [r7, #24]
 80026a6:	69fb      	ldr	r3, [r7, #28]
 80026a8:	08da      	lsrs	r2, r3, #3
 80026aa:	687b      	ldr	r3, [r7, #4]
 80026ac:	3208      	adds	r2, #8
 80026ae:	69b9      	ldr	r1, [r7, #24]
 80026b0:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 80026b4:	687b      	ldr	r3, [r7, #4]
 80026b6:	681b      	ldr	r3, [r3, #0]
 80026b8:	61bb      	str	r3, [r7, #24]
 80026ba:	69fb      	ldr	r3, [r7, #28]
 80026bc:	005b      	lsls	r3, r3, #1
 80026be:	2203      	movs	r2, #3
 80026c0:	fa02 f303 	lsl.w	r3, r2, r3
 80026c4:	43db      	mvns	r3, r3
 80026c6:	69ba      	ldr	r2, [r7, #24]
 80026c8:	4013      	ands	r3, r2
 80026ca:	61bb      	str	r3, [r7, #24]
 80026cc:	683b      	ldr	r3, [r7, #0]
 80026ce:	685b      	ldr	r3, [r3, #4]
 80026d0:	f003 0203 	and.w	r2, r3, #3
 80026d4:	69fb      	ldr	r3, [r7, #28]
 80026d6:	005b      	lsls	r3, r3, #1
 80026d8:	fa02 f303 	lsl.w	r3, r2, r3
 80026dc:	69ba      	ldr	r2, [r7, #24]
 80026de:	4313      	orrs	r3, r2
 80026e0:	61bb      	str	r3, [r7, #24]
 80026e2:	687b      	ldr	r3, [r7, #4]
 80026e4:	69ba      	ldr	r2, [r7, #24]
 80026e6:	601a      	str	r2, [r3, #0]
 80026e8:	683b      	ldr	r3, [r7, #0]
 80026ea:	685b      	ldr	r3, [r3, #4]
 80026ec:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 80026f0:	2b00      	cmp	r3, #0
 80026f2:	f000 80a2 	beq.w	800283a <HAL_GPIO_Init+0x2ca>
 80026f6:	2300      	movs	r3, #0
 80026f8:	60fb      	str	r3, [r7, #12]
 80026fa:	4b57      	ldr	r3, [pc, #348]	; (8002858 <HAL_GPIO_Init+0x2e8>)
 80026fc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80026fe:	4a56      	ldr	r2, [pc, #344]	; (8002858 <HAL_GPIO_Init+0x2e8>)
 8002700:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8002704:	6453      	str	r3, [r2, #68]	; 0x44
 8002706:	4b54      	ldr	r3, [pc, #336]	; (8002858 <HAL_GPIO_Init+0x2e8>)
 8002708:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800270a:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 800270e:	60fb      	str	r3, [r7, #12]
 8002710:	68fb      	ldr	r3, [r7, #12]
 8002712:	4a52      	ldr	r2, [pc, #328]	; (800285c <HAL_GPIO_Init+0x2ec>)
 8002714:	69fb      	ldr	r3, [r7, #28]
 8002716:	089b      	lsrs	r3, r3, #2
 8002718:	3302      	adds	r3, #2
 800271a:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800271e:	61bb      	str	r3, [r7, #24]
 8002720:	69fb      	ldr	r3, [r7, #28]
 8002722:	f003 0303 	and.w	r3, r3, #3
 8002726:	009b      	lsls	r3, r3, #2
 8002728:	220f      	movs	r2, #15
 800272a:	fa02 f303 	lsl.w	r3, r2, r3
 800272e:	43db      	mvns	r3, r3
 8002730:	69ba      	ldr	r2, [r7, #24]
 8002732:	4013      	ands	r3, r2
 8002734:	61bb      	str	r3, [r7, #24]
 8002736:	687b      	ldr	r3, [r7, #4]
 8002738:	4a49      	ldr	r2, [pc, #292]	; (8002860 <HAL_GPIO_Init+0x2f0>)
 800273a:	4293      	cmp	r3, r2
 800273c:	d019      	beq.n	8002772 <HAL_GPIO_Init+0x202>
 800273e:	687b      	ldr	r3, [r7, #4]
 8002740:	4a48      	ldr	r2, [pc, #288]	; (8002864 <HAL_GPIO_Init+0x2f4>)
 8002742:	4293      	cmp	r3, r2
 8002744:	d013      	beq.n	800276e <HAL_GPIO_Init+0x1fe>
 8002746:	687b      	ldr	r3, [r7, #4]
 8002748:	4a47      	ldr	r2, [pc, #284]	; (8002868 <HAL_GPIO_Init+0x2f8>)
 800274a:	4293      	cmp	r3, r2
 800274c:	d00d      	beq.n	800276a <HAL_GPIO_Init+0x1fa>
 800274e:	687b      	ldr	r3, [r7, #4]
 8002750:	4a46      	ldr	r2, [pc, #280]	; (800286c <HAL_GPIO_Init+0x2fc>)
 8002752:	4293      	cmp	r3, r2
 8002754:	d007      	beq.n	8002766 <HAL_GPIO_Init+0x1f6>
 8002756:	687b      	ldr	r3, [r7, #4]
 8002758:	4a45      	ldr	r2, [pc, #276]	; (8002870 <HAL_GPIO_Init+0x300>)
 800275a:	4293      	cmp	r3, r2
 800275c:	d101      	bne.n	8002762 <HAL_GPIO_Init+0x1f2>
 800275e:	2304      	movs	r3, #4
 8002760:	e008      	b.n	8002774 <HAL_GPIO_Init+0x204>
 8002762:	2307      	movs	r3, #7
 8002764:	e006      	b.n	8002774 <HAL_GPIO_Init+0x204>
 8002766:	2303      	movs	r3, #3
 8002768:	e004      	b.n	8002774 <HAL_GPIO_Init+0x204>
 800276a:	2302      	movs	r3, #2
 800276c:	e002      	b.n	8002774 <HAL_GPIO_Init+0x204>
 800276e:	2301      	movs	r3, #1
 8002770:	e000      	b.n	8002774 <HAL_GPIO_Init+0x204>
 8002772:	2300      	movs	r3, #0
 8002774:	69fa      	ldr	r2, [r7, #28]
 8002776:	f002 0203 	and.w	r2, r2, #3
 800277a:	0092      	lsls	r2, r2, #2
 800277c:	4093      	lsls	r3, r2
 800277e:	69ba      	ldr	r2, [r7, #24]
 8002780:	4313      	orrs	r3, r2
 8002782:	61bb      	str	r3, [r7, #24]
 8002784:	4935      	ldr	r1, [pc, #212]	; (800285c <HAL_GPIO_Init+0x2ec>)
 8002786:	69fb      	ldr	r3, [r7, #28]
 8002788:	089b      	lsrs	r3, r3, #2
 800278a:	3302      	adds	r3, #2
 800278c:	69ba      	ldr	r2, [r7, #24]
 800278e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8002792:	4b38      	ldr	r3, [pc, #224]	; (8002874 <HAL_GPIO_Init+0x304>)
 8002794:	689b      	ldr	r3, [r3, #8]
 8002796:	61bb      	str	r3, [r7, #24]
 8002798:	693b      	ldr	r3, [r7, #16]
 800279a:	43db      	mvns	r3, r3
 800279c:	69ba      	ldr	r2, [r7, #24]
 800279e:	4013      	ands	r3, r2
 80027a0:	61bb      	str	r3, [r7, #24]
 80027a2:	683b      	ldr	r3, [r7, #0]
 80027a4:	685b      	ldr	r3, [r3, #4]
 80027a6:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 80027aa:	2b00      	cmp	r3, #0
 80027ac:	d003      	beq.n	80027b6 <HAL_GPIO_Init+0x246>
 80027ae:	69ba      	ldr	r2, [r7, #24]
 80027b0:	693b      	ldr	r3, [r7, #16]
 80027b2:	4313      	orrs	r3, r2
 80027b4:	61bb      	str	r3, [r7, #24]
 80027b6:	4a2f      	ldr	r2, [pc, #188]	; (8002874 <HAL_GPIO_Init+0x304>)
 80027b8:	69bb      	ldr	r3, [r7, #24]
 80027ba:	6093      	str	r3, [r2, #8]
 80027bc:	4b2d      	ldr	r3, [pc, #180]	; (8002874 <HAL_GPIO_Init+0x304>)
 80027be:	68db      	ldr	r3, [r3, #12]
 80027c0:	61bb      	str	r3, [r7, #24]
 80027c2:	693b      	ldr	r3, [r7, #16]
 80027c4:	43db      	mvns	r3, r3
 80027c6:	69ba      	ldr	r2, [r7, #24]
 80027c8:	4013      	ands	r3, r2
 80027ca:	61bb      	str	r3, [r7, #24]
 80027cc:	683b      	ldr	r3, [r7, #0]
 80027ce:	685b      	ldr	r3, [r3, #4]
 80027d0:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 80027d4:	2b00      	cmp	r3, #0
 80027d6:	d003      	beq.n	80027e0 <HAL_GPIO_Init+0x270>
 80027d8:	69ba      	ldr	r2, [r7, #24]
 80027da:	693b      	ldr	r3, [r7, #16]
 80027dc:	4313      	orrs	r3, r2
 80027de:	61bb      	str	r3, [r7, #24]
 80027e0:	4a24      	ldr	r2, [pc, #144]	; (8002874 <HAL_GPIO_Init+0x304>)
 80027e2:	69bb      	ldr	r3, [r7, #24]
 80027e4:	60d3      	str	r3, [r2, #12]
 80027e6:	4b23      	ldr	r3, [pc, #140]	; (8002874 <HAL_GPIO_Init+0x304>)
 80027e8:	685b      	ldr	r3, [r3, #4]
 80027ea:	61bb      	str	r3, [r7, #24]
 80027ec:	693b      	ldr	r3, [r7, #16]
 80027ee:	43db      	mvns	r3, r3
 80027f0:	69ba      	ldr	r2, [r7, #24]
 80027f2:	4013      	ands	r3, r2
 80027f4:	61bb      	str	r3, [r7, #24]
 80027f6:	683b      	ldr	r3, [r7, #0]
 80027f8:	685b      	ldr	r3, [r3, #4]
 80027fa:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80027fe:	2b00      	cmp	r3, #0
 8002800:	d003      	beq.n	800280a <HAL_GPIO_Init+0x29a>
 8002802:	69ba      	ldr	r2, [r7, #24]
 8002804:	693b      	ldr	r3, [r7, #16]
 8002806:	4313      	orrs	r3, r2
 8002808:	61bb      	str	r3, [r7, #24]
 800280a:	4a1a      	ldr	r2, [pc, #104]	; (8002874 <HAL_GPIO_Init+0x304>)
 800280c:	69bb      	ldr	r3, [r7, #24]
 800280e:	6053      	str	r3, [r2, #4]
 8002810:	4b18      	ldr	r3, [pc, #96]	; (8002874 <HAL_GPIO_Init+0x304>)
 8002812:	681b      	ldr	r3, [r3, #0]
 8002814:	61bb      	str	r3, [r7, #24]
 8002816:	693b      	ldr	r3, [r7, #16]
 8002818:	43db      	mvns	r3, r3
 800281a:	69ba      	ldr	r2, [r7, #24]
 800281c:	4013      	ands	r3, r2
 800281e:	61bb      	str	r3, [r7, #24]
 8002820:	683b      	ldr	r3, [r7, #0]
 8002822:	685b      	ldr	r3, [r3, #4]
 8002824:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8002828:	2b00      	cmp	r3, #0
 800282a:	d003      	beq.n	8002834 <HAL_GPIO_Init+0x2c4>
 800282c:	69ba      	ldr	r2, [r7, #24]
 800282e:	693b      	ldr	r3, [r7, #16]
 8002830:	4313      	orrs	r3, r2
 8002832:	61bb      	str	r3, [r7, #24]
 8002834:	4a0f      	ldr	r2, [pc, #60]	; (8002874 <HAL_GPIO_Init+0x304>)
 8002836:	69bb      	ldr	r3, [r7, #24]
 8002838:	6013      	str	r3, [r2, #0]
 800283a:	69fb      	ldr	r3, [r7, #28]
 800283c:	3301      	adds	r3, #1
 800283e:	61fb      	str	r3, [r7, #28]
 8002840:	69fb      	ldr	r3, [r7, #28]
 8002842:	2b0f      	cmp	r3, #15
 8002844:	f67f aea2 	bls.w	800258c <HAL_GPIO_Init+0x1c>
 8002848:	bf00      	nop
 800284a:	bf00      	nop
 800284c:	3724      	adds	r7, #36	; 0x24
 800284e:	46bd      	mov	sp, r7
 8002850:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002854:	4770      	bx	lr
 8002856:	bf00      	nop
 8002858:	40023800 	.word	0x40023800
 800285c:	40013800 	.word	0x40013800
 8002860:	40020000 	.word	0x40020000
 8002864:	40020400 	.word	0x40020400
 8002868:	40020800 	.word	0x40020800
 800286c:	40020c00 	.word	0x40020c00
 8002870:	40021000 	.word	0x40021000
 8002874:	40013c00 	.word	0x40013c00

08002878 <HAL_GPIO_WritePin>:
 8002878:	b480      	push	{r7}
 800287a:	b083      	sub	sp, #12
 800287c:	af00      	add	r7, sp, #0
 800287e:	6078      	str	r0, [r7, #4]
 8002880:	460b      	mov	r3, r1
 8002882:	807b      	strh	r3, [r7, #2]
 8002884:	4613      	mov	r3, r2
 8002886:	707b      	strb	r3, [r7, #1]
 8002888:	787b      	ldrb	r3, [r7, #1]
 800288a:	2b00      	cmp	r3, #0
 800288c:	d003      	beq.n	8002896 <HAL_GPIO_WritePin+0x1e>
 800288e:	887a      	ldrh	r2, [r7, #2]
 8002890:	687b      	ldr	r3, [r7, #4]
 8002892:	619a      	str	r2, [r3, #24]
 8002894:	e003      	b.n	800289e <HAL_GPIO_WritePin+0x26>
 8002896:	887b      	ldrh	r3, [r7, #2]
 8002898:	041a      	lsls	r2, r3, #16
 800289a:	687b      	ldr	r3, [r7, #4]
 800289c:	619a      	str	r2, [r3, #24]
 800289e:	bf00      	nop
 80028a0:	370c      	adds	r7, #12
 80028a2:	46bd      	mov	sp, r7
 80028a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80028a8:	4770      	bx	lr
	...

080028ac <HAL_GPIO_EXTI_IRQHandler>:
 80028ac:	b580      	push	{r7, lr}
 80028ae:	b082      	sub	sp, #8
 80028b0:	af00      	add	r7, sp, #0
 80028b2:	4603      	mov	r3, r0
 80028b4:	80fb      	strh	r3, [r7, #6]
 80028b6:	4b08      	ldr	r3, [pc, #32]	; (80028d8 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 80028b8:	695a      	ldr	r2, [r3, #20]
 80028ba:	88fb      	ldrh	r3, [r7, #6]
 80028bc:	4013      	ands	r3, r2
 80028be:	2b00      	cmp	r3, #0
 80028c0:	d006      	beq.n	80028d0 <HAL_GPIO_EXTI_IRQHandler+0x24>
 80028c2:	4a05      	ldr	r2, [pc, #20]	; (80028d8 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 80028c4:	88fb      	ldrh	r3, [r7, #6]
 80028c6:	6153      	str	r3, [r2, #20]
 80028c8:	88fb      	ldrh	r3, [r7, #6]
 80028ca:	4618      	mov	r0, r3
 80028cc:	f7fe f810 	bl	80008f0 <HAL_GPIO_EXTI_Callback>
 80028d0:	bf00      	nop
 80028d2:	3708      	adds	r7, #8
 80028d4:	46bd      	mov	sp, r7
 80028d6:	bd80      	pop	{r7, pc}
 80028d8:	40013c00 	.word	0x40013c00

080028dc <HAL_RCC_OscConfig>:
 80028dc:	b580      	push	{r7, lr}
 80028de:	b086      	sub	sp, #24
 80028e0:	af00      	add	r7, sp, #0
 80028e2:	6078      	str	r0, [r7, #4]
 80028e4:	687b      	ldr	r3, [r7, #4]
 80028e6:	2b00      	cmp	r3, #0
 80028e8:	d101      	bne.n	80028ee <HAL_RCC_OscConfig+0x12>
 80028ea:	2301      	movs	r3, #1
 80028ec:	e267      	b.n	8002dbe <HAL_RCC_OscConfig+0x4e2>
 80028ee:	687b      	ldr	r3, [r7, #4]
 80028f0:	681b      	ldr	r3, [r3, #0]
 80028f2:	f003 0301 	and.w	r3, r3, #1
 80028f6:	2b00      	cmp	r3, #0
 80028f8:	d075      	beq.n	80029e6 <HAL_RCC_OscConfig+0x10a>
 80028fa:	4b88      	ldr	r3, [pc, #544]	; (8002b1c <HAL_RCC_OscConfig+0x240>)
 80028fc:	689b      	ldr	r3, [r3, #8]
 80028fe:	f003 030c 	and.w	r3, r3, #12
 8002902:	2b04      	cmp	r3, #4
 8002904:	d00c      	beq.n	8002920 <HAL_RCC_OscConfig+0x44>
 8002906:	4b85      	ldr	r3, [pc, #532]	; (8002b1c <HAL_RCC_OscConfig+0x240>)
 8002908:	689b      	ldr	r3, [r3, #8]
 800290a:	f003 030c 	and.w	r3, r3, #12
 800290e:	2b08      	cmp	r3, #8
 8002910:	d112      	bne.n	8002938 <HAL_RCC_OscConfig+0x5c>
 8002912:	4b82      	ldr	r3, [pc, #520]	; (8002b1c <HAL_RCC_OscConfig+0x240>)
 8002914:	685b      	ldr	r3, [r3, #4]
 8002916:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 800291a:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 800291e:	d10b      	bne.n	8002938 <HAL_RCC_OscConfig+0x5c>
 8002920:	4b7e      	ldr	r3, [pc, #504]	; (8002b1c <HAL_RCC_OscConfig+0x240>)
 8002922:	681b      	ldr	r3, [r3, #0]
 8002924:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002928:	2b00      	cmp	r3, #0
 800292a:	d05b      	beq.n	80029e4 <HAL_RCC_OscConfig+0x108>
 800292c:	687b      	ldr	r3, [r7, #4]
 800292e:	685b      	ldr	r3, [r3, #4]
 8002930:	2b00      	cmp	r3, #0
 8002932:	d157      	bne.n	80029e4 <HAL_RCC_OscConfig+0x108>
 8002934:	2301      	movs	r3, #1
 8002936:	e242      	b.n	8002dbe <HAL_RCC_OscConfig+0x4e2>
 8002938:	687b      	ldr	r3, [r7, #4]
 800293a:	685b      	ldr	r3, [r3, #4]
 800293c:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 8002940:	d106      	bne.n	8002950 <HAL_RCC_OscConfig+0x74>
 8002942:	4b76      	ldr	r3, [pc, #472]	; (8002b1c <HAL_RCC_OscConfig+0x240>)
 8002944:	681b      	ldr	r3, [r3, #0]
 8002946:	4a75      	ldr	r2, [pc, #468]	; (8002b1c <HAL_RCC_OscConfig+0x240>)
 8002948:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800294c:	6013      	str	r3, [r2, #0]
 800294e:	e01d      	b.n	800298c <HAL_RCC_OscConfig+0xb0>
 8002950:	687b      	ldr	r3, [r7, #4]
 8002952:	685b      	ldr	r3, [r3, #4]
 8002954:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 8002958:	d10c      	bne.n	8002974 <HAL_RCC_OscConfig+0x98>
 800295a:	4b70      	ldr	r3, [pc, #448]	; (8002b1c <HAL_RCC_OscConfig+0x240>)
 800295c:	681b      	ldr	r3, [r3, #0]
 800295e:	4a6f      	ldr	r2, [pc, #444]	; (8002b1c <HAL_RCC_OscConfig+0x240>)
 8002960:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8002964:	6013      	str	r3, [r2, #0]
 8002966:	4b6d      	ldr	r3, [pc, #436]	; (8002b1c <HAL_RCC_OscConfig+0x240>)
 8002968:	681b      	ldr	r3, [r3, #0]
 800296a:	4a6c      	ldr	r2, [pc, #432]	; (8002b1c <HAL_RCC_OscConfig+0x240>)
 800296c:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8002970:	6013      	str	r3, [r2, #0]
 8002972:	e00b      	b.n	800298c <HAL_RCC_OscConfig+0xb0>
 8002974:	4b69      	ldr	r3, [pc, #420]	; (8002b1c <HAL_RCC_OscConfig+0x240>)
 8002976:	681b      	ldr	r3, [r3, #0]
 8002978:	4a68      	ldr	r2, [pc, #416]	; (8002b1c <HAL_RCC_OscConfig+0x240>)
 800297a:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800297e:	6013      	str	r3, [r2, #0]
 8002980:	4b66      	ldr	r3, [pc, #408]	; (8002b1c <HAL_RCC_OscConfig+0x240>)
 8002982:	681b      	ldr	r3, [r3, #0]
 8002984:	4a65      	ldr	r2, [pc, #404]	; (8002b1c <HAL_RCC_OscConfig+0x240>)
 8002986:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 800298a:	6013      	str	r3, [r2, #0]
 800298c:	687b      	ldr	r3, [r7, #4]
 800298e:	685b      	ldr	r3, [r3, #4]
 8002990:	2b00      	cmp	r3, #0
 8002992:	d013      	beq.n	80029bc <HAL_RCC_OscConfig+0xe0>
 8002994:	f7ff f8ec 	bl	8001b70 <HAL_GetTick>
 8002998:	6138      	str	r0, [r7, #16]
 800299a:	e008      	b.n	80029ae <HAL_RCC_OscConfig+0xd2>
 800299c:	f7ff f8e8 	bl	8001b70 <HAL_GetTick>
 80029a0:	4602      	mov	r2, r0
 80029a2:	693b      	ldr	r3, [r7, #16]
 80029a4:	1ad3      	subs	r3, r2, r3
 80029a6:	2b64      	cmp	r3, #100	; 0x64
 80029a8:	d901      	bls.n	80029ae <HAL_RCC_OscConfig+0xd2>
 80029aa:	2303      	movs	r3, #3
 80029ac:	e207      	b.n	8002dbe <HAL_RCC_OscConfig+0x4e2>
 80029ae:	4b5b      	ldr	r3, [pc, #364]	; (8002b1c <HAL_RCC_OscConfig+0x240>)
 80029b0:	681b      	ldr	r3, [r3, #0]
 80029b2:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80029b6:	2b00      	cmp	r3, #0
 80029b8:	d0f0      	beq.n	800299c <HAL_RCC_OscConfig+0xc0>
 80029ba:	e014      	b.n	80029e6 <HAL_RCC_OscConfig+0x10a>
 80029bc:	f7ff f8d8 	bl	8001b70 <HAL_GetTick>
 80029c0:	6138      	str	r0, [r7, #16]
 80029c2:	e008      	b.n	80029d6 <HAL_RCC_OscConfig+0xfa>
 80029c4:	f7ff f8d4 	bl	8001b70 <HAL_GetTick>
 80029c8:	4602      	mov	r2, r0
 80029ca:	693b      	ldr	r3, [r7, #16]
 80029cc:	1ad3      	subs	r3, r2, r3
 80029ce:	2b64      	cmp	r3, #100	; 0x64
 80029d0:	d901      	bls.n	80029d6 <HAL_RCC_OscConfig+0xfa>
 80029d2:	2303      	movs	r3, #3
 80029d4:	e1f3      	b.n	8002dbe <HAL_RCC_OscConfig+0x4e2>
 80029d6:	4b51      	ldr	r3, [pc, #324]	; (8002b1c <HAL_RCC_OscConfig+0x240>)
 80029d8:	681b      	ldr	r3, [r3, #0]
 80029da:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80029de:	2b00      	cmp	r3, #0
 80029e0:	d1f0      	bne.n	80029c4 <HAL_RCC_OscConfig+0xe8>
 80029e2:	e000      	b.n	80029e6 <HAL_RCC_OscConfig+0x10a>
 80029e4:	bf00      	nop
 80029e6:	687b      	ldr	r3, [r7, #4]
 80029e8:	681b      	ldr	r3, [r3, #0]
 80029ea:	f003 0302 	and.w	r3, r3, #2
 80029ee:	2b00      	cmp	r3, #0
 80029f0:	d063      	beq.n	8002aba <HAL_RCC_OscConfig+0x1de>
 80029f2:	4b4a      	ldr	r3, [pc, #296]	; (8002b1c <HAL_RCC_OscConfig+0x240>)
 80029f4:	689b      	ldr	r3, [r3, #8]
 80029f6:	f003 030c 	and.w	r3, r3, #12
 80029fa:	2b00      	cmp	r3, #0
 80029fc:	d00b      	beq.n	8002a16 <HAL_RCC_OscConfig+0x13a>
 80029fe:	4b47      	ldr	r3, [pc, #284]	; (8002b1c <HAL_RCC_OscConfig+0x240>)
 8002a00:	689b      	ldr	r3, [r3, #8]
 8002a02:	f003 030c 	and.w	r3, r3, #12
 8002a06:	2b08      	cmp	r3, #8
 8002a08:	d11c      	bne.n	8002a44 <HAL_RCC_OscConfig+0x168>
 8002a0a:	4b44      	ldr	r3, [pc, #272]	; (8002b1c <HAL_RCC_OscConfig+0x240>)
 8002a0c:	685b      	ldr	r3, [r3, #4]
 8002a0e:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8002a12:	2b00      	cmp	r3, #0
 8002a14:	d116      	bne.n	8002a44 <HAL_RCC_OscConfig+0x168>
 8002a16:	4b41      	ldr	r3, [pc, #260]	; (8002b1c <HAL_RCC_OscConfig+0x240>)
 8002a18:	681b      	ldr	r3, [r3, #0]
 8002a1a:	f003 0302 	and.w	r3, r3, #2
 8002a1e:	2b00      	cmp	r3, #0
 8002a20:	d005      	beq.n	8002a2e <HAL_RCC_OscConfig+0x152>
 8002a22:	687b      	ldr	r3, [r7, #4]
 8002a24:	68db      	ldr	r3, [r3, #12]
 8002a26:	2b01      	cmp	r3, #1
 8002a28:	d001      	beq.n	8002a2e <HAL_RCC_OscConfig+0x152>
 8002a2a:	2301      	movs	r3, #1
 8002a2c:	e1c7      	b.n	8002dbe <HAL_RCC_OscConfig+0x4e2>
 8002a2e:	4b3b      	ldr	r3, [pc, #236]	; (8002b1c <HAL_RCC_OscConfig+0x240>)
 8002a30:	681b      	ldr	r3, [r3, #0]
 8002a32:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8002a36:	687b      	ldr	r3, [r7, #4]
 8002a38:	691b      	ldr	r3, [r3, #16]
 8002a3a:	00db      	lsls	r3, r3, #3
 8002a3c:	4937      	ldr	r1, [pc, #220]	; (8002b1c <HAL_RCC_OscConfig+0x240>)
 8002a3e:	4313      	orrs	r3, r2
 8002a40:	600b      	str	r3, [r1, #0]
 8002a42:	e03a      	b.n	8002aba <HAL_RCC_OscConfig+0x1de>
 8002a44:	687b      	ldr	r3, [r7, #4]
 8002a46:	68db      	ldr	r3, [r3, #12]
 8002a48:	2b00      	cmp	r3, #0
 8002a4a:	d020      	beq.n	8002a8e <HAL_RCC_OscConfig+0x1b2>
 8002a4c:	4b34      	ldr	r3, [pc, #208]	; (8002b20 <HAL_RCC_OscConfig+0x244>)
 8002a4e:	2201      	movs	r2, #1
 8002a50:	601a      	str	r2, [r3, #0]
 8002a52:	f7ff f88d 	bl	8001b70 <HAL_GetTick>
 8002a56:	6138      	str	r0, [r7, #16]
 8002a58:	e008      	b.n	8002a6c <HAL_RCC_OscConfig+0x190>
 8002a5a:	f7ff f889 	bl	8001b70 <HAL_GetTick>
 8002a5e:	4602      	mov	r2, r0
 8002a60:	693b      	ldr	r3, [r7, #16]
 8002a62:	1ad3      	subs	r3, r2, r3
 8002a64:	2b02      	cmp	r3, #2
 8002a66:	d901      	bls.n	8002a6c <HAL_RCC_OscConfig+0x190>
 8002a68:	2303      	movs	r3, #3
 8002a6a:	e1a8      	b.n	8002dbe <HAL_RCC_OscConfig+0x4e2>
 8002a6c:	4b2b      	ldr	r3, [pc, #172]	; (8002b1c <HAL_RCC_OscConfig+0x240>)
 8002a6e:	681b      	ldr	r3, [r3, #0]
 8002a70:	f003 0302 	and.w	r3, r3, #2
 8002a74:	2b00      	cmp	r3, #0
 8002a76:	d0f0      	beq.n	8002a5a <HAL_RCC_OscConfig+0x17e>
 8002a78:	4b28      	ldr	r3, [pc, #160]	; (8002b1c <HAL_RCC_OscConfig+0x240>)
 8002a7a:	681b      	ldr	r3, [r3, #0]
 8002a7c:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 8002a80:	687b      	ldr	r3, [r7, #4]
 8002a82:	691b      	ldr	r3, [r3, #16]
 8002a84:	00db      	lsls	r3, r3, #3
 8002a86:	4925      	ldr	r1, [pc, #148]	; (8002b1c <HAL_RCC_OscConfig+0x240>)
 8002a88:	4313      	orrs	r3, r2
 8002a8a:	600b      	str	r3, [r1, #0]
 8002a8c:	e015      	b.n	8002aba <HAL_RCC_OscConfig+0x1de>
 8002a8e:	4b24      	ldr	r3, [pc, #144]	; (8002b20 <HAL_RCC_OscConfig+0x244>)
 8002a90:	2200      	movs	r2, #0
 8002a92:	601a      	str	r2, [r3, #0]
 8002a94:	f7ff f86c 	bl	8001b70 <HAL_GetTick>
 8002a98:	6138      	str	r0, [r7, #16]
 8002a9a:	e008      	b.n	8002aae <HAL_RCC_OscConfig+0x1d2>
 8002a9c:	f7ff f868 	bl	8001b70 <HAL_GetTick>
 8002aa0:	4602      	mov	r2, r0
 8002aa2:	693b      	ldr	r3, [r7, #16]
 8002aa4:	1ad3      	subs	r3, r2, r3
 8002aa6:	2b02      	cmp	r3, #2
 8002aa8:	d901      	bls.n	8002aae <HAL_RCC_OscConfig+0x1d2>
 8002aaa:	2303      	movs	r3, #3
 8002aac:	e187      	b.n	8002dbe <HAL_RCC_OscConfig+0x4e2>
 8002aae:	4b1b      	ldr	r3, [pc, #108]	; (8002b1c <HAL_RCC_OscConfig+0x240>)
 8002ab0:	681b      	ldr	r3, [r3, #0]
 8002ab2:	f003 0302 	and.w	r3, r3, #2
 8002ab6:	2b00      	cmp	r3, #0
 8002ab8:	d1f0      	bne.n	8002a9c <HAL_RCC_OscConfig+0x1c0>
 8002aba:	687b      	ldr	r3, [r7, #4]
 8002abc:	681b      	ldr	r3, [r3, #0]
 8002abe:	f003 0308 	and.w	r3, r3, #8
 8002ac2:	2b00      	cmp	r3, #0
 8002ac4:	d036      	beq.n	8002b34 <HAL_RCC_OscConfig+0x258>
 8002ac6:	687b      	ldr	r3, [r7, #4]
 8002ac8:	695b      	ldr	r3, [r3, #20]
 8002aca:	2b00      	cmp	r3, #0
 8002acc:	d016      	beq.n	8002afc <HAL_RCC_OscConfig+0x220>
 8002ace:	4b15      	ldr	r3, [pc, #84]	; (8002b24 <HAL_RCC_OscConfig+0x248>)
 8002ad0:	2201      	movs	r2, #1
 8002ad2:	601a      	str	r2, [r3, #0]
 8002ad4:	f7ff f84c 	bl	8001b70 <HAL_GetTick>
 8002ad8:	6138      	str	r0, [r7, #16]
 8002ada:	e008      	b.n	8002aee <HAL_RCC_OscConfig+0x212>
 8002adc:	f7ff f848 	bl	8001b70 <HAL_GetTick>
 8002ae0:	4602      	mov	r2, r0
 8002ae2:	693b      	ldr	r3, [r7, #16]
 8002ae4:	1ad3      	subs	r3, r2, r3
 8002ae6:	2b02      	cmp	r3, #2
 8002ae8:	d901      	bls.n	8002aee <HAL_RCC_OscConfig+0x212>
 8002aea:	2303      	movs	r3, #3
 8002aec:	e167      	b.n	8002dbe <HAL_RCC_OscConfig+0x4e2>
 8002aee:	4b0b      	ldr	r3, [pc, #44]	; (8002b1c <HAL_RCC_OscConfig+0x240>)
 8002af0:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8002af2:	f003 0302 	and.w	r3, r3, #2
 8002af6:	2b00      	cmp	r3, #0
 8002af8:	d0f0      	beq.n	8002adc <HAL_RCC_OscConfig+0x200>
 8002afa:	e01b      	b.n	8002b34 <HAL_RCC_OscConfig+0x258>
 8002afc:	4b09      	ldr	r3, [pc, #36]	; (8002b24 <HAL_RCC_OscConfig+0x248>)
 8002afe:	2200      	movs	r2, #0
 8002b00:	601a      	str	r2, [r3, #0]
 8002b02:	f7ff f835 	bl	8001b70 <HAL_GetTick>
 8002b06:	6138      	str	r0, [r7, #16]
 8002b08:	e00e      	b.n	8002b28 <HAL_RCC_OscConfig+0x24c>
 8002b0a:	f7ff f831 	bl	8001b70 <HAL_GetTick>
 8002b0e:	4602      	mov	r2, r0
 8002b10:	693b      	ldr	r3, [r7, #16]
 8002b12:	1ad3      	subs	r3, r2, r3
 8002b14:	2b02      	cmp	r3, #2
 8002b16:	d907      	bls.n	8002b28 <HAL_RCC_OscConfig+0x24c>
 8002b18:	2303      	movs	r3, #3
 8002b1a:	e150      	b.n	8002dbe <HAL_RCC_OscConfig+0x4e2>
 8002b1c:	40023800 	.word	0x40023800
 8002b20:	42470000 	.word	0x42470000
 8002b24:	42470e80 	.word	0x42470e80
 8002b28:	4b88      	ldr	r3, [pc, #544]	; (8002d4c <HAL_RCC_OscConfig+0x470>)
 8002b2a:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8002b2c:	f003 0302 	and.w	r3, r3, #2
 8002b30:	2b00      	cmp	r3, #0
 8002b32:	d1ea      	bne.n	8002b0a <HAL_RCC_OscConfig+0x22e>
 8002b34:	687b      	ldr	r3, [r7, #4]
 8002b36:	681b      	ldr	r3, [r3, #0]
 8002b38:	f003 0304 	and.w	r3, r3, #4
 8002b3c:	2b00      	cmp	r3, #0
 8002b3e:	f000 8097 	beq.w	8002c70 <HAL_RCC_OscConfig+0x394>
 8002b42:	2300      	movs	r3, #0
 8002b44:	75fb      	strb	r3, [r7, #23]
 8002b46:	4b81      	ldr	r3, [pc, #516]	; (8002d4c <HAL_RCC_OscConfig+0x470>)
 8002b48:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002b4a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8002b4e:	2b00      	cmp	r3, #0
 8002b50:	d10f      	bne.n	8002b72 <HAL_RCC_OscConfig+0x296>
 8002b52:	2300      	movs	r3, #0
 8002b54:	60bb      	str	r3, [r7, #8]
 8002b56:	4b7d      	ldr	r3, [pc, #500]	; (8002d4c <HAL_RCC_OscConfig+0x470>)
 8002b58:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002b5a:	4a7c      	ldr	r2, [pc, #496]	; (8002d4c <HAL_RCC_OscConfig+0x470>)
 8002b5c:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8002b60:	6413      	str	r3, [r2, #64]	; 0x40
 8002b62:	4b7a      	ldr	r3, [pc, #488]	; (8002d4c <HAL_RCC_OscConfig+0x470>)
 8002b64:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002b66:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8002b6a:	60bb      	str	r3, [r7, #8]
 8002b6c:	68bb      	ldr	r3, [r7, #8]
 8002b6e:	2301      	movs	r3, #1
 8002b70:	75fb      	strb	r3, [r7, #23]
 8002b72:	4b77      	ldr	r3, [pc, #476]	; (8002d50 <HAL_RCC_OscConfig+0x474>)
 8002b74:	681b      	ldr	r3, [r3, #0]
 8002b76:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8002b7a:	2b00      	cmp	r3, #0
 8002b7c:	d118      	bne.n	8002bb0 <HAL_RCC_OscConfig+0x2d4>
 8002b7e:	4b74      	ldr	r3, [pc, #464]	; (8002d50 <HAL_RCC_OscConfig+0x474>)
 8002b80:	681b      	ldr	r3, [r3, #0]
 8002b82:	4a73      	ldr	r2, [pc, #460]	; (8002d50 <HAL_RCC_OscConfig+0x474>)
 8002b84:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8002b88:	6013      	str	r3, [r2, #0]
 8002b8a:	f7fe fff1 	bl	8001b70 <HAL_GetTick>
 8002b8e:	6138      	str	r0, [r7, #16]
 8002b90:	e008      	b.n	8002ba4 <HAL_RCC_OscConfig+0x2c8>
 8002b92:	f7fe ffed 	bl	8001b70 <HAL_GetTick>
 8002b96:	4602      	mov	r2, r0
 8002b98:	693b      	ldr	r3, [r7, #16]
 8002b9a:	1ad3      	subs	r3, r2, r3
 8002b9c:	2b02      	cmp	r3, #2
 8002b9e:	d901      	bls.n	8002ba4 <HAL_RCC_OscConfig+0x2c8>
 8002ba0:	2303      	movs	r3, #3
 8002ba2:	e10c      	b.n	8002dbe <HAL_RCC_OscConfig+0x4e2>
 8002ba4:	4b6a      	ldr	r3, [pc, #424]	; (8002d50 <HAL_RCC_OscConfig+0x474>)
 8002ba6:	681b      	ldr	r3, [r3, #0]
 8002ba8:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8002bac:	2b00      	cmp	r3, #0
 8002bae:	d0f0      	beq.n	8002b92 <HAL_RCC_OscConfig+0x2b6>
 8002bb0:	687b      	ldr	r3, [r7, #4]
 8002bb2:	689b      	ldr	r3, [r3, #8]
 8002bb4:	2b01      	cmp	r3, #1
 8002bb6:	d106      	bne.n	8002bc6 <HAL_RCC_OscConfig+0x2ea>
 8002bb8:	4b64      	ldr	r3, [pc, #400]	; (8002d4c <HAL_RCC_OscConfig+0x470>)
 8002bba:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8002bbc:	4a63      	ldr	r2, [pc, #396]	; (8002d4c <HAL_RCC_OscConfig+0x470>)
 8002bbe:	f043 0301 	orr.w	r3, r3, #1
 8002bc2:	6713      	str	r3, [r2, #112]	; 0x70
 8002bc4:	e01c      	b.n	8002c00 <HAL_RCC_OscConfig+0x324>
 8002bc6:	687b      	ldr	r3, [r7, #4]
 8002bc8:	689b      	ldr	r3, [r3, #8]
 8002bca:	2b05      	cmp	r3, #5
 8002bcc:	d10c      	bne.n	8002be8 <HAL_RCC_OscConfig+0x30c>
 8002bce:	4b5f      	ldr	r3, [pc, #380]	; (8002d4c <HAL_RCC_OscConfig+0x470>)
 8002bd0:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8002bd2:	4a5e      	ldr	r2, [pc, #376]	; (8002d4c <HAL_RCC_OscConfig+0x470>)
 8002bd4:	f043 0304 	orr.w	r3, r3, #4
 8002bd8:	6713      	str	r3, [r2, #112]	; 0x70
 8002bda:	4b5c      	ldr	r3, [pc, #368]	; (8002d4c <HAL_RCC_OscConfig+0x470>)
 8002bdc:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8002bde:	4a5b      	ldr	r2, [pc, #364]	; (8002d4c <HAL_RCC_OscConfig+0x470>)
 8002be0:	f043 0301 	orr.w	r3, r3, #1
 8002be4:	6713      	str	r3, [r2, #112]	; 0x70
 8002be6:	e00b      	b.n	8002c00 <HAL_RCC_OscConfig+0x324>
 8002be8:	4b58      	ldr	r3, [pc, #352]	; (8002d4c <HAL_RCC_OscConfig+0x470>)
 8002bea:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8002bec:	4a57      	ldr	r2, [pc, #348]	; (8002d4c <HAL_RCC_OscConfig+0x470>)
 8002bee:	f023 0301 	bic.w	r3, r3, #1
 8002bf2:	6713      	str	r3, [r2, #112]	; 0x70
 8002bf4:	4b55      	ldr	r3, [pc, #340]	; (8002d4c <HAL_RCC_OscConfig+0x470>)
 8002bf6:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8002bf8:	4a54      	ldr	r2, [pc, #336]	; (8002d4c <HAL_RCC_OscConfig+0x470>)
 8002bfa:	f023 0304 	bic.w	r3, r3, #4
 8002bfe:	6713      	str	r3, [r2, #112]	; 0x70
 8002c00:	687b      	ldr	r3, [r7, #4]
 8002c02:	689b      	ldr	r3, [r3, #8]
 8002c04:	2b00      	cmp	r3, #0
 8002c06:	d015      	beq.n	8002c34 <HAL_RCC_OscConfig+0x358>
 8002c08:	f7fe ffb2 	bl	8001b70 <HAL_GetTick>
 8002c0c:	6138      	str	r0, [r7, #16]
 8002c0e:	e00a      	b.n	8002c26 <HAL_RCC_OscConfig+0x34a>
 8002c10:	f7fe ffae 	bl	8001b70 <HAL_GetTick>
 8002c14:	4602      	mov	r2, r0
 8002c16:	693b      	ldr	r3, [r7, #16]
 8002c18:	1ad3      	subs	r3, r2, r3
 8002c1a:	f241 3288 	movw	r2, #5000	; 0x1388
 8002c1e:	4293      	cmp	r3, r2
 8002c20:	d901      	bls.n	8002c26 <HAL_RCC_OscConfig+0x34a>
 8002c22:	2303      	movs	r3, #3
 8002c24:	e0cb      	b.n	8002dbe <HAL_RCC_OscConfig+0x4e2>
 8002c26:	4b49      	ldr	r3, [pc, #292]	; (8002d4c <HAL_RCC_OscConfig+0x470>)
 8002c28:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8002c2a:	f003 0302 	and.w	r3, r3, #2
 8002c2e:	2b00      	cmp	r3, #0
 8002c30:	d0ee      	beq.n	8002c10 <HAL_RCC_OscConfig+0x334>
 8002c32:	e014      	b.n	8002c5e <HAL_RCC_OscConfig+0x382>
 8002c34:	f7fe ff9c 	bl	8001b70 <HAL_GetTick>
 8002c38:	6138      	str	r0, [r7, #16]
 8002c3a:	e00a      	b.n	8002c52 <HAL_RCC_OscConfig+0x376>
 8002c3c:	f7fe ff98 	bl	8001b70 <HAL_GetTick>
 8002c40:	4602      	mov	r2, r0
 8002c42:	693b      	ldr	r3, [r7, #16]
 8002c44:	1ad3      	subs	r3, r2, r3
 8002c46:	f241 3288 	movw	r2, #5000	; 0x1388
 8002c4a:	4293      	cmp	r3, r2
 8002c4c:	d901      	bls.n	8002c52 <HAL_RCC_OscConfig+0x376>
 8002c4e:	2303      	movs	r3, #3
 8002c50:	e0b5      	b.n	8002dbe <HAL_RCC_OscConfig+0x4e2>
 8002c52:	4b3e      	ldr	r3, [pc, #248]	; (8002d4c <HAL_RCC_OscConfig+0x470>)
 8002c54:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8002c56:	f003 0302 	and.w	r3, r3, #2
 8002c5a:	2b00      	cmp	r3, #0
 8002c5c:	d1ee      	bne.n	8002c3c <HAL_RCC_OscConfig+0x360>
 8002c5e:	7dfb      	ldrb	r3, [r7, #23]
 8002c60:	2b01      	cmp	r3, #1
 8002c62:	d105      	bne.n	8002c70 <HAL_RCC_OscConfig+0x394>
 8002c64:	4b39      	ldr	r3, [pc, #228]	; (8002d4c <HAL_RCC_OscConfig+0x470>)
 8002c66:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002c68:	4a38      	ldr	r2, [pc, #224]	; (8002d4c <HAL_RCC_OscConfig+0x470>)
 8002c6a:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8002c6e:	6413      	str	r3, [r2, #64]	; 0x40
 8002c70:	687b      	ldr	r3, [r7, #4]
 8002c72:	699b      	ldr	r3, [r3, #24]
 8002c74:	2b00      	cmp	r3, #0
 8002c76:	f000 80a1 	beq.w	8002dbc <HAL_RCC_OscConfig+0x4e0>
 8002c7a:	4b34      	ldr	r3, [pc, #208]	; (8002d4c <HAL_RCC_OscConfig+0x470>)
 8002c7c:	689b      	ldr	r3, [r3, #8]
 8002c7e:	f003 030c 	and.w	r3, r3, #12
 8002c82:	2b08      	cmp	r3, #8
 8002c84:	d05c      	beq.n	8002d40 <HAL_RCC_OscConfig+0x464>
 8002c86:	687b      	ldr	r3, [r7, #4]
 8002c88:	699b      	ldr	r3, [r3, #24]
 8002c8a:	2b02      	cmp	r3, #2
 8002c8c:	d141      	bne.n	8002d12 <HAL_RCC_OscConfig+0x436>
 8002c8e:	4b31      	ldr	r3, [pc, #196]	; (8002d54 <HAL_RCC_OscConfig+0x478>)
 8002c90:	2200      	movs	r2, #0
 8002c92:	601a      	str	r2, [r3, #0]
 8002c94:	f7fe ff6c 	bl	8001b70 <HAL_GetTick>
 8002c98:	6138      	str	r0, [r7, #16]
 8002c9a:	e008      	b.n	8002cae <HAL_RCC_OscConfig+0x3d2>
 8002c9c:	f7fe ff68 	bl	8001b70 <HAL_GetTick>
 8002ca0:	4602      	mov	r2, r0
 8002ca2:	693b      	ldr	r3, [r7, #16]
 8002ca4:	1ad3      	subs	r3, r2, r3
 8002ca6:	2b02      	cmp	r3, #2
 8002ca8:	d901      	bls.n	8002cae <HAL_RCC_OscConfig+0x3d2>
 8002caa:	2303      	movs	r3, #3
 8002cac:	e087      	b.n	8002dbe <HAL_RCC_OscConfig+0x4e2>
 8002cae:	4b27      	ldr	r3, [pc, #156]	; (8002d4c <HAL_RCC_OscConfig+0x470>)
 8002cb0:	681b      	ldr	r3, [r3, #0]
 8002cb2:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8002cb6:	2b00      	cmp	r3, #0
 8002cb8:	d1f0      	bne.n	8002c9c <HAL_RCC_OscConfig+0x3c0>
 8002cba:	687b      	ldr	r3, [r7, #4]
 8002cbc:	69da      	ldr	r2, [r3, #28]
 8002cbe:	687b      	ldr	r3, [r7, #4]
 8002cc0:	6a1b      	ldr	r3, [r3, #32]
 8002cc2:	431a      	orrs	r2, r3
 8002cc4:	687b      	ldr	r3, [r7, #4]
 8002cc6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002cc8:	019b      	lsls	r3, r3, #6
 8002cca:	431a      	orrs	r2, r3
 8002ccc:	687b      	ldr	r3, [r7, #4]
 8002cce:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002cd0:	085b      	lsrs	r3, r3, #1
 8002cd2:	3b01      	subs	r3, #1
 8002cd4:	041b      	lsls	r3, r3, #16
 8002cd6:	431a      	orrs	r2, r3
 8002cd8:	687b      	ldr	r3, [r7, #4]
 8002cda:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002cdc:	061b      	lsls	r3, r3, #24
 8002cde:	491b      	ldr	r1, [pc, #108]	; (8002d4c <HAL_RCC_OscConfig+0x470>)
 8002ce0:	4313      	orrs	r3, r2
 8002ce2:	604b      	str	r3, [r1, #4]
 8002ce4:	4b1b      	ldr	r3, [pc, #108]	; (8002d54 <HAL_RCC_OscConfig+0x478>)
 8002ce6:	2201      	movs	r2, #1
 8002ce8:	601a      	str	r2, [r3, #0]
 8002cea:	f7fe ff41 	bl	8001b70 <HAL_GetTick>
 8002cee:	6138      	str	r0, [r7, #16]
 8002cf0:	e008      	b.n	8002d04 <HAL_RCC_OscConfig+0x428>
 8002cf2:	f7fe ff3d 	bl	8001b70 <HAL_GetTick>
 8002cf6:	4602      	mov	r2, r0
 8002cf8:	693b      	ldr	r3, [r7, #16]
 8002cfa:	1ad3      	subs	r3, r2, r3
 8002cfc:	2b02      	cmp	r3, #2
 8002cfe:	d901      	bls.n	8002d04 <HAL_RCC_OscConfig+0x428>
 8002d00:	2303      	movs	r3, #3
 8002d02:	e05c      	b.n	8002dbe <HAL_RCC_OscConfig+0x4e2>
 8002d04:	4b11      	ldr	r3, [pc, #68]	; (8002d4c <HAL_RCC_OscConfig+0x470>)
 8002d06:	681b      	ldr	r3, [r3, #0]
 8002d08:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8002d0c:	2b00      	cmp	r3, #0
 8002d0e:	d0f0      	beq.n	8002cf2 <HAL_RCC_OscConfig+0x416>
 8002d10:	e054      	b.n	8002dbc <HAL_RCC_OscConfig+0x4e0>
 8002d12:	4b10      	ldr	r3, [pc, #64]	; (8002d54 <HAL_RCC_OscConfig+0x478>)
 8002d14:	2200      	movs	r2, #0
 8002d16:	601a      	str	r2, [r3, #0]
 8002d18:	f7fe ff2a 	bl	8001b70 <HAL_GetTick>
 8002d1c:	6138      	str	r0, [r7, #16]
 8002d1e:	e008      	b.n	8002d32 <HAL_RCC_OscConfig+0x456>
 8002d20:	f7fe ff26 	bl	8001b70 <HAL_GetTick>
 8002d24:	4602      	mov	r2, r0
 8002d26:	693b      	ldr	r3, [r7, #16]
 8002d28:	1ad3      	subs	r3, r2, r3
 8002d2a:	2b02      	cmp	r3, #2
 8002d2c:	d901      	bls.n	8002d32 <HAL_RCC_OscConfig+0x456>
 8002d2e:	2303      	movs	r3, #3
 8002d30:	e045      	b.n	8002dbe <HAL_RCC_OscConfig+0x4e2>
 8002d32:	4b06      	ldr	r3, [pc, #24]	; (8002d4c <HAL_RCC_OscConfig+0x470>)
 8002d34:	681b      	ldr	r3, [r3, #0]
 8002d36:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8002d3a:	2b00      	cmp	r3, #0
 8002d3c:	d1f0      	bne.n	8002d20 <HAL_RCC_OscConfig+0x444>
 8002d3e:	e03d      	b.n	8002dbc <HAL_RCC_OscConfig+0x4e0>
 8002d40:	687b      	ldr	r3, [r7, #4]
 8002d42:	699b      	ldr	r3, [r3, #24]
 8002d44:	2b01      	cmp	r3, #1
 8002d46:	d107      	bne.n	8002d58 <HAL_RCC_OscConfig+0x47c>
 8002d48:	2301      	movs	r3, #1
 8002d4a:	e038      	b.n	8002dbe <HAL_RCC_OscConfig+0x4e2>
 8002d4c:	40023800 	.word	0x40023800
 8002d50:	40007000 	.word	0x40007000
 8002d54:	42470060 	.word	0x42470060
 8002d58:	4b1b      	ldr	r3, [pc, #108]	; (8002dc8 <HAL_RCC_OscConfig+0x4ec>)
 8002d5a:	685b      	ldr	r3, [r3, #4]
 8002d5c:	60fb      	str	r3, [r7, #12]
 8002d5e:	687b      	ldr	r3, [r7, #4]
 8002d60:	699b      	ldr	r3, [r3, #24]
 8002d62:	2b01      	cmp	r3, #1
 8002d64:	d028      	beq.n	8002db8 <HAL_RCC_OscConfig+0x4dc>
 8002d66:	68fb      	ldr	r3, [r7, #12]
 8002d68:	f403 0280 	and.w	r2, r3, #4194304	; 0x400000
 8002d6c:	687b      	ldr	r3, [r7, #4]
 8002d6e:	69db      	ldr	r3, [r3, #28]
 8002d70:	429a      	cmp	r2, r3
 8002d72:	d121      	bne.n	8002db8 <HAL_RCC_OscConfig+0x4dc>
 8002d74:	68fb      	ldr	r3, [r7, #12]
 8002d76:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 8002d7a:	687b      	ldr	r3, [r7, #4]
 8002d7c:	6a1b      	ldr	r3, [r3, #32]
 8002d7e:	429a      	cmp	r2, r3
 8002d80:	d11a      	bne.n	8002db8 <HAL_RCC_OscConfig+0x4dc>
 8002d82:	68fa      	ldr	r2, [r7, #12]
 8002d84:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 8002d88:	4013      	ands	r3, r2
 8002d8a:	687a      	ldr	r2, [r7, #4]
 8002d8c:	6a52      	ldr	r2, [r2, #36]	; 0x24
 8002d8e:	0192      	lsls	r2, r2, #6
 8002d90:	4293      	cmp	r3, r2
 8002d92:	d111      	bne.n	8002db8 <HAL_RCC_OscConfig+0x4dc>
 8002d94:	68fb      	ldr	r3, [r7, #12]
 8002d96:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
 8002d9a:	687b      	ldr	r3, [r7, #4]
 8002d9c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002d9e:	085b      	lsrs	r3, r3, #1
 8002da0:	3b01      	subs	r3, #1
 8002da2:	041b      	lsls	r3, r3, #16
 8002da4:	429a      	cmp	r2, r3
 8002da6:	d107      	bne.n	8002db8 <HAL_RCC_OscConfig+0x4dc>
 8002da8:	68fb      	ldr	r3, [r7, #12]
 8002daa:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
 8002dae:	687b      	ldr	r3, [r7, #4]
 8002db0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002db2:	061b      	lsls	r3, r3, #24
 8002db4:	429a      	cmp	r2, r3
 8002db6:	d001      	beq.n	8002dbc <HAL_RCC_OscConfig+0x4e0>
 8002db8:	2301      	movs	r3, #1
 8002dba:	e000      	b.n	8002dbe <HAL_RCC_OscConfig+0x4e2>
 8002dbc:	2300      	movs	r3, #0
 8002dbe:	4618      	mov	r0, r3
 8002dc0:	3718      	adds	r7, #24
 8002dc2:	46bd      	mov	sp, r7
 8002dc4:	bd80      	pop	{r7, pc}
 8002dc6:	bf00      	nop
 8002dc8:	40023800 	.word	0x40023800

08002dcc <HAL_RCC_ClockConfig>:
 8002dcc:	b580      	push	{r7, lr}
 8002dce:	b084      	sub	sp, #16
 8002dd0:	af00      	add	r7, sp, #0
 8002dd2:	6078      	str	r0, [r7, #4]
 8002dd4:	6039      	str	r1, [r7, #0]
 8002dd6:	687b      	ldr	r3, [r7, #4]
 8002dd8:	2b00      	cmp	r3, #0
 8002dda:	d101      	bne.n	8002de0 <HAL_RCC_ClockConfig+0x14>
 8002ddc:	2301      	movs	r3, #1
 8002dde:	e0cc      	b.n	8002f7a <HAL_RCC_ClockConfig+0x1ae>
 8002de0:	4b68      	ldr	r3, [pc, #416]	; (8002f84 <HAL_RCC_ClockConfig+0x1b8>)
 8002de2:	681b      	ldr	r3, [r3, #0]
 8002de4:	f003 0307 	and.w	r3, r3, #7
 8002de8:	683a      	ldr	r2, [r7, #0]
 8002dea:	429a      	cmp	r2, r3
 8002dec:	d90c      	bls.n	8002e08 <HAL_RCC_ClockConfig+0x3c>
 8002dee:	4b65      	ldr	r3, [pc, #404]	; (8002f84 <HAL_RCC_ClockConfig+0x1b8>)
 8002df0:	683a      	ldr	r2, [r7, #0]
 8002df2:	b2d2      	uxtb	r2, r2
 8002df4:	701a      	strb	r2, [r3, #0]
 8002df6:	4b63      	ldr	r3, [pc, #396]	; (8002f84 <HAL_RCC_ClockConfig+0x1b8>)
 8002df8:	681b      	ldr	r3, [r3, #0]
 8002dfa:	f003 0307 	and.w	r3, r3, #7
 8002dfe:	683a      	ldr	r2, [r7, #0]
 8002e00:	429a      	cmp	r2, r3
 8002e02:	d001      	beq.n	8002e08 <HAL_RCC_ClockConfig+0x3c>
 8002e04:	2301      	movs	r3, #1
 8002e06:	e0b8      	b.n	8002f7a <HAL_RCC_ClockConfig+0x1ae>
 8002e08:	687b      	ldr	r3, [r7, #4]
 8002e0a:	681b      	ldr	r3, [r3, #0]
 8002e0c:	f003 0302 	and.w	r3, r3, #2
 8002e10:	2b00      	cmp	r3, #0
 8002e12:	d020      	beq.n	8002e56 <HAL_RCC_ClockConfig+0x8a>
 8002e14:	687b      	ldr	r3, [r7, #4]
 8002e16:	681b      	ldr	r3, [r3, #0]
 8002e18:	f003 0304 	and.w	r3, r3, #4
 8002e1c:	2b00      	cmp	r3, #0
 8002e1e:	d005      	beq.n	8002e2c <HAL_RCC_ClockConfig+0x60>
 8002e20:	4b59      	ldr	r3, [pc, #356]	; (8002f88 <HAL_RCC_ClockConfig+0x1bc>)
 8002e22:	689b      	ldr	r3, [r3, #8]
 8002e24:	4a58      	ldr	r2, [pc, #352]	; (8002f88 <HAL_RCC_ClockConfig+0x1bc>)
 8002e26:	f443 53e0 	orr.w	r3, r3, #7168	; 0x1c00
 8002e2a:	6093      	str	r3, [r2, #8]
 8002e2c:	687b      	ldr	r3, [r7, #4]
 8002e2e:	681b      	ldr	r3, [r3, #0]
 8002e30:	f003 0308 	and.w	r3, r3, #8
 8002e34:	2b00      	cmp	r3, #0
 8002e36:	d005      	beq.n	8002e44 <HAL_RCC_ClockConfig+0x78>
 8002e38:	4b53      	ldr	r3, [pc, #332]	; (8002f88 <HAL_RCC_ClockConfig+0x1bc>)
 8002e3a:	689b      	ldr	r3, [r3, #8]
 8002e3c:	4a52      	ldr	r2, [pc, #328]	; (8002f88 <HAL_RCC_ClockConfig+0x1bc>)
 8002e3e:	f443 4360 	orr.w	r3, r3, #57344	; 0xe000
 8002e42:	6093      	str	r3, [r2, #8]
 8002e44:	4b50      	ldr	r3, [pc, #320]	; (8002f88 <HAL_RCC_ClockConfig+0x1bc>)
 8002e46:	689b      	ldr	r3, [r3, #8]
 8002e48:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8002e4c:	687b      	ldr	r3, [r7, #4]
 8002e4e:	689b      	ldr	r3, [r3, #8]
 8002e50:	494d      	ldr	r1, [pc, #308]	; (8002f88 <HAL_RCC_ClockConfig+0x1bc>)
 8002e52:	4313      	orrs	r3, r2
 8002e54:	608b      	str	r3, [r1, #8]
 8002e56:	687b      	ldr	r3, [r7, #4]
 8002e58:	681b      	ldr	r3, [r3, #0]
 8002e5a:	f003 0301 	and.w	r3, r3, #1
 8002e5e:	2b00      	cmp	r3, #0
 8002e60:	d044      	beq.n	8002eec <HAL_RCC_ClockConfig+0x120>
 8002e62:	687b      	ldr	r3, [r7, #4]
 8002e64:	685b      	ldr	r3, [r3, #4]
 8002e66:	2b01      	cmp	r3, #1
 8002e68:	d107      	bne.n	8002e7a <HAL_RCC_ClockConfig+0xae>
 8002e6a:	4b47      	ldr	r3, [pc, #284]	; (8002f88 <HAL_RCC_ClockConfig+0x1bc>)
 8002e6c:	681b      	ldr	r3, [r3, #0]
 8002e6e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8002e72:	2b00      	cmp	r3, #0
 8002e74:	d119      	bne.n	8002eaa <HAL_RCC_ClockConfig+0xde>
 8002e76:	2301      	movs	r3, #1
 8002e78:	e07f      	b.n	8002f7a <HAL_RCC_ClockConfig+0x1ae>
 8002e7a:	687b      	ldr	r3, [r7, #4]
 8002e7c:	685b      	ldr	r3, [r3, #4]
 8002e7e:	2b02      	cmp	r3, #2
 8002e80:	d003      	beq.n	8002e8a <HAL_RCC_ClockConfig+0xbe>
 8002e82:	687b      	ldr	r3, [r7, #4]
 8002e84:	685b      	ldr	r3, [r3, #4]
 8002e86:	2b03      	cmp	r3, #3
 8002e88:	d107      	bne.n	8002e9a <HAL_RCC_ClockConfig+0xce>
 8002e8a:	4b3f      	ldr	r3, [pc, #252]	; (8002f88 <HAL_RCC_ClockConfig+0x1bc>)
 8002e8c:	681b      	ldr	r3, [r3, #0]
 8002e8e:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8002e92:	2b00      	cmp	r3, #0
 8002e94:	d109      	bne.n	8002eaa <HAL_RCC_ClockConfig+0xde>
 8002e96:	2301      	movs	r3, #1
 8002e98:	e06f      	b.n	8002f7a <HAL_RCC_ClockConfig+0x1ae>
 8002e9a:	4b3b      	ldr	r3, [pc, #236]	; (8002f88 <HAL_RCC_ClockConfig+0x1bc>)
 8002e9c:	681b      	ldr	r3, [r3, #0]
 8002e9e:	f003 0302 	and.w	r3, r3, #2
 8002ea2:	2b00      	cmp	r3, #0
 8002ea4:	d101      	bne.n	8002eaa <HAL_RCC_ClockConfig+0xde>
 8002ea6:	2301      	movs	r3, #1
 8002ea8:	e067      	b.n	8002f7a <HAL_RCC_ClockConfig+0x1ae>
 8002eaa:	4b37      	ldr	r3, [pc, #220]	; (8002f88 <HAL_RCC_ClockConfig+0x1bc>)
 8002eac:	689b      	ldr	r3, [r3, #8]
 8002eae:	f023 0203 	bic.w	r2, r3, #3
 8002eb2:	687b      	ldr	r3, [r7, #4]
 8002eb4:	685b      	ldr	r3, [r3, #4]
 8002eb6:	4934      	ldr	r1, [pc, #208]	; (8002f88 <HAL_RCC_ClockConfig+0x1bc>)
 8002eb8:	4313      	orrs	r3, r2
 8002eba:	608b      	str	r3, [r1, #8]
 8002ebc:	f7fe fe58 	bl	8001b70 <HAL_GetTick>
 8002ec0:	60f8      	str	r0, [r7, #12]
 8002ec2:	e00a      	b.n	8002eda <HAL_RCC_ClockConfig+0x10e>
 8002ec4:	f7fe fe54 	bl	8001b70 <HAL_GetTick>
 8002ec8:	4602      	mov	r2, r0
 8002eca:	68fb      	ldr	r3, [r7, #12]
 8002ecc:	1ad3      	subs	r3, r2, r3
 8002ece:	f241 3288 	movw	r2, #5000	; 0x1388
 8002ed2:	4293      	cmp	r3, r2
 8002ed4:	d901      	bls.n	8002eda <HAL_RCC_ClockConfig+0x10e>
 8002ed6:	2303      	movs	r3, #3
 8002ed8:	e04f      	b.n	8002f7a <HAL_RCC_ClockConfig+0x1ae>
 8002eda:	4b2b      	ldr	r3, [pc, #172]	; (8002f88 <HAL_RCC_ClockConfig+0x1bc>)
 8002edc:	689b      	ldr	r3, [r3, #8]
 8002ede:	f003 020c 	and.w	r2, r3, #12
 8002ee2:	687b      	ldr	r3, [r7, #4]
 8002ee4:	685b      	ldr	r3, [r3, #4]
 8002ee6:	009b      	lsls	r3, r3, #2
 8002ee8:	429a      	cmp	r2, r3
 8002eea:	d1eb      	bne.n	8002ec4 <HAL_RCC_ClockConfig+0xf8>
 8002eec:	4b25      	ldr	r3, [pc, #148]	; (8002f84 <HAL_RCC_ClockConfig+0x1b8>)
 8002eee:	681b      	ldr	r3, [r3, #0]
 8002ef0:	f003 0307 	and.w	r3, r3, #7
 8002ef4:	683a      	ldr	r2, [r7, #0]
 8002ef6:	429a      	cmp	r2, r3
 8002ef8:	d20c      	bcs.n	8002f14 <HAL_RCC_ClockConfig+0x148>
 8002efa:	4b22      	ldr	r3, [pc, #136]	; (8002f84 <HAL_RCC_ClockConfig+0x1b8>)
 8002efc:	683a      	ldr	r2, [r7, #0]
 8002efe:	b2d2      	uxtb	r2, r2
 8002f00:	701a      	strb	r2, [r3, #0]
 8002f02:	4b20      	ldr	r3, [pc, #128]	; (8002f84 <HAL_RCC_ClockConfig+0x1b8>)
 8002f04:	681b      	ldr	r3, [r3, #0]
 8002f06:	f003 0307 	and.w	r3, r3, #7
 8002f0a:	683a      	ldr	r2, [r7, #0]
 8002f0c:	429a      	cmp	r2, r3
 8002f0e:	d001      	beq.n	8002f14 <HAL_RCC_ClockConfig+0x148>
 8002f10:	2301      	movs	r3, #1
 8002f12:	e032      	b.n	8002f7a <HAL_RCC_ClockConfig+0x1ae>
 8002f14:	687b      	ldr	r3, [r7, #4]
 8002f16:	681b      	ldr	r3, [r3, #0]
 8002f18:	f003 0304 	and.w	r3, r3, #4
 8002f1c:	2b00      	cmp	r3, #0
 8002f1e:	d008      	beq.n	8002f32 <HAL_RCC_ClockConfig+0x166>
 8002f20:	4b19      	ldr	r3, [pc, #100]	; (8002f88 <HAL_RCC_ClockConfig+0x1bc>)
 8002f22:	689b      	ldr	r3, [r3, #8]
 8002f24:	f423 52e0 	bic.w	r2, r3, #7168	; 0x1c00
 8002f28:	687b      	ldr	r3, [r7, #4]
 8002f2a:	68db      	ldr	r3, [r3, #12]
 8002f2c:	4916      	ldr	r1, [pc, #88]	; (8002f88 <HAL_RCC_ClockConfig+0x1bc>)
 8002f2e:	4313      	orrs	r3, r2
 8002f30:	608b      	str	r3, [r1, #8]
 8002f32:	687b      	ldr	r3, [r7, #4]
 8002f34:	681b      	ldr	r3, [r3, #0]
 8002f36:	f003 0308 	and.w	r3, r3, #8
 8002f3a:	2b00      	cmp	r3, #0
 8002f3c:	d009      	beq.n	8002f52 <HAL_RCC_ClockConfig+0x186>
 8002f3e:	4b12      	ldr	r3, [pc, #72]	; (8002f88 <HAL_RCC_ClockConfig+0x1bc>)
 8002f40:	689b      	ldr	r3, [r3, #8]
 8002f42:	f423 4260 	bic.w	r2, r3, #57344	; 0xe000
 8002f46:	687b      	ldr	r3, [r7, #4]
 8002f48:	691b      	ldr	r3, [r3, #16]
 8002f4a:	00db      	lsls	r3, r3, #3
 8002f4c:	490e      	ldr	r1, [pc, #56]	; (8002f88 <HAL_RCC_ClockConfig+0x1bc>)
 8002f4e:	4313      	orrs	r3, r2
 8002f50:	608b      	str	r3, [r1, #8]
 8002f52:	f000 f821 	bl	8002f98 <HAL_RCC_GetSysClockFreq>
 8002f56:	4602      	mov	r2, r0
 8002f58:	4b0b      	ldr	r3, [pc, #44]	; (8002f88 <HAL_RCC_ClockConfig+0x1bc>)
 8002f5a:	689b      	ldr	r3, [r3, #8]
 8002f5c:	091b      	lsrs	r3, r3, #4
 8002f5e:	f003 030f 	and.w	r3, r3, #15
 8002f62:	490a      	ldr	r1, [pc, #40]	; (8002f8c <HAL_RCC_ClockConfig+0x1c0>)
 8002f64:	5ccb      	ldrb	r3, [r1, r3]
 8002f66:	fa22 f303 	lsr.w	r3, r2, r3
 8002f6a:	4a09      	ldr	r2, [pc, #36]	; (8002f90 <HAL_RCC_ClockConfig+0x1c4>)
 8002f6c:	6013      	str	r3, [r2, #0]
 8002f6e:	4b09      	ldr	r3, [pc, #36]	; (8002f94 <HAL_RCC_ClockConfig+0x1c8>)
 8002f70:	681b      	ldr	r3, [r3, #0]
 8002f72:	4618      	mov	r0, r3
 8002f74:	f7fe fdb8 	bl	8001ae8 <HAL_InitTick>
 8002f78:	2300      	movs	r3, #0
 8002f7a:	4618      	mov	r0, r3
 8002f7c:	3710      	adds	r7, #16
 8002f7e:	46bd      	mov	sp, r7
 8002f80:	bd80      	pop	{r7, pc}
 8002f82:	bf00      	nop
 8002f84:	40023c00 	.word	0x40023c00
 8002f88:	40023800 	.word	0x40023800
 8002f8c:	0800467c 	.word	0x0800467c
 8002f90:	20000038 	.word	0x20000038
 8002f94:	2000003c 	.word	0x2000003c

08002f98 <HAL_RCC_GetSysClockFreq>:
 8002f98:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8002f9c:	b090      	sub	sp, #64	; 0x40
 8002f9e:	af00      	add	r7, sp, #0
 8002fa0:	2300      	movs	r3, #0
 8002fa2:	637b      	str	r3, [r7, #52]	; 0x34
 8002fa4:	2300      	movs	r3, #0
 8002fa6:	63fb      	str	r3, [r7, #60]	; 0x3c
 8002fa8:	2300      	movs	r3, #0
 8002faa:	633b      	str	r3, [r7, #48]	; 0x30
 8002fac:	2300      	movs	r3, #0
 8002fae:	63bb      	str	r3, [r7, #56]	; 0x38
 8002fb0:	4b59      	ldr	r3, [pc, #356]	; (8003118 <HAL_RCC_GetSysClockFreq+0x180>)
 8002fb2:	689b      	ldr	r3, [r3, #8]
 8002fb4:	f003 030c 	and.w	r3, r3, #12
 8002fb8:	2b08      	cmp	r3, #8
 8002fba:	d00d      	beq.n	8002fd8 <HAL_RCC_GetSysClockFreq+0x40>
 8002fbc:	2b08      	cmp	r3, #8
 8002fbe:	f200 80a1 	bhi.w	8003104 <HAL_RCC_GetSysClockFreq+0x16c>
 8002fc2:	2b00      	cmp	r3, #0
 8002fc4:	d002      	beq.n	8002fcc <HAL_RCC_GetSysClockFreq+0x34>
 8002fc6:	2b04      	cmp	r3, #4
 8002fc8:	d003      	beq.n	8002fd2 <HAL_RCC_GetSysClockFreq+0x3a>
 8002fca:	e09b      	b.n	8003104 <HAL_RCC_GetSysClockFreq+0x16c>
 8002fcc:	4b53      	ldr	r3, [pc, #332]	; (800311c <HAL_RCC_GetSysClockFreq+0x184>)
 8002fce:	63bb      	str	r3, [r7, #56]	; 0x38
 8002fd0:	e09b      	b.n	800310a <HAL_RCC_GetSysClockFreq+0x172>
 8002fd2:	4b53      	ldr	r3, [pc, #332]	; (8003120 <HAL_RCC_GetSysClockFreq+0x188>)
 8002fd4:	63bb      	str	r3, [r7, #56]	; 0x38
 8002fd6:	e098      	b.n	800310a <HAL_RCC_GetSysClockFreq+0x172>
 8002fd8:	4b4f      	ldr	r3, [pc, #316]	; (8003118 <HAL_RCC_GetSysClockFreq+0x180>)
 8002fda:	685b      	ldr	r3, [r3, #4]
 8002fdc:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8002fe0:	637b      	str	r3, [r7, #52]	; 0x34
 8002fe2:	4b4d      	ldr	r3, [pc, #308]	; (8003118 <HAL_RCC_GetSysClockFreq+0x180>)
 8002fe4:	685b      	ldr	r3, [r3, #4]
 8002fe6:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8002fea:	2b00      	cmp	r3, #0
 8002fec:	d028      	beq.n	8003040 <HAL_RCC_GetSysClockFreq+0xa8>
 8002fee:	4b4a      	ldr	r3, [pc, #296]	; (8003118 <HAL_RCC_GetSysClockFreq+0x180>)
 8002ff0:	685b      	ldr	r3, [r3, #4]
 8002ff2:	099b      	lsrs	r3, r3, #6
 8002ff4:	2200      	movs	r2, #0
 8002ff6:	623b      	str	r3, [r7, #32]
 8002ff8:	627a      	str	r2, [r7, #36]	; 0x24
 8002ffa:	6a3b      	ldr	r3, [r7, #32]
 8002ffc:	f3c3 0008 	ubfx	r0, r3, #0, #9
 8003000:	2100      	movs	r1, #0
 8003002:	4b47      	ldr	r3, [pc, #284]	; (8003120 <HAL_RCC_GetSysClockFreq+0x188>)
 8003004:	fb03 f201 	mul.w	r2, r3, r1
 8003008:	2300      	movs	r3, #0
 800300a:	fb00 f303 	mul.w	r3, r0, r3
 800300e:	4413      	add	r3, r2
 8003010:	4a43      	ldr	r2, [pc, #268]	; (8003120 <HAL_RCC_GetSysClockFreq+0x188>)
 8003012:	fba0 1202 	umull	r1, r2, r0, r2
 8003016:	62fa      	str	r2, [r7, #44]	; 0x2c
 8003018:	460a      	mov	r2, r1
 800301a:	62ba      	str	r2, [r7, #40]	; 0x28
 800301c:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 800301e:	4413      	add	r3, r2
 8003020:	62fb      	str	r3, [r7, #44]	; 0x2c
 8003022:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8003024:	2200      	movs	r2, #0
 8003026:	61bb      	str	r3, [r7, #24]
 8003028:	61fa      	str	r2, [r7, #28]
 800302a:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 800302e:	e9d7 010a 	ldrd	r0, r1, [r7, #40]	; 0x28
 8003032:	f7fd f925 	bl	8000280 <__aeabi_uldivmod>
 8003036:	4602      	mov	r2, r0
 8003038:	460b      	mov	r3, r1
 800303a:	4613      	mov	r3, r2
 800303c:	63fb      	str	r3, [r7, #60]	; 0x3c
 800303e:	e053      	b.n	80030e8 <HAL_RCC_GetSysClockFreq+0x150>
 8003040:	4b35      	ldr	r3, [pc, #212]	; (8003118 <HAL_RCC_GetSysClockFreq+0x180>)
 8003042:	685b      	ldr	r3, [r3, #4]
 8003044:	099b      	lsrs	r3, r3, #6
 8003046:	2200      	movs	r2, #0
 8003048:	613b      	str	r3, [r7, #16]
 800304a:	617a      	str	r2, [r7, #20]
 800304c:	693b      	ldr	r3, [r7, #16]
 800304e:	f3c3 0a08 	ubfx	sl, r3, #0, #9
 8003052:	f04f 0b00 	mov.w	fp, #0
 8003056:	4652      	mov	r2, sl
 8003058:	465b      	mov	r3, fp
 800305a:	f04f 0000 	mov.w	r0, #0
 800305e:	f04f 0100 	mov.w	r1, #0
 8003062:	0159      	lsls	r1, r3, #5
 8003064:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8003068:	0150      	lsls	r0, r2, #5
 800306a:	4602      	mov	r2, r0
 800306c:	460b      	mov	r3, r1
 800306e:	ebb2 080a 	subs.w	r8, r2, sl
 8003072:	eb63 090b 	sbc.w	r9, r3, fp
 8003076:	f04f 0200 	mov.w	r2, #0
 800307a:	f04f 0300 	mov.w	r3, #0
 800307e:	ea4f 1389 	mov.w	r3, r9, lsl #6
 8003082:	ea43 6398 	orr.w	r3, r3, r8, lsr #26
 8003086:	ea4f 1288 	mov.w	r2, r8, lsl #6
 800308a:	ebb2 0408 	subs.w	r4, r2, r8
 800308e:	eb63 0509 	sbc.w	r5, r3, r9
 8003092:	f04f 0200 	mov.w	r2, #0
 8003096:	f04f 0300 	mov.w	r3, #0
 800309a:	00eb      	lsls	r3, r5, #3
 800309c:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 80030a0:	00e2      	lsls	r2, r4, #3
 80030a2:	4614      	mov	r4, r2
 80030a4:	461d      	mov	r5, r3
 80030a6:	eb14 030a 	adds.w	r3, r4, sl
 80030aa:	603b      	str	r3, [r7, #0]
 80030ac:	eb45 030b 	adc.w	r3, r5, fp
 80030b0:	607b      	str	r3, [r7, #4]
 80030b2:	f04f 0200 	mov.w	r2, #0
 80030b6:	f04f 0300 	mov.w	r3, #0
 80030ba:	e9d7 4500 	ldrd	r4, r5, [r7]
 80030be:	4629      	mov	r1, r5
 80030c0:	028b      	lsls	r3, r1, #10
 80030c2:	4621      	mov	r1, r4
 80030c4:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 80030c8:	4621      	mov	r1, r4
 80030ca:	028a      	lsls	r2, r1, #10
 80030cc:	4610      	mov	r0, r2
 80030ce:	4619      	mov	r1, r3
 80030d0:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80030d2:	2200      	movs	r2, #0
 80030d4:	60bb      	str	r3, [r7, #8]
 80030d6:	60fa      	str	r2, [r7, #12]
 80030d8:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 80030dc:	f7fd f8d0 	bl	8000280 <__aeabi_uldivmod>
 80030e0:	4602      	mov	r2, r0
 80030e2:	460b      	mov	r3, r1
 80030e4:	4613      	mov	r3, r2
 80030e6:	63fb      	str	r3, [r7, #60]	; 0x3c
 80030e8:	4b0b      	ldr	r3, [pc, #44]	; (8003118 <HAL_RCC_GetSysClockFreq+0x180>)
 80030ea:	685b      	ldr	r3, [r3, #4]
 80030ec:	0c1b      	lsrs	r3, r3, #16
 80030ee:	f003 0303 	and.w	r3, r3, #3
 80030f2:	3301      	adds	r3, #1
 80030f4:	005b      	lsls	r3, r3, #1
 80030f6:	633b      	str	r3, [r7, #48]	; 0x30
 80030f8:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 80030fa:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 80030fc:	fbb2 f3f3 	udiv	r3, r2, r3
 8003100:	63bb      	str	r3, [r7, #56]	; 0x38
 8003102:	e002      	b.n	800310a <HAL_RCC_GetSysClockFreq+0x172>
 8003104:	4b05      	ldr	r3, [pc, #20]	; (800311c <HAL_RCC_GetSysClockFreq+0x184>)
 8003106:	63bb      	str	r3, [r7, #56]	; 0x38
 8003108:	bf00      	nop
 800310a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800310c:	4618      	mov	r0, r3
 800310e:	3740      	adds	r7, #64	; 0x40
 8003110:	46bd      	mov	sp, r7
 8003112:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8003116:	bf00      	nop
 8003118:	40023800 	.word	0x40023800
 800311c:	00f42400 	.word	0x00f42400
 8003120:	017d7840 	.word	0x017d7840

08003124 <HAL_TIM_PWM_Init>:
 8003124:	b580      	push	{r7, lr}
 8003126:	b082      	sub	sp, #8
 8003128:	af00      	add	r7, sp, #0
 800312a:	6078      	str	r0, [r7, #4]
 800312c:	687b      	ldr	r3, [r7, #4]
 800312e:	2b00      	cmp	r3, #0
 8003130:	d101      	bne.n	8003136 <HAL_TIM_PWM_Init+0x12>
 8003132:	2301      	movs	r3, #1
 8003134:	e041      	b.n	80031ba <HAL_TIM_PWM_Init+0x96>
 8003136:	687b      	ldr	r3, [r7, #4]
 8003138:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800313c:	b2db      	uxtb	r3, r3
 800313e:	2b00      	cmp	r3, #0
 8003140:	d106      	bne.n	8003150 <HAL_TIM_PWM_Init+0x2c>
 8003142:	687b      	ldr	r3, [r7, #4]
 8003144:	2200      	movs	r2, #0
 8003146:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800314a:	6878      	ldr	r0, [r7, #4]
 800314c:	f7fe fb6c 	bl	8001828 <HAL_TIM_PWM_MspInit>
 8003150:	687b      	ldr	r3, [r7, #4]
 8003152:	2202      	movs	r2, #2
 8003154:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003158:	687b      	ldr	r3, [r7, #4]
 800315a:	681a      	ldr	r2, [r3, #0]
 800315c:	687b      	ldr	r3, [r7, #4]
 800315e:	3304      	adds	r3, #4
 8003160:	4619      	mov	r1, r3
 8003162:	4610      	mov	r0, r2
 8003164:	f000 f9a0 	bl	80034a8 <TIM_Base_SetConfig>
 8003168:	687b      	ldr	r3, [r7, #4]
 800316a:	2201      	movs	r2, #1
 800316c:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8003170:	687b      	ldr	r3, [r7, #4]
 8003172:	2201      	movs	r2, #1
 8003174:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8003178:	687b      	ldr	r3, [r7, #4]
 800317a:	2201      	movs	r2, #1
 800317c:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8003180:	687b      	ldr	r3, [r7, #4]
 8003182:	2201      	movs	r2, #1
 8003184:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8003188:	687b      	ldr	r3, [r7, #4]
 800318a:	2201      	movs	r2, #1
 800318c:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8003190:	687b      	ldr	r3, [r7, #4]
 8003192:	2201      	movs	r2, #1
 8003194:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8003198:	687b      	ldr	r3, [r7, #4]
 800319a:	2201      	movs	r2, #1
 800319c:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 80031a0:	687b      	ldr	r3, [r7, #4]
 80031a2:	2201      	movs	r2, #1
 80031a4:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 80031a8:	687b      	ldr	r3, [r7, #4]
 80031aa:	2201      	movs	r2, #1
 80031ac:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 80031b0:	687b      	ldr	r3, [r7, #4]
 80031b2:	2201      	movs	r2, #1
 80031b4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80031b8:	2300      	movs	r3, #0
 80031ba:	4618      	mov	r0, r3
 80031bc:	3708      	adds	r7, #8
 80031be:	46bd      	mov	sp, r7
 80031c0:	bd80      	pop	{r7, pc}
	...

080031c4 <HAL_TIM_PWM_Start>:
 80031c4:	b580      	push	{r7, lr}
 80031c6:	b084      	sub	sp, #16
 80031c8:	af00      	add	r7, sp, #0
 80031ca:	6078      	str	r0, [r7, #4]
 80031cc:	6039      	str	r1, [r7, #0]
 80031ce:	683b      	ldr	r3, [r7, #0]
 80031d0:	2b00      	cmp	r3, #0
 80031d2:	d109      	bne.n	80031e8 <HAL_TIM_PWM_Start+0x24>
 80031d4:	687b      	ldr	r3, [r7, #4]
 80031d6:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 80031da:	b2db      	uxtb	r3, r3
 80031dc:	2b01      	cmp	r3, #1
 80031de:	bf14      	ite	ne
 80031e0:	2301      	movne	r3, #1
 80031e2:	2300      	moveq	r3, #0
 80031e4:	b2db      	uxtb	r3, r3
 80031e6:	e022      	b.n	800322e <HAL_TIM_PWM_Start+0x6a>
 80031e8:	683b      	ldr	r3, [r7, #0]
 80031ea:	2b04      	cmp	r3, #4
 80031ec:	d109      	bne.n	8003202 <HAL_TIM_PWM_Start+0x3e>
 80031ee:	687b      	ldr	r3, [r7, #4]
 80031f0:	f893 303f 	ldrb.w	r3, [r3, #63]	; 0x3f
 80031f4:	b2db      	uxtb	r3, r3
 80031f6:	2b01      	cmp	r3, #1
 80031f8:	bf14      	ite	ne
 80031fa:	2301      	movne	r3, #1
 80031fc:	2300      	moveq	r3, #0
 80031fe:	b2db      	uxtb	r3, r3
 8003200:	e015      	b.n	800322e <HAL_TIM_PWM_Start+0x6a>
 8003202:	683b      	ldr	r3, [r7, #0]
 8003204:	2b08      	cmp	r3, #8
 8003206:	d109      	bne.n	800321c <HAL_TIM_PWM_Start+0x58>
 8003208:	687b      	ldr	r3, [r7, #4]
 800320a:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 800320e:	b2db      	uxtb	r3, r3
 8003210:	2b01      	cmp	r3, #1
 8003212:	bf14      	ite	ne
 8003214:	2301      	movne	r3, #1
 8003216:	2300      	moveq	r3, #0
 8003218:	b2db      	uxtb	r3, r3
 800321a:	e008      	b.n	800322e <HAL_TIM_PWM_Start+0x6a>
 800321c:	687b      	ldr	r3, [r7, #4]
 800321e:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8003222:	b2db      	uxtb	r3, r3
 8003224:	2b01      	cmp	r3, #1
 8003226:	bf14      	ite	ne
 8003228:	2301      	movne	r3, #1
 800322a:	2300      	moveq	r3, #0
 800322c:	b2db      	uxtb	r3, r3
 800322e:	2b00      	cmp	r3, #0
 8003230:	d001      	beq.n	8003236 <HAL_TIM_PWM_Start+0x72>
 8003232:	2301      	movs	r3, #1
 8003234:	e068      	b.n	8003308 <HAL_TIM_PWM_Start+0x144>
 8003236:	683b      	ldr	r3, [r7, #0]
 8003238:	2b00      	cmp	r3, #0
 800323a:	d104      	bne.n	8003246 <HAL_TIM_PWM_Start+0x82>
 800323c:	687b      	ldr	r3, [r7, #4]
 800323e:	2202      	movs	r2, #2
 8003240:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8003244:	e013      	b.n	800326e <HAL_TIM_PWM_Start+0xaa>
 8003246:	683b      	ldr	r3, [r7, #0]
 8003248:	2b04      	cmp	r3, #4
 800324a:	d104      	bne.n	8003256 <HAL_TIM_PWM_Start+0x92>
 800324c:	687b      	ldr	r3, [r7, #4]
 800324e:	2202      	movs	r2, #2
 8003250:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8003254:	e00b      	b.n	800326e <HAL_TIM_PWM_Start+0xaa>
 8003256:	683b      	ldr	r3, [r7, #0]
 8003258:	2b08      	cmp	r3, #8
 800325a:	d104      	bne.n	8003266 <HAL_TIM_PWM_Start+0xa2>
 800325c:	687b      	ldr	r3, [r7, #4]
 800325e:	2202      	movs	r2, #2
 8003260:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8003264:	e003      	b.n	800326e <HAL_TIM_PWM_Start+0xaa>
 8003266:	687b      	ldr	r3, [r7, #4]
 8003268:	2202      	movs	r2, #2
 800326a:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 800326e:	687b      	ldr	r3, [r7, #4]
 8003270:	681b      	ldr	r3, [r3, #0]
 8003272:	2201      	movs	r2, #1
 8003274:	6839      	ldr	r1, [r7, #0]
 8003276:	4618      	mov	r0, r3
 8003278:	f000 fb22 	bl	80038c0 <TIM_CCxChannelCmd>
 800327c:	687b      	ldr	r3, [r7, #4]
 800327e:	681b      	ldr	r3, [r3, #0]
 8003280:	4a23      	ldr	r2, [pc, #140]	; (8003310 <HAL_TIM_PWM_Start+0x14c>)
 8003282:	4293      	cmp	r3, r2
 8003284:	d107      	bne.n	8003296 <HAL_TIM_PWM_Start+0xd2>
 8003286:	687b      	ldr	r3, [r7, #4]
 8003288:	681b      	ldr	r3, [r3, #0]
 800328a:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800328c:	687b      	ldr	r3, [r7, #4]
 800328e:	681b      	ldr	r3, [r3, #0]
 8003290:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8003294:	645a      	str	r2, [r3, #68]	; 0x44
 8003296:	687b      	ldr	r3, [r7, #4]
 8003298:	681b      	ldr	r3, [r3, #0]
 800329a:	4a1d      	ldr	r2, [pc, #116]	; (8003310 <HAL_TIM_PWM_Start+0x14c>)
 800329c:	4293      	cmp	r3, r2
 800329e:	d018      	beq.n	80032d2 <HAL_TIM_PWM_Start+0x10e>
 80032a0:	687b      	ldr	r3, [r7, #4]
 80032a2:	681b      	ldr	r3, [r3, #0]
 80032a4:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80032a8:	d013      	beq.n	80032d2 <HAL_TIM_PWM_Start+0x10e>
 80032aa:	687b      	ldr	r3, [r7, #4]
 80032ac:	681b      	ldr	r3, [r3, #0]
 80032ae:	4a19      	ldr	r2, [pc, #100]	; (8003314 <HAL_TIM_PWM_Start+0x150>)
 80032b0:	4293      	cmp	r3, r2
 80032b2:	d00e      	beq.n	80032d2 <HAL_TIM_PWM_Start+0x10e>
 80032b4:	687b      	ldr	r3, [r7, #4]
 80032b6:	681b      	ldr	r3, [r3, #0]
 80032b8:	4a17      	ldr	r2, [pc, #92]	; (8003318 <HAL_TIM_PWM_Start+0x154>)
 80032ba:	4293      	cmp	r3, r2
 80032bc:	d009      	beq.n	80032d2 <HAL_TIM_PWM_Start+0x10e>
 80032be:	687b      	ldr	r3, [r7, #4]
 80032c0:	681b      	ldr	r3, [r3, #0]
 80032c2:	4a16      	ldr	r2, [pc, #88]	; (800331c <HAL_TIM_PWM_Start+0x158>)
 80032c4:	4293      	cmp	r3, r2
 80032c6:	d004      	beq.n	80032d2 <HAL_TIM_PWM_Start+0x10e>
 80032c8:	687b      	ldr	r3, [r7, #4]
 80032ca:	681b      	ldr	r3, [r3, #0]
 80032cc:	4a14      	ldr	r2, [pc, #80]	; (8003320 <HAL_TIM_PWM_Start+0x15c>)
 80032ce:	4293      	cmp	r3, r2
 80032d0:	d111      	bne.n	80032f6 <HAL_TIM_PWM_Start+0x132>
 80032d2:	687b      	ldr	r3, [r7, #4]
 80032d4:	681b      	ldr	r3, [r3, #0]
 80032d6:	689b      	ldr	r3, [r3, #8]
 80032d8:	f003 0307 	and.w	r3, r3, #7
 80032dc:	60fb      	str	r3, [r7, #12]
 80032de:	68fb      	ldr	r3, [r7, #12]
 80032e0:	2b06      	cmp	r3, #6
 80032e2:	d010      	beq.n	8003306 <HAL_TIM_PWM_Start+0x142>
 80032e4:	687b      	ldr	r3, [r7, #4]
 80032e6:	681b      	ldr	r3, [r3, #0]
 80032e8:	681a      	ldr	r2, [r3, #0]
 80032ea:	687b      	ldr	r3, [r7, #4]
 80032ec:	681b      	ldr	r3, [r3, #0]
 80032ee:	f042 0201 	orr.w	r2, r2, #1
 80032f2:	601a      	str	r2, [r3, #0]
 80032f4:	e007      	b.n	8003306 <HAL_TIM_PWM_Start+0x142>
 80032f6:	687b      	ldr	r3, [r7, #4]
 80032f8:	681b      	ldr	r3, [r3, #0]
 80032fa:	681a      	ldr	r2, [r3, #0]
 80032fc:	687b      	ldr	r3, [r7, #4]
 80032fe:	681b      	ldr	r3, [r3, #0]
 8003300:	f042 0201 	orr.w	r2, r2, #1
 8003304:	601a      	str	r2, [r3, #0]
 8003306:	2300      	movs	r3, #0
 8003308:	4618      	mov	r0, r3
 800330a:	3710      	adds	r7, #16
 800330c:	46bd      	mov	sp, r7
 800330e:	bd80      	pop	{r7, pc}
 8003310:	40010000 	.word	0x40010000
 8003314:	40000400 	.word	0x40000400
 8003318:	40000800 	.word	0x40000800
 800331c:	40000c00 	.word	0x40000c00
 8003320:	40014000 	.word	0x40014000

08003324 <HAL_TIM_PWM_ConfigChannel>:
 8003324:	b580      	push	{r7, lr}
 8003326:	b086      	sub	sp, #24
 8003328:	af00      	add	r7, sp, #0
 800332a:	60f8      	str	r0, [r7, #12]
 800332c:	60b9      	str	r1, [r7, #8]
 800332e:	607a      	str	r2, [r7, #4]
 8003330:	2300      	movs	r3, #0
 8003332:	75fb      	strb	r3, [r7, #23]
 8003334:	68fb      	ldr	r3, [r7, #12]
 8003336:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800333a:	2b01      	cmp	r3, #1
 800333c:	d101      	bne.n	8003342 <HAL_TIM_PWM_ConfigChannel+0x1e>
 800333e:	2302      	movs	r3, #2
 8003340:	e0ae      	b.n	80034a0 <HAL_TIM_PWM_ConfigChannel+0x17c>
 8003342:	68fb      	ldr	r3, [r7, #12]
 8003344:	2201      	movs	r2, #1
 8003346:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800334a:	687b      	ldr	r3, [r7, #4]
 800334c:	2b0c      	cmp	r3, #12
 800334e:	f200 809f 	bhi.w	8003490 <HAL_TIM_PWM_ConfigChannel+0x16c>
 8003352:	a201      	add	r2, pc, #4	; (adr r2, 8003358 <HAL_TIM_PWM_ConfigChannel+0x34>)
 8003354:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003358:	0800338d 	.word	0x0800338d
 800335c:	08003491 	.word	0x08003491
 8003360:	08003491 	.word	0x08003491
 8003364:	08003491 	.word	0x08003491
 8003368:	080033cd 	.word	0x080033cd
 800336c:	08003491 	.word	0x08003491
 8003370:	08003491 	.word	0x08003491
 8003374:	08003491 	.word	0x08003491
 8003378:	0800340f 	.word	0x0800340f
 800337c:	08003491 	.word	0x08003491
 8003380:	08003491 	.word	0x08003491
 8003384:	08003491 	.word	0x08003491
 8003388:	0800344f 	.word	0x0800344f
 800338c:	68fb      	ldr	r3, [r7, #12]
 800338e:	681b      	ldr	r3, [r3, #0]
 8003390:	68b9      	ldr	r1, [r7, #8]
 8003392:	4618      	mov	r0, r3
 8003394:	f000 f908 	bl	80035a8 <TIM_OC1_SetConfig>
 8003398:	68fb      	ldr	r3, [r7, #12]
 800339a:	681b      	ldr	r3, [r3, #0]
 800339c:	699a      	ldr	r2, [r3, #24]
 800339e:	68fb      	ldr	r3, [r7, #12]
 80033a0:	681b      	ldr	r3, [r3, #0]
 80033a2:	f042 0208 	orr.w	r2, r2, #8
 80033a6:	619a      	str	r2, [r3, #24]
 80033a8:	68fb      	ldr	r3, [r7, #12]
 80033aa:	681b      	ldr	r3, [r3, #0]
 80033ac:	699a      	ldr	r2, [r3, #24]
 80033ae:	68fb      	ldr	r3, [r7, #12]
 80033b0:	681b      	ldr	r3, [r3, #0]
 80033b2:	f022 0204 	bic.w	r2, r2, #4
 80033b6:	619a      	str	r2, [r3, #24]
 80033b8:	68fb      	ldr	r3, [r7, #12]
 80033ba:	681b      	ldr	r3, [r3, #0]
 80033bc:	6999      	ldr	r1, [r3, #24]
 80033be:	68bb      	ldr	r3, [r7, #8]
 80033c0:	691a      	ldr	r2, [r3, #16]
 80033c2:	68fb      	ldr	r3, [r7, #12]
 80033c4:	681b      	ldr	r3, [r3, #0]
 80033c6:	430a      	orrs	r2, r1
 80033c8:	619a      	str	r2, [r3, #24]
 80033ca:	e064      	b.n	8003496 <HAL_TIM_PWM_ConfigChannel+0x172>
 80033cc:	68fb      	ldr	r3, [r7, #12]
 80033ce:	681b      	ldr	r3, [r3, #0]
 80033d0:	68b9      	ldr	r1, [r7, #8]
 80033d2:	4618      	mov	r0, r3
 80033d4:	f000 f94e 	bl	8003674 <TIM_OC2_SetConfig>
 80033d8:	68fb      	ldr	r3, [r7, #12]
 80033da:	681b      	ldr	r3, [r3, #0]
 80033dc:	699a      	ldr	r2, [r3, #24]
 80033de:	68fb      	ldr	r3, [r7, #12]
 80033e0:	681b      	ldr	r3, [r3, #0]
 80033e2:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 80033e6:	619a      	str	r2, [r3, #24]
 80033e8:	68fb      	ldr	r3, [r7, #12]
 80033ea:	681b      	ldr	r3, [r3, #0]
 80033ec:	699a      	ldr	r2, [r3, #24]
 80033ee:	68fb      	ldr	r3, [r7, #12]
 80033f0:	681b      	ldr	r3, [r3, #0]
 80033f2:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80033f6:	619a      	str	r2, [r3, #24]
 80033f8:	68fb      	ldr	r3, [r7, #12]
 80033fa:	681b      	ldr	r3, [r3, #0]
 80033fc:	6999      	ldr	r1, [r3, #24]
 80033fe:	68bb      	ldr	r3, [r7, #8]
 8003400:	691b      	ldr	r3, [r3, #16]
 8003402:	021a      	lsls	r2, r3, #8
 8003404:	68fb      	ldr	r3, [r7, #12]
 8003406:	681b      	ldr	r3, [r3, #0]
 8003408:	430a      	orrs	r2, r1
 800340a:	619a      	str	r2, [r3, #24]
 800340c:	e043      	b.n	8003496 <HAL_TIM_PWM_ConfigChannel+0x172>
 800340e:	68fb      	ldr	r3, [r7, #12]
 8003410:	681b      	ldr	r3, [r3, #0]
 8003412:	68b9      	ldr	r1, [r7, #8]
 8003414:	4618      	mov	r0, r3
 8003416:	f000 f999 	bl	800374c <TIM_OC3_SetConfig>
 800341a:	68fb      	ldr	r3, [r7, #12]
 800341c:	681b      	ldr	r3, [r3, #0]
 800341e:	69da      	ldr	r2, [r3, #28]
 8003420:	68fb      	ldr	r3, [r7, #12]
 8003422:	681b      	ldr	r3, [r3, #0]
 8003424:	f042 0208 	orr.w	r2, r2, #8
 8003428:	61da      	str	r2, [r3, #28]
 800342a:	68fb      	ldr	r3, [r7, #12]
 800342c:	681b      	ldr	r3, [r3, #0]
 800342e:	69da      	ldr	r2, [r3, #28]
 8003430:	68fb      	ldr	r3, [r7, #12]
 8003432:	681b      	ldr	r3, [r3, #0]
 8003434:	f022 0204 	bic.w	r2, r2, #4
 8003438:	61da      	str	r2, [r3, #28]
 800343a:	68fb      	ldr	r3, [r7, #12]
 800343c:	681b      	ldr	r3, [r3, #0]
 800343e:	69d9      	ldr	r1, [r3, #28]
 8003440:	68bb      	ldr	r3, [r7, #8]
 8003442:	691a      	ldr	r2, [r3, #16]
 8003444:	68fb      	ldr	r3, [r7, #12]
 8003446:	681b      	ldr	r3, [r3, #0]
 8003448:	430a      	orrs	r2, r1
 800344a:	61da      	str	r2, [r3, #28]
 800344c:	e023      	b.n	8003496 <HAL_TIM_PWM_ConfigChannel+0x172>
 800344e:	68fb      	ldr	r3, [r7, #12]
 8003450:	681b      	ldr	r3, [r3, #0]
 8003452:	68b9      	ldr	r1, [r7, #8]
 8003454:	4618      	mov	r0, r3
 8003456:	f000 f9e3 	bl	8003820 <TIM_OC4_SetConfig>
 800345a:	68fb      	ldr	r3, [r7, #12]
 800345c:	681b      	ldr	r3, [r3, #0]
 800345e:	69da      	ldr	r2, [r3, #28]
 8003460:	68fb      	ldr	r3, [r7, #12]
 8003462:	681b      	ldr	r3, [r3, #0]
 8003464:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8003468:	61da      	str	r2, [r3, #28]
 800346a:	68fb      	ldr	r3, [r7, #12]
 800346c:	681b      	ldr	r3, [r3, #0]
 800346e:	69da      	ldr	r2, [r3, #28]
 8003470:	68fb      	ldr	r3, [r7, #12]
 8003472:	681b      	ldr	r3, [r3, #0]
 8003474:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8003478:	61da      	str	r2, [r3, #28]
 800347a:	68fb      	ldr	r3, [r7, #12]
 800347c:	681b      	ldr	r3, [r3, #0]
 800347e:	69d9      	ldr	r1, [r3, #28]
 8003480:	68bb      	ldr	r3, [r7, #8]
 8003482:	691b      	ldr	r3, [r3, #16]
 8003484:	021a      	lsls	r2, r3, #8
 8003486:	68fb      	ldr	r3, [r7, #12]
 8003488:	681b      	ldr	r3, [r3, #0]
 800348a:	430a      	orrs	r2, r1
 800348c:	61da      	str	r2, [r3, #28]
 800348e:	e002      	b.n	8003496 <HAL_TIM_PWM_ConfigChannel+0x172>
 8003490:	2301      	movs	r3, #1
 8003492:	75fb      	strb	r3, [r7, #23]
 8003494:	bf00      	nop
 8003496:	68fb      	ldr	r3, [r7, #12]
 8003498:	2200      	movs	r2, #0
 800349a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800349e:	7dfb      	ldrb	r3, [r7, #23]
 80034a0:	4618      	mov	r0, r3
 80034a2:	3718      	adds	r7, #24
 80034a4:	46bd      	mov	sp, r7
 80034a6:	bd80      	pop	{r7, pc}

080034a8 <TIM_Base_SetConfig>:
 80034a8:	b480      	push	{r7}
 80034aa:	b085      	sub	sp, #20
 80034ac:	af00      	add	r7, sp, #0
 80034ae:	6078      	str	r0, [r7, #4]
 80034b0:	6039      	str	r1, [r7, #0]
 80034b2:	687b      	ldr	r3, [r7, #4]
 80034b4:	681b      	ldr	r3, [r3, #0]
 80034b6:	60fb      	str	r3, [r7, #12]
 80034b8:	687b      	ldr	r3, [r7, #4]
 80034ba:	4a34      	ldr	r2, [pc, #208]	; (800358c <TIM_Base_SetConfig+0xe4>)
 80034bc:	4293      	cmp	r3, r2
 80034be:	d00f      	beq.n	80034e0 <TIM_Base_SetConfig+0x38>
 80034c0:	687b      	ldr	r3, [r7, #4]
 80034c2:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80034c6:	d00b      	beq.n	80034e0 <TIM_Base_SetConfig+0x38>
 80034c8:	687b      	ldr	r3, [r7, #4]
 80034ca:	4a31      	ldr	r2, [pc, #196]	; (8003590 <TIM_Base_SetConfig+0xe8>)
 80034cc:	4293      	cmp	r3, r2
 80034ce:	d007      	beq.n	80034e0 <TIM_Base_SetConfig+0x38>
 80034d0:	687b      	ldr	r3, [r7, #4]
 80034d2:	4a30      	ldr	r2, [pc, #192]	; (8003594 <TIM_Base_SetConfig+0xec>)
 80034d4:	4293      	cmp	r3, r2
 80034d6:	d003      	beq.n	80034e0 <TIM_Base_SetConfig+0x38>
 80034d8:	687b      	ldr	r3, [r7, #4]
 80034da:	4a2f      	ldr	r2, [pc, #188]	; (8003598 <TIM_Base_SetConfig+0xf0>)
 80034dc:	4293      	cmp	r3, r2
 80034de:	d108      	bne.n	80034f2 <TIM_Base_SetConfig+0x4a>
 80034e0:	68fb      	ldr	r3, [r7, #12]
 80034e2:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80034e6:	60fb      	str	r3, [r7, #12]
 80034e8:	683b      	ldr	r3, [r7, #0]
 80034ea:	685b      	ldr	r3, [r3, #4]
 80034ec:	68fa      	ldr	r2, [r7, #12]
 80034ee:	4313      	orrs	r3, r2
 80034f0:	60fb      	str	r3, [r7, #12]
 80034f2:	687b      	ldr	r3, [r7, #4]
 80034f4:	4a25      	ldr	r2, [pc, #148]	; (800358c <TIM_Base_SetConfig+0xe4>)
 80034f6:	4293      	cmp	r3, r2
 80034f8:	d01b      	beq.n	8003532 <TIM_Base_SetConfig+0x8a>
 80034fa:	687b      	ldr	r3, [r7, #4]
 80034fc:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8003500:	d017      	beq.n	8003532 <TIM_Base_SetConfig+0x8a>
 8003502:	687b      	ldr	r3, [r7, #4]
 8003504:	4a22      	ldr	r2, [pc, #136]	; (8003590 <TIM_Base_SetConfig+0xe8>)
 8003506:	4293      	cmp	r3, r2
 8003508:	d013      	beq.n	8003532 <TIM_Base_SetConfig+0x8a>
 800350a:	687b      	ldr	r3, [r7, #4]
 800350c:	4a21      	ldr	r2, [pc, #132]	; (8003594 <TIM_Base_SetConfig+0xec>)
 800350e:	4293      	cmp	r3, r2
 8003510:	d00f      	beq.n	8003532 <TIM_Base_SetConfig+0x8a>
 8003512:	687b      	ldr	r3, [r7, #4]
 8003514:	4a20      	ldr	r2, [pc, #128]	; (8003598 <TIM_Base_SetConfig+0xf0>)
 8003516:	4293      	cmp	r3, r2
 8003518:	d00b      	beq.n	8003532 <TIM_Base_SetConfig+0x8a>
 800351a:	687b      	ldr	r3, [r7, #4]
 800351c:	4a1f      	ldr	r2, [pc, #124]	; (800359c <TIM_Base_SetConfig+0xf4>)
 800351e:	4293      	cmp	r3, r2
 8003520:	d007      	beq.n	8003532 <TIM_Base_SetConfig+0x8a>
 8003522:	687b      	ldr	r3, [r7, #4]
 8003524:	4a1e      	ldr	r2, [pc, #120]	; (80035a0 <TIM_Base_SetConfig+0xf8>)
 8003526:	4293      	cmp	r3, r2
 8003528:	d003      	beq.n	8003532 <TIM_Base_SetConfig+0x8a>
 800352a:	687b      	ldr	r3, [r7, #4]
 800352c:	4a1d      	ldr	r2, [pc, #116]	; (80035a4 <TIM_Base_SetConfig+0xfc>)
 800352e:	4293      	cmp	r3, r2
 8003530:	d108      	bne.n	8003544 <TIM_Base_SetConfig+0x9c>
 8003532:	68fb      	ldr	r3, [r7, #12]
 8003534:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8003538:	60fb      	str	r3, [r7, #12]
 800353a:	683b      	ldr	r3, [r7, #0]
 800353c:	68db      	ldr	r3, [r3, #12]
 800353e:	68fa      	ldr	r2, [r7, #12]
 8003540:	4313      	orrs	r3, r2
 8003542:	60fb      	str	r3, [r7, #12]
 8003544:	68fb      	ldr	r3, [r7, #12]
 8003546:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 800354a:	683b      	ldr	r3, [r7, #0]
 800354c:	695b      	ldr	r3, [r3, #20]
 800354e:	4313      	orrs	r3, r2
 8003550:	60fb      	str	r3, [r7, #12]
 8003552:	687b      	ldr	r3, [r7, #4]
 8003554:	68fa      	ldr	r2, [r7, #12]
 8003556:	601a      	str	r2, [r3, #0]
 8003558:	683b      	ldr	r3, [r7, #0]
 800355a:	689a      	ldr	r2, [r3, #8]
 800355c:	687b      	ldr	r3, [r7, #4]
 800355e:	62da      	str	r2, [r3, #44]	; 0x2c
 8003560:	683b      	ldr	r3, [r7, #0]
 8003562:	681a      	ldr	r2, [r3, #0]
 8003564:	687b      	ldr	r3, [r7, #4]
 8003566:	629a      	str	r2, [r3, #40]	; 0x28
 8003568:	687b      	ldr	r3, [r7, #4]
 800356a:	4a08      	ldr	r2, [pc, #32]	; (800358c <TIM_Base_SetConfig+0xe4>)
 800356c:	4293      	cmp	r3, r2
 800356e:	d103      	bne.n	8003578 <TIM_Base_SetConfig+0xd0>
 8003570:	683b      	ldr	r3, [r7, #0]
 8003572:	691a      	ldr	r2, [r3, #16]
 8003574:	687b      	ldr	r3, [r7, #4]
 8003576:	631a      	str	r2, [r3, #48]	; 0x30
 8003578:	687b      	ldr	r3, [r7, #4]
 800357a:	2201      	movs	r2, #1
 800357c:	615a      	str	r2, [r3, #20]
 800357e:	bf00      	nop
 8003580:	3714      	adds	r7, #20
 8003582:	46bd      	mov	sp, r7
 8003584:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003588:	4770      	bx	lr
 800358a:	bf00      	nop
 800358c:	40010000 	.word	0x40010000
 8003590:	40000400 	.word	0x40000400
 8003594:	40000800 	.word	0x40000800
 8003598:	40000c00 	.word	0x40000c00
 800359c:	40014000 	.word	0x40014000
 80035a0:	40014400 	.word	0x40014400
 80035a4:	40014800 	.word	0x40014800

080035a8 <TIM_OC1_SetConfig>:
 80035a8:	b480      	push	{r7}
 80035aa:	b087      	sub	sp, #28
 80035ac:	af00      	add	r7, sp, #0
 80035ae:	6078      	str	r0, [r7, #4]
 80035b0:	6039      	str	r1, [r7, #0]
 80035b2:	687b      	ldr	r3, [r7, #4]
 80035b4:	6a1b      	ldr	r3, [r3, #32]
 80035b6:	f023 0201 	bic.w	r2, r3, #1
 80035ba:	687b      	ldr	r3, [r7, #4]
 80035bc:	621a      	str	r2, [r3, #32]
 80035be:	687b      	ldr	r3, [r7, #4]
 80035c0:	6a1b      	ldr	r3, [r3, #32]
 80035c2:	617b      	str	r3, [r7, #20]
 80035c4:	687b      	ldr	r3, [r7, #4]
 80035c6:	685b      	ldr	r3, [r3, #4]
 80035c8:	613b      	str	r3, [r7, #16]
 80035ca:	687b      	ldr	r3, [r7, #4]
 80035cc:	699b      	ldr	r3, [r3, #24]
 80035ce:	60fb      	str	r3, [r7, #12]
 80035d0:	68fb      	ldr	r3, [r7, #12]
 80035d2:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 80035d6:	60fb      	str	r3, [r7, #12]
 80035d8:	68fb      	ldr	r3, [r7, #12]
 80035da:	f023 0303 	bic.w	r3, r3, #3
 80035de:	60fb      	str	r3, [r7, #12]
 80035e0:	683b      	ldr	r3, [r7, #0]
 80035e2:	681b      	ldr	r3, [r3, #0]
 80035e4:	68fa      	ldr	r2, [r7, #12]
 80035e6:	4313      	orrs	r3, r2
 80035e8:	60fb      	str	r3, [r7, #12]
 80035ea:	697b      	ldr	r3, [r7, #20]
 80035ec:	f023 0302 	bic.w	r3, r3, #2
 80035f0:	617b      	str	r3, [r7, #20]
 80035f2:	683b      	ldr	r3, [r7, #0]
 80035f4:	689b      	ldr	r3, [r3, #8]
 80035f6:	697a      	ldr	r2, [r7, #20]
 80035f8:	4313      	orrs	r3, r2
 80035fa:	617b      	str	r3, [r7, #20]
 80035fc:	687b      	ldr	r3, [r7, #4]
 80035fe:	4a1c      	ldr	r2, [pc, #112]	; (8003670 <TIM_OC1_SetConfig+0xc8>)
 8003600:	4293      	cmp	r3, r2
 8003602:	d10c      	bne.n	800361e <TIM_OC1_SetConfig+0x76>
 8003604:	697b      	ldr	r3, [r7, #20]
 8003606:	f023 0308 	bic.w	r3, r3, #8
 800360a:	617b      	str	r3, [r7, #20]
 800360c:	683b      	ldr	r3, [r7, #0]
 800360e:	68db      	ldr	r3, [r3, #12]
 8003610:	697a      	ldr	r2, [r7, #20]
 8003612:	4313      	orrs	r3, r2
 8003614:	617b      	str	r3, [r7, #20]
 8003616:	697b      	ldr	r3, [r7, #20]
 8003618:	f023 0304 	bic.w	r3, r3, #4
 800361c:	617b      	str	r3, [r7, #20]
 800361e:	687b      	ldr	r3, [r7, #4]
 8003620:	4a13      	ldr	r2, [pc, #76]	; (8003670 <TIM_OC1_SetConfig+0xc8>)
 8003622:	4293      	cmp	r3, r2
 8003624:	d111      	bne.n	800364a <TIM_OC1_SetConfig+0xa2>
 8003626:	693b      	ldr	r3, [r7, #16]
 8003628:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800362c:	613b      	str	r3, [r7, #16]
 800362e:	693b      	ldr	r3, [r7, #16]
 8003630:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8003634:	613b      	str	r3, [r7, #16]
 8003636:	683b      	ldr	r3, [r7, #0]
 8003638:	695b      	ldr	r3, [r3, #20]
 800363a:	693a      	ldr	r2, [r7, #16]
 800363c:	4313      	orrs	r3, r2
 800363e:	613b      	str	r3, [r7, #16]
 8003640:	683b      	ldr	r3, [r7, #0]
 8003642:	699b      	ldr	r3, [r3, #24]
 8003644:	693a      	ldr	r2, [r7, #16]
 8003646:	4313      	orrs	r3, r2
 8003648:	613b      	str	r3, [r7, #16]
 800364a:	687b      	ldr	r3, [r7, #4]
 800364c:	693a      	ldr	r2, [r7, #16]
 800364e:	605a      	str	r2, [r3, #4]
 8003650:	687b      	ldr	r3, [r7, #4]
 8003652:	68fa      	ldr	r2, [r7, #12]
 8003654:	619a      	str	r2, [r3, #24]
 8003656:	683b      	ldr	r3, [r7, #0]
 8003658:	685a      	ldr	r2, [r3, #4]
 800365a:	687b      	ldr	r3, [r7, #4]
 800365c:	635a      	str	r2, [r3, #52]	; 0x34
 800365e:	687b      	ldr	r3, [r7, #4]
 8003660:	697a      	ldr	r2, [r7, #20]
 8003662:	621a      	str	r2, [r3, #32]
 8003664:	bf00      	nop
 8003666:	371c      	adds	r7, #28
 8003668:	46bd      	mov	sp, r7
 800366a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800366e:	4770      	bx	lr
 8003670:	40010000 	.word	0x40010000

08003674 <TIM_OC2_SetConfig>:
 8003674:	b480      	push	{r7}
 8003676:	b087      	sub	sp, #28
 8003678:	af00      	add	r7, sp, #0
 800367a:	6078      	str	r0, [r7, #4]
 800367c:	6039      	str	r1, [r7, #0]
 800367e:	687b      	ldr	r3, [r7, #4]
 8003680:	6a1b      	ldr	r3, [r3, #32]
 8003682:	f023 0210 	bic.w	r2, r3, #16
 8003686:	687b      	ldr	r3, [r7, #4]
 8003688:	621a      	str	r2, [r3, #32]
 800368a:	687b      	ldr	r3, [r7, #4]
 800368c:	6a1b      	ldr	r3, [r3, #32]
 800368e:	617b      	str	r3, [r7, #20]
 8003690:	687b      	ldr	r3, [r7, #4]
 8003692:	685b      	ldr	r3, [r3, #4]
 8003694:	613b      	str	r3, [r7, #16]
 8003696:	687b      	ldr	r3, [r7, #4]
 8003698:	699b      	ldr	r3, [r3, #24]
 800369a:	60fb      	str	r3, [r7, #12]
 800369c:	68fb      	ldr	r3, [r7, #12]
 800369e:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 80036a2:	60fb      	str	r3, [r7, #12]
 80036a4:	68fb      	ldr	r3, [r7, #12]
 80036a6:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 80036aa:	60fb      	str	r3, [r7, #12]
 80036ac:	683b      	ldr	r3, [r7, #0]
 80036ae:	681b      	ldr	r3, [r3, #0]
 80036b0:	021b      	lsls	r3, r3, #8
 80036b2:	68fa      	ldr	r2, [r7, #12]
 80036b4:	4313      	orrs	r3, r2
 80036b6:	60fb      	str	r3, [r7, #12]
 80036b8:	697b      	ldr	r3, [r7, #20]
 80036ba:	f023 0320 	bic.w	r3, r3, #32
 80036be:	617b      	str	r3, [r7, #20]
 80036c0:	683b      	ldr	r3, [r7, #0]
 80036c2:	689b      	ldr	r3, [r3, #8]
 80036c4:	011b      	lsls	r3, r3, #4
 80036c6:	697a      	ldr	r2, [r7, #20]
 80036c8:	4313      	orrs	r3, r2
 80036ca:	617b      	str	r3, [r7, #20]
 80036cc:	687b      	ldr	r3, [r7, #4]
 80036ce:	4a1e      	ldr	r2, [pc, #120]	; (8003748 <TIM_OC2_SetConfig+0xd4>)
 80036d0:	4293      	cmp	r3, r2
 80036d2:	d10d      	bne.n	80036f0 <TIM_OC2_SetConfig+0x7c>
 80036d4:	697b      	ldr	r3, [r7, #20]
 80036d6:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80036da:	617b      	str	r3, [r7, #20]
 80036dc:	683b      	ldr	r3, [r7, #0]
 80036de:	68db      	ldr	r3, [r3, #12]
 80036e0:	011b      	lsls	r3, r3, #4
 80036e2:	697a      	ldr	r2, [r7, #20]
 80036e4:	4313      	orrs	r3, r2
 80036e6:	617b      	str	r3, [r7, #20]
 80036e8:	697b      	ldr	r3, [r7, #20]
 80036ea:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80036ee:	617b      	str	r3, [r7, #20]
 80036f0:	687b      	ldr	r3, [r7, #4]
 80036f2:	4a15      	ldr	r2, [pc, #84]	; (8003748 <TIM_OC2_SetConfig+0xd4>)
 80036f4:	4293      	cmp	r3, r2
 80036f6:	d113      	bne.n	8003720 <TIM_OC2_SetConfig+0xac>
 80036f8:	693b      	ldr	r3, [r7, #16]
 80036fa:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 80036fe:	613b      	str	r3, [r7, #16]
 8003700:	693b      	ldr	r3, [r7, #16]
 8003702:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8003706:	613b      	str	r3, [r7, #16]
 8003708:	683b      	ldr	r3, [r7, #0]
 800370a:	695b      	ldr	r3, [r3, #20]
 800370c:	009b      	lsls	r3, r3, #2
 800370e:	693a      	ldr	r2, [r7, #16]
 8003710:	4313      	orrs	r3, r2
 8003712:	613b      	str	r3, [r7, #16]
 8003714:	683b      	ldr	r3, [r7, #0]
 8003716:	699b      	ldr	r3, [r3, #24]
 8003718:	009b      	lsls	r3, r3, #2
 800371a:	693a      	ldr	r2, [r7, #16]
 800371c:	4313      	orrs	r3, r2
 800371e:	613b      	str	r3, [r7, #16]
 8003720:	687b      	ldr	r3, [r7, #4]
 8003722:	693a      	ldr	r2, [r7, #16]
 8003724:	605a      	str	r2, [r3, #4]
 8003726:	687b      	ldr	r3, [r7, #4]
 8003728:	68fa      	ldr	r2, [r7, #12]
 800372a:	619a      	str	r2, [r3, #24]
 800372c:	683b      	ldr	r3, [r7, #0]
 800372e:	685a      	ldr	r2, [r3, #4]
 8003730:	687b      	ldr	r3, [r7, #4]
 8003732:	639a      	str	r2, [r3, #56]	; 0x38
 8003734:	687b      	ldr	r3, [r7, #4]
 8003736:	697a      	ldr	r2, [r7, #20]
 8003738:	621a      	str	r2, [r3, #32]
 800373a:	bf00      	nop
 800373c:	371c      	adds	r7, #28
 800373e:	46bd      	mov	sp, r7
 8003740:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003744:	4770      	bx	lr
 8003746:	bf00      	nop
 8003748:	40010000 	.word	0x40010000

0800374c <TIM_OC3_SetConfig>:
 800374c:	b480      	push	{r7}
 800374e:	b087      	sub	sp, #28
 8003750:	af00      	add	r7, sp, #0
 8003752:	6078      	str	r0, [r7, #4]
 8003754:	6039      	str	r1, [r7, #0]
 8003756:	687b      	ldr	r3, [r7, #4]
 8003758:	6a1b      	ldr	r3, [r3, #32]
 800375a:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 800375e:	687b      	ldr	r3, [r7, #4]
 8003760:	621a      	str	r2, [r3, #32]
 8003762:	687b      	ldr	r3, [r7, #4]
 8003764:	6a1b      	ldr	r3, [r3, #32]
 8003766:	617b      	str	r3, [r7, #20]
 8003768:	687b      	ldr	r3, [r7, #4]
 800376a:	685b      	ldr	r3, [r3, #4]
 800376c:	613b      	str	r3, [r7, #16]
 800376e:	687b      	ldr	r3, [r7, #4]
 8003770:	69db      	ldr	r3, [r3, #28]
 8003772:	60fb      	str	r3, [r7, #12]
 8003774:	68fb      	ldr	r3, [r7, #12]
 8003776:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800377a:	60fb      	str	r3, [r7, #12]
 800377c:	68fb      	ldr	r3, [r7, #12]
 800377e:	f023 0303 	bic.w	r3, r3, #3
 8003782:	60fb      	str	r3, [r7, #12]
 8003784:	683b      	ldr	r3, [r7, #0]
 8003786:	681b      	ldr	r3, [r3, #0]
 8003788:	68fa      	ldr	r2, [r7, #12]
 800378a:	4313      	orrs	r3, r2
 800378c:	60fb      	str	r3, [r7, #12]
 800378e:	697b      	ldr	r3, [r7, #20]
 8003790:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8003794:	617b      	str	r3, [r7, #20]
 8003796:	683b      	ldr	r3, [r7, #0]
 8003798:	689b      	ldr	r3, [r3, #8]
 800379a:	021b      	lsls	r3, r3, #8
 800379c:	697a      	ldr	r2, [r7, #20]
 800379e:	4313      	orrs	r3, r2
 80037a0:	617b      	str	r3, [r7, #20]
 80037a2:	687b      	ldr	r3, [r7, #4]
 80037a4:	4a1d      	ldr	r2, [pc, #116]	; (800381c <TIM_OC3_SetConfig+0xd0>)
 80037a6:	4293      	cmp	r3, r2
 80037a8:	d10d      	bne.n	80037c6 <TIM_OC3_SetConfig+0x7a>
 80037aa:	697b      	ldr	r3, [r7, #20]
 80037ac:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 80037b0:	617b      	str	r3, [r7, #20]
 80037b2:	683b      	ldr	r3, [r7, #0]
 80037b4:	68db      	ldr	r3, [r3, #12]
 80037b6:	021b      	lsls	r3, r3, #8
 80037b8:	697a      	ldr	r2, [r7, #20]
 80037ba:	4313      	orrs	r3, r2
 80037bc:	617b      	str	r3, [r7, #20]
 80037be:	697b      	ldr	r3, [r7, #20]
 80037c0:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 80037c4:	617b      	str	r3, [r7, #20]
 80037c6:	687b      	ldr	r3, [r7, #4]
 80037c8:	4a14      	ldr	r2, [pc, #80]	; (800381c <TIM_OC3_SetConfig+0xd0>)
 80037ca:	4293      	cmp	r3, r2
 80037cc:	d113      	bne.n	80037f6 <TIM_OC3_SetConfig+0xaa>
 80037ce:	693b      	ldr	r3, [r7, #16]
 80037d0:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 80037d4:	613b      	str	r3, [r7, #16]
 80037d6:	693b      	ldr	r3, [r7, #16]
 80037d8:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 80037dc:	613b      	str	r3, [r7, #16]
 80037de:	683b      	ldr	r3, [r7, #0]
 80037e0:	695b      	ldr	r3, [r3, #20]
 80037e2:	011b      	lsls	r3, r3, #4
 80037e4:	693a      	ldr	r2, [r7, #16]
 80037e6:	4313      	orrs	r3, r2
 80037e8:	613b      	str	r3, [r7, #16]
 80037ea:	683b      	ldr	r3, [r7, #0]
 80037ec:	699b      	ldr	r3, [r3, #24]
 80037ee:	011b      	lsls	r3, r3, #4
 80037f0:	693a      	ldr	r2, [r7, #16]
 80037f2:	4313      	orrs	r3, r2
 80037f4:	613b      	str	r3, [r7, #16]
 80037f6:	687b      	ldr	r3, [r7, #4]
 80037f8:	693a      	ldr	r2, [r7, #16]
 80037fa:	605a      	str	r2, [r3, #4]
 80037fc:	687b      	ldr	r3, [r7, #4]
 80037fe:	68fa      	ldr	r2, [r7, #12]
 8003800:	61da      	str	r2, [r3, #28]
 8003802:	683b      	ldr	r3, [r7, #0]
 8003804:	685a      	ldr	r2, [r3, #4]
 8003806:	687b      	ldr	r3, [r7, #4]
 8003808:	63da      	str	r2, [r3, #60]	; 0x3c
 800380a:	687b      	ldr	r3, [r7, #4]
 800380c:	697a      	ldr	r2, [r7, #20]
 800380e:	621a      	str	r2, [r3, #32]
 8003810:	bf00      	nop
 8003812:	371c      	adds	r7, #28
 8003814:	46bd      	mov	sp, r7
 8003816:	f85d 7b04 	ldr.w	r7, [sp], #4
 800381a:	4770      	bx	lr
 800381c:	40010000 	.word	0x40010000

08003820 <TIM_OC4_SetConfig>:
 8003820:	b480      	push	{r7}
 8003822:	b087      	sub	sp, #28
 8003824:	af00      	add	r7, sp, #0
 8003826:	6078      	str	r0, [r7, #4]
 8003828:	6039      	str	r1, [r7, #0]
 800382a:	687b      	ldr	r3, [r7, #4]
 800382c:	6a1b      	ldr	r3, [r3, #32]
 800382e:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 8003832:	687b      	ldr	r3, [r7, #4]
 8003834:	621a      	str	r2, [r3, #32]
 8003836:	687b      	ldr	r3, [r7, #4]
 8003838:	6a1b      	ldr	r3, [r3, #32]
 800383a:	613b      	str	r3, [r7, #16]
 800383c:	687b      	ldr	r3, [r7, #4]
 800383e:	685b      	ldr	r3, [r3, #4]
 8003840:	617b      	str	r3, [r7, #20]
 8003842:	687b      	ldr	r3, [r7, #4]
 8003844:	69db      	ldr	r3, [r3, #28]
 8003846:	60fb      	str	r3, [r7, #12]
 8003848:	68fb      	ldr	r3, [r7, #12]
 800384a:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 800384e:	60fb      	str	r3, [r7, #12]
 8003850:	68fb      	ldr	r3, [r7, #12]
 8003852:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8003856:	60fb      	str	r3, [r7, #12]
 8003858:	683b      	ldr	r3, [r7, #0]
 800385a:	681b      	ldr	r3, [r3, #0]
 800385c:	021b      	lsls	r3, r3, #8
 800385e:	68fa      	ldr	r2, [r7, #12]
 8003860:	4313      	orrs	r3, r2
 8003862:	60fb      	str	r3, [r7, #12]
 8003864:	693b      	ldr	r3, [r7, #16]
 8003866:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 800386a:	613b      	str	r3, [r7, #16]
 800386c:	683b      	ldr	r3, [r7, #0]
 800386e:	689b      	ldr	r3, [r3, #8]
 8003870:	031b      	lsls	r3, r3, #12
 8003872:	693a      	ldr	r2, [r7, #16]
 8003874:	4313      	orrs	r3, r2
 8003876:	613b      	str	r3, [r7, #16]
 8003878:	687b      	ldr	r3, [r7, #4]
 800387a:	4a10      	ldr	r2, [pc, #64]	; (80038bc <TIM_OC4_SetConfig+0x9c>)
 800387c:	4293      	cmp	r3, r2
 800387e:	d109      	bne.n	8003894 <TIM_OC4_SetConfig+0x74>
 8003880:	697b      	ldr	r3, [r7, #20]
 8003882:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8003886:	617b      	str	r3, [r7, #20]
 8003888:	683b      	ldr	r3, [r7, #0]
 800388a:	695b      	ldr	r3, [r3, #20]
 800388c:	019b      	lsls	r3, r3, #6
 800388e:	697a      	ldr	r2, [r7, #20]
 8003890:	4313      	orrs	r3, r2
 8003892:	617b      	str	r3, [r7, #20]
 8003894:	687b      	ldr	r3, [r7, #4]
 8003896:	697a      	ldr	r2, [r7, #20]
 8003898:	605a      	str	r2, [r3, #4]
 800389a:	687b      	ldr	r3, [r7, #4]
 800389c:	68fa      	ldr	r2, [r7, #12]
 800389e:	61da      	str	r2, [r3, #28]
 80038a0:	683b      	ldr	r3, [r7, #0]
 80038a2:	685a      	ldr	r2, [r3, #4]
 80038a4:	687b      	ldr	r3, [r7, #4]
 80038a6:	641a      	str	r2, [r3, #64]	; 0x40
 80038a8:	687b      	ldr	r3, [r7, #4]
 80038aa:	693a      	ldr	r2, [r7, #16]
 80038ac:	621a      	str	r2, [r3, #32]
 80038ae:	bf00      	nop
 80038b0:	371c      	adds	r7, #28
 80038b2:	46bd      	mov	sp, r7
 80038b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80038b8:	4770      	bx	lr
 80038ba:	bf00      	nop
 80038bc:	40010000 	.word	0x40010000

080038c0 <TIM_CCxChannelCmd>:
 80038c0:	b480      	push	{r7}
 80038c2:	b087      	sub	sp, #28
 80038c4:	af00      	add	r7, sp, #0
 80038c6:	60f8      	str	r0, [r7, #12]
 80038c8:	60b9      	str	r1, [r7, #8]
 80038ca:	607a      	str	r2, [r7, #4]
 80038cc:	68bb      	ldr	r3, [r7, #8]
 80038ce:	f003 031f 	and.w	r3, r3, #31
 80038d2:	2201      	movs	r2, #1
 80038d4:	fa02 f303 	lsl.w	r3, r2, r3
 80038d8:	617b      	str	r3, [r7, #20]
 80038da:	68fb      	ldr	r3, [r7, #12]
 80038dc:	6a1a      	ldr	r2, [r3, #32]
 80038de:	697b      	ldr	r3, [r7, #20]
 80038e0:	43db      	mvns	r3, r3
 80038e2:	401a      	ands	r2, r3
 80038e4:	68fb      	ldr	r3, [r7, #12]
 80038e6:	621a      	str	r2, [r3, #32]
 80038e8:	68fb      	ldr	r3, [r7, #12]
 80038ea:	6a1a      	ldr	r2, [r3, #32]
 80038ec:	68bb      	ldr	r3, [r7, #8]
 80038ee:	f003 031f 	and.w	r3, r3, #31
 80038f2:	6879      	ldr	r1, [r7, #4]
 80038f4:	fa01 f303 	lsl.w	r3, r1, r3
 80038f8:	431a      	orrs	r2, r3
 80038fa:	68fb      	ldr	r3, [r7, #12]
 80038fc:	621a      	str	r2, [r3, #32]
 80038fe:	bf00      	nop
 8003900:	371c      	adds	r7, #28
 8003902:	46bd      	mov	sp, r7
 8003904:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003908:	4770      	bx	lr
	...

0800390c <HAL_TIMEx_MasterConfigSynchronization>:
 800390c:	b480      	push	{r7}
 800390e:	b085      	sub	sp, #20
 8003910:	af00      	add	r7, sp, #0
 8003912:	6078      	str	r0, [r7, #4]
 8003914:	6039      	str	r1, [r7, #0]
 8003916:	687b      	ldr	r3, [r7, #4]
 8003918:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800391c:	2b01      	cmp	r3, #1
 800391e:	d101      	bne.n	8003924 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8003920:	2302      	movs	r3, #2
 8003922:	e050      	b.n	80039c6 <HAL_TIMEx_MasterConfigSynchronization+0xba>
 8003924:	687b      	ldr	r3, [r7, #4]
 8003926:	2201      	movs	r2, #1
 8003928:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800392c:	687b      	ldr	r3, [r7, #4]
 800392e:	2202      	movs	r2, #2
 8003930:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8003934:	687b      	ldr	r3, [r7, #4]
 8003936:	681b      	ldr	r3, [r3, #0]
 8003938:	685b      	ldr	r3, [r3, #4]
 800393a:	60fb      	str	r3, [r7, #12]
 800393c:	687b      	ldr	r3, [r7, #4]
 800393e:	681b      	ldr	r3, [r3, #0]
 8003940:	689b      	ldr	r3, [r3, #8]
 8003942:	60bb      	str	r3, [r7, #8]
 8003944:	68fb      	ldr	r3, [r7, #12]
 8003946:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800394a:	60fb      	str	r3, [r7, #12]
 800394c:	683b      	ldr	r3, [r7, #0]
 800394e:	681b      	ldr	r3, [r3, #0]
 8003950:	68fa      	ldr	r2, [r7, #12]
 8003952:	4313      	orrs	r3, r2
 8003954:	60fb      	str	r3, [r7, #12]
 8003956:	687b      	ldr	r3, [r7, #4]
 8003958:	681b      	ldr	r3, [r3, #0]
 800395a:	68fa      	ldr	r2, [r7, #12]
 800395c:	605a      	str	r2, [r3, #4]
 800395e:	687b      	ldr	r3, [r7, #4]
 8003960:	681b      	ldr	r3, [r3, #0]
 8003962:	4a1c      	ldr	r2, [pc, #112]	; (80039d4 <HAL_TIMEx_MasterConfigSynchronization+0xc8>)
 8003964:	4293      	cmp	r3, r2
 8003966:	d018      	beq.n	800399a <HAL_TIMEx_MasterConfigSynchronization+0x8e>
 8003968:	687b      	ldr	r3, [r7, #4]
 800396a:	681b      	ldr	r3, [r3, #0]
 800396c:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8003970:	d013      	beq.n	800399a <HAL_TIMEx_MasterConfigSynchronization+0x8e>
 8003972:	687b      	ldr	r3, [r7, #4]
 8003974:	681b      	ldr	r3, [r3, #0]
 8003976:	4a18      	ldr	r2, [pc, #96]	; (80039d8 <HAL_TIMEx_MasterConfigSynchronization+0xcc>)
 8003978:	4293      	cmp	r3, r2
 800397a:	d00e      	beq.n	800399a <HAL_TIMEx_MasterConfigSynchronization+0x8e>
 800397c:	687b      	ldr	r3, [r7, #4]
 800397e:	681b      	ldr	r3, [r3, #0]
 8003980:	4a16      	ldr	r2, [pc, #88]	; (80039dc <HAL_TIMEx_MasterConfigSynchronization+0xd0>)
 8003982:	4293      	cmp	r3, r2
 8003984:	d009      	beq.n	800399a <HAL_TIMEx_MasterConfigSynchronization+0x8e>
 8003986:	687b      	ldr	r3, [r7, #4]
 8003988:	681b      	ldr	r3, [r3, #0]
 800398a:	4a15      	ldr	r2, [pc, #84]	; (80039e0 <HAL_TIMEx_MasterConfigSynchronization+0xd4>)
 800398c:	4293      	cmp	r3, r2
 800398e:	d004      	beq.n	800399a <HAL_TIMEx_MasterConfigSynchronization+0x8e>
 8003990:	687b      	ldr	r3, [r7, #4]
 8003992:	681b      	ldr	r3, [r3, #0]
 8003994:	4a13      	ldr	r2, [pc, #76]	; (80039e4 <HAL_TIMEx_MasterConfigSynchronization+0xd8>)
 8003996:	4293      	cmp	r3, r2
 8003998:	d10c      	bne.n	80039b4 <HAL_TIMEx_MasterConfigSynchronization+0xa8>
 800399a:	68bb      	ldr	r3, [r7, #8]
 800399c:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 80039a0:	60bb      	str	r3, [r7, #8]
 80039a2:	683b      	ldr	r3, [r7, #0]
 80039a4:	685b      	ldr	r3, [r3, #4]
 80039a6:	68ba      	ldr	r2, [r7, #8]
 80039a8:	4313      	orrs	r3, r2
 80039aa:	60bb      	str	r3, [r7, #8]
 80039ac:	687b      	ldr	r3, [r7, #4]
 80039ae:	681b      	ldr	r3, [r3, #0]
 80039b0:	68ba      	ldr	r2, [r7, #8]
 80039b2:	609a      	str	r2, [r3, #8]
 80039b4:	687b      	ldr	r3, [r7, #4]
 80039b6:	2201      	movs	r2, #1
 80039b8:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80039bc:	687b      	ldr	r3, [r7, #4]
 80039be:	2200      	movs	r2, #0
 80039c0:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80039c4:	2300      	movs	r3, #0
 80039c6:	4618      	mov	r0, r3
 80039c8:	3714      	adds	r7, #20
 80039ca:	46bd      	mov	sp, r7
 80039cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80039d0:	4770      	bx	lr
 80039d2:	bf00      	nop
 80039d4:	40010000 	.word	0x40010000
 80039d8:	40000400 	.word	0x40000400
 80039dc:	40000800 	.word	0x40000800
 80039e0:	40000c00 	.word	0x40000c00
 80039e4:	40014000 	.word	0x40014000

080039e8 <HAL_TIMEx_ConfigBreakDeadTime>:
 80039e8:	b480      	push	{r7}
 80039ea:	b085      	sub	sp, #20
 80039ec:	af00      	add	r7, sp, #0
 80039ee:	6078      	str	r0, [r7, #4]
 80039f0:	6039      	str	r1, [r7, #0]
 80039f2:	2300      	movs	r3, #0
 80039f4:	60fb      	str	r3, [r7, #12]
 80039f6:	687b      	ldr	r3, [r7, #4]
 80039f8:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80039fc:	2b01      	cmp	r3, #1
 80039fe:	d101      	bne.n	8003a04 <HAL_TIMEx_ConfigBreakDeadTime+0x1c>
 8003a00:	2302      	movs	r3, #2
 8003a02:	e03d      	b.n	8003a80 <HAL_TIMEx_ConfigBreakDeadTime+0x98>
 8003a04:	687b      	ldr	r3, [r7, #4]
 8003a06:	2201      	movs	r2, #1
 8003a08:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003a0c:	68fb      	ldr	r3, [r7, #12]
 8003a0e:	f023 02ff 	bic.w	r2, r3, #255	; 0xff
 8003a12:	683b      	ldr	r3, [r7, #0]
 8003a14:	68db      	ldr	r3, [r3, #12]
 8003a16:	4313      	orrs	r3, r2
 8003a18:	60fb      	str	r3, [r7, #12]
 8003a1a:	68fb      	ldr	r3, [r7, #12]
 8003a1c:	f423 7240 	bic.w	r2, r3, #768	; 0x300
 8003a20:	683b      	ldr	r3, [r7, #0]
 8003a22:	689b      	ldr	r3, [r3, #8]
 8003a24:	4313      	orrs	r3, r2
 8003a26:	60fb      	str	r3, [r7, #12]
 8003a28:	68fb      	ldr	r3, [r7, #12]
 8003a2a:	f423 6280 	bic.w	r2, r3, #1024	; 0x400
 8003a2e:	683b      	ldr	r3, [r7, #0]
 8003a30:	685b      	ldr	r3, [r3, #4]
 8003a32:	4313      	orrs	r3, r2
 8003a34:	60fb      	str	r3, [r7, #12]
 8003a36:	68fb      	ldr	r3, [r7, #12]
 8003a38:	f423 6200 	bic.w	r2, r3, #2048	; 0x800
 8003a3c:	683b      	ldr	r3, [r7, #0]
 8003a3e:	681b      	ldr	r3, [r3, #0]
 8003a40:	4313      	orrs	r3, r2
 8003a42:	60fb      	str	r3, [r7, #12]
 8003a44:	68fb      	ldr	r3, [r7, #12]
 8003a46:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 8003a4a:	683b      	ldr	r3, [r7, #0]
 8003a4c:	691b      	ldr	r3, [r3, #16]
 8003a4e:	4313      	orrs	r3, r2
 8003a50:	60fb      	str	r3, [r7, #12]
 8003a52:	68fb      	ldr	r3, [r7, #12]
 8003a54:	f423 5200 	bic.w	r2, r3, #8192	; 0x2000
 8003a58:	683b      	ldr	r3, [r7, #0]
 8003a5a:	695b      	ldr	r3, [r3, #20]
 8003a5c:	4313      	orrs	r3, r2
 8003a5e:	60fb      	str	r3, [r7, #12]
 8003a60:	68fb      	ldr	r3, [r7, #12]
 8003a62:	f423 4280 	bic.w	r2, r3, #16384	; 0x4000
 8003a66:	683b      	ldr	r3, [r7, #0]
 8003a68:	69db      	ldr	r3, [r3, #28]
 8003a6a:	4313      	orrs	r3, r2
 8003a6c:	60fb      	str	r3, [r7, #12]
 8003a6e:	687b      	ldr	r3, [r7, #4]
 8003a70:	681b      	ldr	r3, [r3, #0]
 8003a72:	68fa      	ldr	r2, [r7, #12]
 8003a74:	645a      	str	r2, [r3, #68]	; 0x44
 8003a76:	687b      	ldr	r3, [r7, #4]
 8003a78:	2200      	movs	r2, #0
 8003a7a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8003a7e:	2300      	movs	r3, #0
 8003a80:	4618      	mov	r0, r3
 8003a82:	3714      	adds	r7, #20
 8003a84:	46bd      	mov	sp, r7
 8003a86:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003a8a:	4770      	bx	lr

08003a8c <siprintf>:
 8003a8c:	b40e      	push	{r1, r2, r3}
 8003a8e:	b500      	push	{lr}
 8003a90:	b09c      	sub	sp, #112	; 0x70
 8003a92:	ab1d      	add	r3, sp, #116	; 0x74
 8003a94:	9002      	str	r0, [sp, #8]
 8003a96:	9006      	str	r0, [sp, #24]
 8003a98:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 8003a9c:	4809      	ldr	r0, [pc, #36]	; (8003ac4 <siprintf+0x38>)
 8003a9e:	9107      	str	r1, [sp, #28]
 8003aa0:	9104      	str	r1, [sp, #16]
 8003aa2:	4909      	ldr	r1, [pc, #36]	; (8003ac8 <siprintf+0x3c>)
 8003aa4:	f853 2b04 	ldr.w	r2, [r3], #4
 8003aa8:	9105      	str	r1, [sp, #20]
 8003aaa:	6800      	ldr	r0, [r0, #0]
 8003aac:	9301      	str	r3, [sp, #4]
 8003aae:	a902      	add	r1, sp, #8
 8003ab0:	f000 f992 	bl	8003dd8 <_svfiprintf_r>
 8003ab4:	9b02      	ldr	r3, [sp, #8]
 8003ab6:	2200      	movs	r2, #0
 8003ab8:	701a      	strb	r2, [r3, #0]
 8003aba:	b01c      	add	sp, #112	; 0x70
 8003abc:	f85d eb04 	ldr.w	lr, [sp], #4
 8003ac0:	b003      	add	sp, #12
 8003ac2:	4770      	bx	lr
 8003ac4:	20000090 	.word	0x20000090
 8003ac8:	ffff0208 	.word	0xffff0208

08003acc <memset>:
 8003acc:	4402      	add	r2, r0
 8003ace:	4603      	mov	r3, r0
 8003ad0:	4293      	cmp	r3, r2
 8003ad2:	d100      	bne.n	8003ad6 <memset+0xa>
 8003ad4:	4770      	bx	lr
 8003ad6:	f803 1b01 	strb.w	r1, [r3], #1
 8003ada:	e7f9      	b.n	8003ad0 <memset+0x4>

08003adc <__errno>:
 8003adc:	4b01      	ldr	r3, [pc, #4]	; (8003ae4 <__errno+0x8>)
 8003ade:	6818      	ldr	r0, [r3, #0]
 8003ae0:	4770      	bx	lr
 8003ae2:	bf00      	nop
 8003ae4:	20000090 	.word	0x20000090

08003ae8 <__libc_init_array>:
 8003ae8:	b570      	push	{r4, r5, r6, lr}
 8003aea:	4d0d      	ldr	r5, [pc, #52]	; (8003b20 <__libc_init_array+0x38>)
 8003aec:	4c0d      	ldr	r4, [pc, #52]	; (8003b24 <__libc_init_array+0x3c>)
 8003aee:	1b64      	subs	r4, r4, r5
 8003af0:	10a4      	asrs	r4, r4, #2
 8003af2:	2600      	movs	r6, #0
 8003af4:	42a6      	cmp	r6, r4
 8003af6:	d109      	bne.n	8003b0c <__libc_init_array+0x24>
 8003af8:	4d0b      	ldr	r5, [pc, #44]	; (8003b28 <__libc_init_array+0x40>)
 8003afa:	4c0c      	ldr	r4, [pc, #48]	; (8003b2c <__libc_init_array+0x44>)
 8003afc:	f000 fc6a 	bl	80043d4 <_init>
 8003b00:	1b64      	subs	r4, r4, r5
 8003b02:	10a4      	asrs	r4, r4, #2
 8003b04:	2600      	movs	r6, #0
 8003b06:	42a6      	cmp	r6, r4
 8003b08:	d105      	bne.n	8003b16 <__libc_init_array+0x2e>
 8003b0a:	bd70      	pop	{r4, r5, r6, pc}
 8003b0c:	f855 3b04 	ldr.w	r3, [r5], #4
 8003b10:	4798      	blx	r3
 8003b12:	3601      	adds	r6, #1
 8003b14:	e7ee      	b.n	8003af4 <__libc_init_array+0xc>
 8003b16:	f855 3b04 	ldr.w	r3, [r5], #4
 8003b1a:	4798      	blx	r3
 8003b1c:	3601      	adds	r6, #1
 8003b1e:	e7f2      	b.n	8003b06 <__libc_init_array+0x1e>
 8003b20:	080046c8 	.word	0x080046c8
 8003b24:	080046c8 	.word	0x080046c8
 8003b28:	080046c8 	.word	0x080046c8
 8003b2c:	080046cc 	.word	0x080046cc

08003b30 <__retarget_lock_acquire_recursive>:
 8003b30:	4770      	bx	lr

08003b32 <__retarget_lock_release_recursive>:
 8003b32:	4770      	bx	lr

08003b34 <_free_r>:
 8003b34:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8003b36:	2900      	cmp	r1, #0
 8003b38:	d044      	beq.n	8003bc4 <_free_r+0x90>
 8003b3a:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8003b3e:	9001      	str	r0, [sp, #4]
 8003b40:	2b00      	cmp	r3, #0
 8003b42:	f1a1 0404 	sub.w	r4, r1, #4
 8003b46:	bfb8      	it	lt
 8003b48:	18e4      	addlt	r4, r4, r3
 8003b4a:	f000 f8df 	bl	8003d0c <__malloc_lock>
 8003b4e:	4a1e      	ldr	r2, [pc, #120]	; (8003bc8 <_free_r+0x94>)
 8003b50:	9801      	ldr	r0, [sp, #4]
 8003b52:	6813      	ldr	r3, [r2, #0]
 8003b54:	b933      	cbnz	r3, 8003b64 <_free_r+0x30>
 8003b56:	6063      	str	r3, [r4, #4]
 8003b58:	6014      	str	r4, [r2, #0]
 8003b5a:	b003      	add	sp, #12
 8003b5c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8003b60:	f000 b8da 	b.w	8003d18 <__malloc_unlock>
 8003b64:	42a3      	cmp	r3, r4
 8003b66:	d908      	bls.n	8003b7a <_free_r+0x46>
 8003b68:	6825      	ldr	r5, [r4, #0]
 8003b6a:	1961      	adds	r1, r4, r5
 8003b6c:	428b      	cmp	r3, r1
 8003b6e:	bf01      	itttt	eq
 8003b70:	6819      	ldreq	r1, [r3, #0]
 8003b72:	685b      	ldreq	r3, [r3, #4]
 8003b74:	1949      	addeq	r1, r1, r5
 8003b76:	6021      	streq	r1, [r4, #0]
 8003b78:	e7ed      	b.n	8003b56 <_free_r+0x22>
 8003b7a:	461a      	mov	r2, r3
 8003b7c:	685b      	ldr	r3, [r3, #4]
 8003b7e:	b10b      	cbz	r3, 8003b84 <_free_r+0x50>
 8003b80:	42a3      	cmp	r3, r4
 8003b82:	d9fa      	bls.n	8003b7a <_free_r+0x46>
 8003b84:	6811      	ldr	r1, [r2, #0]
 8003b86:	1855      	adds	r5, r2, r1
 8003b88:	42a5      	cmp	r5, r4
 8003b8a:	d10b      	bne.n	8003ba4 <_free_r+0x70>
 8003b8c:	6824      	ldr	r4, [r4, #0]
 8003b8e:	4421      	add	r1, r4
 8003b90:	1854      	adds	r4, r2, r1
 8003b92:	42a3      	cmp	r3, r4
 8003b94:	6011      	str	r1, [r2, #0]
 8003b96:	d1e0      	bne.n	8003b5a <_free_r+0x26>
 8003b98:	681c      	ldr	r4, [r3, #0]
 8003b9a:	685b      	ldr	r3, [r3, #4]
 8003b9c:	6053      	str	r3, [r2, #4]
 8003b9e:	440c      	add	r4, r1
 8003ba0:	6014      	str	r4, [r2, #0]
 8003ba2:	e7da      	b.n	8003b5a <_free_r+0x26>
 8003ba4:	d902      	bls.n	8003bac <_free_r+0x78>
 8003ba6:	230c      	movs	r3, #12
 8003ba8:	6003      	str	r3, [r0, #0]
 8003baa:	e7d6      	b.n	8003b5a <_free_r+0x26>
 8003bac:	6825      	ldr	r5, [r4, #0]
 8003bae:	1961      	adds	r1, r4, r5
 8003bb0:	428b      	cmp	r3, r1
 8003bb2:	bf04      	itt	eq
 8003bb4:	6819      	ldreq	r1, [r3, #0]
 8003bb6:	685b      	ldreq	r3, [r3, #4]
 8003bb8:	6063      	str	r3, [r4, #4]
 8003bba:	bf04      	itt	eq
 8003bbc:	1949      	addeq	r1, r1, r5
 8003bbe:	6021      	streq	r1, [r4, #0]
 8003bc0:	6054      	str	r4, [r2, #4]
 8003bc2:	e7ca      	b.n	8003b5a <_free_r+0x26>
 8003bc4:	b003      	add	sp, #12
 8003bc6:	bd30      	pop	{r4, r5, pc}
 8003bc8:	20000620 	.word	0x20000620

08003bcc <sbrk_aligned>:
 8003bcc:	b570      	push	{r4, r5, r6, lr}
 8003bce:	4e0e      	ldr	r6, [pc, #56]	; (8003c08 <sbrk_aligned+0x3c>)
 8003bd0:	460c      	mov	r4, r1
 8003bd2:	6831      	ldr	r1, [r6, #0]
 8003bd4:	4605      	mov	r5, r0
 8003bd6:	b911      	cbnz	r1, 8003bde <sbrk_aligned+0x12>
 8003bd8:	f000 fba6 	bl	8004328 <_sbrk_r>
 8003bdc:	6030      	str	r0, [r6, #0]
 8003bde:	4621      	mov	r1, r4
 8003be0:	4628      	mov	r0, r5
 8003be2:	f000 fba1 	bl	8004328 <_sbrk_r>
 8003be6:	1c43      	adds	r3, r0, #1
 8003be8:	d00a      	beq.n	8003c00 <sbrk_aligned+0x34>
 8003bea:	1cc4      	adds	r4, r0, #3
 8003bec:	f024 0403 	bic.w	r4, r4, #3
 8003bf0:	42a0      	cmp	r0, r4
 8003bf2:	d007      	beq.n	8003c04 <sbrk_aligned+0x38>
 8003bf4:	1a21      	subs	r1, r4, r0
 8003bf6:	4628      	mov	r0, r5
 8003bf8:	f000 fb96 	bl	8004328 <_sbrk_r>
 8003bfc:	3001      	adds	r0, #1
 8003bfe:	d101      	bne.n	8003c04 <sbrk_aligned+0x38>
 8003c00:	f04f 34ff 	mov.w	r4, #4294967295
 8003c04:	4620      	mov	r0, r4
 8003c06:	bd70      	pop	{r4, r5, r6, pc}
 8003c08:	20000624 	.word	0x20000624

08003c0c <_malloc_r>:
 8003c0c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8003c10:	1ccd      	adds	r5, r1, #3
 8003c12:	f025 0503 	bic.w	r5, r5, #3
 8003c16:	3508      	adds	r5, #8
 8003c18:	2d0c      	cmp	r5, #12
 8003c1a:	bf38      	it	cc
 8003c1c:	250c      	movcc	r5, #12
 8003c1e:	2d00      	cmp	r5, #0
 8003c20:	4607      	mov	r7, r0
 8003c22:	db01      	blt.n	8003c28 <_malloc_r+0x1c>
 8003c24:	42a9      	cmp	r1, r5
 8003c26:	d905      	bls.n	8003c34 <_malloc_r+0x28>
 8003c28:	230c      	movs	r3, #12
 8003c2a:	603b      	str	r3, [r7, #0]
 8003c2c:	2600      	movs	r6, #0
 8003c2e:	4630      	mov	r0, r6
 8003c30:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8003c34:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 8003d08 <_malloc_r+0xfc>
 8003c38:	f000 f868 	bl	8003d0c <__malloc_lock>
 8003c3c:	f8d8 3000 	ldr.w	r3, [r8]
 8003c40:	461c      	mov	r4, r3
 8003c42:	bb5c      	cbnz	r4, 8003c9c <_malloc_r+0x90>
 8003c44:	4629      	mov	r1, r5
 8003c46:	4638      	mov	r0, r7
 8003c48:	f7ff ffc0 	bl	8003bcc <sbrk_aligned>
 8003c4c:	1c43      	adds	r3, r0, #1
 8003c4e:	4604      	mov	r4, r0
 8003c50:	d155      	bne.n	8003cfe <_malloc_r+0xf2>
 8003c52:	f8d8 4000 	ldr.w	r4, [r8]
 8003c56:	4626      	mov	r6, r4
 8003c58:	2e00      	cmp	r6, #0
 8003c5a:	d145      	bne.n	8003ce8 <_malloc_r+0xdc>
 8003c5c:	2c00      	cmp	r4, #0
 8003c5e:	d048      	beq.n	8003cf2 <_malloc_r+0xe6>
 8003c60:	6823      	ldr	r3, [r4, #0]
 8003c62:	4631      	mov	r1, r6
 8003c64:	4638      	mov	r0, r7
 8003c66:	eb04 0903 	add.w	r9, r4, r3
 8003c6a:	f000 fb5d 	bl	8004328 <_sbrk_r>
 8003c6e:	4581      	cmp	r9, r0
 8003c70:	d13f      	bne.n	8003cf2 <_malloc_r+0xe6>
 8003c72:	6821      	ldr	r1, [r4, #0]
 8003c74:	1a6d      	subs	r5, r5, r1
 8003c76:	4629      	mov	r1, r5
 8003c78:	4638      	mov	r0, r7
 8003c7a:	f7ff ffa7 	bl	8003bcc <sbrk_aligned>
 8003c7e:	3001      	adds	r0, #1
 8003c80:	d037      	beq.n	8003cf2 <_malloc_r+0xe6>
 8003c82:	6823      	ldr	r3, [r4, #0]
 8003c84:	442b      	add	r3, r5
 8003c86:	6023      	str	r3, [r4, #0]
 8003c88:	f8d8 3000 	ldr.w	r3, [r8]
 8003c8c:	2b00      	cmp	r3, #0
 8003c8e:	d038      	beq.n	8003d02 <_malloc_r+0xf6>
 8003c90:	685a      	ldr	r2, [r3, #4]
 8003c92:	42a2      	cmp	r2, r4
 8003c94:	d12b      	bne.n	8003cee <_malloc_r+0xe2>
 8003c96:	2200      	movs	r2, #0
 8003c98:	605a      	str	r2, [r3, #4]
 8003c9a:	e00f      	b.n	8003cbc <_malloc_r+0xb0>
 8003c9c:	6822      	ldr	r2, [r4, #0]
 8003c9e:	1b52      	subs	r2, r2, r5
 8003ca0:	d41f      	bmi.n	8003ce2 <_malloc_r+0xd6>
 8003ca2:	2a0b      	cmp	r2, #11
 8003ca4:	d917      	bls.n	8003cd6 <_malloc_r+0xca>
 8003ca6:	1961      	adds	r1, r4, r5
 8003ca8:	42a3      	cmp	r3, r4
 8003caa:	6025      	str	r5, [r4, #0]
 8003cac:	bf18      	it	ne
 8003cae:	6059      	strne	r1, [r3, #4]
 8003cb0:	6863      	ldr	r3, [r4, #4]
 8003cb2:	bf08      	it	eq
 8003cb4:	f8c8 1000 	streq.w	r1, [r8]
 8003cb8:	5162      	str	r2, [r4, r5]
 8003cba:	604b      	str	r3, [r1, #4]
 8003cbc:	4638      	mov	r0, r7
 8003cbe:	f104 060b 	add.w	r6, r4, #11
 8003cc2:	f000 f829 	bl	8003d18 <__malloc_unlock>
 8003cc6:	f026 0607 	bic.w	r6, r6, #7
 8003cca:	1d23      	adds	r3, r4, #4
 8003ccc:	1af2      	subs	r2, r6, r3
 8003cce:	d0ae      	beq.n	8003c2e <_malloc_r+0x22>
 8003cd0:	1b9b      	subs	r3, r3, r6
 8003cd2:	50a3      	str	r3, [r4, r2]
 8003cd4:	e7ab      	b.n	8003c2e <_malloc_r+0x22>
 8003cd6:	42a3      	cmp	r3, r4
 8003cd8:	6862      	ldr	r2, [r4, #4]
 8003cda:	d1dd      	bne.n	8003c98 <_malloc_r+0x8c>
 8003cdc:	f8c8 2000 	str.w	r2, [r8]
 8003ce0:	e7ec      	b.n	8003cbc <_malloc_r+0xb0>
 8003ce2:	4623      	mov	r3, r4
 8003ce4:	6864      	ldr	r4, [r4, #4]
 8003ce6:	e7ac      	b.n	8003c42 <_malloc_r+0x36>
 8003ce8:	4634      	mov	r4, r6
 8003cea:	6876      	ldr	r6, [r6, #4]
 8003cec:	e7b4      	b.n	8003c58 <_malloc_r+0x4c>
 8003cee:	4613      	mov	r3, r2
 8003cf0:	e7cc      	b.n	8003c8c <_malloc_r+0x80>
 8003cf2:	230c      	movs	r3, #12
 8003cf4:	603b      	str	r3, [r7, #0]
 8003cf6:	4638      	mov	r0, r7
 8003cf8:	f000 f80e 	bl	8003d18 <__malloc_unlock>
 8003cfc:	e797      	b.n	8003c2e <_malloc_r+0x22>
 8003cfe:	6025      	str	r5, [r4, #0]
 8003d00:	e7dc      	b.n	8003cbc <_malloc_r+0xb0>
 8003d02:	605b      	str	r3, [r3, #4]
 8003d04:	deff      	udf	#255	; 0xff
 8003d06:	bf00      	nop
 8003d08:	20000620 	.word	0x20000620

08003d0c <__malloc_lock>:
 8003d0c:	4801      	ldr	r0, [pc, #4]	; (8003d14 <__malloc_lock+0x8>)
 8003d0e:	f7ff bf0f 	b.w	8003b30 <__retarget_lock_acquire_recursive>
 8003d12:	bf00      	nop
 8003d14:	2000061c 	.word	0x2000061c

08003d18 <__malloc_unlock>:
 8003d18:	4801      	ldr	r0, [pc, #4]	; (8003d20 <__malloc_unlock+0x8>)
 8003d1a:	f7ff bf0a 	b.w	8003b32 <__retarget_lock_release_recursive>
 8003d1e:	bf00      	nop
 8003d20:	2000061c 	.word	0x2000061c

08003d24 <__ssputs_r>:
 8003d24:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003d28:	688e      	ldr	r6, [r1, #8]
 8003d2a:	461f      	mov	r7, r3
 8003d2c:	42be      	cmp	r6, r7
 8003d2e:	680b      	ldr	r3, [r1, #0]
 8003d30:	4682      	mov	sl, r0
 8003d32:	460c      	mov	r4, r1
 8003d34:	4690      	mov	r8, r2
 8003d36:	d82c      	bhi.n	8003d92 <__ssputs_r+0x6e>
 8003d38:	898a      	ldrh	r2, [r1, #12]
 8003d3a:	f412 6f90 	tst.w	r2, #1152	; 0x480
 8003d3e:	d026      	beq.n	8003d8e <__ssputs_r+0x6a>
 8003d40:	6965      	ldr	r5, [r4, #20]
 8003d42:	6909      	ldr	r1, [r1, #16]
 8003d44:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8003d48:	eba3 0901 	sub.w	r9, r3, r1
 8003d4c:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 8003d50:	1c7b      	adds	r3, r7, #1
 8003d52:	444b      	add	r3, r9
 8003d54:	106d      	asrs	r5, r5, #1
 8003d56:	429d      	cmp	r5, r3
 8003d58:	bf38      	it	cc
 8003d5a:	461d      	movcc	r5, r3
 8003d5c:	0553      	lsls	r3, r2, #21
 8003d5e:	d527      	bpl.n	8003db0 <__ssputs_r+0x8c>
 8003d60:	4629      	mov	r1, r5
 8003d62:	f7ff ff53 	bl	8003c0c <_malloc_r>
 8003d66:	4606      	mov	r6, r0
 8003d68:	b360      	cbz	r0, 8003dc4 <__ssputs_r+0xa0>
 8003d6a:	6921      	ldr	r1, [r4, #16]
 8003d6c:	464a      	mov	r2, r9
 8003d6e:	f000 faeb 	bl	8004348 <memcpy>
 8003d72:	89a3      	ldrh	r3, [r4, #12]
 8003d74:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 8003d78:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8003d7c:	81a3      	strh	r3, [r4, #12]
 8003d7e:	6126      	str	r6, [r4, #16]
 8003d80:	6165      	str	r5, [r4, #20]
 8003d82:	444e      	add	r6, r9
 8003d84:	eba5 0509 	sub.w	r5, r5, r9
 8003d88:	6026      	str	r6, [r4, #0]
 8003d8a:	60a5      	str	r5, [r4, #8]
 8003d8c:	463e      	mov	r6, r7
 8003d8e:	42be      	cmp	r6, r7
 8003d90:	d900      	bls.n	8003d94 <__ssputs_r+0x70>
 8003d92:	463e      	mov	r6, r7
 8003d94:	6820      	ldr	r0, [r4, #0]
 8003d96:	4632      	mov	r2, r6
 8003d98:	4641      	mov	r1, r8
 8003d9a:	f000 faab 	bl	80042f4 <memmove>
 8003d9e:	68a3      	ldr	r3, [r4, #8]
 8003da0:	1b9b      	subs	r3, r3, r6
 8003da2:	60a3      	str	r3, [r4, #8]
 8003da4:	6823      	ldr	r3, [r4, #0]
 8003da6:	4433      	add	r3, r6
 8003da8:	6023      	str	r3, [r4, #0]
 8003daa:	2000      	movs	r0, #0
 8003dac:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8003db0:	462a      	mov	r2, r5
 8003db2:	f000 fad7 	bl	8004364 <_realloc_r>
 8003db6:	4606      	mov	r6, r0
 8003db8:	2800      	cmp	r0, #0
 8003dba:	d1e0      	bne.n	8003d7e <__ssputs_r+0x5a>
 8003dbc:	6921      	ldr	r1, [r4, #16]
 8003dbe:	4650      	mov	r0, sl
 8003dc0:	f7ff feb8 	bl	8003b34 <_free_r>
 8003dc4:	230c      	movs	r3, #12
 8003dc6:	f8ca 3000 	str.w	r3, [sl]
 8003dca:	89a3      	ldrh	r3, [r4, #12]
 8003dcc:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8003dd0:	81a3      	strh	r3, [r4, #12]
 8003dd2:	f04f 30ff 	mov.w	r0, #4294967295
 8003dd6:	e7e9      	b.n	8003dac <__ssputs_r+0x88>

08003dd8 <_svfiprintf_r>:
 8003dd8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003ddc:	4698      	mov	r8, r3
 8003dde:	898b      	ldrh	r3, [r1, #12]
 8003de0:	061b      	lsls	r3, r3, #24
 8003de2:	b09d      	sub	sp, #116	; 0x74
 8003de4:	4607      	mov	r7, r0
 8003de6:	460d      	mov	r5, r1
 8003de8:	4614      	mov	r4, r2
 8003dea:	d50e      	bpl.n	8003e0a <_svfiprintf_r+0x32>
 8003dec:	690b      	ldr	r3, [r1, #16]
 8003dee:	b963      	cbnz	r3, 8003e0a <_svfiprintf_r+0x32>
 8003df0:	2140      	movs	r1, #64	; 0x40
 8003df2:	f7ff ff0b 	bl	8003c0c <_malloc_r>
 8003df6:	6028      	str	r0, [r5, #0]
 8003df8:	6128      	str	r0, [r5, #16]
 8003dfa:	b920      	cbnz	r0, 8003e06 <_svfiprintf_r+0x2e>
 8003dfc:	230c      	movs	r3, #12
 8003dfe:	603b      	str	r3, [r7, #0]
 8003e00:	f04f 30ff 	mov.w	r0, #4294967295
 8003e04:	e0d0      	b.n	8003fa8 <_svfiprintf_r+0x1d0>
 8003e06:	2340      	movs	r3, #64	; 0x40
 8003e08:	616b      	str	r3, [r5, #20]
 8003e0a:	2300      	movs	r3, #0
 8003e0c:	9309      	str	r3, [sp, #36]	; 0x24
 8003e0e:	2320      	movs	r3, #32
 8003e10:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8003e14:	f8cd 800c 	str.w	r8, [sp, #12]
 8003e18:	2330      	movs	r3, #48	; 0x30
 8003e1a:	f8df 81a4 	ldr.w	r8, [pc, #420]	; 8003fc0 <_svfiprintf_r+0x1e8>
 8003e1e:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8003e22:	f04f 0901 	mov.w	r9, #1
 8003e26:	4623      	mov	r3, r4
 8003e28:	469a      	mov	sl, r3
 8003e2a:	f813 2b01 	ldrb.w	r2, [r3], #1
 8003e2e:	b10a      	cbz	r2, 8003e34 <_svfiprintf_r+0x5c>
 8003e30:	2a25      	cmp	r2, #37	; 0x25
 8003e32:	d1f9      	bne.n	8003e28 <_svfiprintf_r+0x50>
 8003e34:	ebba 0b04 	subs.w	fp, sl, r4
 8003e38:	d00b      	beq.n	8003e52 <_svfiprintf_r+0x7a>
 8003e3a:	465b      	mov	r3, fp
 8003e3c:	4622      	mov	r2, r4
 8003e3e:	4629      	mov	r1, r5
 8003e40:	4638      	mov	r0, r7
 8003e42:	f7ff ff6f 	bl	8003d24 <__ssputs_r>
 8003e46:	3001      	adds	r0, #1
 8003e48:	f000 80a9 	beq.w	8003f9e <_svfiprintf_r+0x1c6>
 8003e4c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8003e4e:	445a      	add	r2, fp
 8003e50:	9209      	str	r2, [sp, #36]	; 0x24
 8003e52:	f89a 3000 	ldrb.w	r3, [sl]
 8003e56:	2b00      	cmp	r3, #0
 8003e58:	f000 80a1 	beq.w	8003f9e <_svfiprintf_r+0x1c6>
 8003e5c:	2300      	movs	r3, #0
 8003e5e:	f04f 32ff 	mov.w	r2, #4294967295
 8003e62:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8003e66:	f10a 0a01 	add.w	sl, sl, #1
 8003e6a:	9304      	str	r3, [sp, #16]
 8003e6c:	9307      	str	r3, [sp, #28]
 8003e6e:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8003e72:	931a      	str	r3, [sp, #104]	; 0x68
 8003e74:	4654      	mov	r4, sl
 8003e76:	2205      	movs	r2, #5
 8003e78:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003e7c:	4850      	ldr	r0, [pc, #320]	; (8003fc0 <_svfiprintf_r+0x1e8>)
 8003e7e:	f7fc f9af 	bl	80001e0 <memchr>
 8003e82:	9a04      	ldr	r2, [sp, #16]
 8003e84:	b9d8      	cbnz	r0, 8003ebe <_svfiprintf_r+0xe6>
 8003e86:	06d0      	lsls	r0, r2, #27
 8003e88:	bf44      	itt	mi
 8003e8a:	2320      	movmi	r3, #32
 8003e8c:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8003e90:	0711      	lsls	r1, r2, #28
 8003e92:	bf44      	itt	mi
 8003e94:	232b      	movmi	r3, #43	; 0x2b
 8003e96:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8003e9a:	f89a 3000 	ldrb.w	r3, [sl]
 8003e9e:	2b2a      	cmp	r3, #42	; 0x2a
 8003ea0:	d015      	beq.n	8003ece <_svfiprintf_r+0xf6>
 8003ea2:	9a07      	ldr	r2, [sp, #28]
 8003ea4:	4654      	mov	r4, sl
 8003ea6:	2000      	movs	r0, #0
 8003ea8:	f04f 0c0a 	mov.w	ip, #10
 8003eac:	4621      	mov	r1, r4
 8003eae:	f811 3b01 	ldrb.w	r3, [r1], #1
 8003eb2:	3b30      	subs	r3, #48	; 0x30
 8003eb4:	2b09      	cmp	r3, #9
 8003eb6:	d94d      	bls.n	8003f54 <_svfiprintf_r+0x17c>
 8003eb8:	b1b0      	cbz	r0, 8003ee8 <_svfiprintf_r+0x110>
 8003eba:	9207      	str	r2, [sp, #28]
 8003ebc:	e014      	b.n	8003ee8 <_svfiprintf_r+0x110>
 8003ebe:	eba0 0308 	sub.w	r3, r0, r8
 8003ec2:	fa09 f303 	lsl.w	r3, r9, r3
 8003ec6:	4313      	orrs	r3, r2
 8003ec8:	9304      	str	r3, [sp, #16]
 8003eca:	46a2      	mov	sl, r4
 8003ecc:	e7d2      	b.n	8003e74 <_svfiprintf_r+0x9c>
 8003ece:	9b03      	ldr	r3, [sp, #12]
 8003ed0:	1d19      	adds	r1, r3, #4
 8003ed2:	681b      	ldr	r3, [r3, #0]
 8003ed4:	9103      	str	r1, [sp, #12]
 8003ed6:	2b00      	cmp	r3, #0
 8003ed8:	bfbb      	ittet	lt
 8003eda:	425b      	neglt	r3, r3
 8003edc:	f042 0202 	orrlt.w	r2, r2, #2
 8003ee0:	9307      	strge	r3, [sp, #28]
 8003ee2:	9307      	strlt	r3, [sp, #28]
 8003ee4:	bfb8      	it	lt
 8003ee6:	9204      	strlt	r2, [sp, #16]
 8003ee8:	7823      	ldrb	r3, [r4, #0]
 8003eea:	2b2e      	cmp	r3, #46	; 0x2e
 8003eec:	d10c      	bne.n	8003f08 <_svfiprintf_r+0x130>
 8003eee:	7863      	ldrb	r3, [r4, #1]
 8003ef0:	2b2a      	cmp	r3, #42	; 0x2a
 8003ef2:	d134      	bne.n	8003f5e <_svfiprintf_r+0x186>
 8003ef4:	9b03      	ldr	r3, [sp, #12]
 8003ef6:	1d1a      	adds	r2, r3, #4
 8003ef8:	681b      	ldr	r3, [r3, #0]
 8003efa:	9203      	str	r2, [sp, #12]
 8003efc:	2b00      	cmp	r3, #0
 8003efe:	bfb8      	it	lt
 8003f00:	f04f 33ff 	movlt.w	r3, #4294967295
 8003f04:	3402      	adds	r4, #2
 8003f06:	9305      	str	r3, [sp, #20]
 8003f08:	f8df a0c4 	ldr.w	sl, [pc, #196]	; 8003fd0 <_svfiprintf_r+0x1f8>
 8003f0c:	7821      	ldrb	r1, [r4, #0]
 8003f0e:	2203      	movs	r2, #3
 8003f10:	4650      	mov	r0, sl
 8003f12:	f7fc f965 	bl	80001e0 <memchr>
 8003f16:	b138      	cbz	r0, 8003f28 <_svfiprintf_r+0x150>
 8003f18:	9b04      	ldr	r3, [sp, #16]
 8003f1a:	eba0 000a 	sub.w	r0, r0, sl
 8003f1e:	2240      	movs	r2, #64	; 0x40
 8003f20:	4082      	lsls	r2, r0
 8003f22:	4313      	orrs	r3, r2
 8003f24:	3401      	adds	r4, #1
 8003f26:	9304      	str	r3, [sp, #16]
 8003f28:	f814 1b01 	ldrb.w	r1, [r4], #1
 8003f2c:	4825      	ldr	r0, [pc, #148]	; (8003fc4 <_svfiprintf_r+0x1ec>)
 8003f2e:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8003f32:	2206      	movs	r2, #6
 8003f34:	f7fc f954 	bl	80001e0 <memchr>
 8003f38:	2800      	cmp	r0, #0
 8003f3a:	d038      	beq.n	8003fae <_svfiprintf_r+0x1d6>
 8003f3c:	4b22      	ldr	r3, [pc, #136]	; (8003fc8 <_svfiprintf_r+0x1f0>)
 8003f3e:	bb1b      	cbnz	r3, 8003f88 <_svfiprintf_r+0x1b0>
 8003f40:	9b03      	ldr	r3, [sp, #12]
 8003f42:	3307      	adds	r3, #7
 8003f44:	f023 0307 	bic.w	r3, r3, #7
 8003f48:	3308      	adds	r3, #8
 8003f4a:	9303      	str	r3, [sp, #12]
 8003f4c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003f4e:	4433      	add	r3, r6
 8003f50:	9309      	str	r3, [sp, #36]	; 0x24
 8003f52:	e768      	b.n	8003e26 <_svfiprintf_r+0x4e>
 8003f54:	fb0c 3202 	mla	r2, ip, r2, r3
 8003f58:	460c      	mov	r4, r1
 8003f5a:	2001      	movs	r0, #1
 8003f5c:	e7a6      	b.n	8003eac <_svfiprintf_r+0xd4>
 8003f5e:	2300      	movs	r3, #0
 8003f60:	3401      	adds	r4, #1
 8003f62:	9305      	str	r3, [sp, #20]
 8003f64:	4619      	mov	r1, r3
 8003f66:	f04f 0c0a 	mov.w	ip, #10
 8003f6a:	4620      	mov	r0, r4
 8003f6c:	f810 2b01 	ldrb.w	r2, [r0], #1
 8003f70:	3a30      	subs	r2, #48	; 0x30
 8003f72:	2a09      	cmp	r2, #9
 8003f74:	d903      	bls.n	8003f7e <_svfiprintf_r+0x1a6>
 8003f76:	2b00      	cmp	r3, #0
 8003f78:	d0c6      	beq.n	8003f08 <_svfiprintf_r+0x130>
 8003f7a:	9105      	str	r1, [sp, #20]
 8003f7c:	e7c4      	b.n	8003f08 <_svfiprintf_r+0x130>
 8003f7e:	fb0c 2101 	mla	r1, ip, r1, r2
 8003f82:	4604      	mov	r4, r0
 8003f84:	2301      	movs	r3, #1
 8003f86:	e7f0      	b.n	8003f6a <_svfiprintf_r+0x192>
 8003f88:	ab03      	add	r3, sp, #12
 8003f8a:	9300      	str	r3, [sp, #0]
 8003f8c:	462a      	mov	r2, r5
 8003f8e:	4b0f      	ldr	r3, [pc, #60]	; (8003fcc <_svfiprintf_r+0x1f4>)
 8003f90:	a904      	add	r1, sp, #16
 8003f92:	4638      	mov	r0, r7
 8003f94:	f3af 8000 	nop.w
 8003f98:	1c42      	adds	r2, r0, #1
 8003f9a:	4606      	mov	r6, r0
 8003f9c:	d1d6      	bne.n	8003f4c <_svfiprintf_r+0x174>
 8003f9e:	89ab      	ldrh	r3, [r5, #12]
 8003fa0:	065b      	lsls	r3, r3, #25
 8003fa2:	f53f af2d 	bmi.w	8003e00 <_svfiprintf_r+0x28>
 8003fa6:	9809      	ldr	r0, [sp, #36]	; 0x24
 8003fa8:	b01d      	add	sp, #116	; 0x74
 8003faa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003fae:	ab03      	add	r3, sp, #12
 8003fb0:	9300      	str	r3, [sp, #0]
 8003fb2:	462a      	mov	r2, r5
 8003fb4:	4b05      	ldr	r3, [pc, #20]	; (8003fcc <_svfiprintf_r+0x1f4>)
 8003fb6:	a904      	add	r1, sp, #16
 8003fb8:	4638      	mov	r0, r7
 8003fba:	f000 f879 	bl	80040b0 <_printf_i>
 8003fbe:	e7eb      	b.n	8003f98 <_svfiprintf_r+0x1c0>
 8003fc0:	0800468c 	.word	0x0800468c
 8003fc4:	08004696 	.word	0x08004696
 8003fc8:	00000000 	.word	0x00000000
 8003fcc:	08003d25 	.word	0x08003d25
 8003fd0:	08004692 	.word	0x08004692

08003fd4 <_printf_common>:
 8003fd4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003fd8:	4616      	mov	r6, r2
 8003fda:	4699      	mov	r9, r3
 8003fdc:	688a      	ldr	r2, [r1, #8]
 8003fde:	690b      	ldr	r3, [r1, #16]
 8003fe0:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8003fe4:	4293      	cmp	r3, r2
 8003fe6:	bfb8      	it	lt
 8003fe8:	4613      	movlt	r3, r2
 8003fea:	6033      	str	r3, [r6, #0]
 8003fec:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8003ff0:	4607      	mov	r7, r0
 8003ff2:	460c      	mov	r4, r1
 8003ff4:	b10a      	cbz	r2, 8003ffa <_printf_common+0x26>
 8003ff6:	3301      	adds	r3, #1
 8003ff8:	6033      	str	r3, [r6, #0]
 8003ffa:	6823      	ldr	r3, [r4, #0]
 8003ffc:	0699      	lsls	r1, r3, #26
 8003ffe:	bf42      	ittt	mi
 8004000:	6833      	ldrmi	r3, [r6, #0]
 8004002:	3302      	addmi	r3, #2
 8004004:	6033      	strmi	r3, [r6, #0]
 8004006:	6825      	ldr	r5, [r4, #0]
 8004008:	f015 0506 	ands.w	r5, r5, #6
 800400c:	d106      	bne.n	800401c <_printf_common+0x48>
 800400e:	f104 0a19 	add.w	sl, r4, #25
 8004012:	68e3      	ldr	r3, [r4, #12]
 8004014:	6832      	ldr	r2, [r6, #0]
 8004016:	1a9b      	subs	r3, r3, r2
 8004018:	42ab      	cmp	r3, r5
 800401a:	dc26      	bgt.n	800406a <_printf_common+0x96>
 800401c:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8004020:	1e13      	subs	r3, r2, #0
 8004022:	6822      	ldr	r2, [r4, #0]
 8004024:	bf18      	it	ne
 8004026:	2301      	movne	r3, #1
 8004028:	0692      	lsls	r2, r2, #26
 800402a:	d42b      	bmi.n	8004084 <_printf_common+0xb0>
 800402c:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8004030:	4649      	mov	r1, r9
 8004032:	4638      	mov	r0, r7
 8004034:	47c0      	blx	r8
 8004036:	3001      	adds	r0, #1
 8004038:	d01e      	beq.n	8004078 <_printf_common+0xa4>
 800403a:	6823      	ldr	r3, [r4, #0]
 800403c:	6922      	ldr	r2, [r4, #16]
 800403e:	f003 0306 	and.w	r3, r3, #6
 8004042:	2b04      	cmp	r3, #4
 8004044:	bf02      	ittt	eq
 8004046:	68e5      	ldreq	r5, [r4, #12]
 8004048:	6833      	ldreq	r3, [r6, #0]
 800404a:	1aed      	subeq	r5, r5, r3
 800404c:	68a3      	ldr	r3, [r4, #8]
 800404e:	bf0c      	ite	eq
 8004050:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8004054:	2500      	movne	r5, #0
 8004056:	4293      	cmp	r3, r2
 8004058:	bfc4      	itt	gt
 800405a:	1a9b      	subgt	r3, r3, r2
 800405c:	18ed      	addgt	r5, r5, r3
 800405e:	2600      	movs	r6, #0
 8004060:	341a      	adds	r4, #26
 8004062:	42b5      	cmp	r5, r6
 8004064:	d11a      	bne.n	800409c <_printf_common+0xc8>
 8004066:	2000      	movs	r0, #0
 8004068:	e008      	b.n	800407c <_printf_common+0xa8>
 800406a:	2301      	movs	r3, #1
 800406c:	4652      	mov	r2, sl
 800406e:	4649      	mov	r1, r9
 8004070:	4638      	mov	r0, r7
 8004072:	47c0      	blx	r8
 8004074:	3001      	adds	r0, #1
 8004076:	d103      	bne.n	8004080 <_printf_common+0xac>
 8004078:	f04f 30ff 	mov.w	r0, #4294967295
 800407c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8004080:	3501      	adds	r5, #1
 8004082:	e7c6      	b.n	8004012 <_printf_common+0x3e>
 8004084:	18e1      	adds	r1, r4, r3
 8004086:	1c5a      	adds	r2, r3, #1
 8004088:	2030      	movs	r0, #48	; 0x30
 800408a:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 800408e:	4422      	add	r2, r4
 8004090:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8004094:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8004098:	3302      	adds	r3, #2
 800409a:	e7c7      	b.n	800402c <_printf_common+0x58>
 800409c:	2301      	movs	r3, #1
 800409e:	4622      	mov	r2, r4
 80040a0:	4649      	mov	r1, r9
 80040a2:	4638      	mov	r0, r7
 80040a4:	47c0      	blx	r8
 80040a6:	3001      	adds	r0, #1
 80040a8:	d0e6      	beq.n	8004078 <_printf_common+0xa4>
 80040aa:	3601      	adds	r6, #1
 80040ac:	e7d9      	b.n	8004062 <_printf_common+0x8e>
	...

080040b0 <_printf_i>:
 80040b0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80040b4:	7e0f      	ldrb	r7, [r1, #24]
 80040b6:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80040b8:	2f78      	cmp	r7, #120	; 0x78
 80040ba:	4691      	mov	r9, r2
 80040bc:	4680      	mov	r8, r0
 80040be:	460c      	mov	r4, r1
 80040c0:	469a      	mov	sl, r3
 80040c2:	f101 0243 	add.w	r2, r1, #67	; 0x43
 80040c6:	d807      	bhi.n	80040d8 <_printf_i+0x28>
 80040c8:	2f62      	cmp	r7, #98	; 0x62
 80040ca:	d80a      	bhi.n	80040e2 <_printf_i+0x32>
 80040cc:	2f00      	cmp	r7, #0
 80040ce:	f000 80d4 	beq.w	800427a <_printf_i+0x1ca>
 80040d2:	2f58      	cmp	r7, #88	; 0x58
 80040d4:	f000 80c0 	beq.w	8004258 <_printf_i+0x1a8>
 80040d8:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80040dc:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 80040e0:	e03a      	b.n	8004158 <_printf_i+0xa8>
 80040e2:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 80040e6:	2b15      	cmp	r3, #21
 80040e8:	d8f6      	bhi.n	80040d8 <_printf_i+0x28>
 80040ea:	a101      	add	r1, pc, #4	; (adr r1, 80040f0 <_printf_i+0x40>)
 80040ec:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 80040f0:	08004149 	.word	0x08004149
 80040f4:	0800415d 	.word	0x0800415d
 80040f8:	080040d9 	.word	0x080040d9
 80040fc:	080040d9 	.word	0x080040d9
 8004100:	080040d9 	.word	0x080040d9
 8004104:	080040d9 	.word	0x080040d9
 8004108:	0800415d 	.word	0x0800415d
 800410c:	080040d9 	.word	0x080040d9
 8004110:	080040d9 	.word	0x080040d9
 8004114:	080040d9 	.word	0x080040d9
 8004118:	080040d9 	.word	0x080040d9
 800411c:	08004261 	.word	0x08004261
 8004120:	08004189 	.word	0x08004189
 8004124:	0800421b 	.word	0x0800421b
 8004128:	080040d9 	.word	0x080040d9
 800412c:	080040d9 	.word	0x080040d9
 8004130:	08004283 	.word	0x08004283
 8004134:	080040d9 	.word	0x080040d9
 8004138:	08004189 	.word	0x08004189
 800413c:	080040d9 	.word	0x080040d9
 8004140:	080040d9 	.word	0x080040d9
 8004144:	08004223 	.word	0x08004223
 8004148:	682b      	ldr	r3, [r5, #0]
 800414a:	1d1a      	adds	r2, r3, #4
 800414c:	681b      	ldr	r3, [r3, #0]
 800414e:	602a      	str	r2, [r5, #0]
 8004150:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8004154:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8004158:	2301      	movs	r3, #1
 800415a:	e09f      	b.n	800429c <_printf_i+0x1ec>
 800415c:	6820      	ldr	r0, [r4, #0]
 800415e:	682b      	ldr	r3, [r5, #0]
 8004160:	0607      	lsls	r7, r0, #24
 8004162:	f103 0104 	add.w	r1, r3, #4
 8004166:	6029      	str	r1, [r5, #0]
 8004168:	d501      	bpl.n	800416e <_printf_i+0xbe>
 800416a:	681e      	ldr	r6, [r3, #0]
 800416c:	e003      	b.n	8004176 <_printf_i+0xc6>
 800416e:	0646      	lsls	r6, r0, #25
 8004170:	d5fb      	bpl.n	800416a <_printf_i+0xba>
 8004172:	f9b3 6000 	ldrsh.w	r6, [r3]
 8004176:	2e00      	cmp	r6, #0
 8004178:	da03      	bge.n	8004182 <_printf_i+0xd2>
 800417a:	232d      	movs	r3, #45	; 0x2d
 800417c:	4276      	negs	r6, r6
 800417e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8004182:	485a      	ldr	r0, [pc, #360]	; (80042ec <_printf_i+0x23c>)
 8004184:	230a      	movs	r3, #10
 8004186:	e012      	b.n	80041ae <_printf_i+0xfe>
 8004188:	682b      	ldr	r3, [r5, #0]
 800418a:	6820      	ldr	r0, [r4, #0]
 800418c:	1d19      	adds	r1, r3, #4
 800418e:	6029      	str	r1, [r5, #0]
 8004190:	0605      	lsls	r5, r0, #24
 8004192:	d501      	bpl.n	8004198 <_printf_i+0xe8>
 8004194:	681e      	ldr	r6, [r3, #0]
 8004196:	e002      	b.n	800419e <_printf_i+0xee>
 8004198:	0641      	lsls	r1, r0, #25
 800419a:	d5fb      	bpl.n	8004194 <_printf_i+0xe4>
 800419c:	881e      	ldrh	r6, [r3, #0]
 800419e:	4853      	ldr	r0, [pc, #332]	; (80042ec <_printf_i+0x23c>)
 80041a0:	2f6f      	cmp	r7, #111	; 0x6f
 80041a2:	bf0c      	ite	eq
 80041a4:	2308      	moveq	r3, #8
 80041a6:	230a      	movne	r3, #10
 80041a8:	2100      	movs	r1, #0
 80041aa:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 80041ae:	6865      	ldr	r5, [r4, #4]
 80041b0:	60a5      	str	r5, [r4, #8]
 80041b2:	2d00      	cmp	r5, #0
 80041b4:	bfa2      	ittt	ge
 80041b6:	6821      	ldrge	r1, [r4, #0]
 80041b8:	f021 0104 	bicge.w	r1, r1, #4
 80041bc:	6021      	strge	r1, [r4, #0]
 80041be:	b90e      	cbnz	r6, 80041c4 <_printf_i+0x114>
 80041c0:	2d00      	cmp	r5, #0
 80041c2:	d04b      	beq.n	800425c <_printf_i+0x1ac>
 80041c4:	4615      	mov	r5, r2
 80041c6:	fbb6 f1f3 	udiv	r1, r6, r3
 80041ca:	fb03 6711 	mls	r7, r3, r1, r6
 80041ce:	5dc7      	ldrb	r7, [r0, r7]
 80041d0:	f805 7d01 	strb.w	r7, [r5, #-1]!
 80041d4:	4637      	mov	r7, r6
 80041d6:	42bb      	cmp	r3, r7
 80041d8:	460e      	mov	r6, r1
 80041da:	d9f4      	bls.n	80041c6 <_printf_i+0x116>
 80041dc:	2b08      	cmp	r3, #8
 80041de:	d10b      	bne.n	80041f8 <_printf_i+0x148>
 80041e0:	6823      	ldr	r3, [r4, #0]
 80041e2:	07de      	lsls	r6, r3, #31
 80041e4:	d508      	bpl.n	80041f8 <_printf_i+0x148>
 80041e6:	6923      	ldr	r3, [r4, #16]
 80041e8:	6861      	ldr	r1, [r4, #4]
 80041ea:	4299      	cmp	r1, r3
 80041ec:	bfde      	ittt	le
 80041ee:	2330      	movle	r3, #48	; 0x30
 80041f0:	f805 3c01 	strble.w	r3, [r5, #-1]
 80041f4:	f105 35ff 	addle.w	r5, r5, #4294967295
 80041f8:	1b52      	subs	r2, r2, r5
 80041fa:	6122      	str	r2, [r4, #16]
 80041fc:	f8cd a000 	str.w	sl, [sp]
 8004200:	464b      	mov	r3, r9
 8004202:	aa03      	add	r2, sp, #12
 8004204:	4621      	mov	r1, r4
 8004206:	4640      	mov	r0, r8
 8004208:	f7ff fee4 	bl	8003fd4 <_printf_common>
 800420c:	3001      	adds	r0, #1
 800420e:	d14a      	bne.n	80042a6 <_printf_i+0x1f6>
 8004210:	f04f 30ff 	mov.w	r0, #4294967295
 8004214:	b004      	add	sp, #16
 8004216:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800421a:	6823      	ldr	r3, [r4, #0]
 800421c:	f043 0320 	orr.w	r3, r3, #32
 8004220:	6023      	str	r3, [r4, #0]
 8004222:	4833      	ldr	r0, [pc, #204]	; (80042f0 <_printf_i+0x240>)
 8004224:	2778      	movs	r7, #120	; 0x78
 8004226:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 800422a:	6823      	ldr	r3, [r4, #0]
 800422c:	6829      	ldr	r1, [r5, #0]
 800422e:	061f      	lsls	r7, r3, #24
 8004230:	f851 6b04 	ldr.w	r6, [r1], #4
 8004234:	d402      	bmi.n	800423c <_printf_i+0x18c>
 8004236:	065f      	lsls	r7, r3, #25
 8004238:	bf48      	it	mi
 800423a:	b2b6      	uxthmi	r6, r6
 800423c:	07df      	lsls	r7, r3, #31
 800423e:	bf48      	it	mi
 8004240:	f043 0320 	orrmi.w	r3, r3, #32
 8004244:	6029      	str	r1, [r5, #0]
 8004246:	bf48      	it	mi
 8004248:	6023      	strmi	r3, [r4, #0]
 800424a:	b91e      	cbnz	r6, 8004254 <_printf_i+0x1a4>
 800424c:	6823      	ldr	r3, [r4, #0]
 800424e:	f023 0320 	bic.w	r3, r3, #32
 8004252:	6023      	str	r3, [r4, #0]
 8004254:	2310      	movs	r3, #16
 8004256:	e7a7      	b.n	80041a8 <_printf_i+0xf8>
 8004258:	4824      	ldr	r0, [pc, #144]	; (80042ec <_printf_i+0x23c>)
 800425a:	e7e4      	b.n	8004226 <_printf_i+0x176>
 800425c:	4615      	mov	r5, r2
 800425e:	e7bd      	b.n	80041dc <_printf_i+0x12c>
 8004260:	682b      	ldr	r3, [r5, #0]
 8004262:	6826      	ldr	r6, [r4, #0]
 8004264:	6961      	ldr	r1, [r4, #20]
 8004266:	1d18      	adds	r0, r3, #4
 8004268:	6028      	str	r0, [r5, #0]
 800426a:	0635      	lsls	r5, r6, #24
 800426c:	681b      	ldr	r3, [r3, #0]
 800426e:	d501      	bpl.n	8004274 <_printf_i+0x1c4>
 8004270:	6019      	str	r1, [r3, #0]
 8004272:	e002      	b.n	800427a <_printf_i+0x1ca>
 8004274:	0670      	lsls	r0, r6, #25
 8004276:	d5fb      	bpl.n	8004270 <_printf_i+0x1c0>
 8004278:	8019      	strh	r1, [r3, #0]
 800427a:	2300      	movs	r3, #0
 800427c:	6123      	str	r3, [r4, #16]
 800427e:	4615      	mov	r5, r2
 8004280:	e7bc      	b.n	80041fc <_printf_i+0x14c>
 8004282:	682b      	ldr	r3, [r5, #0]
 8004284:	1d1a      	adds	r2, r3, #4
 8004286:	602a      	str	r2, [r5, #0]
 8004288:	681d      	ldr	r5, [r3, #0]
 800428a:	6862      	ldr	r2, [r4, #4]
 800428c:	2100      	movs	r1, #0
 800428e:	4628      	mov	r0, r5
 8004290:	f7fb ffa6 	bl	80001e0 <memchr>
 8004294:	b108      	cbz	r0, 800429a <_printf_i+0x1ea>
 8004296:	1b40      	subs	r0, r0, r5
 8004298:	6060      	str	r0, [r4, #4]
 800429a:	6863      	ldr	r3, [r4, #4]
 800429c:	6123      	str	r3, [r4, #16]
 800429e:	2300      	movs	r3, #0
 80042a0:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80042a4:	e7aa      	b.n	80041fc <_printf_i+0x14c>
 80042a6:	6923      	ldr	r3, [r4, #16]
 80042a8:	462a      	mov	r2, r5
 80042aa:	4649      	mov	r1, r9
 80042ac:	4640      	mov	r0, r8
 80042ae:	47d0      	blx	sl
 80042b0:	3001      	adds	r0, #1
 80042b2:	d0ad      	beq.n	8004210 <_printf_i+0x160>
 80042b4:	6823      	ldr	r3, [r4, #0]
 80042b6:	079b      	lsls	r3, r3, #30
 80042b8:	d413      	bmi.n	80042e2 <_printf_i+0x232>
 80042ba:	68e0      	ldr	r0, [r4, #12]
 80042bc:	9b03      	ldr	r3, [sp, #12]
 80042be:	4298      	cmp	r0, r3
 80042c0:	bfb8      	it	lt
 80042c2:	4618      	movlt	r0, r3
 80042c4:	e7a6      	b.n	8004214 <_printf_i+0x164>
 80042c6:	2301      	movs	r3, #1
 80042c8:	4632      	mov	r2, r6
 80042ca:	4649      	mov	r1, r9
 80042cc:	4640      	mov	r0, r8
 80042ce:	47d0      	blx	sl
 80042d0:	3001      	adds	r0, #1
 80042d2:	d09d      	beq.n	8004210 <_printf_i+0x160>
 80042d4:	3501      	adds	r5, #1
 80042d6:	68e3      	ldr	r3, [r4, #12]
 80042d8:	9903      	ldr	r1, [sp, #12]
 80042da:	1a5b      	subs	r3, r3, r1
 80042dc:	42ab      	cmp	r3, r5
 80042de:	dcf2      	bgt.n	80042c6 <_printf_i+0x216>
 80042e0:	e7eb      	b.n	80042ba <_printf_i+0x20a>
 80042e2:	2500      	movs	r5, #0
 80042e4:	f104 0619 	add.w	r6, r4, #25
 80042e8:	e7f5      	b.n	80042d6 <_printf_i+0x226>
 80042ea:	bf00      	nop
 80042ec:	0800469d 	.word	0x0800469d
 80042f0:	080046ae 	.word	0x080046ae

080042f4 <memmove>:
 80042f4:	4288      	cmp	r0, r1
 80042f6:	b510      	push	{r4, lr}
 80042f8:	eb01 0402 	add.w	r4, r1, r2
 80042fc:	d902      	bls.n	8004304 <memmove+0x10>
 80042fe:	4284      	cmp	r4, r0
 8004300:	4623      	mov	r3, r4
 8004302:	d807      	bhi.n	8004314 <memmove+0x20>
 8004304:	1e43      	subs	r3, r0, #1
 8004306:	42a1      	cmp	r1, r4
 8004308:	d008      	beq.n	800431c <memmove+0x28>
 800430a:	f811 2b01 	ldrb.w	r2, [r1], #1
 800430e:	f803 2f01 	strb.w	r2, [r3, #1]!
 8004312:	e7f8      	b.n	8004306 <memmove+0x12>
 8004314:	4402      	add	r2, r0
 8004316:	4601      	mov	r1, r0
 8004318:	428a      	cmp	r2, r1
 800431a:	d100      	bne.n	800431e <memmove+0x2a>
 800431c:	bd10      	pop	{r4, pc}
 800431e:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8004322:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8004326:	e7f7      	b.n	8004318 <memmove+0x24>

08004328 <_sbrk_r>:
 8004328:	b538      	push	{r3, r4, r5, lr}
 800432a:	4d06      	ldr	r5, [pc, #24]	; (8004344 <_sbrk_r+0x1c>)
 800432c:	2300      	movs	r3, #0
 800432e:	4604      	mov	r4, r0
 8004330:	4608      	mov	r0, r1
 8004332:	602b      	str	r3, [r5, #0]
 8004334:	f7fd fb44 	bl	80019c0 <_sbrk>
 8004338:	1c43      	adds	r3, r0, #1
 800433a:	d102      	bne.n	8004342 <_sbrk_r+0x1a>
 800433c:	682b      	ldr	r3, [r5, #0]
 800433e:	b103      	cbz	r3, 8004342 <_sbrk_r+0x1a>
 8004340:	6023      	str	r3, [r4, #0]
 8004342:	bd38      	pop	{r3, r4, r5, pc}
 8004344:	20000618 	.word	0x20000618

08004348 <memcpy>:
 8004348:	440a      	add	r2, r1
 800434a:	4291      	cmp	r1, r2
 800434c:	f100 33ff 	add.w	r3, r0, #4294967295
 8004350:	d100      	bne.n	8004354 <memcpy+0xc>
 8004352:	4770      	bx	lr
 8004354:	b510      	push	{r4, lr}
 8004356:	f811 4b01 	ldrb.w	r4, [r1], #1
 800435a:	f803 4f01 	strb.w	r4, [r3, #1]!
 800435e:	4291      	cmp	r1, r2
 8004360:	d1f9      	bne.n	8004356 <memcpy+0xe>
 8004362:	bd10      	pop	{r4, pc}

08004364 <_realloc_r>:
 8004364:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8004368:	4680      	mov	r8, r0
 800436a:	4614      	mov	r4, r2
 800436c:	460e      	mov	r6, r1
 800436e:	b921      	cbnz	r1, 800437a <_realloc_r+0x16>
 8004370:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8004374:	4611      	mov	r1, r2
 8004376:	f7ff bc49 	b.w	8003c0c <_malloc_r>
 800437a:	b92a      	cbnz	r2, 8004388 <_realloc_r+0x24>
 800437c:	f7ff fbda 	bl	8003b34 <_free_r>
 8004380:	4625      	mov	r5, r4
 8004382:	4628      	mov	r0, r5
 8004384:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004388:	f000 f81b 	bl	80043c2 <_malloc_usable_size_r>
 800438c:	4284      	cmp	r4, r0
 800438e:	4607      	mov	r7, r0
 8004390:	d802      	bhi.n	8004398 <_realloc_r+0x34>
 8004392:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 8004396:	d812      	bhi.n	80043be <_realloc_r+0x5a>
 8004398:	4621      	mov	r1, r4
 800439a:	4640      	mov	r0, r8
 800439c:	f7ff fc36 	bl	8003c0c <_malloc_r>
 80043a0:	4605      	mov	r5, r0
 80043a2:	2800      	cmp	r0, #0
 80043a4:	d0ed      	beq.n	8004382 <_realloc_r+0x1e>
 80043a6:	42bc      	cmp	r4, r7
 80043a8:	4622      	mov	r2, r4
 80043aa:	4631      	mov	r1, r6
 80043ac:	bf28      	it	cs
 80043ae:	463a      	movcs	r2, r7
 80043b0:	f7ff ffca 	bl	8004348 <memcpy>
 80043b4:	4631      	mov	r1, r6
 80043b6:	4640      	mov	r0, r8
 80043b8:	f7ff fbbc 	bl	8003b34 <_free_r>
 80043bc:	e7e1      	b.n	8004382 <_realloc_r+0x1e>
 80043be:	4635      	mov	r5, r6
 80043c0:	e7df      	b.n	8004382 <_realloc_r+0x1e>

080043c2 <_malloc_usable_size_r>:
 80043c2:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80043c6:	1f18      	subs	r0, r3, #4
 80043c8:	2b00      	cmp	r3, #0
 80043ca:	bfbc      	itt	lt
 80043cc:	580b      	ldrlt	r3, [r1, r0]
 80043ce:	18c0      	addlt	r0, r0, r3
 80043d0:	4770      	bx	lr
	...

080043d4 <_init>:
 80043d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80043d6:	bf00      	nop
 80043d8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80043da:	bc08      	pop	{r3}
 80043dc:	469e      	mov	lr, r3
 80043de:	4770      	bx	lr

080043e0 <_fini>:
 80043e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80043e2:	bf00      	nop
 80043e4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80043e6:	bc08      	pop	{r3}
 80043e8:	469e      	mov	lr, r3
 80043ea:	4770      	bx	lr
